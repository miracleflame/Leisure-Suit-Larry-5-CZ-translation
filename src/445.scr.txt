(script 445)

(string
    string_083a "The F.B.I. laboratory is completely deserted. Perhaps they had more experiments than experimenters?"
    string_089e "rm445"
    string_08a4 "sGetData"
    string_08ad "the DataMan"
    string_08b9 "A tiny electronic display device lies on the counter."
    string_08ef "theDataMan"
    string_08fa "the DataPak"
    string_0906 "What appears to be some sort of ROM cartridge lies on the counter."
    string_0949 "dataPak"
    string_0951 "dataPak2"
    string_095a "Doctor Phil Hopian's door"
    string_0974 "This door leads back into Dr. Phil Hopian's office. After what you just went through, you're in no hurry to go back in there!"
    string_09f2 "door"
    string_09f7 "the machine"
    string_0a03 "This machine does something, you feel quite certain."
    string_0a38 "machine"
    string_0a40 "the computer"
    string_0a4d "If only you had paid attention when Larry chattered on and on about his computer. You know nothing about computers and are sure you'll be unable to do anything with it."
    string_0af6 "computer"
    string_0aff "the chemistry set"
    string_0b11 "This is where the technician made the flatulence powder. (Un)Fortunately, he left his equipment thoroughly clean."
    string_0b83 "contraption"
    string_0b8f "the workbench"
    string_0b9d "Lots of chemicals, beakers, and junk food wrappers fill this workbench."
    string_0be5 "southBank"
    string_0bef "the books"
    string_0bf9 "These books are filled with Latin phrases. The only Latin phrases you know would get a sailor thrown out of a bar in Tijuana!"
    string_0c77 "books"
    string_0c7d "the desk"
    string_0c86 "This desk doesn't contain any secret documents; they all were burned in the big fire last week!"
    string_0ce6 "desk"
    string_0ceb "duckF"
    string_0cf1 ""
)

(said
)

(local
)

// 019a
(instance publicrm445 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $83a
        picture $1b8
        style $ffff
        horizon $0
        controls $0
        north $0
        east $1c2
        south $0
        west $1b3
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:7a               push2 
  000f:38 0080          pushi 80 // $80 indexOf
  0012:38 01b9          pushi 1b9 // $1b9 active
  0015:43 00 04         callk Load 4 

  0018:39 6b            pushi 6b // $6b init
  001a:76               push0 
  001b:38 020a          pushi 20a // $20a normalize
  001e:76               push0 
  001f:81 00              lag  
  0021:4a 08             send 8 

  0023:38 009b          pushi 9b // $9b owner
  0026:76               push0 
  0027:39 43            pushi 43 // $43 at
  0029:78               push1 
  002a:76               push0 
  002b:51 40            class Inv 
  002d:4a 06             send 6 

  002f:4a 04             send 4 

  0031:36                push 
  0032:34 01bd            ldi 1bd 
  0035:1a                 eq? 
  0036:30 0012            bnt code_004b 
  0039:39 6b            pushi 6b // $6b init
  003b:76               push0 
  003c:38 011d          pushi 11d // $11d stopUpd
  003f:76               push0 
  0040:38 0119          pushi 119 // $119 approachVerbs
  0043:78               push1 
  0044:39 03            pushi 3 // $3 y
  0046:72 032a          lofsa $032a // theDataMan
  0049:4a 0e             send e 


        code_004b
  004b:38 009b          pushi 9b // $9b owner
  004e:76               push0 
  004f:39 43            pushi 43 // $43 at
  0051:78               push1 
  0052:78               push1 
  0053:51 40            class Inv 
  0055:4a 06             send 6 

  0057:4a 04             send 4 

  0059:36                push 
  005a:34 01bd            ldi 1bd 
  005d:1a                 eq? 
  005e:30 0012            bnt code_0073 
  0061:39 6b            pushi 6b // $6b init
  0063:76               push0 
  0064:38 011d          pushi 11d // $11d stopUpd
  0067:76               push0 
  0068:38 0119          pushi 119 // $119 approachVerbs
  006b:78               push1 
  006c:39 03            pushi 3 // $3 y
  006e:72 03ba          lofsa $03ba // dataPak
  0071:4a 0e             send e 


        code_0073
  0073:38 009b          pushi 9b // $9b owner
  0076:76               push0 
  0077:39 43            pushi 43 // $43 at
  0079:78               push1 
  007a:7a               push2 
  007b:51 40            class Inv 
  007d:4a 06             send 6 

  007f:4a 04             send 4 

  0081:36                push 
  0082:34 01bd            ldi 1bd 
  0085:1a                 eq? 
  0086:30 0012            bnt code_009b 
  0089:39 6b            pushi 6b // $6b init
  008b:76               push0 
  008c:38 011d          pushi 11d // $11d stopUpd
  008f:76               push0 
  0090:38 0119          pushi 119 // $119 approachVerbs
  0093:78               push1 
  0094:39 03            pushi 3 // $3 y
  0096:72 044a          lofsa $044a // dataPak2
  0099:4a 0e             send e 


        code_009b
  009b:39 6b            pushi 6b // $6b init
  009d:76               push0 
  009e:72 056c          lofsa $056c // machine
  00a1:4a 04             send 4 

  00a3:39 6b            pushi 6b // $6b init
  00a5:76               push0 
  00a6:72 079c          lofsa $079c // desk
  00a9:4a 04             send 4 

  00ab:39 6b            pushi 6b // $6b init
  00ad:76               push0 
  00ae:72 05d4          lofsa $05d4 // computer
  00b1:4a 04             send 4 

  00b3:39 6b            pushi 6b // $6b init
  00b5:76               push0 
  00b6:72 063c          lofsa $063c // contraption
  00b9:4a 04             send 4 

  00bb:39 6b            pushi 6b // $6b init
  00bd:76               push0 
  00be:72 06cc          lofsa $06cc // southBank
  00c1:4a 04             send 4 

  00c3:39 6b            pushi 6b // $6b init
  00c5:76               push0 
  00c6:72 04e4          lofsa $04e4 // door
  00c9:4a 04             send 4 

  00cb:39 6b            pushi 6b // $6b init
  00cd:76               push0 
  00ce:72 0734          lofsa $0734 // books
  00d1:4a 04             send 4 

  00d3:39 6b            pushi 6b // $6b init
  00d5:76               push0 
  00d6:72 0802          lofsa $0802 // duckF
  00d9:4a 04             send 4 

  00db:89 0c              lsg  
  00dd:3c                 dup 
  00de:63 22             pToa west 
  00e0:1a                 eq? 
  00e1:30 000e            bnt code_00f2 
  00e4:76               push0 
  00e5:45 03 00         callb procedure_0003 0 //  

  00e8:39 1f            pushi 1f // $1f style
  00ea:78               push1 
  00eb:39 0c            pushi c // $c nsRight
  00ed:54 06             self 6 

  00ef:32 0021            jmp code_0113 

        code_00f2
  00f2:76               push0 
  00f3:45 03 00         callb procedure_0003 0 //  

  00f6:38 011c          pushi 11c // $11c posn
  00f9:7a               push2 
  00fa:38 0116          pushi 116 // $116 notFacing
  00fd:39 68            pushi 68 // $68 restart
  00ff:38 020a          pushi 20a // $20a normalize
  0102:76               push0 
  0103:38 0146          pushi 146 // $146 edgeHit
  0106:78               push1 
  0107:76               push0 
  0108:38 00e4          pushi e4 // $e4 setHeading
  010b:78               push1 
  010c:38 010e          pushi 10e // $10e description
  010f:81 00              lag  
  0111:4a 18             send 18 


        code_0113
  0113:3a                toss 
  0114:39 6b            pushi 6b // $6b init
  0116:76               push0 
  0117:57 72 04         super LLRoom 4 

  011a:76               push0 
  011b:45 03 00         callb procedure_0003 0 //  

  011e:38 0176          pushi 176 // $176 addObstacle
  0121:78               push1 
  0122:39 22            pushi 22 // $22 type
  0124:78               push1 
  0125:7a               push2 
  0126:39 6b            pushi 6b // $6b init
  0128:39 1c            pushi 1c // $1c color
  012a:76               push0 
  012b:38 00bd          pushi bd // $bd maskView
  012e:76               push0 
  012f:38 008c          pushi 8c // $8c changeState
  0132:38 0088          pushi 88 // $88 lastTicks
  0135:38 008c          pushi 8c // $8c changeState
  0138:38 00a1          pushi a1 // $a1 setVol
  013b:38 0096          pushi 96 // $96 setCycle
  013e:38 00be          pushi be // $be maskLoop
  0141:38 0096          pushi 96 // $96 setCycle
  0144:38 00e7          pushi e7 // $e7 dynamic
  0147:38 0082          pushi 82 // $82 start
  014a:38 00fb          pushi fb // $fb offScreenOK
  014d:38 008a          pushi 8a // $8a script
  0150:38 0131          pushi 131 // $131 findPosn
  0153:39 7d            pushi 7d // $7d addToFront
  0155:38 0125          pushi 125 // $125 detailLevel
  0158:39 71            pushi 71 // $71 respondsTo
  015a:38 0107          pushi 107 // $107 waitApogeeY
  015d:39 63            pushi 63 // $63 perform
  015f:76               push0 
  0160:39 63            pushi 63 // $63 perform
  0162:76               push0 
  0163:76               push0 
  0164:38 013f          pushi 13f // $13f inputLineAddr
  0167:76               push0 
  0168:38 013f          pushi 13f // $13f inputLineAddr
  016b:38 00bd          pushi bd // $bd maskView
  016e:39 72            pushi 72 // $72 yourself
  0170:76               push0 
  0171:39 6a            pushi 6a // $6a new
  0173:76               push0 
  0174:51 23            class Polygon 
  0176:4a 04             send 4 

  0178:4a 46             send 46 

  017a:36                push 
  017b:81 02              lag  
  017d:4a 06             send 6 

  017f:39 2b            pushi 2b // $2b number
  0181:78               push1 
  0182:38 01b4          pushi 1b4 // $1b4 inProgress
  0185:38 00a2          pushi a2 // $a2 setLoop
  0188:78               push1 
  0189:39 ff            pushi ff // $ff syncNum
  018b:39 2a            pushi 2a // $2a play
  018d:76               push0 
  018e:81 67              lag  
  0190:4a 10             send 10 

  0192:48                 ret 
  0193:00                bnot 
    )

)

// 02be
(instance sGetData of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_01da
  01da:87 01              lap param1 
  01dc:65 0a             aTop state 
  01de:36                push 
  01df:3c                 dup 
  01e0:35 00              ldi 0 
  01e2:1a                 eq? 
  01e3:30 0039            bnt code_021f 
  01e6:39 05            pushi 5 // $5 view
  01e8:78               push1 
  01e9:38 01b9          pushi 1b9 // $1b9 active
  01ec:38 00a2          pushi a2 // $a2 setLoop
  01ef:78               push1 
  01f0:63 1a             pToa register 
  01f2:30 0005            bnt code_01fa 
  01f5:35 01              ldi 1 
  01f7:32 0002            jmp code_01fc 

        code_01fa
  01fa:35 00              ldi 0 

        code_01fc
  01fc:36                push 
  01fd:38 0120          pushi 120 // $120 setCel
  0200:78               push1 
  0201:76               push0 
  0202:38 00db          pushi db // $db cycleSpeed
  0205:78               push1 
  0206:39 0c            pushi c // $c nsRight
  0208:39 38            pushi 38 // $38 moveSpeed
  020a:78               push1 
  020b:39 0c            pushi c // $c nsRight
  020d:38 0096          pushi 96 // $96 setCycle
  0210:39 04            pushi 4 // $4 x
  0212:51 19            class CT 
  0214:36                push 
  0215:7a               push2 
  0216:78               push1 
  0217:7c            pushSelf 
  0218:81 00              lag  
  021a:4a 2a             send 2a 

  021c:32 0097            jmp code_02b6 

        code_021f
  021f:3c                 dup 
  0220:35 01              ldi 1 
  0222:1a                 eq? 
  0223:30 0078            bnt code_029e 
  0226:67 1a             pTos register 
  0228:3c                 dup 
  0229:35 00              ldi 0 
  022b:1a                 eq? 
  022c:30 001c            bnt code_024b 
  022f:38 0147          pushi 147 // $147 get
  0232:78               push1 
  0233:76               push0 
  0234:81 00              lag  
  0236:4a 06             send 6 

  0238:7a               push2 
  0239:39 05            pushi 5 // $5 view
  023b:39 66            pushi 66 // $66 flags
  023d:45 0a 04         callb procedure_000a 4 //  

  0240:39 6c            pushi 6c // $6c dispose
  0242:76               push0 
  0243:72 032a          lofsa $032a // theDataMan
  0246:4a 04             send 4 

  0248:32 0043            jmp code_028e 

        code_024b
  024b:3c                 dup 
  024c:35 01              ldi 1 
  024e:1a                 eq? 
  024f:30 001c            bnt code_026e 
  0252:38 0147          pushi 147 // $147 get
  0255:78               push1 
  0256:78               push1 
  0257:81 00              lag  
  0259:4a 06             send 6 

  025b:7a               push2 
  025c:39 0d            pushi d // $d lsTop
  025e:39 67            pushi 67 // $67 quitGame
  0260:45 0a 04         callb procedure_000a 4 //  

  0263:39 6c            pushi 6c // $6c dispose
  0265:76               push0 
  0266:72 03ba          lofsa $03ba // dataPak
  0269:4a 04             send 4 

  026b:32 0020            jmp code_028e 

        code_026e
  026e:3c                 dup 
  026f:35 02              ldi 2 
  0271:1a                 eq? 
  0272:30 0019            bnt code_028e 
  0275:38 0147          pushi 147 // $147 get
  0278:78               push1 
  0279:7a               push2 
  027a:81 00              lag  
  027c:4a 06             send 6 

  027e:7a               push2 
  027f:39 0d            pushi d // $d lsTop
  0281:39 68            pushi 68 // $68 restart
  0283:45 0a 04         callb procedure_000a 4 //  

  0286:39 6c            pushi 6c // $6c dispose
  0288:76               push0 
  0289:72 044a          lofsa $044a // dataPak2
  028c:4a 04             send 4 


        code_028e
  028e:3a                toss 
  028f:38 0096          pushi 96 // $96 setCycle
  0292:7a               push2 
  0293:51 1a            class End 
  0295:36                push 
  0296:7c            pushSelf 
  0297:81 00              lag  
  0299:4a 08             send 8 

  029b:32 0018            jmp code_02b6 

        code_029e
  029e:3c                 dup 
  029f:35 02              ldi 2 
  02a1:1a                 eq? 
  02a2:30 0011            bnt code_02b6 
  02a5:38 020a          pushi 20a // $20a normalize
  02a8:76               push0 
  02a9:81 00              lag  
  02ab:4a 04             send 4 

  02ad:76               push0 
  02ae:45 03 00         callb procedure_0003 0 //  

  02b1:39 6c            pushi 6c // $6c dispose
  02b3:76               push0 
  02b4:54 04             self 4 


        code_02b6
  02b6:3a                toss 
  02b7:48                 ret 
    )

)

// 0324
(instance theDataMan of View
    (properties
        x $5e
        y $58
        z $d
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $8ad
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $52
        approachY $63
        approachDist $0
        _approachVerbs $6789
        lookStr $8b9
        yStep $2
        view $1b8
        loop $0
        cel $0
        priority $6
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (doVerb) // method_02f2
  02f2:8f 01              lsp param1 
  02f4:3c                 dup 
  02f5:35 03              ldi 3 
  02f7:1a                 eq? 
  02f8:30 0016            bnt code_0311 
  02fb:76               push0 
  02fc:45 02 00         callb procedure_0002 0 //  

  02ff:38 008e          pushi 8e // $8e setScript
  0302:39 03            pushi 3 // $3 y
  0304:72 02c4          lofsa $02c4 // sGetData
  0307:36                push 
  0308:76               push0 
  0309:76               push0 
  030a:81 02              lag  
  030c:4a 0a             send a 

  030e:32 000b            jmp code_031c 

        code_0311
  0311:38 010c          pushi 10c // $10c doVerb
  0314:7a               push2 
  0315:8f 01              lsp param1 
  0317:8f 02              lsp param2 
  0319:57 2e 08         super View 8 


        code_031c
  031c:3a                toss 
  031d:48                 ret 
    )

)

// 03b4
(instance dataPak of View
    (properties
        x $48
        y $58
        z $e
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $8fa
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $52
        approachY $63
        approachDist $0
        _approachVerbs $6789
        lookStr $906
        yStep $2
        view $1b8
        loop $0
        cel $1
        priority $6
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (doVerb) // method_0382
  0382:8f 01              lsp param1 
  0384:3c                 dup 
  0385:35 03              ldi 3 
  0387:1a                 eq? 
  0388:30 0016            bnt code_03a1 
  038b:76               push0 
  038c:45 02 00         callb procedure_0002 0 //  

  038f:38 008e          pushi 8e // $8e setScript
  0392:39 03            pushi 3 // $3 y
  0394:72 02c4          lofsa $02c4 // sGetData
  0397:36                push 
  0398:76               push0 
  0399:78               push1 
  039a:81 02              lag  
  039c:4a 0a             send a 

  039e:32 000b            jmp code_03ac 

        code_03a1
  03a1:38 010c          pushi 10c // $10c doVerb
  03a4:7a               push2 
  03a5:8f 01              lsp param1 
  03a7:8f 02              lsp param2 
  03a9:57 2e 08         super View 8 


        code_03ac
  03ac:3a                toss 
  03ad:48                 ret 
    )

)

// 0444
(instance dataPak2 of View
    (properties
        x $48
        y $58
        z $c
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $8fa
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $52
        approachY $63
        approachDist $0
        _approachVerbs $6789
        lookStr $906
        yStep $2
        view $1b8
        loop $0
        cel $2
        priority $6
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (doVerb) // method_0412
  0412:8f 01              lsp param1 
  0414:3c                 dup 
  0415:35 03              ldi 3 
  0417:1a                 eq? 
  0418:30 0016            bnt code_0431 
  041b:76               push0 
  041c:45 02 00         callb procedure_0002 0 //  

  041f:38 008e          pushi 8e // $8e setScript
  0422:39 03            pushi 3 // $3 y
  0424:72 02c4          lofsa $02c4 // sGetData
  0427:36                push 
  0428:76               push0 
  0429:7a               push2 
  042a:81 02              lag  
  042c:4a 0a             send a 

  042e:32 000b            jmp code_043c 

        code_0431
  0431:38 010c          pushi 10c // $10c doVerb
  0434:7a               push2 
  0435:8f 01              lsp param1 
  0437:8f 02              lsp param2 
  0439:57 2e 08         super View 8 


        code_043c
  043c:3a                toss 
  043d:48                 ret 
    )

)

// 04de
(instance door of View
    (properties
        x $11a
        y $63
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $95a
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $974
        yStep $2
        view $1b8
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (doVerb) // method_04a2
  04a2:8f 01              lsp param1 
  04a4:3c                 dup 
  04a5:35 03              ldi 3 
  04a7:1a                 eq? 
  04a8:30 000b            bnt code_04b6 
  04ab:7a               push2 
  04ac:38 01bd          pushi 1bd // $1bd zOffset
  04af:76               push0 
  04b0:45 0e 04         callb procedure_000e 4 //  

  04b3:32 001f            jmp code_04d5 

        code_04b6
  04b6:3c                 dup 
  04b7:35 05              ldi 5 
  04b9:1a                 eq? 
  04ba:30 000b            bnt code_04c8 
  04bd:7a               push2 
  04be:38 01bd          pushi 1bd // $1bd zOffset
  04c1:78               push1 
  04c2:45 0e 04         callb procedure_000e 4 //  

  04c5:32 000d            jmp code_04d5 

        code_04c8
  04c8:38 010c          pushi 10c // $10c doVerb
  04cb:7a               push2 
  04cc:8f 01              lsp param1 
  04ce:8f 02              lsp param2 
  04d0:59 03            &rest 3 
  04d2:57 2e 08         super View 8 


        code_04d5
  04d5:3a                toss 
  04d6:48                 ret 
  04d7:00                bnot 
    )

)

// 0566
(instance machine of Feature
    (properties
        x $d7
        y $2f
        z $0
        heading $0
        noun $0
        nsTop $ffff
        nsLeft $aa
        nsBottom $5f
        nsRight $105
        description $9f7
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $a03
    )
    (method (doVerb) // method_053c
  053c:8f 01              lsp param1 
  053e:3c                 dup 
  053f:35 03              ldi 3 
  0541:1a                 eq? 
  0542:30 000b            bnt code_0550 
  0545:7a               push2 
  0546:38 01bd          pushi 1bd // $1bd zOffset
  0549:7a               push2 
  054a:45 0e 04         callb procedure_000e 4 //  

  054d:32 000d            jmp code_055d 

        code_0550
  0550:38 010c          pushi 10c // $10c doVerb
  0553:7a               push2 
  0554:8f 01              lsp param1 
  0556:8f 02              lsp param2 
  0558:59 03            &rest 3 
  055a:57 2c 08         super Feature 8 


        code_055d
  055d:3a                toss 
  055e:48                 ret 
  055f:00                bnot 
    )

)

// 05ce
(instance computer of Feature
    (properties
        x $85
        y $5b
        z $21
        heading $0
        noun $0
        nsTop $2d
        nsLeft $77
        nsBottom $47
        nsRight $94
        description $a40
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $a4d
    )
    (method (doVerb) // method_05a4
  05a4:8f 01              lsp param1 
  05a6:3c                 dup 
  05a7:35 03              ldi 3 
  05a9:1a                 eq? 
  05aa:30 000c            bnt code_05b9 
  05ad:7a               push2 
  05ae:38 01bd          pushi 1bd // $1bd zOffset
  05b1:39 03            pushi 3 // $3 y
  05b3:45 0e 04         callb procedure_000e 4 //  

  05b6:32 000d            jmp code_05c6 

        code_05b9
  05b9:38 010c          pushi 10c // $10c doVerb
  05bc:7a               push2 
  05bd:8f 01              lsp param1 
  05bf:8f 02              lsp param2 
  05c1:59 03            &rest 3 
  05c3:57 2c 08         super Feature 8 


        code_05c6
  05c6:3a                toss 
  05c7:48                 ret 
    )

)

// 0636
(instance contraption of Feature
    (properties
        x $72
        y $a0
        z $22
        heading $0
        noun $0
        nsTop $73
        nsLeft $5e
        nsBottom $89
        nsRight $86
        description $aff
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $b11
    )
    (method (doVerb) // method_060c
  060c:8f 01              lsp param1 
  060e:3c                 dup 
  060f:35 03              ldi 3 
  0611:1a                 eq? 
  0612:30 000c            bnt code_0621 
  0615:7a               push2 
  0616:38 01bd          pushi 1bd // $1bd zOffset
  0619:39 04            pushi 4 // $4 x
  061b:45 0e 04         callb procedure_000e 4 //  

  061e:32 000d            jmp code_062e 

        code_0621
  0621:38 010c          pushi 10c // $10c doVerb
  0624:7a               push2 
  0625:8f 01              lsp param1 
  0627:8f 02              lsp param2 
  0629:59 03            &rest 3 
  062b:57 2c 08         super Feature 8 


        code_062e
  062e:3a                toss 
  062f:48                 ret 
    )

)

// 06c6
(instance southBank of Feature
    (properties
        x $9f
        y $a6
        z $0
        heading $0
        noun $0
        nsTop $90
        nsLeft $0
        nsBottom $bd
        nsRight $13f
        description $b8f
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $b9d
    )
    (method (doVerb) // method_0674
  0674:8f 01              lsp param1 
  0676:3c                 dup 
  0677:35 03              ldi 3 
  0679:1a                 eq? 
  067a:30 0033            bnt code_06b0 
  067d:78               push1 
  067e:39 29            pushi 29 // $29 edit
  0680:45 06 02         callb procedure_0006 2 //  

  0683:2e 000f             bt code_0695 
  0686:78               push1 
  0687:39 2a            pushi 2a // $2a play
  0689:45 06 02         callb procedure_0006 2 //  

  068c:2e 0006             bt code_0695 
  068f:78               push1 
  0690:39 2b            pushi 2b // $2b number
  0692:45 06 02         callb procedure_0006 2 //  


        code_0695
  0695:30 000c            bnt code_06a4 
  0698:7a               push2 
  0699:38 01bd          pushi 1bd // $1bd zOffset
  069c:39 05            pushi 5 // $5 view
  069e:45 0e 04         callb procedure_000e 4 //  

  06a1:32 0019            jmp code_06bd 

        code_06a4
  06a4:7a               push2 
  06a5:38 01bd          pushi 1bd // $1bd zOffset
  06a8:39 06            pushi 6 // $6 loop
  06aa:45 0e 04         callb procedure_000e 4 //  

  06ad:32 000d            jmp code_06bd 

        code_06b0
  06b0:38 010c          pushi 10c // $10c doVerb
  06b3:7a               push2 
  06b4:8f 01              lsp param1 
  06b6:8f 02              lsp param2 
  06b8:59 03            &rest 3 
  06ba:57 2c 08         super Feature 8 


        code_06bd
  06bd:3a                toss 
  06be:48                 ret 
  06bf:00                bnot 
    )

)

// 072e
(instance books of Feature
    (properties
        x $29
        y $58
        z $1e
        heading $0
        noun $0
        nsTop $31
        nsLeft $1c
        nsBottom $44
        nsRight $37
        description $bef
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $bf9
    )
    (method (doVerb) // method_0704
  0704:8f 01              lsp param1 
  0706:3c                 dup 
  0707:35 03              ldi 3 
  0709:1a                 eq? 
  070a:30 000c            bnt code_0719 
  070d:7a               push2 
  070e:38 01bd          pushi 1bd // $1bd zOffset
  0711:39 07            pushi 7 // $7 cel
  0713:45 0e 04         callb procedure_000e 4 //  

  0716:32 000d            jmp code_0726 

        code_0719
  0719:38 010c          pushi 10c // $10c doVerb
  071c:7a               push2 
  071d:8f 01              lsp param1 
  071f:8f 02              lsp param2 
  0721:59 03            &rest 3 
  0723:57 2c 08         super Feature 8 


        code_0726
  0726:3a                toss 
  0727:48                 ret 
    )

)

// 0796
(instance desk of Feature
    (properties
        x $51
        y $57
        z $11
        heading $0
        noun $0
        nsTop $36
        nsLeft $0
        nsBottom $58
        nsRight $a2
        description $c7d
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $c86
    )
    (method (doVerb) // method_076c
  076c:8f 01              lsp param1 
  076e:3c                 dup 
  076f:35 03              ldi 3 
  0771:1a                 eq? 
  0772:30 000c            bnt code_0781 
  0775:7a               push2 
  0776:38 01bd          pushi 1bd // $1bd zOffset
  0779:39 08            pushi 8 // $8 underBits
  077b:45 0e 04         callb procedure_000e 4 //  

  077e:32 000d            jmp code_078e 

        code_0781
  0781:38 010c          pushi 10c // $10c doVerb
  0784:7a               push2 
  0785:8f 01              lsp param1 
  0787:8f 02              lsp param2 
  0789:59 03            &rest 3 
  078b:57 2c 08         super Feature 8 


        code_078e
  078e:3a                toss 
  078f:48                 ret 
    )

)

// 07fc
(instance duckF of Feature
    (properties
        x $2b
        y $bd
        z $2a
        heading $0
        noun $0
        nsTop $86
        nsLeft $17
        nsBottom $a0
        nsRight $3f
        description $0
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_07d4
  07d4:8f 01              lsp param1 
  07d6:35 02              ldi 2 
  07d8:1a                 eq? 
  07d9:30 000c            bnt code_07e8 
  07dc:7a               push2 
  07dd:38 01bd          pushi 1bd // $1bd zOffset
  07e0:39 09            pushi 9 // $9 nsTop
  07e2:45 0e 04         callb procedure_000e 4 //  

  07e5:32 000d            jmp code_07f5 

        code_07e8
  07e8:38 010c          pushi 10c // $10c doVerb
  07eb:7a               push2 
  07ec:8f 01              lsp param1 
  07ee:8f 02              lsp param2 
  07f0:72 06cc          lofsa $06cc // southBank
  07f3:4a 08             send 8 


        code_07f5
  07f5:48                 ret 
    )

)



