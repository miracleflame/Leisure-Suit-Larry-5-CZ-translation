(script 420)

(string
    string_06e6 "rm420"
    string_06ec "sRoom"
    string_06f2 "Inspector Desmond"
    string_0704 "desmondBust"
    string_0710 "desmondMouth"
    string_071d "You"
    string_0721 "pattiMouth"
)

(said
)

(local
)

// 004c
(instance publicrm420 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $1a4
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 6b            pushi 6b // $6b init
  0010:76               push0 
  0011:57 72 04         super LLRoom 4 

  0014:39 03            pushi 3 // $3 y
  0016:38 0080          pushi 80 // $80 indexOf
  0019:38 058c          pushi 58c // $58c sel_1420
  001c:38 058d          pushi 58d // $58d sel_1421
  001f:46 03be 0000 06  calle 3be procedure_0000 6 //  

  0025:39 2b            pushi 2b // $2b number
  0027:78               push1 
  0028:38 01a9          pushi 1a9 // $1a9 surrogate
  002b:39 06            pushi 6 // $6 loop
  002d:78               push1 
  002e:39 ff            pushi ff // $ff syncNum
  0030:39 66            pushi 66 // $66 flags
  0032:78               push1 
  0033:78               push1 
  0034:39 2a            pushi 2a // $2a play
  0036:76               push0 
  0037:81 66              lag  
  0039:4a 16             send 16 

  003b:38 008e          pushi 8e // $8e setScript
  003e:78               push1 
  003f:72 0464          lofsa $0464 // sRoom
  0042:36                push 
  0043:54 06             self 6 

  0045:48                 ret 
    )

)

// 045e
(instance sRoom of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_008c
  008c:87 01              lap param1 
  008e:65 0a             aTop state 
  0090:36                push 
  0091:3c                 dup 
  0092:35 00              ldi 0 
  0094:1a                 eq? 
  0095:30 0007            bnt code_009f 
  0098:35 7b              ldi 7b 
  009a:65 16             aTop ticks 
  009c:32 03b7            jmp code_0456 

        code_009f
  009f:3c                 dup 
  00a0:35 01              ldi 1 
  00a2:1a                 eq? 
  00a3:30 0016            bnt code_00bc 
  00a6:39 06            pushi 6 // $6 loop
  00a8:72 04b2          lofsa $04b2 // Inspector Desmond
  00ab:36                push 
  00ac:38 01a4          pushi 1a4 // $1a4 angleStep
  00af:76               push0 
  00b0:39 6c            pushi 6c // $6c dispose
  00b2:38 008b          pushi 8b // $8b caller
  00b5:7c            pushSelf 
  00b6:45 12 0c         callb procedure_0012 c //  

  00b9:32 039a            jmp code_0456 

        code_00bc
  00bc:3c                 dup 
  00bd:35 02              ldi 2 
  00bf:1a                 eq? 
  00c0:30 0007            bnt code_00ca 
  00c3:35 3c              ldi 3c 
  00c5:65 16             aTop ticks 
  00c7:32 038c            jmp code_0456 

        code_00ca
  00ca:3c                 dup 
  00cb:35 03              ldi 3 
  00cd:1a                 eq? 
  00ce:30 0016            bnt code_00e7 
  00d1:39 06            pushi 6 // $6 loop
  00d3:72 060c          lofsa $060c // You
  00d6:36                push 
  00d7:38 01a4          pushi 1a4 // $1a4 angleStep
  00da:78               push1 
  00db:39 6c            pushi 6c // $6c dispose
  00dd:38 008b          pushi 8b // $8b caller
  00e0:7c            pushSelf 
  00e1:45 12 0c         callb procedure_0012 c //  

  00e4:32 036f            jmp code_0456 

        code_00e7
  00e7:3c                 dup 
  00e8:35 04              ldi 4 
  00ea:1a                 eq? 
  00eb:30 0007            bnt code_00f5 
  00ee:35 3c              ldi 3c 
  00f0:65 16             aTop ticks 
  00f2:32 0361            jmp code_0456 

        code_00f5
  00f5:3c                 dup 
  00f6:35 05              ldi 5 
  00f8:1a                 eq? 
  00f9:30 0016            bnt code_0112 
  00fc:39 06            pushi 6 // $6 loop
  00fe:72 04b2          lofsa $04b2 // Inspector Desmond
  0101:36                push 
  0102:38 01a4          pushi 1a4 // $1a4 angleStep
  0105:7a               push2 
  0106:39 6c            pushi 6c // $6c dispose
  0108:38 008b          pushi 8b // $8b caller
  010b:7c            pushSelf 
  010c:45 12 0c         callb procedure_0012 c //  

  010f:32 0344            jmp code_0456 

        code_0112
  0112:3c                 dup 
  0113:35 06              ldi 6 
  0115:1a                 eq? 
  0116:30 0007            bnt code_0120 
  0119:35 3c              ldi 3c 
  011b:65 16             aTop ticks 
  011d:32 0336            jmp code_0456 

        code_0120
  0120:3c                 dup 
  0121:35 07              ldi 7 
  0123:1a                 eq? 
  0124:30 0017            bnt code_013e 
  0127:39 06            pushi 6 // $6 loop
  0129:72 04b2          lofsa $04b2 // Inspector Desmond
  012c:36                push 
  012d:38 01a4          pushi 1a4 // $1a4 angleStep
  0130:39 03            pushi 3 // $3 y
  0132:39 6c            pushi 6c // $6c dispose
  0134:38 008b          pushi 8b // $8b caller
  0137:7c            pushSelf 
  0138:45 12 0c         callb procedure_0012 c //  

  013b:32 0318            jmp code_0456 

        code_013e
  013e:3c                 dup 
  013f:35 08              ldi 8 
  0141:1a                 eq? 
  0142:30 0007            bnt code_014c 
  0145:35 3c              ldi 3c 
  0147:65 16             aTop ticks 
  0149:32 030a            jmp code_0456 

        code_014c
  014c:3c                 dup 
  014d:35 09              ldi 9 
  014f:1a                 eq? 
  0150:30 0013            bnt code_0166 
  0153:39 03            pushi 3 // $3 y
  0155:89 00              lsg  
  0157:38 01a4          pushi 1a4 // $1a4 angleStep
  015a:39 04            pushi 4 // $4 x
  015c:45 12 06         callb procedure_0012 6 //  

  015f:35 3c              ldi 3c 
  0161:65 16             aTop ticks 
  0163:32 02f0            jmp code_0456 

        code_0166
  0166:3c                 dup 
  0167:35 0a              ldi a 
  0169:1a                 eq? 
  016a:30 0017            bnt code_0184 
  016d:39 06            pushi 6 // $6 loop
  016f:72 060c          lofsa $060c // You
  0172:36                push 
  0173:38 01a4          pushi 1a4 // $1a4 angleStep
  0176:39 05            pushi 5 // $5 view
  0178:39 6c            pushi 6c // $6c dispose
  017a:38 008b          pushi 8b // $8b caller
  017d:7c            pushSelf 
  017e:45 12 0c         callb procedure_0012 c //  

  0181:32 02d2            jmp code_0456 

        code_0184
  0184:3c                 dup 
  0185:35 0b              ldi b 
  0187:1a                 eq? 
  0188:30 0007            bnt code_0192 
  018b:35 3c              ldi 3c 
  018d:65 16             aTop ticks 
  018f:32 02c4            jmp code_0456 

        code_0192
  0192:3c                 dup 
  0193:35 0c              ldi c 
  0195:1a                 eq? 
  0196:30 0017            bnt code_01b0 
  0199:39 06            pushi 6 // $6 loop
  019b:72 04b2          lofsa $04b2 // Inspector Desmond
  019e:36                push 
  019f:38 01a4          pushi 1a4 // $1a4 angleStep
  01a2:39 06            pushi 6 // $6 loop
  01a4:39 6c            pushi 6c // $6c dispose
  01a6:38 008b          pushi 8b // $8b caller
  01a9:7c            pushSelf 
  01aa:45 12 0c         callb procedure_0012 c //  

  01ad:32 02a6            jmp code_0456 

        code_01b0
  01b0:3c                 dup 
  01b1:35 0d              ldi d 
  01b3:1a                 eq? 
  01b4:30 0007            bnt code_01be 
  01b7:35 3c              ldi 3c 
  01b9:65 16             aTop ticks 
  01bb:32 0298            jmp code_0456 

        code_01be
  01be:3c                 dup 
  01bf:35 0e              ldi e 
  01c1:1a                 eq? 
  01c2:30 0017            bnt code_01dc 
  01c5:39 06            pushi 6 // $6 loop
  01c7:72 04b2          lofsa $04b2 // Inspector Desmond
  01ca:36                push 
  01cb:38 01a4          pushi 1a4 // $1a4 angleStep
  01ce:39 07            pushi 7 // $7 cel
  01d0:39 6c            pushi 6c // $6c dispose
  01d2:38 008b          pushi 8b // $8b caller
  01d5:7c            pushSelf 
  01d6:45 12 0c         callb procedure_0012 c //  

  01d9:32 027a            jmp code_0456 

        code_01dc
  01dc:3c                 dup 
  01dd:35 0f              ldi f 
  01df:1a                 eq? 
  01e0:30 0007            bnt code_01ea 
  01e3:35 3c              ldi 3c 
  01e5:65 16             aTop ticks 
  01e7:32 026c            jmp code_0456 

        code_01ea
  01ea:3c                 dup 
  01eb:35 10              ldi 10 
  01ed:1a                 eq? 
  01ee:30 0017            bnt code_0208 
  01f1:39 06            pushi 6 // $6 loop
  01f3:72 04b2          lofsa $04b2 // Inspector Desmond
  01f6:36                push 
  01f7:38 01a4          pushi 1a4 // $1a4 angleStep
  01fa:39 08            pushi 8 // $8 underBits
  01fc:39 6c            pushi 6c // $6c dispose
  01fe:38 008b          pushi 8b // $8b caller
  0201:7c            pushSelf 
  0202:45 12 0c         callb procedure_0012 c //  

  0205:32 024e            jmp code_0456 

        code_0208
  0208:3c                 dup 
  0209:35 11              ldi 11 
  020b:1a                 eq? 
  020c:30 0007            bnt code_0216 
  020f:35 3c              ldi 3c 
  0211:65 16             aTop ticks 
  0213:32 0240            jmp code_0456 

        code_0216
  0216:3c                 dup 
  0217:35 12              ldi 12 
  0219:1a                 eq? 
  021a:30 0017            bnt code_0234 
  021d:39 06            pushi 6 // $6 loop
  021f:72 04b2          lofsa $04b2 // Inspector Desmond
  0222:36                push 
  0223:38 01a4          pushi 1a4 // $1a4 angleStep
  0226:39 09            pushi 9 // $9 nsTop
  0228:39 6c            pushi 6c // $6c dispose
  022a:38 008b          pushi 8b // $8b caller
  022d:7c            pushSelf 
  022e:45 12 0c         callb procedure_0012 c //  

  0231:32 0222            jmp code_0456 

        code_0234
  0234:3c                 dup 
  0235:35 13              ldi 13 
  0237:1a                 eq? 
  0238:30 0007            bnt code_0242 
  023b:35 3c              ldi 3c 
  023d:65 16             aTop ticks 
  023f:32 0214            jmp code_0456 

        code_0242
  0242:3c                 dup 
  0243:35 14              ldi 14 
  0245:1a                 eq? 
  0246:30 0013            bnt code_025c 
  0249:39 03            pushi 3 // $3 y
  024b:89 00              lsg  
  024d:38 01a4          pushi 1a4 // $1a4 angleStep
  0250:39 0a            pushi a // $a nsLeft
  0252:45 12 06         callb procedure_0012 6 //  

  0255:35 3c              ldi 3c 
  0257:65 16             aTop ticks 
  0259:32 01fa            jmp code_0456 

        code_025c
  025c:3c                 dup 
  025d:35 15              ldi 15 
  025f:1a                 eq? 
  0260:30 0017            bnt code_027a 
  0263:39 06            pushi 6 // $6 loop
  0265:72 060c          lofsa $060c // You
  0268:36                push 
  0269:38 01a4          pushi 1a4 // $1a4 angleStep
  026c:39 0b            pushi b // $b nsBottom
  026e:39 6c            pushi 6c // $6c dispose
  0270:38 008b          pushi 8b // $8b caller
  0273:7c            pushSelf 
  0274:45 12 0c         callb procedure_0012 c //  

  0277:32 01dc            jmp code_0456 

        code_027a
  027a:3c                 dup 
  027b:35 16              ldi 16 
  027d:1a                 eq? 
  027e:30 0007            bnt code_0288 
  0281:35 3c              ldi 3c 
  0283:65 16             aTop ticks 
  0285:32 01ce            jmp code_0456 

        code_0288
  0288:3c                 dup 
  0289:35 17              ldi 17 
  028b:1a                 eq? 
  028c:30 0017            bnt code_02a6 
  028f:39 06            pushi 6 // $6 loop
  0291:72 04b2          lofsa $04b2 // Inspector Desmond
  0294:36                push 
  0295:38 01a4          pushi 1a4 // $1a4 angleStep
  0298:39 0c            pushi c // $c nsRight
  029a:39 6c            pushi 6c // $6c dispose
  029c:38 008b          pushi 8b // $8b caller
  029f:7c            pushSelf 
  02a0:45 12 0c         callb procedure_0012 c //  

  02a3:32 01b0            jmp code_0456 

        code_02a6
  02a6:3c                 dup 
  02a7:35 18              ldi 18 
  02a9:1a                 eq? 
  02aa:30 0007            bnt code_02b4 
  02ad:35 3c              ldi 3c 
  02af:65 16             aTop ticks 
  02b1:32 01a2            jmp code_0456 

        code_02b4
  02b4:3c                 dup 
  02b5:35 19              ldi 19 
  02b7:1a                 eq? 
  02b8:30 0017            bnt code_02d2 
  02bb:39 06            pushi 6 // $6 loop
  02bd:72 04b2          lofsa $04b2 // Inspector Desmond
  02c0:36                push 
  02c1:38 01a4          pushi 1a4 // $1a4 angleStep
  02c4:39 0d            pushi d // $d lsTop
  02c6:39 6c            pushi 6c // $6c dispose
  02c8:38 008b          pushi 8b // $8b caller
  02cb:7c            pushSelf 
  02cc:45 12 0c         callb procedure_0012 c //  

  02cf:32 0184            jmp code_0456 

        code_02d2
  02d2:3c                 dup 
  02d3:35 1a              ldi 1a 
  02d5:1a                 eq? 
  02d6:30 0007            bnt code_02e0 
  02d9:35 3c              ldi 3c 
  02db:65 16             aTop ticks 
  02dd:32 0176            jmp code_0456 

        code_02e0
  02e0:3c                 dup 
  02e1:35 1b              ldi 1b 
  02e3:1a                 eq? 
  02e4:30 0017            bnt code_02fe 
  02e7:39 06            pushi 6 // $6 loop
  02e9:72 04b2          lofsa $04b2 // Inspector Desmond
  02ec:36                push 
  02ed:38 01a4          pushi 1a4 // $1a4 angleStep
  02f0:39 0e            pushi e // $e lsLeft
  02f2:39 6c            pushi 6c // $6c dispose
  02f4:38 008b          pushi 8b // $8b caller
  02f7:7c            pushSelf 
  02f8:45 12 0c         callb procedure_0012 c //  

  02fb:32 0158            jmp code_0456 

        code_02fe
  02fe:3c                 dup 
  02ff:35 1c              ldi 1c 
  0301:1a                 eq? 
  0302:30 0007            bnt code_030c 
  0305:35 3c              ldi 3c 
  0307:65 16             aTop ticks 
  0309:32 014a            jmp code_0456 

        code_030c
  030c:3c                 dup 
  030d:35 1d              ldi 1d 
  030f:1a                 eq? 
  0310:30 0017            bnt code_032a 
  0313:39 06            pushi 6 // $6 loop
  0315:72 060c          lofsa $060c // You
  0318:36                push 
  0319:38 01a4          pushi 1a4 // $1a4 angleStep
  031c:39 0f            pushi f // $f lsBottom
  031e:39 6c            pushi 6c // $6c dispose
  0320:38 008b          pushi 8b // $8b caller
  0323:7c            pushSelf 
  0324:45 12 0c         callb procedure_0012 c //  

  0327:32 012c            jmp code_0456 

        code_032a
  032a:3c                 dup 
  032b:35 1e              ldi 1e 
  032d:1a                 eq? 
  032e:30 0007            bnt code_0338 
  0331:35 3c              ldi 3c 
  0333:65 16             aTop ticks 
  0335:32 011e            jmp code_0456 

        code_0338
  0338:3c                 dup 
  0339:35 1f              ldi 1f 
  033b:1a                 eq? 
  033c:30 0017            bnt code_0356 
  033f:39 06            pushi 6 // $6 loop
  0341:72 04b2          lofsa $04b2 // Inspector Desmond
  0344:36                push 
  0345:38 01a4          pushi 1a4 // $1a4 angleStep
  0348:39 10            pushi 10 // $10 lsRight
  034a:39 6c            pushi 6c // $6c dispose
  034c:38 008b          pushi 8b // $8b caller
  034f:7c            pushSelf 
  0350:45 12 0c         callb procedure_0012 c //  

  0353:32 0100            jmp code_0456 

        code_0356
  0356:3c                 dup 
  0357:35 20              ldi 20 
  0359:1a                 eq? 
  035a:30 0007            bnt code_0364 
  035d:35 3c              ldi 3c 
  035f:65 16             aTop ticks 
  0361:32 00f2            jmp code_0456 

        code_0364
  0364:3c                 dup 
  0365:35 21              ldi 21 
  0367:1a                 eq? 
  0368:30 0017            bnt code_0382 
  036b:39 06            pushi 6 // $6 loop
  036d:72 04b2          lofsa $04b2 // Inspector Desmond
  0370:36                push 
  0371:38 01a4          pushi 1a4 // $1a4 angleStep
  0374:39 11            pushi 11 // $11 signal
  0376:39 6c            pushi 6c // $6c dispose
  0378:38 008b          pushi 8b // $8b caller
  037b:7c            pushSelf 
  037c:45 12 0c         callb procedure_0012 c //  

  037f:32 00d4            jmp code_0456 

        code_0382
  0382:3c                 dup 
  0383:35 22              ldi 22 
  0385:1a                 eq? 
  0386:30 0007            bnt code_0390 
  0389:35 3c              ldi 3c 
  038b:65 16             aTop ticks 
  038d:32 00c6            jmp code_0456 

        code_0390
  0390:3c                 dup 
  0391:35 23              ldi 23 
  0393:1a                 eq? 
  0394:30 0017            bnt code_03ae 
  0397:39 06            pushi 6 // $6 loop
  0399:72 060c          lofsa $060c // You
  039c:36                push 
  039d:38 01a4          pushi 1a4 // $1a4 angleStep
  03a0:39 12            pushi 12 // $12 illegalBits
  03a2:39 6c            pushi 6c // $6c dispose
  03a4:38 008b          pushi 8b // $8b caller
  03a7:7c            pushSelf 
  03a8:45 12 0c         callb procedure_0012 c //  

  03ab:32 00a8            jmp code_0456 

        code_03ae
  03ae:3c                 dup 
  03af:35 24              ldi 24 
  03b1:1a                 eq? 
  03b2:30 0007            bnt code_03bc 
  03b5:35 3c              ldi 3c 
  03b7:65 16             aTop ticks 
  03b9:32 009a            jmp code_0456 

        code_03bc
  03bc:3c                 dup 
  03bd:35 25              ldi 25 
  03bf:1a                 eq? 
  03c0:30 0017            bnt code_03da 
  03c3:39 06            pushi 6 // $6 loop
  03c5:72 04b2          lofsa $04b2 // Inspector Desmond
  03c8:36                push 
  03c9:38 01a4          pushi 1a4 // $1a4 angleStep
  03cc:39 13            pushi 13 // $13 brTop
  03ce:39 6c            pushi 6c // $6c dispose
  03d0:38 008b          pushi 8b // $8b caller
  03d3:7c            pushSelf 
  03d4:45 12 0c         callb procedure_0012 c //  

  03d7:32 007c            jmp code_0456 

        code_03da
  03da:3c                 dup 
  03db:35 26              ldi 26 
  03dd:1a                 eq? 
  03de:30 0007            bnt code_03e8 
  03e1:35 3c              ldi 3c 
  03e3:65 16             aTop ticks 
  03e5:32 006e            jmp code_0456 

        code_03e8
  03e8:3c                 dup 
  03e9:35 27              ldi 27 
  03eb:1a                 eq? 
  03ec:30 0017            bnt code_0406 
  03ef:39 06            pushi 6 // $6 loop
  03f1:72 060c          lofsa $060c // You
  03f4:36                push 
  03f5:38 01a4          pushi 1a4 // $1a4 angleStep
  03f8:39 14            pushi 14 // $14 brLeft
  03fa:39 6c            pushi 6c // $6c dispose
  03fc:38 008b          pushi 8b // $8b caller
  03ff:7c            pushSelf 
  0400:45 12 0c         callb procedure_0012 c //  

  0403:32 0050            jmp code_0456 

        code_0406
  0406:3c                 dup 
  0407:35 28              ldi 28 
  0409:1a                 eq? 
  040a:30 0007            bnt code_0414 
  040d:35 3c              ldi 3c 
  040f:65 16             aTop ticks 
  0411:32 0042            jmp code_0456 

        code_0414
  0414:3c                 dup 
  0415:35 29              ldi 29 
  0417:1a                 eq? 
  0418:30 0017            bnt code_0432 
  041b:39 06            pushi 6 // $6 loop
  041d:72 04b2          lofsa $04b2 // Inspector Desmond
  0420:36                push 
  0421:38 01a4          pushi 1a4 // $1a4 angleStep
  0424:39 15            pushi 15 // $15 brBottom
  0426:39 6c            pushi 6c // $6c dispose
  0428:38 008b          pushi 8b // $8b caller
  042b:7c            pushSelf 
  042c:45 12 0c         callb procedure_0012 c //  

  042f:32 0024            jmp code_0456 

        code_0432
  0432:3c                 dup 
  0433:35 2a              ldi 2a 
  0435:1a                 eq? 
  0436:30 001d            bnt code_0456 
  0439:81 19              lag  
  043b:30 0005            bnt code_0443 
  043e:39 6c            pushi 6c // $6c dispose
  0440:76               push0 
  0441:4a 04             send 4 


        code_0443
  0443:38 009f          pushi 9f // $9f fade
  0446:76               push0 
  0447:81 66              lag  
  0449:4a 04             send 4 

  044b:38 0179          pushi 179 // $179 newRoom
  044e:78               push1 
  044f:38 01ae          pushi 1ae // $1ae loopIndex
  0452:81 02              lag  
  0454:4a 06             send 6 


        code_0456
  0456:3a                toss 
  0457:48                 ret 
    )

)

// 04ac
(instance Inspector Desmond of Talker
    (properties
        x $0
        y $a0
        z $0
        heading $0
        noun $0
        nsTop $1d
        nsLeft $73
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $58c
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $c8
    )
    (method (init) // method_0492
  0492:72 052e          lofsa $052e // desmondBust
  0495:65 56             aTop bust 
  0497:72 0594          lofsa $0594 // desmondMouth
  049a:65 5a             aTop mouth 
  049c:39 6b            pushi 6b // $6b init
  049e:76               push0 
  049f:59 01            &rest 1 
  04a1:57 6f 04         super Talker 4 

  04a4:48                 ret 
  04a5:00                bnot 
    )

)

// 0528
(instance desmondBust of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $58c
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 058e
(instance desmondMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $d
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $58c
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $8
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0606
(instance You of Talker
    (properties
        x $8c
        y $aa
        z $0
        heading $0
        noun $0
        nsTop $3b
        nsLeft $c7
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $58d
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_05f2
  05f2:72 0688          lofsa $0688 // pattiMouth
  05f5:65 5a             aTop mouth 
  05f7:39 6b            pushi 6b // $6b init
  05f9:76               push0 
  05fa:59 01            &rest 1 
  05fc:57 6f 04         super Talker 4 

  05ff:48                 ret 
    )

)

// 0682
(instance pattiMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $58d
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $8
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)



