(script 270)

(string
    string_16b4 "You are inside the AeroDork Airline waiting room and former ticket counter. A security camera peers at you from the far wall."
    string_1732 "Buffi"
    string_1738 "Muffi"
    string_173e "Tracie"
    string_1745 "Stacie"
    string_174c "Cherri"
    string_1753 "Barri"
    string_1759 "Dixie"
    string_175f "Trixie"
    string_1766 "Los Angeles"
    string_1772 "New York"
    string_177b "Atlantic City"
    string_1789 "Miami"
    string_178f "rm270"
    string_1795 "the charity collection canister"
    string_17b5 "cannister"
    string_17bf "the plant"
    string_17c9 "plant"
    string_17cf "the chairs"
    string_17da "chairs"
    string_17e1 "the ashtray"
    string_17ed "ashtray"
    string_17f5 "the sign"
    string_17fe "vipSign"
    string_1806 "the ticket counter"
    string_1819 "theCounter"
    string_1824 "blonde"
    string_182b "redHead"
    string_1833 "sStealChange"
    string_1840 "sBlonde"
    string_1848 "sRedHead"
    string_1851 "the door"
    string_185a "door"
    string_185f "ad1"
    string_1863 "ad2"
    string_1867 "ad3"
    string_186b "ad4"
    string_186f "the security camera"
    string_1883 "camera"
    string_188a "sShowCard"
    string_1894 "stepSound"
    string_189e "announcement"
    string_18ab ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0000
    local6 = $0000
    local7 = $0000
    local8 = $0000
    local9 = $0000
    local10 = $0000
    local11 = $0000
    local12 = $0000
    local13 = $0000
    local14 = $0000
    local15 = $0000
    local16 = $0000
    local17 = $0000
    local18 = $0000
    local19 = $0000
    local20 = $0000
    local21 = $0000
    local22 = $0000
    local23 = $0000
    local24 = $0000
    local25 = $0000
    local26 = $0000
    local27 = $0000
    local28 = $0000
    local29 = $0000
    local30 = $0000
    local31 = $0000
    local32 = $0000
    local33 = $0000
    local34 = $0000
    local35 = $0000
    local36 = $0000
    local37 = $0000
    local38 = $0000
    local39 = $0000
    local40 = $0000
    local41 = $0000
    local42 = $0000
    local43 = $0000
    local44 = $0000
    local45 = $0000
    local46 = $0000
    local47 = $0000
    local48 = $0000
    local49 = $0000
    local50 = $0000
    local51 = $0000
    local52 = $0000
    local53 = $0000
    local54 = $0000
    local55 = $0000
    local56 = $0000
    local57 = $0000
    local58 = $0000
    local59 = $0000
    local60 = $0000
    local61 = $0000
    local62 = $0000
    local63 = $0000
    local64 = $0000
    local65 = $0000
    local66 = $0000
    local67 = $0000
    local68 = $0000
    local69 = $0000
    local70 = $0000
    local71 = $0000
    local72 = $0000
    local73 = $0000
    local74 = $0000
    local75 = $0000
    local76 = $0000
    local77 = $0000
    local78 = $0000
    local79 = $0000
    local80 = $0000
    local81 = $0000
    local82 = $0000
    local83 = $0000
    local84 = $0000
    local85 = $0000
    local86 = $0000
    local87 = $0000
    local88 = $0000
    local89 = $0000
    local90 = $0000
    local91 = $0000
    local92 = $0000
    local93 = $0000
    local94 = $0000
    local95 = $0000
    local96 = $0000
    local97 = $0000
    local98 = $0000
    local99 = $0000
    local100 = $0000
    local101 = $0000
    local102 = $0000
    local103 = $0000
    local104 = $0000
    local105 = $0000
    local106 = $0000
    local107 = $0000
    local108 = $0000
    local109 = $0000
    local110 = $0000
    local111 = $0000
    local112 = $0000
    local113 = $0000
    local114 = $0000
    local115 = $0000
    local116 = $0000
    local117 = $0000
    local118 = $0000
    local119 = $0000
    local120 = $0000
    local121 = $0000
    local122 = $0000
    local123 = $0000
    local124 = $0000
    local125 = $0000
    local126 = $0000
    local127 = $0000
    local128 = $0000
    local129 = $0000
    local130 = $0000
    local131 = $0000
    local132 = $0000
    local133 = $0000
    local134 = $0000
    local135 = $0000
    local136 = $0000
    local137 = $0000
    local138 = $0000
    local139 = $0000
    local140 = $0000
    local141 = $0000
    local142 = $0000
    local143 = $0000
    local144 = $0000
    local145 = $0000
    local146 = $0000
    local147 = $0000
    local148 = $0000
    local149 = $0000
    local150 = $0000
    local151 = $0000
    local152 = $0000
    local153 = $0000
    local154 = $0000
    local155 = $0000
    local156 = $0000
    local157 = $0000
    local158 = $0000
    local159 = $0000
    local160 = $0000
    local161 = $0000
    local162 = $0000
    local163 = $0000
    local164 = $0000
    local165 = $0000
    local166 = $0000
    local167 = $0000
    local168 = $0000
    local169 = $0000
    local170 = $0000
    local171 = $0000
    local172 = $0000
    local173 = $0000
    local174 = $0000
    local175 = $0000
    local176 = $0000
    local177 = $0000
    local178 = $0000
    local179 = $0000
    local180 = $0000
    local181 = $0000
    local182 = $0000
    local183 = $0000
    local184 = $0000
    local185 = $0000
    local186 = $0000
    local187 = $0000
    local188 = $0000
    local189 = $0000
    local190 = $0000
    local191 = $0000
    local192 = $0000
    local193 = $0000
    local194 = $0000
    local195 = $0000
    local196 = $0000
    local197 = $0000
    local198 = $0000
    local199 = $0000
    local200 = $0000
    local201 = $0000
    local202 = $0000
    local203 = $0000
    local204 = $0000
    local205 = $0000
    local206 = $0000
    local207 = $0000
    local208 = $0000
    local209 = $0000
    local210 = $0000
    local211 = $0000
    local212 = $0000
    local213 = $0000
    local214 = $0000
    local215 = $0000
    local216 = $0000
    local217 = $0000
    local218 = $0000
    local219 = $0000
    local220 = $0000
    local221 = $0000
    local222 = $0000
    local223 = $0000
    local224 = $0000
    local225 = $0000
    local226 = $0000
    local227 = $0000
    local228 = $0000
    local229 = $0000
    local230 = $0000
    local231 = $0000
    local232 = $0000
    local233 = $0000
    local234 = $0000
    local235 = $0000
    local236 = $0000
    local237 = $0000
    local238 = $0000
    local239 = $0000
    local240 = $0000
    local241 = $0000
    local242 = $0000
    local243 = $0000
    local244 = $0000
    local245 = $0000
    local246 = $0000
    local247 = $0000
    local248 = $0000
    local249 = $0000
    local250 = $0000
    local251 = $0000
    local252 = $0000
    local253 = $0000
    local254 = $0000
    local255 = $0000
    local256 = $0000
    local257 = $0000
    local258 = $0000
    local259 = $0000
    local260 = $0000
    local261 = $0000
    local262 = $0000
    local263 = $0000
    local264 = $0000
    local265 = $0000
    local266 = $0000
    local267 = $0000
    local268 = $0000
    local269 = $0000
    local270 = $0000
    local271 = $0000
    local272 = $0000
    local273 = $0000
    local274 = $0000
    local275 = $0000
    local276 = $0000
    local277 = $0000
    local278 = $0000
    local279 = $0000
    local280 = $0000
    local281 = $0000
    local282 = $0000
    local283 = $0000
    local284 = $0000
    local285 = $0000
    local286 = $0000
    local287 = $0000
    local288 = $0000
    local289 = $0000
    local290 = $0000
    local291 = $0000
    local292 = $0000
    local293 = $0000
    local294 = $0000
    local295 = $0000
    local296 = $0000
    local297 = $0000
    local298 = $0000
    local299 = $0000
    local300 = $0000
    local301 = $0000
    local302 = $0000
    local303 = $0000
    local304 = $0000
    local305 = $0000
    local306 = $0000
    local307 = $0000
    local308 = $0000
    local309 = $0000
    local310 = $0000
    local311 = $0000
    local312 = $0000
    local313 = $0000
    local314 = $0000
    local315 = $0000
    local316 = $0000
    local317 = $0000
    local318 = $0000
    local319 = $0000
    local320 = $0000
    local321 = $0000
    local322 = $0000
    local323 = $0000
    local324 = $0000
    local325 = $0000
    local326 = $0000
    local327 = $0000
    local328 = $0000
    local329 = $0000
    local330 = $0000
    local331 = $0000
    local332 = $0000
    local333 = $0000
    local334 = $0000
    local335 = $0000
    local336 = $0000
    local337 = $0000
    local338 = $0000
    local339 = $0000
    local340 = $0000
    local341 = $0000
    local342 = $0000
    local343 = $0000
    local344 = $0000
    local345 = $0000
    local346 = $0000
    local347 = $0000
    local348 = $0000
    local349 = $0000
    local350 = $0000
    local351 = $0000
    local352 = $0000
    local353 = $0000
    local354 = $0000
    local355 = $0000
    local356 = $0000
    local357 = $0000
    local358 = $0000
    local359 = $0000
    local360 = $0000
    local361 = $0000
    local362 = $0000
    local363 = $0000
    local364 = $0000
    local365 = $0000
    local366 = $0000
    local367 = $0000
    local368 = $0000
    local369 = $0000
    local370 = $0000
    local371 = $0000
    local372 = $0000
    local373 = $0000
    local374 = $0000
    local375 = $0000
    local376 = $0000
    local377 = $0000
    local378 = $0000
    local379 = $0000
    local380 = $0000
    local381 = $0000
    local382 = $0000
    local383 = $0000
    local384 = $0000
    local385 = $0000
    local386 = $0000
    local387 = $0000
    local388 = $0000
    local389 = $0000
    local390 = $0000
    local391 = $0000
    local392 = $0000
    local393 = $0000
    local394 = $0000
    local395 = $0000
    local396 = $0000
    local397 = $0000
    local398 = $0000
    local399 = $0000
    local400 = $0000
    local401 = $0000
    local402 = $0000
    local403 = $0000
    local404 = $0000
    local405 = $0000
    local406 = $0000
    local407 = $0000
    local408 = $0000
    local409 = $0000
    local410 = $0000
    local411 = $0000
    local412 = $0000
    local413 = $0000
    local414 = $0000
    local415 = $0000
    local416 = $0000
    local417 = $0000
    local418 = $0000
    local419 = $0000
    local420 = $0000
    local421 = $0000
    local422 = $0000
    local423 = $0000
    local424 = $0000
    local425 = $0000
    local426 = $0000
    local427 = $0000
    local428 = $0000
    local429 = $0000
    local430 = $0000
    local431 = $0000
    local432 = $0000
    local433 = $0000
    local434 = $0000
    local435 = $0000
    local436 = $0000
    local437 = $0000
    local438 = $0000
    local439 = $0000
    local440 = $0000
    local441 = $0000
    local442 = $0000
    local443 = $0000
    local444 = $0000
    local445 = $0000
    local446 = $0000
    local447 = $0000
    local448 = $0000
    local449 = $0000
    local450 = $0000
    local451 = $0000
    local452 = $0000
    local453 = $0000
    local454 = $0000
    local455 = $0000
    local456 = $0000
    local457 = $0000
    local458 = $0000
    local459 = $0000
    local460 = $0000
    local461 = $0000
    local462 = $0000
    local463 = $0000
    local464 = $0000
    local465 = $0000
    local466 = $0000
    local467 = $0000
    local468 = $0000
    local469 = $0000
    local470 = $0000
    local471 = $0000
    local472 = $0000
    local473 = $0000
    local474 = $0000
    local475 = $0000
    local476 = $0000
    local477 = $0000
    local478 = $0000
    local479 = $0000
    local480 = $0000
    local481 = $0000
    local482 = $0000
    local483 = $0000
    local484 = $0000
    local485 = $0000
    local486 = $0000
    local487 = $0000
    local488 = $0000
    local489 = $0000
    local490 = $0000
    local491 = $0000
    local492 = $0000
    local493 = $0000
    local494 = $0000
    local495 = $0000
    local496 = $0000
    local497 = $0000
    local498 = $0000
    local499 = $0000
    local500 = $0000
    local501 = $0000
    local502 = $0000
    local503 = $0000
    local504 = $0000
    local505 = $0000
    local506 = $0000
)

// 0606
(instance publicrm270 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $16b4
        picture $10e
        style $ffff
        horizon $0
        controls $0
        north $122
        east $118
        south $fa
        west $104
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 6b            pushi 6b // $6b init
  0010:76               push0 
  0011:38 020a          pushi 20a // $20a normalize
  0014:76               push0 
  0015:81 00              lag  
  0017:4a 08             send 8 

  0019:39 04            pushi 4 // $4 x
  001b:78               push1 
  001c:7a               push2 
  001d:38 00b2          pushi b2 // $b2 retreat
  0020:38 00eb          pushi eb // $eb incClientPos
  0023:43 3c 04         callk Random 4 

  0026:36                push 
  0027:39 03            pushi 3 // $3 y
  0029:78               push1 
  002a:39 52            pushi 52 // $52 icon
  002c:38 0121          pushi 121 // $121 ignoreActors
  002f:78               push1 
  0030:78               push1 
  0031:38 00a2          pushi a2 // $a2 setLoop
  0034:78               push1 
  0035:89 a5              lsg  
  0037:39 6b            pushi 6b // $6b init
  0039:76               push0 
  003a:72 0afe          lofsa $0afe // blonde
  003d:4a 1c             send 1c 

  003f:39 04            pushi 4 // $4 x
  0041:78               push1 
  0042:7a               push2 
  0043:38 0104          pushi 104 // $104 gx
  0046:38 0131          pushi 131 // $131 findPosn
  0049:43 3c 04         callk Random 4 

  004c:36                push 
  004d:39 03            pushi 3 // $3 y
  004f:78               push1 
  0050:39 52            pushi 52 // $52 icon
  0052:38 0121          pushi 121 // $121 ignoreActors
  0055:78               push1 
  0056:78               push1 
  0057:38 00a2          pushi a2 // $a2 setLoop
  005a:78               push1 
  005b:89 a7              lsg  
  005d:39 6b            pushi 6b // $6b init
  005f:76               push0 
  0060:72 0c2a          lofsa $0c2a // redHead
  0063:4a 1c             send 1c 

  0065:39 04            pushi 4 // $4 x
  0067:76               push0 
  0068:72 0afe          lofsa $0afe // blonde
  006b:4a 04             send 4 

  006d:a3 04              sal local4 
  006f:39 04            pushi 4 // $4 x
  0071:76               push0 
  0072:72 0c2a          lofsa $0c2a // redHead
  0075:4a 04             send 4 

  0077:a3 03              sal local3 
  0079:89 0c              lsg  
  007b:38 0185          pushi 185 // $185 east
  007e:76               push0 
  007f:81 02              lag  
  0081:4a 04             send 4 

  0083:1c                 ne? 
  0084:30 0016            bnt code_009d 
  0087:38 00a2          pushi a2 // $a2 setLoop
  008a:78               push1 
  008b:39 03            pushi 3 // $3 y
  008d:72 0afe          lofsa $0afe // blonde
  0090:4a 06             send 6 

  0092:38 00a2          pushi a2 // $a2 setLoop
  0095:78               push1 
  0096:39 04            pushi 4 // $4 x
  0098:72 0c2a          lofsa $0c2a // redHead
  009b:4a 06             send 6 


        code_009d
  009d:39 6b            pushi 6b // $6b init
  009f:76               push0 
  00a0:39 42            pushi 42 // $42 setPri
  00a2:78               push1 
  00a3:39 04            pushi 4 // $4 x
  00a5:72 102c          lofsa $102c // door
  00a8:4a 0a             send a 

  00aa:39 6b            pushi 6b // $6b init
  00ac:76               push0 
  00ad:72 14b8          lofsa $14b8 // camera
  00b0:4a 04             send 4 

  00b2:89 0c              lsg  
  00b4:3c                 dup 
  00b5:63 20             pToa south 
  00b7:1a                 eq? 
  00b8:30 001d            bnt code_00d8 
  00bb:38 0120          pushi 120 // $120 setCel
  00be:78               push1 
  00bf:39 05            pushi 5 // $5 view
  00c1:72 14b8          lofsa $14b8 // camera
  00c4:4a 06             send 6 

  00c6:78               push1 
  00c7:39 08            pushi 8 // $8 underBits
  00c9:45 06 02         callb procedure_0006 2 //  

  00cc:30 009f            bnt code_016e 
  00cf:78               push1 
  00d0:39 26            pushi 26 // $26 mark
  00d2:45 08 02         callb procedure_0008 2 //  

  00d5:32 0096            jmp code_016e 

        code_00d8
  00d8:3c                 dup 
  00d9:63 1c             pToa north 
  00db:1a                 eq? 
  00dc:30 000c            bnt code_00eb 
  00df:38 0146          pushi 146 // $146 edgeHit
  00e2:78               push1 
  00e3:76               push0 
  00e4:81 00              lag  
  00e6:4a 06             send 6 

  00e8:32 0083            jmp code_016e 

        code_00eb
  00eb:3c                 dup 
  00ec:63 1e             pToa east 
  00ee:1a                 eq? 
  00ef:30 0041            bnt code_0133 
  00f2:39 6b            pushi 6b // $6b init
  00f4:76               push0 
  00f5:38 011c          pushi 11c // $11c posn
  00f8:7a               push2 
  00f9:89 a4              lsg  
  00fb:34 013f            ldi 13f 
  00fe:02                 add 
  00ff:36                push 
  0100:39 52            pushi 52 // $52 icon
  0102:72 0afe          lofsa $0afe // blonde
  0105:4a 0c             send c 

  0107:39 6b            pushi 6b // $6b init
  0109:76               push0 
  010a:38 011c          pushi 11c // $11c posn
  010d:7a               push2 
  010e:89 a6              lsg  
  0110:34 013f            ldi 13f 
  0113:02                 add 
  0114:36                push 
  0115:39 52            pushi 52 // $52 icon
  0117:72 0c2a          lofsa $0c2a // redHead
  011a:4a 0c             send c 

  011c:76               push0 
  011d:45 03 00         callb procedure_0003 0 //  

  0120:38 0120          pushi 120 // $120 setCel
  0123:78               push1 
  0124:38 00ff          pushi ff // $ff syncNum
  0127:72 14b8          lofsa $14b8 // camera
  012a:4a 06             send 6 

  012c:35 0b              ldi b 
  012e:65 16             aTop style 
  0130:32 003b            jmp code_016e 

        code_0133
  0133:3c                 dup 
  0134:63 22             pToa west 
  0136:1a                 eq? 
  0137:30 000b            bnt code_0145 
  013a:76               push0 
  013b:45 03 00         callb procedure_0003 0 //  

  013e:35 0c              ldi c 
  0140:65 16             aTop style 
  0142:32 0029            jmp code_016e 

        code_0145
  0145:76               push0 
  0146:45 03 00         callb procedure_0003 0 //  

  0149:38 011c          pushi 11c // $11c posn
  014c:7a               push2 
  014d:38 00fd          pushi fd // $fd syncCue
  0150:38 00b9          pushi b9 // $b9 bottom
  0153:38 0146          pushi 146 // $146 edgeHit
  0156:78               push1 
  0157:76               push0 
  0158:38 00e4          pushi e4 // $e4 setHeading
  015b:78               push1 
  015c:38 0168          pushi 168 // $168 shadWid
  015f:81 00              lag  
  0161:4a 14             send 14 

  0163:38 0120          pushi 120 // $120 setCel
  0166:78               push1 
  0167:39 05            pushi 5 // $5 view
  0169:72 14b8          lofsa $14b8 // camera
  016c:4a 06             send 6 


        code_016e
  016e:3a                toss 
  016f:39 6b            pushi 6b // $6b init
  0171:76               push0 
  0172:57 72 04         super LLRoom 4 

  0175:38 0176          pushi 176 // $176 addObstacle
  0178:7a               push2 
  0179:39 22            pushi 22 // $22 type
  017b:78               push1 
  017c:7a               push2 
  017d:39 6b            pushi 6b // $6b init
  017f:39 10            pushi 10 // $10 lsRight
  0181:76               push0 
  0182:76               push0 
  0183:38 013f          pushi 13f // $13f inputLineAddr
  0186:76               push0 
  0187:38 013f          pushi 13f // $13f inputLineAddr
  018a:39 71            pushi 71 // $71 respondsTo
  018c:39 60            pushi 60 // $60 frame
  018e:39 71            pushi 71 // $71 respondsTo
  0190:39 54            pushi 54 // $54 delete
  0192:39 66            pushi 66 // $66 flags
  0194:39 4c            pushi 4c // $4c claimed
  0196:39 66            pushi 66 // $66 flags
  0198:39 44            pushi 44 // $44 next
  019a:39 71            pushi 71 // $71 respondsTo
  019c:76               push0 
  019d:39 71            pushi 71 // $71 respondsTo
  019f:39 72            pushi 72 // $72 yourself
  01a1:76               push0 
  01a2:39 6a            pushi 6a // $6a new
  01a4:76               push0 
  01a5:51 23            class Polygon 
  01a7:4a 04             send 4 

  01a9:4a 2e             send 2e 

  01ab:36                push 
  01ac:39 22            pushi 22 // $22 type
  01ae:78               push1 
  01af:7a               push2 
  01b0:39 6b            pushi 6b // $6b init
  01b2:39 1e            pushi 1e // $1e mode
  01b4:39 40            pushi 40 // $40 modifiers
  01b6:38 00ae          pushi ae // $ae isType
  01b9:39 1b            pushi 1b // $1b elements
  01bb:38 00aa          pushi aa // $aa setSize
  01be:39 10            pushi 10 // $10 lsRight
  01c0:38 009d          pushi 9d // $9d pause
  01c3:39 07            pushi 7 // $7 cel
  01c5:38 009d          pushi 9d // $9d pause
  01c8:39 0a            pushi a // $a nsLeft
  01ca:38 009a          pushi 9a // $9a prevSignal
  01cd:39 11            pushi 11 // $11 signal
  01cf:38 009a          pushi 9a // $9a prevSignal
  01d2:39 23            pushi 23 // $23 window
  01d4:38 008d          pushi 8d // $8d cue
  01d7:39 57            pushi 57 // $57 printLang
  01d9:38 008d          pushi 8d // $8d cue
  01dc:38 00ea          pushi ea // $ea obstacles
  01df:38 008d          pushi 8d // $8d cue
  01e2:38 00f1          pushi f1 // $f1 escaping
  01e5:38 0097          pushi 97 // $97 setReal
  01e8:38 0102          pushi 102 // $102 syncStop
  01eb:38 0097          pushi 97 // $97 setReal
  01ee:38 010c          pushi 10c // $10c doVerb
  01f1:38 009b          pushi 9b // $9b owner
  01f4:38 010d          pushi 10d // $10d noun
  01f7:38 00a2          pushi a2 // $a2 setLoop
  01fa:38 00fd          pushi fd // $fd syncCue
  01fd:38 00a8          pushi a8 // $a8 select
  0200:38 00fa          pushi fa // $fa outOfTouch
  0203:38 00ae          pushi ae // $ae isType
  0206:39 72            pushi 72 // $72 yourself
  0208:76               push0 
  0209:39 6a            pushi 6a // $6a new
  020b:76               push0 
  020c:51 23            class Polygon 
  020e:4a 04             send 4 

  0210:4a 4a             send 4a 

  0212:36                push 
  0213:81 02              lag  
  0215:4a 08             send 8 

  0217:39 6b            pushi 6b // $6b init
  0219:76               push0 
  021a:72 07c6          lofsa $07c6 // plant
  021d:4a 04             send 4 

  021f:39 6b            pushi 6b // $6b init
  0221:76               push0 
  0222:72 0842          lofsa $0842 // chairs
  0225:4a 04             send 4 

  0227:39 6b            pushi 6b // $6b init
  0229:76               push0 
  022a:72 08d4          lofsa $08d4 // ashtray
  022d:4a 04             send 4 

  022f:39 6b            pushi 6b // $6b init
  0231:76               push0 
  0232:72 093c          lofsa $093c // vipSign
  0235:4a 04             send 4 

  0237:39 6b            pushi 6b // $6b init
  0239:76               push0 
  023a:72 0a0e          lofsa $0a0e // theCounter
  023d:4a 04             send 4 

  023f:89 a0              lsg  
  0241:35 01              ldi 1 
  0243:1a                 eq? 
  0244:30 000f            bnt code_0256 
  0247:39 6b            pushi 6b // $6b init
  0249:76               push0 
  024a:38 0119          pushi 119 // $119 approachVerbs
  024d:7a               push2 
  024e:7a               push2 
  024f:39 03            pushi 3 // $3 y
  0251:72 0752          lofsa $0752 // cannister
  0254:4a 0c             send c 


        code_0256
  0256:89 a0              lsg  
  0258:3c                 dup 
  0259:35 00              ldi 0 
  025b:1a                 eq? 
  025c:30 0062            bnt code_02c1 
  025f:38 010e          pushi 10e // $10e description
  0262:78               push1 
  0263:72 1732          lofsa $1732 // Buffi
  0266:36                push 
  0267:72 0afe          lofsa $0afe // blonde
  026a:4a 06             send 6 

  026c:38 010e          pushi 10e // $10e description
  026f:78               push1 
  0270:72 1738          lofsa $1738 // Muffi
  0273:36                push 
  0274:72 0c2a          lofsa $0c2a // redHead
  0277:4a 06             send 6 

  0279:39 06            pushi 6 // $6 loop
  027b:78               push1 
  027c:39 04            pushi 4 // $4 x
  027e:39 07            pushi 7 // $7 cel
  0280:78               push1 
  0281:76               push0 
  0282:39 6b            pushi 6b // $6b init
  0284:76               push0 
  0285:72 111e          lofsa $111e // ad1
  0288:4a 10             send 10 

  028a:39 06            pushi 6 // $6 loop
  028c:78               push1 
  028d:39 04            pushi 4 // $4 x
  028f:39 07            pushi 7 // $7 cel
  0291:78               push1 
  0292:78               push1 
  0293:39 6b            pushi 6b // $6b init
  0295:76               push0 
  0296:72 11dc          lofsa $11dc // ad2
  0299:4a 10             send 10 

  029b:39 06            pushi 6 // $6 loop
  029d:78               push1 
  029e:39 04            pushi 4 // $4 x
  02a0:39 07            pushi 7 // $7 cel
  02a2:78               push1 
  02a3:7a               push2 
  02a4:39 6b            pushi 6b // $6b init
  02a6:76               push0 
  02a7:72 1294          lofsa $1294 // ad3
  02aa:4a 10             send 10 

  02ac:39 06            pushi 6 // $6 loop
  02ae:78               push1 
  02af:39 04            pushi 4 // $4 x
  02b1:39 07            pushi 7 // $7 cel
  02b3:78               push1 
  02b4:39 03            pushi 3 // $3 y
  02b6:39 6b            pushi 6b // $6b init
  02b8:76               push0 
  02b9:72 1352          lofsa $1352 // ad4
  02bc:4a 10             send 10 

  02be:32 0134            jmp code_03f5 

        code_02c1
  02c1:3c                 dup 
  02c2:35 01              ldi 1 
  02c4:1a                 eq? 
  02c5:30 0062            bnt code_032a 
  02c8:38 010e          pushi 10e // $10e description
  02cb:78               push1 
  02cc:72 173e          lofsa $173e // Tracie
  02cf:36                push 
  02d0:72 0afe          lofsa $0afe // blonde
  02d3:4a 06             send 6 

  02d5:38 010e          pushi 10e // $10e description
  02d8:78               push1 
  02d9:72 1745          lofsa $1745 // Stacie
  02dc:36                push 
  02dd:72 0c2a          lofsa $0c2a // redHead
  02e0:4a 06             send 6 

  02e2:39 06            pushi 6 // $6 loop
  02e4:78               push1 
  02e5:39 05            pushi 5 // $5 view
  02e7:39 07            pushi 7 // $7 cel
  02e9:78               push1 
  02ea:76               push0 
  02eb:39 6b            pushi 6b // $6b init
  02ed:76               push0 
  02ee:72 111e          lofsa $111e // ad1
  02f1:4a 10             send 10 

  02f3:39 06            pushi 6 // $6 loop
  02f5:78               push1 
  02f6:39 05            pushi 5 // $5 view
  02f8:39 07            pushi 7 // $7 cel
  02fa:78               push1 
  02fb:78               push1 
  02fc:39 6b            pushi 6b // $6b init
  02fe:76               push0 
  02ff:72 11dc          lofsa $11dc // ad2
  0302:4a 10             send 10 

  0304:39 06            pushi 6 // $6 loop
  0306:78               push1 
  0307:39 05            pushi 5 // $5 view
  0309:39 07            pushi 7 // $7 cel
  030b:78               push1 
  030c:7a               push2 
  030d:39 6b            pushi 6b // $6b init
  030f:76               push0 
  0310:72 1294          lofsa $1294 // ad3
  0313:4a 10             send 10 

  0315:39 06            pushi 6 // $6 loop
  0317:78               push1 
  0318:39 05            pushi 5 // $5 view
  031a:39 07            pushi 7 // $7 cel
  031c:78               push1 
  031d:39 03            pushi 3 // $3 y
  031f:39 6b            pushi 6b // $6b init
  0321:76               push0 
  0322:72 1352          lofsa $1352 // ad4
  0325:4a 10             send 10 

  0327:32 00cb            jmp code_03f5 

        code_032a
  032a:3c                 dup 
  032b:35 02              ldi 2 
  032d:1a                 eq? 
  032e:30 0062            bnt code_0393 
  0331:38 010e          pushi 10e // $10e description
  0334:78               push1 
  0335:72 174c          lofsa $174c // Cherri
  0338:36                push 
  0339:72 0afe          lofsa $0afe // blonde
  033c:4a 06             send 6 

  033e:38 010e          pushi 10e // $10e description
  0341:78               push1 
  0342:72 1753          lofsa $1753 // Barri
  0345:36                push 
  0346:72 0c2a          lofsa $0c2a // redHead
  0349:4a 06             send 6 

  034b:39 06            pushi 6 // $6 loop
  034d:78               push1 
  034e:39 06            pushi 6 // $6 loop
  0350:39 07            pushi 7 // $7 cel
  0352:78               push1 
  0353:76               push0 
  0354:39 6b            pushi 6b // $6b init
  0356:76               push0 
  0357:72 111e          lofsa $111e // ad1
  035a:4a 10             send 10 

  035c:39 06            pushi 6 // $6 loop
  035e:78               push1 
  035f:39 06            pushi 6 // $6 loop
  0361:39 07            pushi 7 // $7 cel
  0363:78               push1 
  0364:78               push1 
  0365:39 6b            pushi 6b // $6b init
  0367:76               push0 
  0368:72 11dc          lofsa $11dc // ad2
  036b:4a 10             send 10 

  036d:39 06            pushi 6 // $6 loop
  036f:78               push1 
  0370:39 06            pushi 6 // $6 loop
  0372:39 07            pushi 7 // $7 cel
  0374:78               push1 
  0375:7a               push2 
  0376:39 6b            pushi 6b // $6b init
  0378:76               push0 
  0379:72 1294          lofsa $1294 // ad3
  037c:4a 10             send 10 

  037e:39 06            pushi 6 // $6 loop
  0380:78               push1 
  0381:39 06            pushi 6 // $6 loop
  0383:39 07            pushi 7 // $7 cel
  0385:78               push1 
  0386:39 03            pushi 3 // $3 y
  0388:39 6b            pushi 6b // $6b init
  038a:76               push0 
  038b:72 1352          lofsa $1352 // ad4
  038e:4a 10             send 10 

  0390:32 0062            jmp code_03f5 

        code_0393
  0393:3c                 dup 
  0394:35 03              ldi 3 
  0396:1a                 eq? 
  0397:30 005b            bnt code_03f5 
  039a:38 010e          pushi 10e // $10e description
  039d:78               push1 
  039e:72 1759          lofsa $1759 // Dixie
  03a1:36                push 
  03a2:72 0afe          lofsa $0afe // blonde
  03a5:4a 06             send 6 

  03a7:38 010e          pushi 10e // $10e description
  03aa:78               push1 
  03ab:72 175f          lofsa $175f // Trixie
  03ae:36                push 
  03af:72 0c2a          lofsa $0c2a // redHead
  03b2:4a 06             send 6 

  03b4:39 06            pushi 6 // $6 loop
  03b6:78               push1 
  03b7:39 07            pushi 7 // $7 cel
  03b9:3c                 dup 
  03ba:78               push1 
  03bb:76               push0 
  03bc:39 6b            pushi 6b // $6b init
  03be:76               push0 
  03bf:72 111e          lofsa $111e // ad1
  03c2:4a 10             send 10 

  03c4:39 06            pushi 6 // $6 loop
  03c6:78               push1 
  03c7:39 07            pushi 7 // $7 cel
  03c9:3c                 dup 
  03ca:78               push1 
  03cb:78               push1 
  03cc:39 6b            pushi 6b // $6b init
  03ce:76               push0 
  03cf:72 11dc          lofsa $11dc // ad2
  03d2:4a 10             send 10 

  03d4:39 06            pushi 6 // $6 loop
  03d6:78               push1 
  03d7:39 07            pushi 7 // $7 cel
  03d9:3c                 dup 
  03da:78               push1 
  03db:7a               push2 
  03dc:39 6b            pushi 6b // $6b init
  03de:76               push0 
  03df:72 1294          lofsa $1294 // ad3
  03e2:4a 10             send 10 

  03e4:39 06            pushi 6 // $6 loop
  03e6:78               push1 
  03e7:39 07            pushi 7 // $7 cel
  03e9:3c                 dup 
  03ea:78               push1 
  03eb:39 03            pushi 3 // $3 y
  03ed:39 6b            pushi 6b // $6b init
  03ef:76               push0 
  03f0:72 1352          lofsa $1352 // ad4
  03f3:4a 10             send 10 


        code_03f5
  03f5:3a                toss 
  03f6:39 3c            pushi 3c // $3c doit
  03f8:76               push0 
  03f9:81 0a              lag  
  03fb:4a 04             send 4 

  03fd:38 008e          pushi 8e // $8e setScript
  0400:78               push1 
  0401:72 0e60          lofsa $0e60 // sBlonde
  0404:36                push 
  0405:72 0afe          lofsa $0afe // blonde
  0408:4a 06             send 6 

  040a:38 008e          pushi 8e // $8e setScript
  040d:78               push1 
  040e:72 0f96          lofsa $0f96 // sRedHead
  0411:36                push 
  0412:72 0c2a          lofsa $0c2a // redHead
  0415:4a 06             send 6 

  0417:7a               push2 
  0418:39 13            pushi 13 // $13 brTop
  041a:39 0a            pushi a // $a nsLeft
  041c:43 2d 04         callk DoSound 4 

  041f:39 03            pushi 3 // $3 y
  0421:7a               push2 
  0422:39 28            pushi 28 // $28 message
  0424:38 0096          pushi 96 // $96 setCycle
  0427:43 3c 04         callk Random 4 

  042a:36                push 
  042b:76               push0 
  042c:7c            pushSelf 
  042d:45 11 06         callb procedure_0011 6 //  

  0430:48                 ret 
    )

    (method (doit) // method_04f5
  04f5:39 3c            pushi 3c // $3c doit
  04f7:76               push0 
  04f8:57 72 04         super LLRoom 4 

  04fb:39 3b            pushi 3b // $3b mover
  04fd:76               push0 
  04fe:81 00              lag  
  0500:4a 04             send 4 

  0502:30 0056            bnt code_055b 
  0505:39 07            pushi 7 // $7 cel
  0507:76               push0 
  0508:81 00              lag  
  050a:4a 04             send 4 

  050c:36                push 
  050d:3c                 dup 
  050e:35 01              ldi 1 
  0510:1a                 eq? 
  0511:30 0021            bnt code_0535 
  0514:39 2b            pushi 2b // $2b number
  0516:76               push0 
  0517:72 1650          lofsa $1650 // stepSound
  051a:4a 04             send 4 

  051c:36                push 
  051d:34 0104            ldi 104 
  0520:1c                 ne? 
  0521:30 0036            bnt code_055a 
  0524:39 2b            pushi 2b // $2b number
  0526:78               push1 
  0527:38 0104          pushi 104 // $104 gx
  052a:39 2a            pushi 2a // $2a play
  052c:76               push0 
  052d:72 1650          lofsa $1650 // stepSound
  0530:4a 0a             send a 

  0532:32 0025            jmp code_055a 

        code_0535
  0535:3c                 dup 
  0536:35 04              ldi 4 
  0538:1a                 eq? 
  0539:30 001e            bnt code_055a 
  053c:39 2b            pushi 2b // $2b number
  053e:76               push0 
  053f:72 1650          lofsa $1650 // stepSound
  0542:4a 04             send 4 

  0544:36                push 
  0545:34 0105            ldi 105 
  0548:1c                 ne? 
  0549:30 000e            bnt code_055a 
  054c:39 2b            pushi 2b // $2b number
  054e:78               push1 
  054f:38 0105          pushi 105 // $105 gy
  0552:39 2a            pushi 2a // $2a play
  0554:76               push0 
  0555:72 1650          lofsa $1650 // stepSound
  0558:4a 0a             send a 


        code_055a
  055a:3a                toss 

        code_055b
  055b:63 08             pToa script 
  055d:30 0003            bnt code_0563 
  0560:32 009c            jmp code_05ff 

        code_0563
  0563:38 0146          pushi 146 // $146 edgeHit
  0566:76               push0 
  0567:81 00              lag  
  0569:4a 04             send 4 

  056b:36                push 
  056c:35 02              ldi 2 
  056e:1a                 eq? 
  056f:30 003f            bnt code_05b1 
  0572:38 008e          pushi 8e // $8e setScript
  0575:78               push1 
  0576:76               push0 
  0577:72 0c2a          lofsa $0c2a // redHead
  057a:4a 06             send 6 

  057c:38 008e          pushi 8e // $8e setScript
  057f:78               push1 
  0580:76               push0 
  0581:72 0afe          lofsa $0afe // blonde
  0584:4a 06             send 6 

  0586:39 04            pushi 4 // $4 x
  0588:76               push0 
  0589:72 0c2a          lofsa $0c2a // redHead
  058c:4a 04             send 4 

  058e:a1 a6              sag  
  0590:39 06            pushi 6 // $6 loop
  0592:76               push0 
  0593:72 0c2a          lofsa $0c2a // redHead
  0596:4a 04             send 4 

  0598:a1 a7              sag  
  059a:39 04            pushi 4 // $4 x
  059c:76               push0 
  059d:72 0afe          lofsa $0afe // blonde
  05a0:4a 04             send 4 

  05a2:a1 a4              sag  
  05a4:39 06            pushi 6 // $6 loop
  05a6:76               push0 
  05a7:72 0afe          lofsa $0afe // blonde
  05aa:4a 04             send 4 

  05ac:a1 a5              sag  
  05ae:32 004e            jmp code_05ff 

        code_05b1
  05b1:38 0132          pushi 132 // $132 inRect
  05b4:39 04            pushi 4 // $4 x
  05b6:38 00a7          pushi a7 // $a7 enable
  05b9:39 69            pushi 69 // $69 hide
  05bb:38 0145          pushi 145 // $145 theObj
  05be:39 7c            pushi 7c // $7c prev
  05c0:81 00              lag  
  05c2:4a 0c             send c 

  05c4:30 0038            bnt code_05ff 
  05c7:83 02              lal local2 
  05c9:18                 not 
  05ca:30 0016            bnt code_05e3 
  05cd:35 01              ldi 1 
  05cf:a3 02              sal local2 
  05d1:38 008e          pushi 8e // $8e setScript
  05d4:39 03            pushi 3 // $3 y
  05d6:72 0e60          lofsa $0e60 // sBlonde
  05d9:36                push 
  05da:76               push0 
  05db:38 016d          pushi 16d // $16d useit
  05de:72 0afe          lofsa $0afe // blonde
  05e1:4a 0a             send a 


        code_05e3
  05e3:83 01              lal local1 
  05e5:18                 not 
  05e6:30 0016            bnt code_05ff 
  05e9:35 01              ldi 1 
  05eb:a3 01              sal local1 
  05ed:38 008e          pushi 8e // $8e setScript
  05f0:39 03            pushi 3 // $3 y
  05f2:72 0f96          lofsa $0f96 // sRedHead
  05f5:36                push 
  05f6:76               push0 
  05f7:38 0177          pushi 177 // $177 _detailLevel
  05fa:72 0c2a          lofsa $0c2a // redHead
  05fd:4a 0a             send a 


        code_05ff
  05ff:48                 ret 
    )

    (method (doVerb) // method_0431
  0431:3f 96             link 96 // (var $96)
  0433:8f 01              lsp param1 
  0435:3c                 dup 
  0436:35 02              ldi 2 
  0438:1a                 eq? 
  0439:30 004d            bnt code_0489 
  043c:39 04            pushi 4 // $4 x
  043e:5b 04 00           lea 4 0 
  0441:36                push 
  0442:38 010e          pushi 10e // $10e description
  0445:76               push0 
  0446:89 a0              lsg  
  0448:3c                 dup 
  0449:35 00              ldi 0 
  044b:1a                 eq? 
  044c:30 0006            bnt code_0455 
  044f:72 1766          lofsa $1766 // Los Angeles
  0452:32 0024            jmp code_0479 

        code_0455
  0455:3c                 dup 
  0456:35 01              ldi 1 
  0458:1a                 eq? 
  0459:30 0006            bnt code_0462 
  045c:72 1772          lofsa $1772 // New York
  045f:32 0017            jmp code_0479 

        code_0462
  0462:3c                 dup 
  0463:35 02              ldi 2 
  0465:1a                 eq? 
  0466:30 0006            bnt code_046f 
  0469:72 177b          lofsa $177b // Atlantic City
  046c:32 000a            jmp code_0479 

        code_046f
  046f:3c                 dup 
  0470:35 03              ldi 3 
  0472:1a                 eq? 
  0473:30 0003            bnt code_0479 
  0476:72 1789          lofsa $1789 // Miami

        code_0479
  0479:3a                toss 
  047a:36                push 
  047b:43 48 08         callk Format 8 

  047e:78               push1 
  047f:5b 04 00           lea 4 0 
  0482:36                push 
  0483:45 0e 02         callb procedure_000e 2 //  

  0486:32 000b            jmp code_0494 

        code_0489
  0489:38 010c          pushi 10c // $10c doVerb
  048c:78               push1 
  048d:8f 01              lsp param1 
  048f:59 02            &rest 2 
  0491:57 72 06         super LLRoom 6 


        code_0494
  0494:3a                toss 
  0495:48                 ret 
    )

    (method (cue) // method_0496
  0496:39 2b            pushi 2b // $2b number
  0498:78               push1 
  0499:7a               push2 
  049a:38 0111          pushi 111 // $111 approachX
  049d:38 0113          pushi 113 // $113 approachDist
  04a0:43 3c 04         callk Random 4 

  04a3:36                push 
  04a4:38 00a2          pushi a2 // $a2 setLoop
  04a7:78               push1 
  04a8:78               push1 
  04a9:39 66            pushi 66 // $66 flags
  04ab:78               push1 
  04ac:78               push1 
  04ad:39 2a            pushi 2a // $2a play
  04af:76               push0 
  04b0:72 1686          lofsa $1686 // announcement
  04b3:4a 16             send 16 

  04b5:39 03            pushi 3 // $3 y
  04b7:7a               push2 
  04b8:39 14            pushi 14 // $14 brLeft
  04ba:39 28            pushi 28 // $28 message
  04bc:43 3c 04         callk Random 4 

  04bf:36                push 
  04c0:7a               push2 
  04c1:7c            pushSelf 
  04c2:45 11 06         callb procedure_0011 6 //  

  04c5:48                 ret 
    )

    (method (newRoom) // method_04c6
  04c6:39 03            pushi 3 // $3 y
  04c8:8f 01              lsp param1 
  04ca:38 0104          pushi 104 // $104 gx
  04cd:38 0118          pushi 118 // $118 isNotHidden
  04d0:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  04d6:18                 not 
  04d7:30 0007            bnt code_04e1 
  04da:7a               push2 
  04db:39 13            pushi 13 // $13 brTop
  04dd:76               push0 
  04de:43 2d 04         callk DoSound 4 


        code_04e1
  04e1:39 6c            pushi 6c // $6c dispose
  04e3:76               push0 
  04e4:39 54            pushi 54 // $54 delete
  04e6:76               push0 
  04e7:81 aa              lag  
  04e9:4a 08             send 8 

  04eb:38 0179          pushi 179 // $179 newRoom
  04ee:78               push1 
  04ef:8f 01              lsp param1 
  04f1:57 72 06         super LLRoom 6 

  04f4:48                 ret 
    )

)

// 074c
(instance cannister of PicView
    (properties
        x $8e
        y $6f
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $1795
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $8b
        approachY $72
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $111
        loop $0
        cel $0
        priority $4
        signal $6810
        palette $0
    )
    (method (doVerb) // method_0656
  0656:8f 01              lsp param1 
  0658:3c                 dup 
  0659:35 03              ldi 3 
  065b:1a                 eq? 
  065c:30 004c            bnt code_06ab 
  065f:38 00d5          pushi d5 // $d5 has
  0662:78               push1 
  0663:39 0a            pushi a // $a nsLeft
  0665:81 00              lag  
  0667:4a 06             send 6 

  0669:18                 not 
  066a:30 0023            bnt code_0690 
  066d:78               push1 
  066e:39 0d            pushi d // $d lsTop
  0670:45 06 02         callb procedure_0006 2 //  

  0673:18                 not 
  0674:30 0019            bnt code_0690 
  0677:7a               push2 
  0678:38 0080          pushi 80 // $80 indexOf
  067b:38 0123          pushi 123 // $123 isExtra
  067e:43 00 04         callk Load 4 

  0681:38 008e          pushi 8e // $8e setScript
  0684:78               push1 
  0685:72 0d2a          lofsa $0d2a // sStealChange
  0688:36                push 
  0689:81 02              lag  
  068b:4a 06             send 6 

  068d:32 00b4            jmp code_0744 

        code_0690
  0690:7a               push2 
  0691:38 010e          pushi 10e // $10e description
  0694:78               push1 
  0695:45 0e 04         callb procedure_000e 4 //  

  0698:39 05            pushi 5 // $5 view
  069a:38 010e          pushi 10e // $10e description
  069d:7a               push2 
  069e:39 43            pushi 43 // $43 at
  06a0:39 ff            pushi ff // $ff syncNum
  06a2:38 00b9          pushi b9 // $b9 bottom
  06a5:45 0e 0a         callb procedure_000e a //  

  06a8:32 0099            jmp code_0744 

        code_06ab
  06ab:3c                 dup 
  06ac:35 02              ldi 2 
  06ae:1a                 eq? 
  06af:30 0030            bnt code_06e2 
  06b2:38 00d5          pushi d5 // $d5 has
  06b5:78               push1 
  06b6:39 0a            pushi a // $a nsLeft
  06b8:81 00              lag  
  06ba:4a 06             send 6 

  06bc:18                 not 
  06bd:30 0016            bnt code_06d6 
  06c0:78               push1 
  06c1:39 0d            pushi d // $d lsTop
  06c3:45 06 02         callb procedure_0006 2 //  

  06c6:18                 not 
  06c7:30 000c            bnt code_06d6 
  06ca:7a               push2 
  06cb:38 010e          pushi 10e // $10e description
  06ce:39 03            pushi 3 // $3 y
  06d0:45 0e 04         callb procedure_000e 4 //  

  06d3:32 006e            jmp code_0744 

        code_06d6
  06d6:7a               push2 
  06d7:38 010e          pushi 10e // $10e description
  06da:39 04            pushi 4 // $4 x
  06dc:45 0e 04         callb procedure_000e 4 //  

  06df:32 0062            jmp code_0744 

        code_06e2
  06e2:3c                 dup 
  06e3:35 04              ldi 4 
  06e5:1a                 eq? 
  06e6:30 004e            bnt code_0737 
  06e9:8f 02              lsp param2 
  06eb:35 0a              ldi a 
  06ed:1a                 eq? 
  06ee:30 0036            bnt code_0727 
  06f1:c3 06              +al local6 
  06f3:7a               push2 
  06f4:38 010e          pushi 10e // $10e description
  06f7:39 05            pushi 5 // $5 view
  06f9:45 0e 04         callb procedure_000e 4 //  

  06fc:8b 06              lsl local6 
  06fe:35 03              ldi 3 
  0700:1e                 gt? 
  0701:30 0040            bnt code_0744 
  0704:7a               push2 
  0705:76               push0 
  0706:39 0a            pushi a // $a nsLeft
  0708:43 3c 04         callk Random 4 

  070b:18                 not 
  070c:30 0035            bnt code_0744 
  070f:39 05            pushi 5 // $5 view
  0711:38 010e          pushi 10e // $10e description
  0714:39 06            pushi 6 // $6 loop
  0716:39 43            pushi 43 // $43 at
  0718:39 ff            pushi ff // $ff syncNum
  071a:38 00b9          pushi b9 // $b9 bottom
  071d:45 0e 0a         callb procedure_000e a //  

  0720:35 00              ldi 0 
  0722:a3 06              sal local6 
  0724:32 001d            jmp code_0744 

        code_0727
  0727:38 010c          pushi 10c // $10c doVerb
  072a:7a               push2 
  072b:8f 01              lsp param1 
  072d:8f 02              lsp param2 
  072f:59 03            &rest 3 
  0731:57 2d 08         super PicView 8 

  0734:32 000d            jmp code_0744 

        code_0737
  0737:38 010c          pushi 10c // $10c doVerb
  073a:7a               push2 
  073b:8f 01              lsp param1 
  073d:8f 02              lsp param2 
  073f:59 03            &rest 3 
  0741:57 2d 08         super PicView 8 


        code_0744
  0744:3a                toss 
  0745:48                 ret 
    )

)

// 07c0
(instance plant of Feature
    (properties
        x $2e
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $75
        nsLeft $1c
        nsBottom $a4
        nsRight $40
        description $17bf
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_0796
  0796:8f 01              lsp param1 
  0798:3c                 dup 
  0799:35 02              ldi 2 
  079b:1a                 eq? 
  079c:30 000c            bnt code_07ab 
  079f:7a               push2 
  07a0:38 010e          pushi 10e // $10e description
  07a3:39 07            pushi 7 // $7 cel
  07a5:45 0e 04         callb procedure_000e 4 //  

  07a8:32 000d            jmp code_07b8 

        code_07ab
  07ab:38 010c          pushi 10c // $10c doVerb
  07ae:7a               push2 
  07af:8f 01              lsp param1 
  07b1:8f 02              lsp param2 
  07b3:59 03            &rest 3 
  07b5:57 2c 08         super Feature 8 


        code_07b8
  07b8:3a                toss 
  07b9:48                 ret 
    )

)

// 083c
(instance chairs of Feature
    (properties
        x $9c
        y $92
        z $0
        heading $0
        noun $0
        nsTop $7e
        nsLeft $48
        nsBottom $a7
        nsRight $f0
        description $17cf
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_07fe
  07fe:8f 01              lsp param1 
  0800:3c                 dup 
  0801:35 02              ldi 2 
  0803:1a                 eq? 
  0804:30 000c            bnt code_0813 
  0807:7a               push2 
  0808:38 010e          pushi 10e // $10e description
  080b:39 08            pushi 8 // $8 underBits
  080d:45 0e 04         callb procedure_000e 4 //  

  0810:32 0020            jmp code_0833 

        code_0813
  0813:3c                 dup 
  0814:35 03              ldi 3 
  0816:1a                 eq? 
  0817:30 000c            bnt code_0826 
  081a:7a               push2 
  081b:38 010e          pushi 10e // $10e description
  081e:39 09            pushi 9 // $9 nsTop
  0820:45 0e 04         callb procedure_000e 4 //  

  0823:32 000d            jmp code_0833 

        code_0826
  0826:38 010c          pushi 10c // $10c doVerb
  0829:7a               push2 
  082a:8f 01              lsp param1 
  082c:8f 02              lsp param2 
  082e:59 03            &rest 3 
  0830:57 2c 08         super Feature 8 


        code_0833
  0833:3a                toss 
  0834:48                 ret 
  0835:00                bnot 
    )

)

// 08ce
(instance ashtray of Feature
    (properties
        x $f9
        y $94
        z $0
        heading $0
        noun $0
        nsTop $86
        nsLeft $f0
        nsBottom $a2
        nsRight $102
        description $17e1
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_087a
  087a:3f 1e             link 1e // (var $1e)
  087c:8f 01              lsp param1 
  087e:3c                 dup 
  087f:35 02              ldi 2 
  0881:1a                 eq? 
  0882:30 000c            bnt code_0891 
  0885:7a               push2 
  0886:38 010e          pushi 10e // $10e description
  0889:39 0a            pushi a // $a nsLeft
  088b:45 0e 04         callb procedure_000e 4 //  

  088e:32 0035            jmp code_08c6 

        code_0891
  0891:3c                 dup 
  0892:35 03              ldi 3 
  0894:1a                 eq? 
  0895:30 0021            bnt code_08b9 
  0898:7a               push2 
  0899:76               push0 
  089a:78               push1 
  089b:43 3c 04         callk Random 4 

  089e:30 000c            bnt code_08ad 
  08a1:7a               push2 
  08a2:38 010e          pushi 10e // $10e description
  08a5:39 0b            pushi b // $b nsBottom
  08a7:45 0e 04         callb procedure_000e 4 //  

  08aa:32 0019            jmp code_08c6 

        code_08ad
  08ad:7a               push2 
  08ae:38 010e          pushi 10e // $10e description
  08b1:39 0c            pushi c // $c nsRight
  08b3:45 0e 04         callb procedure_000e 4 //  

  08b6:32 000d            jmp code_08c6 

        code_08b9
  08b9:38 010c          pushi 10c // $10c doVerb
  08bc:7a               push2 
  08bd:8f 01              lsp param1 
  08bf:8f 02              lsp param2 
  08c1:59 03            &rest 3 
  08c3:57 2c 08         super Feature 8 


        code_08c6
  08c6:3a                toss 
  08c7:48                 ret 
    )

)

// 0936
(instance vipSign of Feature
    (properties
        x $52
        y $1f
        z $0
        heading $0
        noun $0
        nsTop $13
        nsLeft $33
        nsBottom $2c
        nsRight $72
        description $17f5
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_090c
  090c:8f 01              lsp param1 
  090e:3c                 dup 
  090f:35 02              ldi 2 
  0911:1a                 eq? 
  0912:30 000c            bnt code_0921 
  0915:7a               push2 
  0916:38 010e          pushi 10e // $10e description
  0919:39 0d            pushi d // $d lsTop
  091b:45 0e 04         callb procedure_000e 4 //  

  091e:32 000d            jmp code_092e 

        code_0921
  0921:38 010c          pushi 10c // $10c doVerb
  0924:7a               push2 
  0925:8f 01              lsp param1 
  0927:8f 02              lsp param2 
  0929:59 03            &rest 3 
  092b:57 2c 08         super Feature 8 


        code_092e
  092e:3a                toss 
  092f:48                 ret 
    )

)

// 0a08
(instance theCounter of Feature
    (properties
        x $0
        y $1
        z $0
        heading $0
        noun $0
        nsTop $2c
        nsLeft $a2
        nsBottom $58
        nsRight $13d
        description $1806
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_0974
  0974:8f 01              lsp param1 
  0976:3c                 dup 
  0977:35 02              ldi 2 
  0979:1a                 eq? 
  097a:30 001d            bnt code_099a 
  097d:7a               push2 
  097e:38 010e          pushi 10e // $10e description
  0981:39 0e            pushi e // $e lsLeft
  0983:45 0e 04         callb procedure_000e 4 //  

  0986:39 05            pushi 5 // $5 view
  0988:38 010e          pushi 10e // $10e description
  098b:39 0f            pushi f // $f lsBottom
  098d:39 43            pushi 43 // $43 at
  098f:39 ff            pushi ff // $ff syncNum
  0991:38 00b9          pushi b9 // $b9 bottom
  0994:45 0e 0a         callb procedure_000e a //  

  0997:32 0065            jmp code_09ff 

        code_099a
  099a:3c                 dup 
  099b:35 03              ldi 3 
  099d:1a                 eq? 
  099e:30 003e            bnt code_09df 
  09a1:39 05            pushi 5 // $5 view
  09a3:5b 02 07           lea 2 7 
  09a6:36                push 
  09a7:38 010e          pushi 10e // $10e description
  09aa:39 10            pushi 10 // $10 lsRight
  09ac:38 010e          pushi 10e // $10e description
  09af:76               push0 
  09b0:72 0afe          lofsa $0afe // blonde
  09b3:4a 04             send 4 

  09b5:36                push 
  09b6:38 010e          pushi 10e // $10e description
  09b9:76               push0 
  09ba:72 0c2a          lofsa $0c2a // redHead
  09bd:4a 04             send 4 

  09bf:36                push 
  09c0:43 48 0a         callk Format a 

  09c3:78               push1 
  09c4:5b 02 07           lea 2 7 
  09c7:36                push 
  09c8:45 0e 02         callb procedure_000e 2 //  

  09cb:39 05            pushi 5 // $5 view
  09cd:38 010e          pushi 10e // $10e description
  09d0:39 11            pushi 11 // $11 signal
  09d2:39 43            pushi 43 // $43 at
  09d4:39 ff            pushi ff // $ff syncNum
  09d6:38 00b9          pushi b9 // $b9 bottom
  09d9:45 0e 0a         callb procedure_000e a //  

  09dc:32 0020            jmp code_09ff 

        code_09df
  09df:3c                 dup 
  09e0:35 05              ldi 5 
  09e2:1a                 eq? 
  09e3:30 000c            bnt code_09f2 
  09e6:7a               push2 
  09e7:38 010e          pushi 10e // $10e description
  09ea:39 12            pushi 12 // $12 illegalBits
  09ec:45 0e 04         callb procedure_000e 4 //  

  09ef:32 000d            jmp code_09ff 

        code_09f2
  09f2:38 010c          pushi 10c // $10c doVerb
  09f5:7a               push2 
  09f6:8f 01              lsp param1 
  09f8:8f 02              lsp param2 
  09fa:59 03            &rest 3 
  09fc:57 2c 08         super Feature 8 


        code_09ff
  09ff:3a                toss 
  0a00:48                 ret 
  0a01:00                bnot 
    )

)

// 0af8
(instance blonde of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $115
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $0
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0a46
  0a46:8f 01              lsp param1 
  0a48:3c                 dup 
  0a49:35 02              ldi 2 
  0a4b:1a                 eq? 
  0a4c:30 0023            bnt code_0a72 
  0a4f:39 04            pushi 4 // $4 x
  0a51:5b 02 07           lea 2 7 
  0a54:36                push 
  0a55:38 010e          pushi 10e // $10e description
  0a58:39 13            pushi 13 // $13 brTop
  0a5a:38 010e          pushi 10e // $10e description
  0a5d:76               push0 
  0a5e:72 0afe          lofsa $0afe // blonde
  0a61:4a 04             send 4 

  0a63:36                push 
  0a64:43 48 08         callk Format 8 

  0a67:78               push1 
  0a68:5b 02 07           lea 2 7 
  0a6b:36                push 
  0a6c:45 0e 02         callb procedure_000e 2 //  

  0a6f:32 007d            jmp code_0aef 

        code_0a72
  0a72:3c                 dup 
  0a73:35 03              ldi 3 
  0a75:1a                 eq? 
  0a76:30 0023            bnt code_0a9c 
  0a79:39 04            pushi 4 // $4 x
  0a7b:5b 02 07           lea 2 7 
  0a7e:36                push 
  0a7f:38 010e          pushi 10e // $10e description
  0a82:39 14            pushi 14 // $14 brLeft
  0a84:38 010e          pushi 10e // $10e description
  0a87:76               push0 
  0a88:72 0afe          lofsa $0afe // blonde
  0a8b:4a 04             send 4 

  0a8d:36                push 
  0a8e:43 48 08         callk Format 8 

  0a91:78               push1 
  0a92:5b 02 07           lea 2 7 
  0a95:36                push 
  0a96:45 0e 02         callb procedure_000e 2 //  

  0a99:32 0053            jmp code_0aef 

        code_0a9c
  0a9c:3c                 dup 
  0a9d:35 05              ldi 5 
  0a9f:1a                 eq? 
  0aa0:30 0015            bnt code_0ab8 
  0aa3:7a               push2 
  0aa4:38 010e          pushi 10e // $10e description
  0aa7:39 15            pushi 15 // $15 brBottom
  0aa9:45 0e 04         callb procedure_000e 4 //  

  0aac:7a               push2 
  0aad:38 010e          pushi 10e // $10e description
  0ab0:39 16            pushi 16 // $16 brRight
  0ab2:45 0e 04         callb procedure_000e 4 //  

  0ab5:32 0037            jmp code_0aef 

        code_0ab8
  0ab8:3c                 dup 
  0ab9:35 04              ldi 4 
  0abb:1a                 eq? 
  0abc:30 0023            bnt code_0ae2 
  0abf:39 04            pushi 4 // $4 x
  0ac1:5b 02 07           lea 2 7 
  0ac4:36                push 
  0ac5:38 010e          pushi 10e // $10e description
  0ac8:39 17            pushi 17 // $17 name
  0aca:38 010e          pushi 10e // $10e description
  0acd:76               push0 
  0ace:72 0afe          lofsa $0afe // blonde
  0ad1:4a 04             send 4 

  0ad3:36                push 
  0ad4:43 48 08         callk Format 8 

  0ad7:78               push1 
  0ad8:5b 02 07           lea 2 7 
  0adb:36                push 
  0adc:45 0e 02         callb procedure_000e 2 //  

  0adf:32 000d            jmp code_0aef 

        code_0ae2
  0ae2:38 010c          pushi 10c // $10c doVerb
  0ae5:7a               push2 
  0ae6:8f 01              lsp param1 
  0ae8:8f 02              lsp param2 
  0aea:59 03            &rest 3 
  0aec:57 30 08         super Actor 8 


        code_0aef
  0aef:3a                toss 
  0af0:48                 ret 
  0af1:00                bnot 
    )

)

// 0c24
(instance redHead of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $114
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $0
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0b78
  0b78:8f 01              lsp param1 
  0b7a:3c                 dup 
  0b7b:35 02              ldi 2 
  0b7d:1a                 eq? 
  0b7e:30 002c            bnt code_0bad 
  0b81:39 04            pushi 4 // $4 x
  0b83:5b 02 07           lea 2 7 
  0b86:36                push 
  0b87:38 010e          pushi 10e // $10e description
  0b8a:39 18            pushi 18 // $18 key
  0b8c:38 010e          pushi 10e // $10e description
  0b8f:76               push0 
  0b90:72 0c2a          lofsa $0c2a // redHead
  0b93:4a 04             send 4 

  0b95:36                push 
  0b96:43 48 08         callk Format 8 

  0b99:78               push1 
  0b9a:5b 02 07           lea 2 7 
  0b9d:36                push 
  0b9e:45 0e 02         callb procedure_000e 2 //  

  0ba1:7a               push2 
  0ba2:38 010e          pushi 10e // $10e description
  0ba5:39 19            pushi 19 // $19 time
  0ba7:45 0e 04         callb procedure_000e 4 //  

  0baa:32 006f            jmp code_0c1c 

        code_0bad
  0bad:3c                 dup 
  0bae:35 03              ldi 3 
  0bb0:1a                 eq? 
  0bb1:30 0015            bnt code_0bc9 
  0bb4:7a               push2 
  0bb5:38 010e          pushi 10e // $10e description
  0bb8:39 1a            pushi 1a // $1a text
  0bba:45 0e 04         callb procedure_000e 4 //  

  0bbd:7a               push2 
  0bbe:38 010e          pushi 10e // $10e description
  0bc1:39 1b            pushi 1b // $1b elements
  0bc3:45 0e 04         callb procedure_000e 4 //  

  0bc6:32 0053            jmp code_0c1c 

        code_0bc9
  0bc9:3c                 dup 
  0bca:35 05              ldi 5 
  0bcc:1a                 eq? 
  0bcd:30 0015            bnt code_0be5 
  0bd0:7a               push2 
  0bd1:38 010e          pushi 10e // $10e description
  0bd4:39 15            pushi 15 // $15 brBottom
  0bd6:45 0e 04         callb procedure_000e 4 //  

  0bd9:7a               push2 
  0bda:38 010e          pushi 10e // $10e description
  0bdd:39 1c            pushi 1c // $1c color
  0bdf:45 0e 04         callb procedure_000e 4 //  

  0be2:32 0037            jmp code_0c1c 

        code_0be5
  0be5:3c                 dup 
  0be6:35 04              ldi 4 
  0be8:1a                 eq? 
  0be9:30 0023            bnt code_0c0f 
  0bec:39 04            pushi 4 // $4 x
  0bee:5b 02 07           lea 2 7 
  0bf1:36                push 
  0bf2:38 010e          pushi 10e // $10e description
  0bf5:39 17            pushi 17 // $17 name
  0bf7:38 010e          pushi 10e // $10e description
  0bfa:76               push0 
  0bfb:72 0c2a          lofsa $0c2a // redHead
  0bfe:4a 04             send 4 

  0c00:36                push 
  0c01:43 48 08         callk Format 8 

  0c04:78               push1 
  0c05:5b 02 07           lea 2 7 
  0c08:36                push 
  0c09:45 0e 02         callb procedure_000e 2 //  

  0c0c:32 000d            jmp code_0c1c 

        code_0c0f
  0c0f:38 010c          pushi 10c // $10c doVerb
  0c12:7a               push2 
  0c13:8f 01              lsp param1 
  0c15:8f 02              lsp param2 
  0c17:59 03            &rest 3 
  0c19:57 30 08         super Actor 8 


        code_0c1c
  0c1c:3a                toss 
  0c1d:48                 ret 
    )

)

// 0d24
(instance sStealChange of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0ca4
  0ca4:3f 02             link 2 // (var $2)
  0ca6:87 01              lap param1 
  0ca8:65 0a             aTop state 
  0caa:36                push 
  0cab:3c                 dup 
  0cac:35 00              ldi 0 
  0cae:1a                 eq? 
  0caf:30 0033            bnt code_0ce5 
  0cb2:76               push0 
  0cb3:45 02 00         callb procedure_0002 0 //  

  0cb6:39 05            pushi 5 // $5 view
  0cb8:78               push1 
  0cb9:38 0123          pushi 123 // $123 isExtra
  0cbc:38 0121          pushi 121 // $121 ignoreActors
  0cbf:78               push1 
  0cc0:78               push1 
  0cc1:39 12            pushi 12 // $12 illegalBits
  0cc3:78               push1 
  0cc4:76               push0 
  0cc5:38 00a2          pushi a2 // $a2 setLoop
  0cc8:78               push1 
  0cc9:39 03            pushi 3 // $3 y
  0ccb:38 00db          pushi db // $db cycleSpeed
  0cce:78               push1 
  0ccf:39 06            pushi 6 // $6 loop
  0cd1:38 0120          pushi 120 // $120 setCel
  0cd4:78               push1 
  0cd5:76               push0 
  0cd6:38 0096          pushi 96 // $96 setCycle
  0cd9:7a               push2 
  0cda:51 1a            class End 
  0cdc:36                push 
  0cdd:7c            pushSelf 
  0cde:81 00              lag  
  0ce0:4a 2c             send 2c 

  0ce2:32 0037            jmp code_0d1c 

        code_0ce5
  0ce5:3c                 dup 
  0ce6:35 01              ldi 1 
  0ce8:1a                 eq? 
  0ce9:30 0030            bnt code_0d1c 
  0cec:7a               push2 
  0ced:38 010e          pushi 10e // $10e description
  0cf0:39 1d            pushi 1d // $1d back
  0cf2:45 0e 04         callb procedure_000e 4 //  

  0cf5:38 0147          pushi 147 // $147 get
  0cf8:78               push1 
  0cf9:39 0a            pushi a // $a nsLeft
  0cfb:81 00              lag  
  0cfd:4a 06             send 6 

  0cff:35 01              ldi 1 
  0d01:a1 a8              sag  
  0d03:38 020a          pushi 20a // $20a normalize
  0d06:76               push0 
  0d07:81 00              lag  
  0d09:4a 04             send 4 

  0d0b:7a               push2 
  0d0c:39 05            pushi 5 // $5 view
  0d0e:39 0d            pushi d // $d lsTop
  0d10:45 0a 04         callb procedure_000a 4 //  

  0d13:76               push0 
  0d14:45 03 00         callb procedure_0003 0 //  

  0d17:39 6c            pushi 6c // $6c dispose
  0d19:76               push0 
  0d1a:54 04             self 4 


        code_0d1c
  0d1c:3a                toss 
  0d1d:48                 ret 
    )

)

// 0e5a
(instance sBlonde of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0d58
  0d58:3f 01             link 1 // (var $1)
  0d5a:87 01              lap param1 
  0d5c:65 0a             aTop state 
  0d5e:36                push 
  0d5f:3c                 dup 
  0d60:35 00              ldi 0 
  0d62:1a                 eq? 
  0d63:30 0007            bnt code_0d6d 
  0d66:35 02              ldi 2 
  0d68:65 10             aTop cycles 
  0d6a:32 00e5            jmp code_0e52 

        code_0d6d
  0d6d:3c                 dup 
  0d6e:35 01              ldi 1 
  0d70:1a                 eq? 
  0d71:30 009f            bnt code_0e13 
  0d74:39 04            pushi 4 // $4 x
  0d76:76               push0 
  0d77:72 0afe          lofsa $0afe // blonde
  0d7a:4a 04             send 4 

  0d7c:a5 00              sat temp0 
  0d7e:63 1a             pToa register 
  0d80:30 0005            bnt code_0d88 
  0d83:a3 04              sal local4 
  0d85:32 0031            jmp code_0db9 

        code_0d88
  0d88:7a               push2 
  0d89:78               push1 
  0d8a:7a               push2 
  0d8b:43 3c 04         callk Random 4 

  0d8e:36                push 
  0d8f:3c                 dup 
  0d90:35 01              ldi 1 
  0d92:1a                 eq? 
  0d93:30 000f            bnt code_0da5 
  0d96:7a               push2 
  0d97:38 00b2          pushi b2 // $b2 retreat
  0d9a:38 0133          pushi 133 // $133 onControl
  0d9d:43 3c 04         callk Random 4 

  0da0:a3 04              sal local4 
  0da2:32 0013            jmp code_0db8 

        code_0da5
  0da5:3c                 dup 
  0da6:35 02              ldi 2 
  0da8:1a                 eq? 
  0da9:30 000c            bnt code_0db8 
  0dac:7a               push2 
  0dad:38 014c          pushi 14c // $14c writeString
  0db0:38 0177          pushi 177 // $177 _detailLevel
  0db3:43 3c 04         callk Random 4 

  0db6:a3 04              sal local4 

        code_0db8
  0db8:3a                toss 

        code_0db9
  0db9:63 1a             pToa register 
  0dbb:18                 not 
  0dbc:30 0032            bnt code_0df1 
  0dbf:8b 04              lsl local4 
  0dc1:39 04            pushi 4 // $4 x
  0dc3:76               push0 
  0dc4:72 0c2a          lofsa $0c2a // redHead
  0dc7:4a 04             send 4 

  0dc9:22                 lt? 
  0dca:30 0004            bnt code_0dd1 
  0dcd:60               pprev 
  0dce:85 00              lat temp0 
  0dd0:22                 lt? 

        code_0dd1
  0dd1:2e 0012             bt code_0de6 
  0dd4:8d 00              lst temp0 
  0dd6:39 04            pushi 4 // $4 x
  0dd8:76               push0 
  0dd9:72 0c2a          lofsa $0c2a // redHead
  0ddc:4a 04             send 4 

  0dde:22                 lt? 
  0ddf:30 000f            bnt code_0df1 
  0de2:60               pprev 
  0de3:83 04              lal local4 
  0de5:22                 lt? 

        code_0de6
  0de6:30 0008            bnt code_0df1 
  0de9:39 6b            pushi 6b // $6b init
  0deb:76               push0 
  0dec:54 04             self 4 

  0dee:32 0061            jmp code_0e52 

        code_0df1
  0df1:38 00a2          pushi a2 // $a2 setLoop
  0df4:78               push1 
  0df5:39 ff            pushi ff // $ff syncNum
  0df7:38 0096          pushi 96 // $96 setCycle
  0dfa:78               push1 
  0dfb:51 18            class Walk 
  0dfd:36                push 
  0dfe:38 011b          pushi 11b // $11b setMotion
  0e01:39 04            pushi 4 // $4 x
  0e03:51 1e            class MoveTo 
  0e05:36                push 
  0e06:8b 04              lsl local4 
  0e08:39 52            pushi 52 // $52 icon
  0e0a:7c            pushSelf 
  0e0b:72 0afe          lofsa $0afe // blonde
  0e0e:4a 18             send 18 

  0e10:32 003f            jmp code_0e52 

        code_0e13
  0e13:3c                 dup 
  0e14:35 02              ldi 2 
  0e16:1a                 eq? 
  0e17:30 0026            bnt code_0e40 
  0e1a:39 04            pushi 4 // $4 x
  0e1c:76               push0 
  0e1d:72 0afe          lofsa $0afe // blonde
  0e20:4a 04             send 4 

  0e22:36                push 
  0e23:83 04              lal local4 
  0e25:1a                 eq? 
  0e26:30 000b            bnt code_0e34 
  0e29:38 00a2          pushi a2 // $a2 setLoop
  0e2c:78               push1 
  0e2d:39 03            pushi 3 // $3 y
  0e2f:72 0afe          lofsa $0afe // blonde
  0e32:4a 06             send 6 


        code_0e34
  0e34:7a               push2 
  0e35:7a               push2 
  0e36:39 05            pushi 5 // $5 view
  0e38:43 3c 04         callk Random 4 

  0e3b:65 12             aTop seconds 
  0e3d:32 0012            jmp code_0e52 

        code_0e40
  0e40:3c                 dup 
  0e41:35 03              ldi 3 
  0e43:1a                 eq? 
  0e44:30 000b            bnt code_0e52 
  0e47:35 00              ldi 0 
  0e49:65 1a             aTop register 
  0e4b:a3 02              sal local2 
  0e4d:39 6b            pushi 6b // $6b init
  0e4f:76               push0 
  0e50:54 04             self 4 


        code_0e52
  0e52:3a                toss 
  0e53:48                 ret 
    )

)

// 0f90
(instance sRedHead of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0e8e
  0e8e:3f 01             link 1 // (var $1)
  0e90:87 01              lap param1 
  0e92:65 0a             aTop state 
  0e94:36                push 
  0e95:3c                 dup 
  0e96:35 00              ldi 0 
  0e98:1a                 eq? 
  0e99:30 0007            bnt code_0ea3 
  0e9c:35 02              ldi 2 
  0e9e:65 10             aTop cycles 
  0ea0:32 00e5            jmp code_0f88 

        code_0ea3
  0ea3:3c                 dup 
  0ea4:35 01              ldi 1 
  0ea6:1a                 eq? 
  0ea7:30 009f            bnt code_0f49 
  0eaa:39 04            pushi 4 // $4 x
  0eac:76               push0 
  0ead:72 0c2a          lofsa $0c2a // redHead
  0eb0:4a 04             send 4 

  0eb2:a5 00              sat temp0 
  0eb4:63 1a             pToa register 
  0eb6:30 0005            bnt code_0ebe 
  0eb9:a3 03              sal local3 
  0ebb:32 0031            jmp code_0eef 

        code_0ebe
  0ebe:7a               push2 
  0ebf:78               push1 
  0ec0:7a               push2 
  0ec1:43 3c 04         callk Random 4 

  0ec4:36                push 
  0ec5:3c                 dup 
  0ec6:35 01              ldi 1 
  0ec8:1a                 eq? 
  0ec9:30 000f            bnt code_0edb 
  0ecc:7a               push2 
  0ecd:38 00b2          pushi b2 // $b2 retreat
  0ed0:38 0133          pushi 133 // $133 onControl
  0ed3:43 3c 04         callk Random 4 

  0ed6:a3 03              sal local3 
  0ed8:32 0013            jmp code_0eee 

        code_0edb
  0edb:3c                 dup 
  0edc:35 02              ldi 2 
  0ede:1a                 eq? 
  0edf:30 000c            bnt code_0eee 
  0ee2:7a               push2 
  0ee3:38 014c          pushi 14c // $14c writeString
  0ee6:38 0177          pushi 177 // $177 _detailLevel
  0ee9:43 3c 04         callk Random 4 

  0eec:a3 03              sal local3 

        code_0eee
  0eee:3a                toss 

        code_0eef
  0eef:63 1a             pToa register 
  0ef1:18                 not 
  0ef2:30 0032            bnt code_0f27 
  0ef5:8b 03              lsl local3 
  0ef7:39 04            pushi 4 // $4 x
  0ef9:76               push0 
  0efa:72 0afe          lofsa $0afe // blonde
  0efd:4a 04             send 4 

  0eff:22                 lt? 
  0f00:30 0004            bnt code_0f07 
  0f03:60               pprev 
  0f04:85 00              lat temp0 
  0f06:22                 lt? 

        code_0f07
  0f07:2e 0012             bt code_0f1c 
  0f0a:8d 00              lst temp0 
  0f0c:39 04            pushi 4 // $4 x
  0f0e:76               push0 
  0f0f:72 0afe          lofsa $0afe // blonde
  0f12:4a 04             send 4 

  0f14:22                 lt? 
  0f15:30 000f            bnt code_0f27 
  0f18:60               pprev 
  0f19:83 03              lal local3 
  0f1b:22                 lt? 

        code_0f1c
  0f1c:30 0008            bnt code_0f27 
  0f1f:39 6b            pushi 6b // $6b init
  0f21:76               push0 
  0f22:54 04             self 4 

  0f24:32 0061            jmp code_0f88 

        code_0f27
  0f27:38 00a2          pushi a2 // $a2 setLoop
  0f2a:78               push1 
  0f2b:39 ff            pushi ff // $ff syncNum
  0f2d:38 0096          pushi 96 // $96 setCycle
  0f30:78               push1 
  0f31:51 18            class Walk 
  0f33:36                push 
  0f34:38 011b          pushi 11b // $11b setMotion
  0f37:39 04            pushi 4 // $4 x
  0f39:51 1e            class MoveTo 
  0f3b:36                push 
  0f3c:8b 03              lsl local3 
  0f3e:39 52            pushi 52 // $52 icon
  0f40:7c            pushSelf 
  0f41:72 0c2a          lofsa $0c2a // redHead
  0f44:4a 18             send 18 

  0f46:32 003f            jmp code_0f88 

        code_0f49
  0f49:3c                 dup 
  0f4a:35 02              ldi 2 
  0f4c:1a                 eq? 
  0f4d:30 0026            bnt code_0f76 
  0f50:39 04            pushi 4 // $4 x
  0f52:76               push0 
  0f53:72 0c2a          lofsa $0c2a // redHead
  0f56:4a 04             send 4 

  0f58:36                push 
  0f59:83 03              lal local3 
  0f5b:1a                 eq? 
  0f5c:30 000b            bnt code_0f6a 
  0f5f:38 00a2          pushi a2 // $a2 setLoop
  0f62:78               push1 
  0f63:39 04            pushi 4 // $4 x
  0f65:72 0c2a          lofsa $0c2a // redHead
  0f68:4a 06             send 6 


        code_0f6a
  0f6a:7a               push2 
  0f6b:7a               push2 
  0f6c:39 05            pushi 5 // $5 view
  0f6e:43 3c 04         callk Random 4 

  0f71:65 12             aTop seconds 
  0f73:32 0012            jmp code_0f88 

        code_0f76
  0f76:3c                 dup 
  0f77:35 03              ldi 3 
  0f79:1a                 eq? 
  0f7a:30 000b            bnt code_0f88 
  0f7d:35 00              ldi 0 
  0f7f:65 1a             aTop register 
  0f81:a3 01              sal local1 
  0f83:39 6b            pushi 6b // $6b init
  0f85:76               push0 
  0f86:54 04             self 4 


        code_0f88
  0f88:3a                toss 
  0f89:48                 ret 
    )

)

// 1026
(instance door of Door
    (properties
        x $62
        y $6a
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $1851
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $51
        approachY $6f
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $10e
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        entranceTo $122
        locked $1
        openSnd $28
        closeSnd $29
        state $0
        doubleDoor $0
        forceOpen $0
        caller $0
        moveToX $51
        moveToY $69
        enterType $0
        exitType $0
        closeScript $0
        openScript $0
    )
    (method (doVerb) // method_0fc4
  0fc4:8f 01              lsp param1 
  0fc6:3c                 dup 
  0fc7:35 02              ldi 2 
  0fc9:1a                 eq? 
  0fca:30 000c            bnt code_0fd9 
  0fcd:7a               push2 
  0fce:38 010e          pushi 10e // $10e description
  0fd1:39 1e            pushi 1e // $1e mode
  0fd3:45 0e 04         callb procedure_000e 4 //  

  0fd6:32 0044            jmp code_101d 

        code_0fd9
  0fd9:3c                 dup 
  0fda:35 03              ldi 3 
  0fdc:1a                 eq? 
  0fdd:30 000c            bnt code_0fec 
  0fe0:7a               push2 
  0fe1:38 010e          pushi 10e // $10e description
  0fe4:39 1f            pushi 1f // $1f style
  0fe6:45 0e 04         callb procedure_000e 4 //  

  0fe9:32 0031            jmp code_101d 

        code_0fec
  0fec:3c                 dup 
  0fed:35 05              ldi 5 
  0fef:1a                 eq? 
  0ff0:30 001d            bnt code_1010 
  0ff3:7a               push2 
  0ff4:38 010e          pushi 10e // $10e description
  0ff7:39 20            pushi 20 // $20 state
  0ff9:45 0e 04         callb procedure_000e 4 //  

  0ffc:39 05            pushi 5 // $5 view
  0ffe:38 010e          pushi 10e // $10e description
  1001:39 21            pushi 21 // $21 font
  1003:39 43            pushi 43 // $43 at
  1005:39 ff            pushi ff // $ff syncNum
  1007:38 00b9          pushi b9 // $b9 bottom
  100a:45 0e 0a         callb procedure_000e a //  

  100d:32 000d            jmp code_101d 

        code_1010
  1010:38 010c          pushi 10c // $10c doVerb
  1013:7a               push2 
  1014:8f 01              lsp param1 
  1016:8f 02              lsp param2 
  1018:59 03            &rest 3 
  101a:57 73 08         super Door 8 


        code_101d
  101d:3a                toss 
  101e:48                 ret 
  101f:00                bnot 
    )

)

// 1118
(instance ad1 of PicView
    (properties
        x $b
        y $b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $17f5
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $107
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (doVerb) // method_10aa
  10aa:8f 01              lsp param1 
  10ac:3c                 dup 
  10ad:35 02              ldi 2 
  10af:1a                 eq? 
  10b0:30 004f            bnt code_1102 
  10b3:89 a0              lsg  
  10b5:3c                 dup 
  10b6:35 00              ldi 0 
  10b8:1a                 eq? 
  10b9:30 000c            bnt code_10c8 
  10bc:7a               push2 
  10bd:38 010e          pushi 10e // $10e description
  10c0:39 22            pushi 22 // $22 type
  10c2:45 0e 04         callb procedure_000e 4 //  

  10c5:32 0036            jmp code_10fe 

        code_10c8
  10c8:3c                 dup 
  10c9:35 01              ldi 1 
  10cb:1a                 eq? 
  10cc:30 000c            bnt code_10db 
  10cf:7a               push2 
  10d0:38 010e          pushi 10e // $10e description
  10d3:39 23            pushi 23 // $23 window
  10d5:45 0e 04         callb procedure_000e 4 //  

  10d8:32 0023            jmp code_10fe 

        code_10db
  10db:3c                 dup 
  10dc:35 02              ldi 2 
  10de:1a                 eq? 
  10df:30 000c            bnt code_10ee 
  10e2:7a               push2 
  10e3:38 010e          pushi 10e // $10e description
  10e6:39 24            pushi 24 // $24 cursor
  10e8:45 0e 04         callb procedure_000e 4 //  

  10eb:32 0010            jmp code_10fe 

        code_10ee
  10ee:3c                 dup 
  10ef:35 03              ldi 3 
  10f1:1a                 eq? 
  10f2:30 0009            bnt code_10fe 
  10f5:7a               push2 
  10f6:38 010e          pushi 10e // $10e description
  10f9:39 25            pushi 25 // $25 max
  10fb:45 0e 04         callb procedure_000e 4 //  


        code_10fe
  10fe:3a                toss 
  10ff:32 000d            jmp code_110f 

        code_1102
  1102:38 010c          pushi 10c // $10c doVerb
  1105:7a               push2 
  1106:8f 01              lsp param1 
  1108:8f 02              lsp param2 
  110a:59 03            &rest 3 
  110c:57 2d 08         super PicView 8 


        code_110f
  110f:3a                toss 
  1110:48                 ret 
  1111:00                bnot 
    )

)

// 11d6
(instance ad2 of PicView
    (properties
        x $a3
        y $b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $17f5
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $107
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (doVerb) // method_1162
  1162:8f 01              lsp param1 
  1164:3c                 dup 
  1165:35 02              ldi 2 
  1167:1a                 eq? 
  1168:30 0056            bnt code_11c1 
  116b:89 a0              lsg  
  116d:3c                 dup 
  116e:35 00              ldi 0 
  1170:1a                 eq? 
  1171:30 000c            bnt code_1180 
  1174:7a               push2 
  1175:38 010e          pushi 10e // $10e description
  1178:39 26            pushi 26 // $26 mark
  117a:45 0e 04         callb procedure_000e 4 //  

  117d:32 003d            jmp code_11bd 

        code_1180
  1180:3c                 dup 
  1181:35 01              ldi 1 
  1183:1a                 eq? 
  1184:30 000c            bnt code_1193 
  1187:7a               push2 
  1188:38 010e          pushi 10e // $10e description
  118b:39 27            pushi 27 // $27 who
  118d:45 0e 04         callb procedure_000e 4 //  

  1190:32 002a            jmp code_11bd 

        code_1193
  1193:3c                 dup 
  1194:35 02              ldi 2 
  1196:1a                 eq? 
  1197:30 0013            bnt code_11ad 
  119a:7a               push2 
  119b:78               push1 
  119c:39 5e            pushi 5e // $5e min
  119e:45 0a 04         callb procedure_000a 4 //  

  11a1:7a               push2 
  11a2:38 010e          pushi 10e // $10e description
  11a5:39 28            pushi 28 // $28 message
  11a7:45 0e 04         callb procedure_000e 4 //  

  11aa:32 0010            jmp code_11bd 

        code_11ad
  11ad:3c                 dup 
  11ae:35 03              ldi 3 
  11b0:1a                 eq? 
  11b1:30 0009            bnt code_11bd 
  11b4:7a               push2 
  11b5:38 010e          pushi 10e // $10e description
  11b8:39 29            pushi 29 // $29 edit
  11ba:45 0e 04         callb procedure_000e 4 //  


        code_11bd
  11bd:3a                toss 
  11be:32 000d            jmp code_11ce 

        code_11c1
  11c1:38 010c          pushi 10c // $10c doVerb
  11c4:7a               push2 
  11c5:8f 01              lsp param1 
  11c7:8f 02              lsp param2 
  11c9:59 03            &rest 3 
  11cb:57 2d 08         super PicView 8 


        code_11ce
  11ce:3a                toss 
  11cf:48                 ret 
    )

)

// 128e
(instance ad3 of PicView
    (properties
        x $f9
        y $b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $17f5
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $107
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (doVerb) // method_1220
  1220:8f 01              lsp param1 
  1222:3c                 dup 
  1223:35 02              ldi 2 
  1225:1a                 eq? 
  1226:30 004f            bnt code_1278 
  1229:89 a0              lsg  
  122b:3c                 dup 
  122c:35 00              ldi 0 
  122e:1a                 eq? 
  122f:30 000c            bnt code_123e 
  1232:7a               push2 
  1233:38 010e          pushi 10e // $10e description
  1236:39 2a            pushi 2a // $2a play
  1238:45 0e 04         callb procedure_000e 4 //  

  123b:32 0036            jmp code_1274 

        code_123e
  123e:3c                 dup 
  123f:35 01              ldi 1 
  1241:1a                 eq? 
  1242:30 000c            bnt code_1251 
  1245:7a               push2 
  1246:38 010e          pushi 10e // $10e description
  1249:39 2b            pushi 2b // $2b number
  124b:45 0e 04         callb procedure_000e 4 //  

  124e:32 0023            jmp code_1274 

        code_1251
  1251:3c                 dup 
  1252:35 02              ldi 2 
  1254:1a                 eq? 
  1255:30 000c            bnt code_1264 
  1258:7a               push2 
  1259:38 010e          pushi 10e // $10e description
  125c:39 2c            pushi 2c // $2c nodePtr
  125e:45 0e 04         callb procedure_000e 4 //  

  1261:32 0010            jmp code_1274 

        code_1264
  1264:3c                 dup 
  1265:35 03              ldi 3 
  1267:1a                 eq? 
  1268:30 0009            bnt code_1274 
  126b:7a               push2 
  126c:38 010e          pushi 10e // $10e description
  126f:39 2d            pushi 2d // $2d client
  1271:45 0e 04         callb procedure_000e 4 //  


        code_1274
  1274:3a                toss 
  1275:32 000d            jmp code_1285 

        code_1278
  1278:38 010c          pushi 10c // $10c doVerb
  127b:7a               push2 
  127c:8f 01              lsp param1 
  127e:8f 02              lsp param2 
  1280:59 03            &rest 3 
  1282:57 2d 08         super PicView 8 


        code_1285
  1285:3a                toss 
  1286:48                 ret 
  1287:00                bnot 
    )

)

// 134c
(instance ad4 of PicView
    (properties
        x $13d
        y $8
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $17f5
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $107
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (doVerb) // method_12d8
  12d8:8f 01              lsp param1 
  12da:3c                 dup 
  12db:35 02              ldi 2 
  12dd:1a                 eq? 
  12de:30 0056            bnt code_1337 
  12e1:89 a0              lsg  
  12e3:3c                 dup 
  12e4:35 00              ldi 0 
  12e6:1a                 eq? 
  12e7:30 000c            bnt code_12f6 
  12ea:7a               push2 
  12eb:38 010e          pushi 10e // $10e description
  12ee:39 2e            pushi 2e // $2e dx
  12f0:45 0e 04         callb procedure_000e 4 //  

  12f3:32 003d            jmp code_1333 

        code_12f6
  12f6:3c                 dup 
  12f7:35 01              ldi 1 
  12f9:1a                 eq? 
  12fa:30 000c            bnt code_1309 
  12fd:7a               push2 
  12fe:38 010e          pushi 10e // $10e description
  1301:39 2f            pushi 2f // $2f dy
  1303:45 0e 04         callb procedure_000e 4 //  

  1306:32 002a            jmp code_1333 

        code_1309
  1309:3c                 dup 
  130a:35 02              ldi 2 
  130c:1a                 eq? 
  130d:30 000c            bnt code_131c 
  1310:7a               push2 
  1311:38 010e          pushi 10e // $10e description
  1314:39 30            pushi 30 // $30 b-moveCnt
  1316:45 0e 04         callb procedure_000e 4 //  

  1319:32 0017            jmp code_1333 

        code_131c
  131c:3c                 dup 
  131d:35 03              ldi 3 
  131f:1a                 eq? 
  1320:30 0010            bnt code_1333 
  1323:7a               push2 
  1324:78               push1 
  1325:39 5d            pushi 5d // $5d handle
  1327:45 0a 04         callb procedure_000a 4 //  

  132a:7a               push2 
  132b:38 010e          pushi 10e // $10e description
  132e:39 31            pushi 31 // $31 b-i1
  1330:45 0e 04         callb procedure_000e 4 //  


        code_1333
  1333:3a                toss 
  1334:32 000d            jmp code_1344 

        code_1337
  1337:38 010c          pushi 10c // $10c doVerb
  133a:7a               push2 
  133b:8f 01              lsp param1 
  133d:8f 02              lsp param2 
  133f:59 03            &rest 3 
  1341:57 2d 08         super PicView 8 


        code_1344
  1344:3a                toss 
  1345:48                 ret 
    )

)

// 14b2
(instance camera of Prop
    (properties
        x $7e
        y $3a
        z $0
        heading $0
        noun $0
        nsTop $2e
        nsLeft $70
        nsBottom $3f
        nsRight $82
        description $186f
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $5c
        approachY $71
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $10e
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (init) // method_1396
  1396:39 6b            pushi 6b // $6b init
  1398:76               push0 
  1399:57 2f 04         super Prop 4 

  139c:38 0119          pushi 119 // $119 approachVerbs
  139f:39 03            pushi 3 // $3 y
  13a1:39 04            pushi 4 // $4 x
  13a3:39 03            pushi 3 // $3 y
  13a5:7a               push2 
  13a6:54 0a             self a 

  13a8:48                 ret 
    )

    (method (doit) // method_13a9
  13a9:3f 18             link 18 // (var $18)
  13ab:39 3c            pushi 3c // $3c doit
  13ad:76               push0 
  13ae:57 2f 04         super Prop 4 

  13b1:38 008a          pushi 8a // $8a script
  13b4:76               push0 
  13b5:81 02              lag  
  13b7:4a 04             send 4 

  13b9:18                 not 
  13ba:30 0073            bnt code_1430 
  13bd:63 32             pToa cel 
  13bf:a5 02              sat temp2 
  13c1:63 30             pToa loop 
  13c3:a5 03              sat temp3 
  13c5:39 04            pushi 4 // $4 x
  13c7:67 08             pTos x 
  13c9:67 0a             pTos y 
  13cb:39 04            pushi 4 // $4 x
  13cd:76               push0 
  13ce:81 00              lag  
  13d0:4a 04             send 4 

  13d2:36                push 
  13d3:39 03            pushi 3 // $3 y
  13d5:76               push0 
  13d6:81 00              lag  
  13d8:4a 04             send 4 

  13da:36                push 
  13db:43 3f 08         callk GetAngle 8 

  13de:36                push 
  13df:35 6e              ldi 6e 
  13e1:04                 sub 
  13e2:36                push 
  13e3:35 0e              ldi e 
  13e5:08                 div 
  13e6:a5 01              sat temp1 
  13e8:38 00a2          pushi a2 // $a2 setLoop
  13eb:78               push1 
  13ec:39 03            pushi 3 // $3 y
  13ee:76               push0 
  13ef:81 00              lag  
  13f1:4a 04             send 4 

  13f3:36                push 
  13f4:34 009f            ldi 9f 
  13f7:1e                 gt? 
  13f8:30 0005            bnt code_1400 
  13fb:35 01              ldi 1 
  13fd:32 0002            jmp code_1402 

        code_1400
  1400:35 05              ldi 5 

        code_1402
  1402:36                push 
  1403:38 0120          pushi 120 // $120 setCel
  1406:78               push1 
  1407:39 09            pushi 9 // $9 nsTop
  1409:85 01              lat temp1 
  140b:04                 sub 
  140c:36                push 
  140d:54 0c             self c 

  140f:8d 03              lst temp3 
  1411:63 30             pToa loop 
  1413:1c                 ne? 
  1414:2e 0005             bt code_141c 
  1417:8d 02              lst temp2 
  1419:63 32             pToa cel 
  141b:1c                 ne? 

        code_141c
  141c:30 0011            bnt code_1430 
  141f:39 2b            pushi 2b // $2b number
  1421:78               push1 
  1422:38 010f          pushi 10f // $10f sightAngle
  1425:39 06            pushi 6 // $6 loop
  1427:78               push1 
  1428:78               push1 
  1429:39 2a            pushi 2a // $2a play
  142b:76               push0 
  142c:81 67              lag  
  142e:4a 10             send 10 


        code_1430
  1430:48                 ret 
    )

    (method (doVerb) // method_1431
  1431:8f 01              lsp param1 
  1433:3c                 dup 
  1434:35 03              ldi 3 
  1436:1a                 eq? 
  1437:30 000c            bnt code_1446 
  143a:7a               push2 
  143b:38 010e          pushi 10e // $10e description
  143e:39 32            pushi 32 // $32 b-i2
  1440:45 0e 04         callb procedure_000e 4 //  

  1443:32 0063            jmp code_14a9 

        code_1446
  1446:3c                 dup 
  1447:35 02              ldi 2 
  1449:1a                 eq? 
  144a:30 000c            bnt code_1459 
  144d:7a               push2 
  144e:38 010e          pushi 10e // $10e description
  1451:39 33            pushi 33 // $33 b-di
  1453:45 0e 04         callb procedure_000e 4 //  

  1456:32 0050            jmp code_14a9 

        code_1459
  1459:3c                 dup 
  145a:35 04              ldi 4 
  145c:1a                 eq? 
  145d:30 003c            bnt code_149c 
  1460:8f 02              lsp param2 
  1462:3c                 dup 
  1463:35 07              ldi 7 
  1465:1a                 eq? 
  1466:30 000f            bnt code_1478 
  1469:38 008e          pushi 8e // $8e setScript
  146c:78               push1 
  146d:72 161a          lofsa $161a // sShowCard
  1470:36                push 
  1471:81 02              lag  
  1473:4a 06             send 6 

  1475:32 0020            jmp code_1498 

        code_1478
  1478:3c                 dup 
  1479:35 08              ldi 8 
  147b:1a                 eq? 
  147c:30 000c            bnt code_148b 
  147f:7a               push2 
  1480:38 010e          pushi 10e // $10e description
  1483:39 34            pushi 34 // $34 b-xAxis
  1485:45 0e 04         callb procedure_000e 4 //  

  1488:32 000d            jmp code_1498 

        code_148b
  148b:38 010c          pushi 10c // $10c doVerb
  148e:7a               push2 
  148f:8f 01              lsp param1 
  1491:8f 02              lsp param2 
  1493:59 03            &rest 3 
  1495:57 2f 08         super Prop 8 


        code_1498
  1498:3a                toss 
  1499:32 000d            jmp code_14a9 

        code_149c
  149c:38 010c          pushi 10c // $10c doVerb
  149f:7a               push2 
  14a0:8f 01              lsp param1 
  14a2:8f 02              lsp param2 
  14a4:59 03            &rest 3 
  14a6:57 2f 08         super Prop 8 


        code_14a9
  14a9:3a                toss 
  14aa:48                 ret 
  14ab:00                bnot 
    )

)

// 1614
(instance sShowCard of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_1522
  1522:3f 02             link 2 // (var $2)
  1524:87 01              lap param1 
  1526:65 0a             aTop state 
  1528:36                push 
  1529:3c                 dup 
  152a:35 00              ldi 0 
  152c:1a                 eq? 
  152d:30 0035            bnt code_1565 
  1530:76               push0 
  1531:45 02 00         callb procedure_0002 0 //  

  1534:35 05              ldi 5 
  1536:65 1a             aTop register 
  1538:7a               push2 
  1539:39 09            pushi 9 // $9 nsTop
  153b:39 5c            pushi 5c // $5c dataInc
  153d:45 0a 04         callb procedure_000a 4 //  

  1540:39 05            pushi 5 // $5 view
  1542:78               push1 
  1543:38 010f          pushi 10f // $10f sightAngle
  1546:38 00a2          pushi a2 // $a2 setLoop
  1549:78               push1 
  154a:78               push1 
  154b:38 00db          pushi db // $db cycleSpeed
  154e:78               push1 
  154f:39 04            pushi 4 // $4 x
  1551:38 0120          pushi 120 // $120 setCel
  1554:78               push1 
  1555:76               push0 
  1556:38 0096          pushi 96 // $96 setCycle
  1559:7a               push2 
  155a:51 1a            class End 
  155c:36                push 
  155d:7c            pushSelf 
  155e:81 00              lag  
  1560:4a 20             send 20 

  1562:32 00a6            jmp code_160b 

        code_1565
  1565:3c                 dup 
  1566:35 01              ldi 1 
  1568:1a                 eq? 
  1569:30 000b            bnt code_1577 
  156c:63 0a             pToa state 
  156e:65 0c             aTop start 
  1570:35 06              ldi 6 
  1572:65 10             aTop cycles 
  1574:32 0094            jmp code_160b 

        code_1577
  1577:3c                 dup 
  1578:35 02              ldi 2 
  157a:1a                 eq? 
  157b:30 0016            bnt code_1594 
  157e:39 2b            pushi 2b // $2b number
  1580:78               push1 
  1581:38 0110          pushi 110 // $110 onMeCheck
  1584:38 00a2          pushi a2 // $a2 setLoop
  1587:78               push1 
  1588:78               push1 
  1589:39 2a            pushi 2a // $2a play
  158b:78               push1 
  158c:7c            pushSelf 
  158d:81 67              lag  
  158f:4a 12             send 12 

  1591:32 0077            jmp code_160b 

        code_1594
  1594:3c                 dup 
  1595:35 03              ldi 3 
  1597:1a                 eq? 
  1598:30 0044            bnt code_15df 
  159b:6d 1a            dpToa register 
  159d:18                 not 
  159e:30 0007            bnt code_15a8 
  15a1:35 01              ldi 1 
  15a3:65 10             aTop cycles 
  15a5:32 0063            jmp code_160b 

        code_15a8
  15a8:39 07            pushi 7 // $7 cel
  15aa:76               push0 
  15ab:72 14b8          lofsa $14b8 // camera
  15ae:4a 04             send 4 

  15b0:18                 not 
  15b1:30 0013            bnt code_15c7 
  15b4:38 0120          pushi 120 // $120 setCel
  15b7:78               push1 
  15b8:78               push1 
  15b9:38 00a2          pushi a2 // $a2 setLoop
  15bc:78               push1 
  15bd:39 03            pushi 3 // $3 y
  15bf:72 14b8          lofsa $14b8 // camera
  15c2:4a 0c             send c 

  15c4:32 0010            jmp code_15d7 

        code_15c7
  15c7:38 0120          pushi 120 // $120 setCel
  15ca:78               push1 
  15cb:76               push0 
  15cc:38 00a2          pushi a2 // $a2 setLoop
  15cf:78               push1 
  15d0:39 03            pushi 3 // $3 y
  15d2:72 14b8          lofsa $14b8 // camera
  15d5:4a 0c             send c 


        code_15d7
  15d7:39 6b            pushi 6b // $6b init
  15d9:76               push0 
  15da:54 04             self 4 

  15dc:32 002c            jmp code_160b 

        code_15df
  15df:3c                 dup 
  15e0:35 04              ldi 4 
  15e2:1a                 eq? 
  15e3:30 0025            bnt code_160b 
  15e6:38 0120          pushi 120 // $120 setCel
  15e9:78               push1 
  15ea:76               push0 
  15eb:72 14b8          lofsa $14b8 // camera
  15ee:4a 06             send 6 

  15f0:38 020a          pushi 20a // $20a normalize
  15f3:76               push0 
  15f4:81 00              lag  
  15f6:4a 04             send 4 

  15f8:38 020e          pushi 20e // $20e locked
  15fb:78               push1 
  15fc:76               push0 
  15fd:38 00b5          pushi b5 // $b5 open
  1600:76               push0 
  1601:72 102c          lofsa $102c // door
  1604:4a 0a             send a 

  1606:39 6c            pushi 6c // $6c dispose
  1608:76               push0 
  1609:54 04             self 4 


        code_160b
  160b:3a                toss 
  160c:48                 ret 
  160d:00                bnot 
    )

)

// 164a
(instance stepSound of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 1680
(instance announcement of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)



