(script 998)

(string
    string_0f1a "PicView"
    string_0f22 "View"
    string_0f27 "Prop"
    string_0f2c "Actor"
)

(said
)

(local
)

// 0066
(class PicView of Feature
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $0
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (init) // method_0015
  0015:39 73            pushi 73 // $73 add
  0017:78               push1 
  0018:7c            pushSelf 
  0019:81 0a              lag  
  001b:4a 06             send 6 

  001d:78               push1 
  001e:7c            pushSelf 
  001f:43 0c 02         callk SetNowSeen 2 

  0022:39 6b            pushi 6b // $6b init
  0024:76               push0 
  0025:59 01            &rest 1 
  0027:57 2c 04         super Feature 4 

  002a:48                 ret 
    )

    (method (dispose) // method_002b
  002b:63 1e             pToa actions 
  002d:30 0009            bnt code_0039 
  0030:39 6c            pushi 6c // $6c dispose
  0032:76               push0 
  0033:4a 04             send 4 

  0035:35 00              ldi 0 
  0037:65 1e             aTop actions 

        code_0039
  0039:39 54            pushi 54 // $54 delete
  003b:78               push1 
  003c:7c            pushSelf 
  003d:81 20              lag  
  003f:4a 06             send 6 

  0041:78               push1 
  0042:7c            pushSelf 
  0043:43 05 02         callk DisposeClone 2 

  0046:48                 ret 
    )

    (method (showSelf) // method_0004
  0004:39 05            pushi 5 // $5 view
  0006:67 06             pTos name 
  0008:39 52            pushi 52 // $52 icon
  000a:67 2c             pTos view 
  000c:67 2e             pTos loop 
  000e:67 30             pTos cel 
  0010:47 ff 00 0a      calle ff procedure_0000 a //  

  0014:48                 ret 
    )

    (method (onMe) // method_0047
  0047:67 34             pTos signal 
  0049:34 0080            ldi 80 
  004c:12                 and 
  004d:30 0005            bnt code_0055 
  0050:35 00              ldi 0 
  0052:32 0009            jmp code_005e 

        code_0055
  0055:38 00c4          pushi c4 // $c4 onMe
  0058:76               push0 
  0059:59 01            &rest 1 
  005b:57 2c 04         super Feature 4 


        code_005e
  005e:48                 ret 
  005f:00                bnot 
    )

)

// 03a2
(class View of Feature
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $0
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $101
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (init) // method_00f4
  00f4:67 38             pTos signal 
  00f6:34 7fff            ldi 7fff 
  00f9:12                 and 
  00fa:65 38             aTop signal 
  00fc:39 77            pushi 77 // $77 contains
  00fe:78               push1 
  00ff:7c            pushSelf 
  0100:81 05              lag  
  0102:4a 06             send 6 

  0104:18                 not 
  0105:30 0012            bnt code_011a 
  0108:35 00              ldi 0 
  010a:65 3a             aTop lsTop 
  010c:65 3c             aTop lsLeft 
  010e:65 3e             aTop lsBottom 
  0110:65 40             aTop lsRight 
  0112:67 38             pTos signal 
  0114:34 ff77            ldi ff77 
  0117:12                 and 
  0118:65 38             aTop signal 

        code_011a
  011a:78               push1 
  011b:7c            pushSelf 
  011c:43 4b 02         callk BaseSetter 2 

  011f:39 6b            pushi 6b // $6b init
  0121:76               push0 
  0122:59 02            &rest 2 
  0124:57 2c 04         super Feature 4 

  0127:38 0124          pushi 124 // $124 checkDetail
  012a:76               push0 
  012b:54 04             self 4 

  012d:48                 ret 
    )

    (method (dispose) // method_015e
  015e:38 011f          pushi 11f // $11f startUpd
  0161:76               push0 
  0162:39 69            pushi 69 // $69 hide
  0164:76               push0 
  0165:54 08             self 8 

  0167:67 38             pTos signal 
  0169:34 8000            ldi 8000 
  016c:14                  or 
  016d:65 38             aTop signal 
  016f:48                 ret 
    )

    (method (showSelf) // method_033e
  033e:39 05            pushi 5 // $5 view
  0340:67 06             pTos name 
  0342:39 52            pushi 52 // $52 icon
  0344:67 2e             pTos view 
  0346:67 30             pTos loop 
  0348:67 32             pTos cel 
  034a:47 ff 00 0a      calle ff procedure_0000 a //  

  034e:48                 ret 
    )

    (method (isNotHidden) // method_037b
  037b:67 38             pTos signal 
  037d:34 0088            ldi 88 
  0380:12                 and 
  0381:18                 not 
  0382:48                 ret 
    )

    (method (onMe) // method_0383
  0383:38 0118          pushi 118 // $118 isNotHidden
  0386:76               push0 
  0387:54 04             self 4 

  0389:30 000c            bnt code_0398 
  038c:38 00c4          pushi c4 // $c4 onMe
  038f:76               push0 
  0390:59 01            &rest 1 
  0392:57 2c 04         super Feature 4 

  0395:32 0002            jmp code_039a 

        code_0398
  0398:35 00              ldi 0 

        code_039a
  039a:48                 ret 
  039b:00                bnot 
    )

    (method (posn) // method_012e
  012e:8f 00              lsp paramTotal 
  0130:35 01              ldi 1 
  0132:20                 ge? 
  0133:30 001c            bnt code_0152 
  0136:87 01              lap param1 
  0138:65 08             aTop x 
  013a:8f 00              lsp paramTotal 
  013c:35 02              ldi 2 
  013e:20                 ge? 
  013f:30 0010            bnt code_0152 
  0142:87 02              lap param2 
  0144:65 0a             aTop y 
  0146:8f 00              lsp paramTotal 
  0148:35 03              ldi 3 
  014a:20                 ge? 
  014b:30 0004            bnt code_0152 
  014e:87 03              lap param3 
  0150:65 0c             aTop z 

        code_0152
  0152:78               push1 
  0153:7c            pushSelf 
  0154:43 4b 02         callk BaseSetter 2 

  0157:38 011e          pushi 11e // $11e forceUpd
  015a:76               push0 
  015b:54 04             self 4 

  015d:48                 ret 
    )

    (method (stopUpd) // method_0213
  0213:67 38             pTos signal 
  0215:35 01              ldi 1 
  0217:14                  or 
  0218:65 38             aTop signal 
  021a:67 38             pTos signal 
  021c:35 fd              ldi fd 
  021e:12                 and 
  021f:65 38             aTop signal 
  0221:48                 ret 
    )

    (method (forceUpd) // method_0222
  0222:67 38             pTos signal 
  0224:35 40              ldi 40 
  0226:14                  or 
  0227:65 38             aTop signal 
  0229:48                 ret 
    )

    (method (startUpd) // method_022a
  022a:67 38             pTos signal 
  022c:35 02              ldi 2 
  022e:14                  or 
  022f:65 38             aTop signal 
  0231:67 38             pTos signal 
  0233:35 fe              ldi fe 
  0235:12                 and 
  0236:65 38             aTop signal 
  0238:48                 ret 
    )

    (method (setPri) // method_0239
  0239:8f 00              lsp paramTotal 
  023b:35 00              ldi 0 
  023d:1a                 eq? 
  023e:30 000a            bnt code_024b 
  0241:67 38             pTos signal 
  0243:35 10              ldi 10 
  0245:14                  or 
  0246:65 38             aTop signal 
  0248:32 001d            jmp code_0268 

        code_024b
  024b:8f 01              lsp param1 
  024d:35 ff              ldi ff 
  024f:1a                 eq? 
  0250:30 000a            bnt code_025d 
  0253:67 38             pTos signal 
  0255:35 ef              ldi ef 
  0257:12                 and 
  0258:65 38             aTop signal 
  025a:32 000b            jmp code_0268 

        code_025d
  025d:87 01              lap param1 
  025f:65 34             aTop priority 
  0261:67 38             pTos signal 
  0263:35 10              ldi 10 
  0265:14                  or 
  0266:65 38             aTop signal 

        code_0268
  0268:38 011e          pushi 11e // $11e forceUpd
  026b:76               push0 
  026c:54 04             self 4 

  026e:48                 ret 
    )

    (method (setLoop) // method_026f
  026f:8f 00              lsp paramTotal 
  0271:35 00              ldi 0 
  0273:1a                 eq? 
  0274:30 000b            bnt code_0282 
  0277:67 38             pTos signal 
  0279:34 0800            ldi 800 
  027c:14                  or 
  027d:65 38             aTop signal 
  027f:32 001f            jmp code_02a1 

        code_0282
  0282:8f 01              lsp param1 
  0284:35 ff              ldi ff 
  0286:1a                 eq? 
  0287:30 000b            bnt code_0295 
  028a:67 38             pTos signal 
  028c:34 f7ff            ldi f7ff 
  028f:12                 and 
  0290:65 38             aTop signal 
  0292:32 000c            jmp code_02a1 

        code_0295
  0295:87 01              lap param1 
  0297:65 30             aTop loop 
  0299:67 38             pTos signal 
  029b:34 0800            ldi 800 
  029e:14                  or 
  029f:65 38             aTop signal 

        code_02a1
  02a1:38 011e          pushi 11e // $11e forceUpd
  02a4:76               push0 
  02a5:54 04             self 4 

  02a7:48                 ret 
    )

    (method (setCel) // method_02a8
  02a8:8f 00              lsp paramTotal 
  02aa:35 00              ldi 0 
  02ac:1a                 eq? 
  02ad:30 000b            bnt code_02bb 
  02b0:67 38             pTos signal 
  02b2:34 1000            ldi 1000 
  02b5:14                  or 
  02b6:65 38             aTop signal 
  02b8:32 0034            jmp code_02ef 

        code_02bb
  02bb:8f 01              lsp param1 
  02bd:35 ff              ldi ff 
  02bf:1a                 eq? 
  02c0:30 000b            bnt code_02ce 
  02c3:67 38             pTos signal 
  02c5:34 efff            ldi efff 
  02c8:12                 and 
  02c9:65 38             aTop signal 
  02cb:32 0021            jmp code_02ef 

        code_02ce
  02ce:67 38             pTos signal 
  02d0:34 1000            ldi 1000 
  02d3:14                  or 
  02d4:65 38             aTop signal 
  02d6:8f 01              lsp param1 
  02d8:38 00dd          pushi dd // $dd lastCel
  02db:76               push0 
  02dc:54 04             self 4 

  02de:20                 ge? 
  02df:30 0009            bnt code_02eb 
  02e2:38 00dd          pushi dd // $dd lastCel
  02e5:76               push0 
  02e6:54 04             self 4 

  02e8:32 0002            jmp code_02ed 

        code_02eb
  02eb:87 01              lap param1 

        code_02ed
  02ed:65 32             aTop cel 

        code_02ef
  02ef:38 011e          pushi 11e // $11e forceUpd
  02f2:76               push0 
  02f3:54 04             self 4 

  02f5:48                 ret 
    )

    (method (ignoreActors) // method_02f6
  02f6:76               push0 
  02f7:87 00              lap paramTotal 
  02f9:1a                 eq? 
  02fa:2e 0002             bt code_02ff 
  02fd:87 01              lap param1 

        code_02ff
  02ff:30 000b            bnt code_030d 
  0302:67 38             pTos signal 
  0304:34 4000            ldi 4000 
  0307:14                  or 
  0308:65 38             aTop signal 
  030a:32 0008            jmp code_0315 

        code_030d
  030d:67 38             pTos signal 
  030f:34 bfff            ldi bfff 
  0312:12                 and 
  0313:65 38             aTop signal 

        code_0315
  0315:48                 ret 
    )

    (method (hide) // method_0170
  0170:67 38             pTos signal 
  0172:35 08              ldi 8 
  0174:14                  or 
  0175:65 38             aTop signal 
  0177:48                 ret 
    )

    (method (show) // method_0178
  0178:67 38             pTos signal 
  017a:35 f7              ldi f7 
  017c:12                 and 
  017d:65 38             aTop signal 
  017f:48                 ret 
    )

    (method (delete) // method_0180
  0180:67 38             pTos signal 
  0182:34 8000            ldi 8000 
  0185:12                 and 
  0186:30 0089            bnt code_0212 
  0189:67 38             pTos signal 
  018b:34 7fff            ldi 7fff 
  018e:12                 and 
  018f:65 38             aTop signal 
  0191:39 54            pushi 54 // $54 delete
  0193:78               push1 
  0194:7c            pushSelf 
  0195:81 05              lag  
  0197:4a 06             send 6 

  0199:63 36             pToa underBits 
  019b:30 000c            bnt code_01aa 
  019e:7a               push2 
  019f:38 0085          pushi 85 // $85 seconds
  01a2:36                push 
  01a3:43 01 04         callk UnLoad 4 

  01a6:35 00              ldi 0 
  01a8:65 36             aTop underBits 

        code_01aa
  01aa:67 38             pTos signal 
  01ac:35 20              ldi 20 
  01ae:12                 and 
  01af:30 0047            bnt code_01f9 
  01b2:39 73            pushi 73 // $73 add
  01b4:78               push1 
  01b5:39 05            pushi 5 // $5 view
  01b7:78               push1 
  01b8:67 2e             pTos view 
  01ba:39 06            pushi 6 // $6 loop
  01bc:78               push1 
  01bd:67 30             pTos loop 
  01bf:39 07            pushi 7 // $7 cel
  01c1:78               push1 
  01c2:67 32             pTos cel 
  01c4:39 04            pushi 4 // $4 x
  01c6:78               push1 
  01c7:67 08             pTos x 
  01c9:39 03            pushi 3 // $3 y
  01cb:78               push1 
  01cc:67 0a             pTos y 
  01ce:39 55            pushi 55 // $55 z
  01d0:78               push1 
  01d1:67 0c             pTos z 
  01d3:39 3f            pushi 3f // $3f priority
  01d5:78               push1 
  01d6:67 34             pTos priority 
  01d8:39 11            pushi 11 // $11 signal
  01da:78               push1 
  01db:67 38             pTos signal 
  01dd:39 72            pushi 72 // $72 yourself
  01df:76               push0 
  01e0:39 6a            pushi 6a // $6a new
  01e2:76               push0 
  01e3:51 2d            class PicView 
  01e5:4a 04             send 4 

  01e7:4a 34             send 34 

  01e9:36                push 
  01ea:81 0a              lag  
  01ec:4a 06             send 6 

  01ee:39 73            pushi 73 // $73 add
  01f0:78               push1 
  01f1:7c            pushSelf 
  01f2:81 20              lag  
  01f4:4a 06             send 6 

  01f6:32 0005            jmp code_01fe 

        code_01f9
  01f9:78               push1 
  01fa:7c            pushSelf 
  01fb:43 05 02         callk DisposeClone 2 


        code_01fe
  01fe:78               push1 
  01ff:67 1e             pTos actions 
  0201:43 06 02         callk IsObject 2 

  0204:30 0007            bnt code_020e 
  0207:39 6c            pushi 6c // $6c dispose
  0209:76               push0 
  020a:63 1e             pToa actions 
  020c:4a 04             send 4 


        code_020e
  020e:35 00              ldi 0 
  0210:65 1e             aTop actions 

        code_0212
  0212:48                 ret 
    )

    (method (addToPic) // method_0316
  0316:39 77            pushi 77 // $77 contains
  0318:78               push1 
  0319:7c            pushSelf 
  031a:81 05              lag  
  031c:4a 06             send 6 

  031e:18                 not 
  031f:30 0005            bnt code_0327 
  0322:39 6b            pushi 6b // $6b init
  0324:76               push0 
  0325:54 04             self 4 


        code_0327
  0327:39 11            pushi 11 // $11 signal
  0329:78               push1 
  032a:67 38             pTos signal 
  032c:34 8021            ldi 8021 
  032f:14                  or 
  0330:36                push 
  0331:54 06             self 6 

  0333:48                 ret 
    )

    (method (lastCel) // method_0334
  0334:78               push1 
  0335:7c            pushSelf 
  0336:43 0e 02         callk NumCels 2 

  0339:36                push 
  033a:35 01              ldi 1 
  033c:04                 sub 
  033d:48                 ret 
    )

    (method (isExtra) // method_034f
  034f:3f 01             link 1 // (var $1)
  0351:67 38             pTos signal 
  0353:34 0200            ldi 200 
  0356:12                 and 
  0357:a5 00              sat temp0 
  0359:87 00              lap paramTotal 
  035b:30 0018            bnt code_0376 
  035e:87 01              lap param1 
  0360:30 000b            bnt code_036e 
  0363:67 38             pTos signal 
  0365:34 0200            ldi 200 
  0368:14                  or 
  0369:65 38             aTop signal 
  036b:32 0008            jmp code_0376 

        code_036e
  036e:67 38             pTos signal 
  0370:34 fdff            ldi fdff 
  0373:12                 and 
  0374:65 38             aTop signal 

        code_0376
  0376:85 00              lat temp0 
  0378:48                 ret 
    )

    (method (motionCue) // method_0379
  0379:48                 ret 
    )

    (method (checkDetail) // method_037a
  037a:48                 ret 
    )

)

// 05dc
(class Prop of View
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $0
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doit) // method_049c
  049c:3f 01             link 1 // (var $1)
  049e:7a               push2 
  049f:7c            pushSelf 
  04a0:67 12             pTos nsTop 
  04a2:43 0c 04         callk SetNowSeen 4 

  04a5:67 38             pTos signal 
  04a7:34 8000            ldi 8000 
  04aa:12                 and 
  04ab:30 0001            bnt code_04af 
  04ae:48                 ret 

        code_04af
  04af:63 4e             pToa script 
  04b1:30 0005            bnt code_04b9 
  04b4:39 3c            pushi 3c // $3c doit
  04b6:76               push0 
  04b7:4a 04             send 4 


        code_04b9
  04b9:67 38             pTos signal 
  04bb:35 04              ldi 4 
  04bd:12                 and 
  04be:30 000a            bnt code_04cb 
  04c1:67 38             pTos signal 
  04c3:35 02              ldi 2 
  04c5:12                 and 
  04c6:18                 not 
  04c7:30 0001            bnt code_04cb 
  04ca:48                 ret 

        code_04cb
  04cb:63 50             pToa cycler 
  04cd:30 0005            bnt code_04d5 
  04d0:39 3c            pushi 3c // $3c doit
  04d2:76               push0 
  04d3:4a 04             send 4 


        code_04d5
  04d5:48                 ret 
    )

    (method (handleEvent) // method_04d6
  04d6:63 4e             pToa script 
  04d8:30 0008            bnt code_04e3 
  04db:38 0081          pushi 81 // $81 handleEvent
  04de:78               push1 
  04df:8f 01              lsp param1 
  04e1:4a 06             send 6 


        code_04e3
  04e3:38 0081          pushi 81 // $81 handleEvent
  04e6:78               push1 
  04e7:8f 01              lsp param1 
  04e9:57 2e 06         super View 6 

  04ec:48                 ret 
    )

    (method (delete) // method_0538
  0538:67 38             pTos signal 
  053a:34 8000            ldi 8000 
  053d:12                 and 
  053e:30 001c            bnt code_055d 
  0541:38 008e          pushi 8e // $8e setScript
  0544:78               push1 
  0545:76               push0 
  0546:38 0096          pushi 96 // $96 setCycle
  0549:78               push1 
  054a:76               push0 
  054b:54 0c             self c 

  054d:63 52             pToa timer 
  054f:30 0005            bnt code_0557 
  0552:39 6c            pushi 6c // $6c dispose
  0554:76               push0 
  0555:4a 04             send 4 


        code_0557
  0557:39 54            pushi 54 // $54 delete
  0559:76               push0 
  055a:57 2e 04         super View 4 


        code_055d
  055d:48                 ret 
    )

    (method (motionCue) // method_0588
  0588:63 50             pToa cycler 
  058a:30 0011            bnt code_059e 
  058d:38 00d7          pushi d7 // $d7 completed
  0590:76               push0 
  0591:4a 04             send 4 

  0593:30 0008            bnt code_059e 
  0596:38 00da          pushi da // $da motionCue
  0599:76               push0 
  059a:63 50             pToa cycler 
  059c:4a 04             send 4 


        code_059e
  059e:48                 ret 
    )

    (method (checkDetail) // method_059f
  059f:63 54             pToa detailLevel 
  05a1:18                 not 
  05a2:30 0003            bnt code_05a8 
  05a5:32 002d            jmp code_05d5 

        code_05a8
  05a8:87 00              lap paramTotal 
  05aa:30 0005            bnt code_05b2 
  05ad:87 01              lap param1 
  05af:32 0008            jmp code_05ba 

        code_05b2
  05b2:38 0125          pushi 125 // $125 detailLevel
  05b5:76               push0 
  05b6:81 01              lag  
  05b8:4a 04             send 4 


        code_05ba
  05ba:36                push 
  05bb:63 54             pToa detailLevel 
  05bd:22                 lt? 
  05be:30 0009            bnt code_05ca 
  05c1:38 011d          pushi 11d // $11d stopUpd
  05c4:76               push0 
  05c5:54 04             self 4 

  05c7:32 000b            jmp code_05d5 

        code_05ca
  05ca:63 50             pToa cycler 
  05cc:30 0006            bnt code_05d5 
  05cf:38 011f          pushi 11f // $11f startUpd
  05d2:76               push0 
  05d3:54 04             self 4 


        code_05d5
  05d5:48                 ret 
    )

    (method (setCycle) // method_04ed
  04ed:63 50             pToa cycler 
  04ef:30 0005            bnt code_04f7 
  04f2:39 6c            pushi 6c // $6c dispose
  04f4:76               push0 
  04f5:4a 04             send 4 


        code_04f7
  04f7:87 01              lap param1 
  04f9:30 0037            bnt code_0533 
  04fc:38 0120          pushi 120 // $120 setCel
  04ff:78               push1 
  0500:39 ff            pushi ff // $ff syncNum
  0502:54 06             self 6 

  0504:38 011f          pushi 11f // $11f startUpd
  0507:76               push0 
  0508:54 04             self 4 

  050a:7a               push2 
  050b:76               push0 
  050c:87 01              lap param1 
  050e:4a 04             send 4 

  0510:36                push 
  0511:34 8000            ldi 8000 
  0514:12                 and 
  0515:30 000a            bnt code_0522 
  0518:39 6a            pushi 6a // $6a new
  051a:76               push0 
  051b:87 01              lap param1 
  051d:4a 04             send 4 

  051f:32 0002            jmp code_0524 

        code_0522
  0522:87 01              lap param1 

        code_0524
  0524:65 50             aTop cycler 
  0526:39 6b            pushi 6b // $6b init
  0528:78               push1 
  0529:7c            pushSelf 
  052a:59 02            &rest 2 
  052c:63 50             pToa cycler 
  052e:4a 06             send 6 

  0530:32 0004            jmp code_0537 

        code_0533
  0533:35 00              ldi 0 
  0535:65 50             aTop cycler 

        code_0537
  0537:48                 ret 
    )

    (method (setScript) // method_056a
  056a:78               push1 
  056b:67 4e             pTos script 
  056d:43 06 02         callk IsObject 2 

  0570:30 0007            bnt code_057a 
  0573:39 6c            pushi 6c // $6c dispose
  0575:76               push0 
  0576:63 4e             pToa script 
  0578:4a 04             send 4 


        code_057a
  057a:87 01              lap param1 
  057c:30 0008            bnt code_0587 
  057f:39 6b            pushi 6b // $6b init
  0581:78               push1 
  0582:7c            pushSelf 
  0583:59 02            &rest 2 
  0585:4a 06             send 6 


        code_0587
  0587:48                 ret 
    )

    (method (cue) // method_055e
  055e:63 4e             pToa script 
  0560:30 0006            bnt code_0569 
  0563:38 008d          pushi 8d // $8d cue
  0566:76               push0 
  0567:4a 04             send 4 


        code_0569
  0569:48                 ret 
    )

)

// 0dd0
(class Actor of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $0
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (init) // method_06b6
  06b6:39 6b            pushi 6b // $6b init
  06b8:76               push0 
  06b9:59 01            &rest 1 
  06bb:57 2f 04         super Prop 4 

  06be:63 08             pToa x 
  06c0:65 58             aTop xLast 
  06c2:63 0a             pToa y 
  06c4:65 5a             aTop yLast 
  06c6:48                 ret 
    )

    (method (doit) // method_06c7
  06c7:3f 03             link 3 // (var $3)
  06c9:67 38             pTos signal 
  06cb:34 8000            ldi 8000 
  06ce:12                 and 
  06cf:30 0001            bnt code_06d3 
  06d2:48                 ret 

        code_06d3
  06d3:63 4e             pToa script 
  06d5:30 0005            bnt code_06dd 
  06d8:39 3c            pushi 3c // $3c doit
  06da:76               push0 
  06db:4a 04             send 4 


        code_06dd
  06dd:63 6c             pToa code 
  06df:30 0006            bnt code_06e8 
  06e2:39 3c            pushi 3c // $3c doit
  06e4:78               push1 
  06e5:7c            pushSelf 
  06e6:4a 06             send 6 


        code_06e8
  06e8:67 38             pTos signal 
  06ea:35 04              ldi 4 
  06ec:12                 and 
  06ed:30 000a            bnt code_06fa 
  06f0:67 38             pTos signal 
  06f2:35 02              ldi 2 
  06f4:12                 and 
  06f5:18                 not 
  06f6:30 0001            bnt code_06fa 
  06f9:48                 ret 

        code_06fa
  06fa:63 68             pToa viewer 
  06fc:30 0006            bnt code_0705 
  06ff:39 3c            pushi 3c // $3c doit
  0701:78               push1 
  0702:7c            pushSelf 
  0703:4a 06             send 6 


        code_0705
  0705:63 6a             pToa avoider 
  0707:30 0008            bnt code_0712 
  070a:39 3c            pushi 3c // $3c doit
  070c:76               push0 
  070d:4a 04             send 4 

  070f:32 000a            jmp code_071c 

        code_0712
  0712:63 64             pToa mover 
  0714:30 0005            bnt code_071c 
  0717:39 3c            pushi 3c // $3c doit
  0719:76               push0 
  071a:4a 04             send 4 


        code_071c
  071c:63 50             pToa cycler 
  071e:30 0040            bnt code_0761 
  0721:63 44             pToa brLeft 
  0723:a5 01              sat temp1 
  0725:63 48             pToa brRight 
  0727:a5 02              sat temp2 
  0729:39 3c            pushi 3c // $3c doit
  072b:76               push0 
  072c:63 50             pToa cycler 
  072e:4a 04             send 4 

  0730:63 62             pToa baseSetter 
  0732:30 0009            bnt code_073e 
  0735:39 3c            pushi 3c // $3c doit
  0737:78               push1 
  0738:7c            pushSelf 
  0739:4a 06             send 6 

  073b:32 0005            jmp code_0743 

        code_073e
  073e:78               push1 
  073f:7c            pushSelf 
  0740:43 4b 02         callk BaseSetter 2 


        code_0743
  0743:8d 01              lst temp1 
  0745:63 44             pToa brLeft 
  0747:1c                 ne? 
  0748:2e 0005             bt code_0750 
  074b:8d 02              lst temp2 
  074d:63 48             pToa brRight 
  074f:1c                 ne? 

        code_0750
  0750:30 000e            bnt code_0761 
  0753:39 39            pushi 39 // $39 cantBeHere
  0755:76               push0 
  0756:54 04             self 4 

  0758:30 0006            bnt code_0761 
  075b:38 0131          pushi 131 // $131 findPosn
  075e:76               push0 
  075f:54 04             self 4 


        code_0761
  0761:63 08             pToa x 
  0763:65 58             aTop xLast 
  0765:63 0a             pToa y 
  0767:65 5a             aTop yLast 
  0769:48                 ret 
    )

    (method (posn) // method_076a
  076a:38 011c          pushi 11c // $11c posn
  076d:7a               push2 
  076e:8f 01              lsp param1 
  0770:8f 02              lsp param2 
  0772:59 03            &rest 3 
  0774:57 2f 08         super Prop 8 

  0777:87 01              lap param1 
  0779:65 58             aTop xLast 
  077b:87 02              lap param2 
  077d:65 5a             aTop yLast 
  077f:39 39            pushi 39 // $39 cantBeHere
  0781:76               push0 
  0782:54 04             self 4 

  0784:30 0006            bnt code_078d 
  0787:38 0131          pushi 131 // $131 findPosn
  078a:76               push0 
  078b:54 04             self 4 


        code_078d
  078d:48                 ret 
    )

    (method (setLoop) // method_0cdc
  0cdc:3f 01             link 1 // (var $1)
  0cde:8f 00              lsp paramTotal 
  0ce0:35 00              ldi 0 
  0ce2:1a                 eq? 
  0ce3:30 000c            bnt code_0cf2 
  0ce6:38 00a2          pushi a2 // $a2 setLoop
  0ce9:76               push0 
  0cea:57 2f 04         super Prop 4 

  0ced:35 00              ldi 0 
  0cef:32 0034            jmp code_0d26 

        code_0cf2
  0cf2:78               push1 
  0cf3:8f 01              lsp param1 
  0cf5:43 06 02         callk IsObject 2 

  0cf8:18                 not 
  0cf9:30 0010            bnt code_0d0c 
  0cfc:38 00a2          pushi a2 // $a2 setLoop
  0cff:78               push1 
  0d00:8f 01              lsp param1 
  0d02:59 02            &rest 2 
  0d04:57 2f 06         super Prop 6 

  0d07:35 00              ldi 0 
  0d09:32 001a            jmp code_0d26 

        code_0d0c
  0d0c:7a               push2 
  0d0d:76               push0 
  0d0e:87 01              lap param1 
  0d10:4a 04             send 4 

  0d12:36                push 
  0d13:34 8000            ldi 8000 
  0d16:12                 and 
  0d17:30 000a            bnt code_0d24 
  0d1a:39 6a            pushi 6a // $6a new
  0d1c:76               push0 
  0d1d:87 01              lap param1 
  0d1f:4a 04             send 4 

  0d21:32 0002            jmp code_0d26 

        code_0d24
  0d24:87 01              lap param1 

        code_0d26
  0d26:a5 00              sat temp0 
  0d28:30 0016            bnt code_0d41 
  0d2b:63 66             pToa looper 
  0d2d:30 0005            bnt code_0d35 
  0d30:39 6c            pushi 6c // $6c dispose
  0d32:76               push0 
  0d33:4a 04             send 4 


        code_0d35
  0d35:39 6b            pushi 6b // $6b init
  0d37:78               push1 
  0d38:7c            pushSelf 
  0d39:59 02            &rest 2 
  0d3b:85 00              lat temp0 
  0d3d:65 66             aTop looper 
  0d3f:4a 06             send 6 


        code_0d41
  0d41:48                 ret 
    )

    (method (delete) // method_0842
  0842:67 38             pTos signal 
  0844:34 8000            ldi 8000 
  0847:12                 and 
  0848:30 0076            bnt code_08c1 
  084b:67 64             pTos mover 
  084d:35 ff              ldi ff 
  084f:1c                 ne? 
  0850:30 0007            bnt code_085a 
  0853:38 011b          pushi 11b // $11b setMotion
  0856:78               push1 
  0857:76               push0 
  0858:54 06             self 6 


        code_085a
  085a:38 012b          pushi 12b // $12b setAvoider
  085d:78               push1 
  085e:76               push0 
  085f:54 06             self 6 

  0861:63 62             pToa baseSetter 
  0863:30 0009            bnt code_086f 
  0866:39 6c            pushi 6c // $6c dispose
  0868:76               push0 
  0869:4a 04             send 4 

  086b:35 00              ldi 0 
  086d:65 62             aTop baseSetter 

        code_086f
  086f:63 66             pToa looper 
  0871:30 0009            bnt code_087d 
  0874:39 6c            pushi 6c // $6c dispose
  0876:76               push0 
  0877:4a 04             send 4 

  0879:35 00              ldi 0 
  087b:65 66             aTop looper 

        code_087d
  087d:63 68             pToa viewer 
  087f:30 0009            bnt code_088b 
  0882:39 6c            pushi 6c // $6c dispose
  0884:76               push0 
  0885:4a 04             send 4 

  0887:35 00              ldi 0 
  0889:65 68             aTop viewer 

        code_088b
  088b:63 60             pToa blocks 
  088d:30 0009            bnt code_0899 
  0890:39 6c            pushi 6c // $6c dispose
  0892:76               push0 
  0893:4a 04             send 4 

  0895:35 00              ldi 0 
  0897:65 60             aTop blocks 

        code_0899
  0899:63 6c             pToa code 
  089b:30 0009            bnt code_08a7 
  089e:39 6c            pushi 6c // $6c dispose
  08a0:76               push0 
  08a1:4a 04             send 4 

  08a3:35 00              ldi 0 
  08a5:65 6c             aTop code 

        code_08a7
  08a7:78               push1 
  08a8:67 1e             pTos actions 
  08aa:43 06 02         callk IsObject 2 

  08ad:30 000b            bnt code_08bb 
  08b0:39 6c            pushi 6c // $6c dispose
  08b2:76               push0 
  08b3:63 1e             pToa actions 
  08b5:4a 04             send 4 

  08b7:35 00              ldi 0 
  08b9:65 1e             aTop actions 

        code_08bb
  08bb:39 54            pushi 54 // $54 delete
  08bd:76               push0 
  08be:57 2f 04         super Prop 4 


        code_08c1
  08c1:48                 ret 
    )

    (method (motionCue) // method_0cbe
  0cbe:63 64             pToa mover 
  0cc0:30 0011            bnt code_0cd4 
  0cc3:38 00d7          pushi d7 // $d7 completed
  0cc6:76               push0 
  0cc7:4a 04             send 4 

  0cc9:30 0008            bnt code_0cd4 
  0ccc:38 00da          pushi da // $da motionCue
  0ccf:76               push0 
  0cd0:63 64             pToa mover 
  0cd2:4a 04             send 4 


        code_0cd4
  0cd4:38 00da          pushi da // $da motionCue
  0cd7:76               push0 
  0cd8:57 2f 04         super Prop 4 

  0cdb:48                 ret 
    )

    (method (checkDetail) // method_0d42
  0d42:63 54             pToa detailLevel 
  0d44:18                 not 
  0d45:30 0003            bnt code_0d4b 
  0d48:32 0032            jmp code_0d7d 

        code_0d4b
  0d4b:87 00              lap paramTotal 
  0d4d:30 0005            bnt code_0d55 
  0d50:87 01              lap param1 
  0d52:32 0008            jmp code_0d5d 

        code_0d55
  0d55:38 0125          pushi 125 // $125 detailLevel
  0d58:76               push0 
  0d59:81 01              lag  
  0d5b:4a 04             send 4 


        code_0d5d
  0d5d:36                push 
  0d5e:63 54             pToa detailLevel 
  0d60:22                 lt? 
  0d61:30 0009            bnt code_0d6d 
  0d64:38 011d          pushi 11d // $11d stopUpd
  0d67:76               push0 
  0d68:54 04             self 4 

  0d6a:32 0010            jmp code_0d7d 

        code_0d6d
  0d6d:63 50             pToa cycler 
  0d6f:2e 0002             bt code_0d74 
  0d72:63 64             pToa mover 

        code_0d74
  0d74:30 0006            bnt code_0d7d 
  0d77:38 011f          pushi 11f // $11f startUpd
  0d7a:76               push0 
  0d7b:54 04             self 4 


        code_0d7d
  0d7d:48                 ret 
    )

    (method (setMotion) // method_078e
  078e:63 64             pToa mover 
  0790:30 000e            bnt code_07a1 
  0793:36                push 
  0794:35 ff              ldi ff 
  0796:1c                 ne? 
  0797:30 0007            bnt code_07a1 
  079a:39 6c            pushi 6c // $6c dispose
  079c:76               push0 
  079d:63 64             pToa mover 
  079f:4a 04             send 4 


        code_07a1
  07a1:87 01              lap param1 
  07a3:30 002f            bnt code_07d5 
  07a6:38 011f          pushi 11f // $11f startUpd
  07a9:76               push0 
  07aa:54 04             self 4 

  07ac:7a               push2 
  07ad:76               push0 
  07ae:87 01              lap param1 
  07b0:4a 04             send 4 

  07b2:36                push 
  07b3:34 8000            ldi 8000 
  07b6:12                 and 
  07b7:30 000a            bnt code_07c4 
  07ba:39 6a            pushi 6a // $6a new
  07bc:76               push0 
  07bd:87 01              lap param1 
  07bf:4a 04             send 4 

  07c1:32 0002            jmp code_07c6 

        code_07c4
  07c4:87 01              lap param1 

        code_07c6
  07c6:65 64             aTop mover 
  07c8:39 6b            pushi 6b // $6b init
  07ca:78               push1 
  07cb:7c            pushSelf 
  07cc:59 02            &rest 2 
  07ce:63 64             pToa mover 
  07d0:4a 06             send 6 

  07d2:32 0004            jmp code_07d9 

        code_07d5
  07d5:35 00              ldi 0 
  07d7:65 64             aTop mover 

        code_07d9
  07d9:48                 ret 
    )

    (method (setAvoider) // method_07da
  07da:63 6a             pToa avoider 
  07dc:30 0005            bnt code_07e4 
  07df:39 6c            pushi 6c // $6c dispose
  07e1:76               push0 
  07e2:4a 04             send 4 


        code_07e4
  07e4:78               push1 
  07e5:8f 01              lsp param1 
  07e7:43 06 02         callk IsObject 2 

  07ea:30 0018            bnt code_0805 
  07ed:7a               push2 
  07ee:76               push0 
  07ef:87 01              lap param1 
  07f1:4a 04             send 4 

  07f3:36                push 
  07f4:34 8000            ldi 8000 
  07f7:12                 and 
  07f8:30 000a            bnt code_0805 
  07fb:39 6a            pushi 6a // $6a new
  07fd:76               push0 
  07fe:87 01              lap param1 
  0800:4a 04             send 4 

  0802:32 0002            jmp code_0807 

        code_0805
  0805:87 01              lap param1 

        code_0807
  0807:65 6a             aTop avoider 
  0809:63 6a             pToa avoider 
  080b:30 0008            bnt code_0816 
  080e:39 6b            pushi 6b // $6b init
  0810:78               push1 
  0811:7c            pushSelf 
  0812:59 02            &rest 2 
  0814:4a 06             send 6 


        code_0816
  0816:48                 ret 
    )

    (method (ignoreHorizon) // method_08c2
  08c2:87 00              lap paramTotal 
  08c4:18                 not 
  08c5:2e 0002             bt code_08ca 
  08c8:87 01              lap param1 

        code_08ca
  08ca:30 000b            bnt code_08d8 
  08cd:67 38             pTos signal 
  08cf:34 2000            ldi 2000 
  08d2:14                  or 
  08d3:65 38             aTop signal 
  08d5:32 0008            jmp code_08e0 

        code_08d8
  08d8:67 38             pTos signal 
  08da:34 dfff            ldi dfff 
  08dd:12                 and 
  08de:65 38             aTop signal 

        code_08e0
  08e0:48                 ret 
    )

    (method (observeControl) // method_08e1
  08e1:3f 01             link 1 // (var $1)
  08e3:35 00              ldi 0 
  08e5:a5 00              sat temp0 

        code_08e7
  08e7:8d 00              lst temp0 
  08e9:87 00              lap paramTotal 
  08eb:22                 lt? 
  08ec:30 000e            bnt code_08fd 
  08ef:67 56             pTos illegalBits 
  08f1:85 00              lat temp0 
  08f3:97 01             lapi param1 
  08f5:14                  or 
  08f6:65 56             aTop illegalBits 
  08f8:c5 00              +at temp0 
  08fa:32 ffea            jmp code_08e7 

        code_08fd
  08fd:48                 ret 
    )

    (method (ignoreControl) // method_08fe
  08fe:3f 01             link 1 // (var $1)
  0900:35 00              ldi 0 
  0902:a5 00              sat temp0 

        code_0904
  0904:8d 00              lst temp0 
  0906:87 00              lap paramTotal 
  0908:22                 lt? 
  0909:30 000f            bnt code_091b 
  090c:67 56             pTos illegalBits 
  090e:85 00              lat temp0 
  0910:97 01             lapi param1 
  0912:00                bnot 
  0913:12                 and 
  0914:65 56             aTop illegalBits 
  0916:c5 00              +at temp0 
  0918:32 ffe9            jmp code_0904 

        code_091b
  091b:48                 ret 
    )

    (method (observeBlocks) // method_091c
  091c:63 60             pToa blocks 
  091e:18                 not 
  091f:30 0009            bnt code_092b 
  0922:39 6a            pushi 6a // $6a new
  0924:76               push0 
  0925:51 04            class Set 
  0927:4a 04             send 4 

  0929:65 60             aTop blocks 

        code_092b
  092b:39 73            pushi 73 // $73 add
  092d:76               push0 
  092e:59 01            &rest 1 
  0930:63 60             pToa blocks 
  0932:4a 04             send 4 

  0934:48                 ret 
    )

    (method (ignoreBlocks) // method_0935
  0935:39 54            pushi 54 // $54 delete
  0937:76               push0 
  0938:59 01            &rest 1 
  093a:63 60             pToa blocks 
  093c:4a 04             send 4 

  093e:39 78            pushi 78 // $78 isEmpty
  0940:76               push0 
  0941:63 60             pToa blocks 
  0943:4a 04             send 4 

  0945:30 000b            bnt code_0953 
  0948:39 6c            pushi 6c // $6c dispose
  094a:76               push0 
  094b:63 60             pToa blocks 
  094d:4a 04             send 4 

  094f:35 00              ldi 0 
  0951:65 60             aTop blocks 

        code_0953
  0953:48                 ret 
    )

    (method (isStopped) // method_0817
  0817:78               push1 
  0818:67 64             pTos mover 
  081a:43 06 02         callk IsObject 2 

  081d:18                 not 
  081e:2e 0019             bt code_083a 
  0821:67 08             pTos x 
  0823:38 00e0          pushi e0 // $e0 xLast
  0826:76               push0 
  0827:63 64             pToa mover 
  0829:4a 04             send 4 

  082b:1a                 eq? 
  082c:30 000b            bnt code_083a 
  082f:67 0a             pTos y 
  0831:38 00e1          pushi e1 // $e1 yLast
  0834:76               push0 
  0835:63 64             pToa mover 
  0837:4a 04             send 4 

  0839:1a                 eq? 

        code_083a
  083a:48                 ret 
    )

    (method (isBlocked) // method_083b
  083b:67 38             pTos signal 
  083d:34 0400            ldi 400 
  0840:12                 and 
  0841:48                 ret 
    )

    (method (findPosn) // method_09d4
  09d4:3f 05             link 5 // (var $5)
  09d6:63 08             pToa x 
  09d8:a5 02              sat temp2 
  09da:63 0a             pToa y 
  09dc:a5 03              sat temp3 
  09de:35 00              ldi 0 
  09e0:a5 04              sat temp4 
  09e2:35 01              ldi 1 
  09e4:a5 01              sat temp1 

        code_09e6
  09e6:85 04              lat temp4 
  09e8:18                 not 
  09e9:30 0065            bnt code_0a51 
  09ec:35 00              ldi 0 
  09ee:a5 00              sat temp0 

        code_09f0
  09f0:85 04              lat temp4 
  09f2:18                 not 
  09f3:30 0056            bnt code_0a4c 
  09f6:8d 00              lst temp0 
  09f8:35 08              ldi 8 
  09fa:22                 lt? 
  09fb:30 004e            bnt code_0a4c 
  09fe:8d 02              lst temp2 
  0a00:8d 01              lst temp1 
  0a02:78               push1 
  0a03:7a               push2 
  0a04:8d 00              lst temp0 
  0a06:35 2d              ldi 2d 
  0a08:06                 mul 
  0a09:36                push 
  0a0a:39 64            pushi 64 // $64 moveDone
  0a0c:43 69 04         callk CosMult 4 

  0a0f:36                push 
  0a10:46 03e7 0000 02  calle 3e7 procedure_0000 2 //  

  0a16:06                 mul 
  0a17:02                 add 
  0a18:65 08             aTop x 
  0a1a:8d 03              lst temp3 
  0a1c:8d 01              lst temp1 
  0a1e:78               push1 
  0a1f:7a               push2 
  0a20:8d 00              lst temp0 
  0a22:35 2d              ldi 2d 
  0a24:06                 mul 
  0a25:36                push 
  0a26:39 64            pushi 64 // $64 moveDone
  0a28:43 68 04         callk SinMult 4 

  0a2b:36                push 
  0a2c:46 03e7 0000 02  calle 3e7 procedure_0000 2 //  

  0a32:06                 mul 
  0a33:04                 sub 
  0a34:65 0a             aTop y 
  0a36:39 39            pushi 39 // $39 cantBeHere
  0a38:76               push0 
  0a39:54 04             self 4 

  0a3b:18                 not 
  0a3c:30 0006            bnt code_0a45 
  0a3f:38 0133          pushi 133 // $133 onControl
  0a42:76               push0 
  0a43:54 04             self 4 


        code_0a45
  0a45:a5 04              sat temp4 
  0a47:c5 00              +at temp0 
  0a49:32 ffa4            jmp code_09f0 

        code_0a4c
  0a4c:c5 01              +at temp1 
  0a4e:32 ff95            jmp code_09e6 

        code_0a51
  0a51:38 011c          pushi 11c // $11c posn
  0a54:7a               push2 
  0a55:67 08             pTos x 
  0a57:67 0a             pTos y 
  0a59:54 08             self 8 

  0a5b:48                 ret 
    )

    (method (inRect) // method_0a5c
  0a5c:8f 01              lsp param1 
  0a5e:63 08             pToa x 
  0a60:24                 le? 
  0a61:30 0015            bnt code_0a79 
  0a64:67 08             pTos x 
  0a66:87 03              lap param3 
  0a68:22                 lt? 
  0a69:30 000d            bnt code_0a79 
  0a6c:8f 02              lsp param2 
  0a6e:63 0a             pToa y 
  0a70:24                 le? 
  0a71:30 0005            bnt code_0a79 
  0a74:67 0a             pTos y 
  0a76:87 04              lap param4 
  0a78:22                 lt? 

        code_0a79
  0a79:48                 ret 
    )

    (method (onControl) // method_0a7a
  0a7a:87 00              lap paramTotal 
  0a7c:30 0013            bnt code_0a92 
  0a7f:87 01              lap param1 
  0a81:30 000e            bnt code_0a92 
  0a84:39 03            pushi 3 // $3 y
  0a86:39 04            pushi 4 // $4 x
  0a88:67 08             pTos x 
  0a8a:67 0a             pTos y 
  0a8c:43 4e 06         callk OnControl 6 

  0a8f:32 000f            jmp code_0aa1 

        code_0a92
  0a92:39 05            pushi 5 // $5 view
  0a94:39 04            pushi 4 // $4 x
  0a96:67 44             pTos brLeft 
  0a98:67 42             pTos brTop 
  0a9a:67 48             pTos brRight 
  0a9c:67 46             pTos brBottom 
  0a9e:43 4e 0a         callk OnControl a 


        code_0aa1
  0aa1:48                 ret 
    )

    (method (distanceTo) // method_0954
  0954:39 05            pushi 5 // $5 view
  0956:67 08             pTos x 
  0958:67 0a             pTos y 
  095a:39 04            pushi 4 // $4 x
  095c:76               push0 
  095d:87 01              lap param1 
  095f:4a 04             send 4 

  0961:36                push 
  0962:39 03            pushi 3 // $3 y
  0964:76               push0 
  0965:87 01              lap param1 
  0967:4a 04             send 4 

  0969:36                push 
  096a:89 1f              lsg  
  096c:43 40 0a         callk GetDistance a 

  096f:48                 ret 
    )

    (method (cantBeHere) // method_0970
  0970:3f 01             link 1 // (var $1)
  0972:63 62             pToa baseSetter 
  0974:30 0009            bnt code_0980 
  0977:39 3c            pushi 3c // $3c doit
  0979:78               push1 
  097a:7c            pushSelf 
  097b:4a 06             send 6 

  097d:32 0005            jmp code_0985 

        code_0980
  0980:78               push1 
  0981:7c            pushSelf 
  0982:43 4b 02         callk BaseSetter 2 


        code_0985
  0985:7a               push2 
  0986:7c            pushSelf 
  0987:39 1b            pushi 1b // $1b elements
  0989:76               push0 
  098a:81 05              lag  
  098c:4a 04             send 4 

  098e:36                push 
  098f:43 4d 04         callk CanBeHere 4 

  0992:30 0003            bnt code_0998 
  0995:32 0039            jmp code_09d1 

        code_0998
  0998:67 38             pTos signal 
  099a:34 2000            ldi 2000 
  099d:12                 and 
  099e:18                 not 
  099f:30 001c            bnt code_09be 
  09a2:78               push1 
  09a3:89 02              lsg  
  09a5:43 06 02         callk IsObject 2 

  09a8:30 0013            bnt code_09be 
  09ab:67 0a             pTos y 
  09ad:38 0136          pushi 136 // $136 horizon
  09b0:76               push0 
  09b1:81 02              lag  
  09b3:4a 04             send 4 

  09b5:22                 lt? 
  09b6:30 0005            bnt code_09be 
  09b9:35 ff              ldi ff 
  09bb:32 0013            jmp code_09d1 

        code_09be
  09be:63 60             pToa blocks 
  09c0:30 000e            bnt code_09d1 
  09c3:39 76            pushi 76 // $76 allTrue
  09c5:7a               push2 
  09c6:39 3c            pushi 3c // $3c doit
  09c8:7c            pushSelf 
  09c9:4a 08             send 8 

  09cb:18                 not 
  09cc:30 0002            bnt code_09d1 
  09cf:35 fe              ldi fe 

        code_09d1
  09d1:a5 00              sat temp0 
  09d3:48                 ret 
    )

    (method (setStep) // method_0aa2
  0aa2:8f 00              lsp paramTotal 
  0aa4:35 01              ldi 1 
  0aa6:20                 ge? 
  0aa7:30 000c            bnt code_0ab6 
  0aaa:8f 01              lsp param1 
  0aac:35 ff              ldi ff 
  0aae:1c                 ne? 
  0aaf:30 0004            bnt code_0ab6 
  0ab2:87 01              lap param1 
  0ab4:65 5c             aTop xStep 

        code_0ab6
  0ab6:8f 00              lsp paramTotal 
  0ab8:35 02              ldi 2 
  0aba:20                 ge? 
  0abb:30 000c            bnt code_0aca 
  0abe:8f 02              lsp param2 
  0ac0:35 ff              ldi ff 
  0ac2:1c                 ne? 
  0ac3:30 0004            bnt code_0aca 
  0ac6:87 02              lap param2 
  0ac8:65 2c             aTop yStep 

        code_0aca
  0aca:63 64             pToa mover 
  0acc:30 001d            bnt code_0aec 
  0acf:39 ff            pushi ff // $ff syncNum
  0ad1:1c                 ne? 
  0ad2:30 0017            bnt code_0aec 
  0ad5:39 70            pushi 70 // $70 isMemberOf
  0ad7:78               push1 
  0ad8:51 1e            class MoveTo 
  0ada:36                push 
  0adb:63 64             pToa mover 
  0add:4a 06             send 6 

  0adf:30 000a            bnt code_0aec 
  0ae2:39 6b            pushi 6b // $6b init
  0ae4:76               push0 
  0ae5:39 3b            pushi 3b // $3b mover
  0ae7:76               push0 
  0ae8:54 04             self 4 

  0aea:4a 04             send 4 


        code_0aec
  0aec:48                 ret 
    )

    (method (setDirection) // method_0aed
  0aed:3f 08             link 8 // (var $8)
  0aef:38 0137          pushi 137 // $137 vanishingY
  0af2:76               push0 
  0af3:81 02              lag  
  0af5:4a 04             send 4 

  0af7:a5 01              sat temp1 
  0af9:36                push 
  0afa:34 8ad0            ldi 8ad0 
  0afd:1a                 eq? 
  0afe:30 0005            bnt code_0b06 
  0b01:63 08             pToa x 
  0b03:32 0008            jmp code_0b0e 

        code_0b06
  0b06:38 0138          pushi 138 // $138 vanishingX
  0b09:76               push0 
  0b0a:81 02              lag  
  0b0c:4a 04             send 4 


        code_0b0e
  0b0e:a5 00              sat temp0 
  0b10:67 5c             pTos xStep 
  0b12:35 00              ldi 0 
  0b14:1a                 eq? 
  0b15:30 0009            bnt code_0b21 
  0b18:67 2c             pTos yStep 
  0b1a:35 00              ldi 0 
  0b1c:1a                 eq? 
  0b1d:30 0001            bnt code_0b21 
  0b20:48                 ret 

        code_0b21
  0b21:38 7d00          pushi 7d00 // $7d00 sel_32000
  0b24:7a               push2 
  0b25:67 5c             pTos xStep 
  0b27:67 2c             pTos yStep 
  0b29:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  0b2f:08                 div 
  0b30:a5 05              sat temp5 
  0b32:8f 01              lsp param1 
  0b34:3c                 dup 
  0b35:35 00              ldi 0 
  0b37:1a                 eq? 
  0b38:30 000b            bnt code_0b46 
  0b3b:38 011b          pushi 11b // $11b setMotion
  0b3e:78               push1 
  0b3f:76               push0 
  0b40:54 06             self 6 

  0b42:48                 ret 
  0b43:32 009c            jmp code_0be2 

        code_0b46
  0b46:3c                 dup 
  0b47:35 01              ldi 1 
  0b49:1a                 eq? 
  0b4a:30 0011            bnt code_0b5e 
  0b4d:8d 00              lst temp0 
  0b4f:63 08             pToa x 
  0b51:04                 sub 
  0b52:a5 02              sat temp2 
  0b54:8d 01              lst temp1 
  0b56:63 0a             pToa y 
  0b58:04                 sub 
  0b59:a5 03              sat temp3 
  0b5b:32 0084            jmp code_0be2 

        code_0b5e
  0b5e:3c                 dup 
  0b5f:35 05              ldi 5 
  0b61:1a                 eq? 
  0b62:30 0011            bnt code_0b76 
  0b65:67 08             pTos x 
  0b67:85 00              lat temp0 
  0b69:04                 sub 
  0b6a:a5 02              sat temp2 
  0b6c:67 0a             pTos y 
  0b6e:85 01              lat temp1 
  0b70:04                 sub 
  0b71:a5 03              sat temp3 
  0b73:32 006c            jmp code_0be2 

        code_0b76
  0b76:3c                 dup 
  0b77:35 03              ldi 3 
  0b79:1a                 eq? 
  0b7a:30 000b            bnt code_0b88 
  0b7d:85 05              lat temp5 
  0b7f:a5 02              sat temp2 
  0b81:35 00              ldi 0 
  0b83:a5 03              sat temp3 
  0b85:32 005a            jmp code_0be2 

        code_0b88
  0b88:3c                 dup 
  0b89:35 07              ldi 7 
  0b8b:1a                 eq? 
  0b8c:30 000c            bnt code_0b9b 
  0b8f:85 05              lat temp5 
  0b91:16                 neg 
  0b92:a5 02              sat temp2 
  0b94:35 00              ldi 0 
  0b96:a5 03              sat temp3 
  0b98:32 0047            jmp code_0be2 

        code_0b9b
  0b9b:38 00b4          pushi b4 // $b4 busy
  0b9e:39 04            pushi 4 // $4 x
  0ba0:67 08             pTos x 
  0ba2:67 0a             pTos y 
  0ba4:8d 00              lst temp0 
  0ba6:8d 01              lst temp1 
  0ba8:43 3f 08         callk GetAngle 8 

  0bab:a5 04              sat temp4 
  0bad:22                 lt? 
  0bae:30 0008            bnt code_0bb9 
  0bb1:8d 04              lst temp4 
  0bb3:34 0168            ldi 168 
  0bb6:04                 sub 
  0bb7:a5 04              sat temp4 

        code_0bb9
  0bb9:8d 04              lst temp4 
  0bbb:35 5a              ldi 5a 
  0bbd:02                 add 
  0bbe:36                push 
  0bbf:35 02              ldi 2 
  0bc1:08                 div 
  0bc2:36                push 
  0bc3:39 2d            pushi 2d // $2d client
  0bc5:8f 01              lsp param1 
  0bc7:35 02              ldi 2 
  0bc9:04                 sub 
  0bca:06                 mul 
  0bcb:02                 add 
  0bcc:a5 04              sat temp4 
  0bce:7a               push2 
  0bcf:36                push 
  0bd0:39 64            pushi 64 // $64 moveDone
  0bd2:43 68 04         callk SinMult 4 

  0bd5:a5 02              sat temp2 
  0bd7:7a               push2 
  0bd8:8d 04              lst temp4 
  0bda:39 64            pushi 64 // $64 moveDone
  0bdc:43 69 04         callk CosMult 4 

  0bdf:16                 neg 
  0be0:a5 03              sat temp3 

        code_0be2
  0be2:3a                toss 
  0be3:8d 05              lst temp5 
  0be5:35 05              ldi 5 
  0be7:08                 div 
  0be8:a5 05              sat temp5 

        code_0bea
  0bea:78               push1 
  0beb:8d 03              lst temp3 
  0bed:43 3d 02         callk Abs 2 

  0bf0:36                push 
  0bf1:85 05              lat temp5 
  0bf3:22                 lt? 
  0bf4:30 001e            bnt code_0c15 
  0bf7:78               push1 
  0bf8:8d 02              lst temp2 
  0bfa:43 3d 02         callk Abs 2 

  0bfd:36                push 
  0bfe:85 05              lat temp5 
  0c00:22                 lt? 
  0c01:30 0011            bnt code_0c15 
  0c04:8d 02              lst temp2 
  0c06:35 05              ldi 5 
  0c08:06                 mul 
  0c09:a5 02              sat temp2 
  0c0b:8d 03              lst temp3 
  0c0d:35 05              ldi 5 
  0c0f:06                 mul 
  0c10:a5 03              sat temp3 
  0c12:32 ffd5            jmp code_0bea 

        code_0c15
  0c15:38 00ea          pushi ea // $ea obstacles
  0c18:76               push0 
  0c19:81 02              lag  
  0c1b:4a 04             send 4 

  0c1d:a5 07              sat temp7 
  0c1f:30 0055            bnt code_0c77 
  0c22:81 43              lag  
  0c24:30 0050            bnt code_0c77 
  0c27:39 07            pushi 7 // $7 cel
  0c29:67 08             pTos x 
  0c2b:67 0a             pTos y 
  0c2d:67 08             pTos x 
  0c2f:85 02              lat temp2 
  0c31:02                 add 
  0c32:36                push 
  0c33:67 0a             pTos y 
  0c35:85 03              lat temp3 
  0c37:02                 add 
  0c38:36                push 
  0c39:39 1b            pushi 1b // $1b elements
  0c3b:76               push0 
  0c3c:85 07              lat temp7 
  0c3e:4a 04             send 4 

  0c40:36                push 
  0c41:39 59            pushi 59 // $59 size
  0c43:76               push0 
  0c44:85 07              lat temp7 
  0c46:4a 04             send 4 

  0c48:36                push 
  0c49:76               push0 
  0c4a:43 77 0e         callk AvoidPath e 

  0c4d:a5 06              sat temp6 
  0c4f:7a               push2 
  0c50:36                push 
  0c51:7a               push2 
  0c52:46 03e7 0006 04  calle 3e7 procedure_0006 4 //  

  0c58:36                push 
  0c59:63 08             pToa x 
  0c5b:04                 sub 
  0c5c:a5 02              sat temp2 
  0c5e:7a               push2 
  0c5f:8d 06              lst temp6 
  0c61:39 03            pushi 3 // $3 y
  0c63:46 03e7 0006 04  calle 3e7 procedure_0006 4 //  

  0c69:36                push 
  0c6a:63 0a             pToa y 
  0c6c:04                 sub 
  0c6d:a5 03              sat temp3 
  0c6f:7a               push2 
  0c70:39 03            pushi 3 // $3 y
  0c72:8d 06              lst temp6 
  0c74:43 72 04         callk Memory 4 


        code_0c77
  0c77:85 02              lat temp2 
  0c79:2e 0002             bt code_0c7e 
  0c7c:85 03              lat temp3 

        code_0c7e
  0c7e:30 0019            bnt code_0c9a 
  0c81:38 011b          pushi 11b // $11b setMotion
  0c84:39 03            pushi 3 // $3 y
  0c86:51 1e            class MoveTo 
  0c88:36                push 
  0c89:67 08             pTos x 
  0c8b:85 02              lat temp2 
  0c8d:02                 add 
  0c8e:36                push 
  0c8f:67 0a             pTos y 
  0c91:85 03              lat temp3 
  0c93:02                 add 
  0c94:36                push 
  0c95:54 0a             self a 

  0c97:32 0023            jmp code_0cbd 

        code_0c9a
  0c9a:87 01              lap param1 
  0c9c:30 0017            bnt code_0cb6 
  0c9f:38 011b          pushi 11b // $11b setMotion
  0ca2:78               push1 
  0ca3:76               push0 
  0ca4:38 00e4          pushi e4 // $e4 setHeading
  0ca7:78               push1 
  0ca8:36                push 
  0ca9:35 01              ldi 1 
  0cab:04                 sub 
  0cac:36                push 
  0cad:35 2d              ldi 2d 
  0caf:06                 mul 
  0cb0:36                push 
  0cb1:54 0c             self c 

  0cb3:32 0007            jmp code_0cbd 

        code_0cb6
  0cb6:38 011b          pushi 11b // $11b setMotion
  0cb9:78               push1 
  0cba:76               push0 
  0cbb:54 06             self 6 


        code_0cbd
  0cbd:48                 ret 
    )

    (method (setHeading) // method_0d7e
  0d7e:87 00              lap paramTotal 
  0d80:30 0004            bnt code_0d87 
  0d83:87 01              lap param1 
  0d85:65 0e             aTop heading 

        code_0d87
  0d87:63 66             pToa looper 
  0d89:30 0019            bnt code_0da5 
  0d8c:39 3c            pushi 3c // $3c doit
  0d8e:39 03            pushi 3 // $3 y
  0d90:7c            pushSelf 
  0d91:67 0e             pTos heading 
  0d93:8f 00              lsp paramTotal 
  0d95:35 02              ldi 2 
  0d97:20                 ge? 
  0d98:30 0002            bnt code_0d9d 
  0d9b:87 02              lap param2 

        code_0d9d
  0d9d:36                push 
  0d9e:63 66             pToa looper 
  0da0:4a 0a             send a 

  0da2:32 0022            jmp code_0dc7 

        code_0da5
  0da5:7a               push2 
  0da6:7c            pushSelf 
  0da7:67 0e             pTos heading 
  0da9:43 4c 04         callk DirLoop 4 

  0dac:8f 00              lsp paramTotal 
  0dae:35 02              ldi 2 
  0db0:20                 ge? 
  0db1:30 0013            bnt code_0dc7 
  0db4:78               push1 
  0db5:8f 02              lsp param2 
  0db7:43 06 02         callk IsObject 2 

  0dba:30 000a            bnt code_0dc7 
  0dbd:38 008d          pushi 8d // $8d cue
  0dc0:76               push0 
  0dc1:59 03            &rest 3 
  0dc3:87 02              lap param2 
  0dc5:4a 04             send 4 


        code_0dc7
  0dc7:63 0e             pToa heading 
  0dc9:48                 ret 
    )

)



