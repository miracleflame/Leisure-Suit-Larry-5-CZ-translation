(script 977)

(string
    string_03f4 "Grooper"
    string_03fc "Grycler"
)

(said
)

(local
    local0 = $0002
    local1 = $0006
    local2 = $0004
    local3 = $0000
    local4 = $0003
    local5 = $0005
    local6 = $0001
    local7 = $0007
    local8 = $0003
    local9 = $0006
    local10 = $0000
    local11 = $0004
    local12 = $0002
    local13 = $0005
    local14 = $0001
    local15 = $0007
)

// 023a
(class Grooper of Code
    (properties
        client $0
        oldCycler $0
        oldMover $0
        caller $0
    )
    (method (doit) // method_0004
  0004:3f 02             link 2 // (var $2)
  0006:63 08             pToa client 
  0008:18                 not 
  0009:30 0004            bnt code_0010 
  000c:87 01              lap param1 
  000e:65 08             aTop client 

        code_0010
  0010:39 11            pushi 11 // $11 signal
  0012:76               push0 
  0013:63 08             pToa client 
  0015:4a 04             send 4 

  0017:36                push 
  0018:34 0800            ldi 800 
  001b:12                 and 
  001c:30 0010            bnt code_002f 
  001f:63 0e             pToa caller 
  0021:30 0006            bnt code_002a 
  0024:38 008d          pushi 8d // $8d cue
  0027:76               push0 
  0028:4a 04             send 4 


        code_002a
  002a:35 00              ldi 0 
  002c:65 0e             aTop caller 
  002e:48                 ret 

        code_002f
  002f:8f 00              lsp paramTotal 
  0031:35 03              ldi 3 
  0033:20                 ge? 
  0034:30 0004            bnt code_003b 
  0037:87 03              lap param3 
  0039:65 0e             aTop caller 

        code_003b
  003b:78               push1 
  003c:67 08             pTos client 
  003e:43 0d 02         callk NumLoops 2 

  0041:36                push 
  0042:35 08              ldi 8 
  0044:22                 lt? 
  0045:30 0005            bnt code_004d 
  0048:35 04              ldi 4 
  004a:32 0002            jmp code_004f 

        code_004d
  004d:35 08              ldi 8 

        code_004f
  004f:a5 01              sat temp1 
  0051:39 77            pushi 77 // $77 contains
  0053:78               push1 
  0054:67 08             pTos client 
  0056:81 05              lag  
  0058:4a 06             send 6 

  005a:18                 not 
  005b:2e 000a             bt code_0068 
  005e:8f 00              lsp paramTotal 
  0060:35 04              ldi 4 
  0062:20                 ge? 
  0063:30 0051            bnt code_00b7 
  0066:87 04              lap param4 

        code_0068
  0068:30 004c            bnt code_00b7 
  006b:39 06            pushi 6 // $6 loop
  006d:78               push1 
  006e:8d 01              lst temp1 
  0070:35 04              ldi 4 
  0072:1a                 eq? 
  0073:30 0005            bnt code_007b 
  0076:35 02              ldi 2 
  0078:32 0002            jmp code_007d 

        code_007b
  007b:35 01              ldi 1 

        code_007d
  007d:36                push 
  007e:7a               push2 
  007f:39 3a            pushi 3a // $3a heading
  0081:76               push0 
  0082:63 08             pToa client 
  0084:4a 04             send 4 

  0086:36                push 
  0087:38 00b4          pushi b4 // $b4 busy
  008a:85 01              lat temp1 
  008c:08                 div 
  008d:02                 add 
  008e:36                push 
  008f:38 0168          pushi 168 // $168 shadWid
  0092:46 03e7 0001 04  calle 3e7 procedure_0001 4 //  

  0098:36                push 
  0099:38 0168          pushi 168 // $168 shadWid
  009c:85 01              lat temp1 
  009e:08                 div 
  009f:08                 div 
  00a0:06                 mul 
  00a1:9b 08             lsli local8 
  00a3:63 08             pToa client 
  00a5:4a 06             send 6 

  00a7:63 0e             pToa caller 
  00a9:30 0006            bnt code_00b2 
  00ac:38 008d          pushi 8d // $8d cue
  00af:76               push0 
  00b0:4a 04             send 4 


        code_00b2
  00b2:35 00              ldi 0 
  00b4:65 0e             aTop caller 
  00b6:48                 ret 

        code_00b7
  00b7:39 06            pushi 6 // $6 loop
  00b9:76               push0 
  00ba:63 08             pToa client 
  00bc:4a 04             send 4 

  00be:36                push 
  00bf:78               push1 
  00c0:67 08             pTos client 
  00c2:43 0d 02         callk NumLoops 2 

  00c5:36                push 
  00c6:35 01              ldi 1 
  00c8:04                 sub 
  00c9:1a                 eq? 
  00ca:30 0034            bnt code_0101 
  00cd:39 6f            pushi 6f // $6f isKindOf
  00cf:78               push1 
  00d0:51 56            class StopWalk 
  00d2:36                push 
  00d3:38 00dc          pushi dc // $dc cycler
  00d6:76               push0 
  00d7:63 08             pToa client 
  00d9:4a 04             send 4 

  00db:4a 06             send 6 

  00dd:30 0021            bnt code_0101 
  00e0:38 01bb          pushi 1bb // $1bb vStopped
  00e3:76               push0 
  00e4:38 00dc          pushi dc // $dc cycler
  00e7:76               push0 
  00e8:63 08             pToa client 
  00ea:4a 04             send 4 

  00ec:4a 04             send 4 

  00ee:36                push 
  00ef:35 ff              ldi ff 
  00f1:1a                 eq? 
  00f2:30 000c            bnt code_0101 
  00f5:39 07            pushi 7 // $7 cel
  00f7:76               push0 
  00f8:63 08             pToa client 
  00fa:4a 04             send 4 

  00fc:93 00             lali local0 
  00fe:32 0009            jmp code_010a 

        code_0101
  0101:39 06            pushi 6 // $6 loop
  0103:76               push0 
  0104:63 08             pToa client 
  0106:4a 04             send 4 

  0108:93 00             lali local0 

        code_010a
  010a:a5 00              sat temp0 
  010c:63 0c             pToa oldMover 
  010e:30 0009            bnt code_011a 
  0111:39 6c            pushi 6c // $6c dispose
  0113:76               push0 
  0114:4a 04             send 4 

  0116:35 00              ldi 0 
  0118:65 0c             aTop oldMover 

        code_011a
  011a:78               push1 
  011b:67 0a             pTos oldCycler 
  011d:43 06 02         callk IsObject 2 

  0120:30 002c            bnt code_014f 
  0123:39 70            pushi 70 // $70 isMemberOf
  0125:78               push1 
  0126:51 50            class Grycler 
  0128:36                push 
  0129:63 0a             pToa oldCycler 
  012b:4a 06             send 6 

  012d:2e 0011             bt code_0141 
  0130:39 70            pushi 70 // $70 isMemberOf
  0132:78               push1 
  0133:51 50            class Grycler 
  0135:36                push 
  0136:38 00dc          pushi dc // $dc cycler
  0139:76               push0 
  013a:63 08             pToa client 
  013c:4a 04             send 4 

  013e:4a 06             send 6 

  0140:18                 not 

        code_0141
  0141:30 000b            bnt code_014f 
  0144:39 6c            pushi 6c // $6c dispose
  0146:76               push0 
  0147:63 0a             pToa oldCycler 
  0149:4a 04             send 4 

  014b:35 00              ldi 0 
  014d:65 0a             aTop oldCycler 

        code_014f
  014f:63 0a             pToa oldCycler 
  0151:18                 not 
  0152:30 000a            bnt code_015f 
  0155:38 00dc          pushi dc // $dc cycler
  0158:76               push0 
  0159:63 08             pToa client 
  015b:4a 04             send 4 

  015d:65 0a             aTop oldCycler 

        code_015f
  015f:38 00dc          pushi dc // $dc cycler
  0162:76               push0 
  0163:63 08             pToa client 
  0165:4a 04             send 4 

  0167:30 0020            bnt code_018a 
  016a:39 70            pushi 70 // $70 isMemberOf
  016c:78               push1 
  016d:51 50            class Grycler 
  016f:36                push 
  0170:38 00dc          pushi dc // $dc cycler
  0173:76               push0 
  0174:63 08             pToa client 
  0176:4a 04             send 4 

  0178:4a 06             send 6 

  017a:30 000d            bnt code_018a 
  017d:39 6c            pushi 6c // $6c dispose
  017f:76               push0 
  0180:38 00dc          pushi dc // $dc cycler
  0183:76               push0 
  0184:63 08             pToa client 
  0186:4a 04             send 4 

  0188:4a 04             send 4 


        code_018a
  018a:39 3b            pushi 3b // $3b mover
  018c:76               push0 
  018d:63 08             pToa client 
  018f:4a 04             send 4 

  0191:65 0c             aTop oldMover 
  0193:38 00dc          pushi dc // $dc cycler
  0196:78               push1 
  0197:76               push0 
  0198:39 3b            pushi 3b // $3b mover
  019a:78               push1 
  019b:76               push0 
  019c:38 011b          pushi 11b // $11b setMotion
  019f:78               push1 
  01a0:76               push0 
  01a1:38 0096          pushi 96 // $96 setCycle
  01a4:39 03            pushi 3 // $3 y
  01a6:51 50            class Grycler 
  01a8:36                push 
  01a9:7c            pushSelf 
  01aa:8d 00              lst temp0 
  01ac:63 08             pToa client 
  01ae:4a 1c             send 1c 

  01b0:48                 ret 
    )

    (method (dispose) // method_01f9
  01f9:78               push1 
  01fa:67 0a             pTos oldCycler 
  01fc:43 06 02         callk IsObject 2 

  01ff:30 000b            bnt code_020d 
  0202:39 6c            pushi 6c // $6c dispose
  0204:76               push0 
  0205:63 0a             pToa oldCycler 
  0207:4a 04             send 4 

  0209:35 00              ldi 0 
  020b:65 0a             aTop oldCycler 

        code_020d
  020d:78               push1 
  020e:67 0c             pTos oldMover 
  0210:43 06 02         callk IsObject 2 

  0213:30 000b            bnt code_0221 
  0216:39 6c            pushi 6c // $6c dispose
  0218:76               push0 
  0219:63 0c             pToa oldMover 
  021b:4a 04             send 4 

  021d:35 00              ldi 0 
  021f:65 0c             aTop oldMover 

        code_0221
  0221:63 08             pToa client 
  0223:30 0006            bnt code_022c 
  0226:39 3e            pushi 3e // $3e looper
  0228:78               push1 
  0229:76               push0 
  022a:4a 06             send 6 


        code_022c
  022c:39 6c            pushi 6c // $6c dispose
  022e:76               push0 
  022f:57 01 04         super Code 4 

  0232:48                 ret 
  0233:00                bnot 
    )

    (method (cue) // method_01b1
  01b1:3f 01             link 1 // (var $1)
  01b3:78               push1 
  01b4:39 3b            pushi 3b // $3b mover
  01b6:76               push0 
  01b7:63 08             pToa client 
  01b9:4a 04             send 4 

  01bb:36                push 
  01bc:43 06 02         callk IsObject 2 

  01bf:18                 not 
  01c0:30 0009            bnt code_01cc 
  01c3:39 3b            pushi 3b // $3b mover
  01c5:78               push1 
  01c6:67 0c             pTos oldMover 
  01c8:63 08             pToa client 
  01ca:4a 06             send 6 


        code_01cc
  01cc:78               push1 
  01cd:67 0a             pTos oldCycler 
  01cf:43 06 02         callk IsObject 2 

  01d2:30 000a            bnt code_01df 
  01d5:38 00dc          pushi dc // $dc cycler
  01d8:78               push1 
  01d9:67 0a             pTos oldCycler 
  01db:63 08             pToa client 
  01dd:4a 06             send 6 


        code_01df
  01df:63 0e             pToa caller 
  01e1:a5 00              sat temp0 
  01e3:35 00              ldi 0 
  01e5:65 0a             aTop oldCycler 
  01e7:65 0c             aTop oldMover 
  01e9:65 0e             aTop caller 
  01eb:85 00              lat temp0 
  01ed:30 0008            bnt code_01f8 
  01f0:38 008d          pushi 8d // $8d cue
  01f3:76               push0 
  01f4:59 01            &rest 1 
  01f6:4a 04             send 4 


        code_01f8
  01f8:48                 ret 
    )

)

// 03a6
(class Grycler of Cycle
    (properties
        client $0
        caller $0
        cycleDir $1
        cycleCnt $0
        completed $0
        loopIndex $0
        numOfLoops $0
    )
    (method (init) // method_0274
  0274:39 6b            pushi 6b // $6b init
  0276:78               push1 
  0277:8f 01              lsp param1 
  0279:57 16 06         super Cycle 6 

  027c:87 02              lap param2 
  027e:65 0a             aTop caller 
  0280:78               push1 
  0281:67 08             pTos client 
  0283:43 0d 02         callk NumLoops 2 

  0286:36                push 
  0287:35 08              ldi 8 
  0289:22                 lt? 
  028a:30 0005            bnt code_0292 
  028d:35 04              ldi 4 
  028f:32 0002            jmp code_0294 

        code_0292
  0292:35 08              ldi 8 

        code_0294
  0294:65 14             aTop numOfLoops 
  0296:78               push1 
  0297:7a               push2 
  0298:8f 03              lsp param3 
  029a:35 2d              ldi 2d 
  029c:06                 mul 
  029d:36                push 
  029e:39 3a            pushi 3a // $3a heading
  02a0:76               push0 
  02a1:87 01              lap param1 
  02a3:4a 04             send 4 

  02a5:36                push 
  02a6:46 03d6 0002 04  calle 3d6 procedure_0002 4 //  

  02ac:36                push 
  02ad:46 03e7 0000 02  calle 3e7 procedure_0000 2 //  

  02b3:16                 neg 
  02b4:65 0c             aTop cycleDir 
  02b6:87 03              lap param3 
  02b8:65 12             aTop loopIndex 
  02ba:38 01b0          pushi 1b0 // $1b0 loopIsCorrect
  02bd:76               push0 
  02be:54 04             self 4 

  02c0:30 0043            bnt code_0306 
  02c3:39 6f            pushi 6f // $6f isKindOf
  02c5:78               push1 
  02c6:51 56            class StopWalk 
  02c8:36                push 
  02c9:38 01ac          pushi 1ac // $1ac oldCycler
  02cc:76               push0 
  02cd:39 3e            pushi 3e // $3e looper
  02cf:76               push0 
  02d0:63 08             pToa client 
  02d2:4a 04             send 4 

  02d4:4a 04             send 4 

  02d6:4a 06             send 6 

  02d8:30 0025            bnt code_0300 
  02db:38 01bb          pushi 1bb // $1bb vStopped
  02de:76               push0 
  02df:38 01ac          pushi 1ac // $1ac oldCycler
  02e2:76               push0 
  02e3:39 3e            pushi 3e // $3e looper
  02e5:76               push0 
  02e6:63 08             pToa client 
  02e8:4a 04             send 4 

  02ea:4a 04             send 4 

  02ec:4a 04             send 4 

  02ee:36                push 
  02ef:35 ff              ldi ff 
  02f1:1a                 eq? 
  02f2:30 000b            bnt code_0300 
  02f5:39 06            pushi 6 // $6 loop
  02f7:78               push1 
  02f8:63 12             pToa loopIndex 
  02fa:9b 08             lsli local8 
  02fc:63 08             pToa client 
  02fe:4a 06             send 6 


        code_0300
  0300:38 00d9          pushi d9 // $d9 cycleDone
  0303:76               push0 
  0304:54 04             self 4 


        code_0306
  0306:48                 ret 
    )

    (method (doit) // method_0307
  0307:39 06            pushi 6 // $6 loop
  0309:78               push1 
  030a:38 00d8          pushi d8 // $d8 nextCel
  030d:76               push0 
  030e:54 04             self 4 

  0310:36                push 
  0311:63 08             pToa client 
  0313:4a 06             send 6 

  0315:38 01b0          pushi 1b0 // $1b0 loopIsCorrect
  0318:76               push0 
  0319:54 04             self 4 

  031b:30 0006            bnt code_0324 
  031e:38 00d9          pushi d9 // $d9 cycleDone
  0321:76               push0 
  0322:54 04             self 4 


        code_0324
  0324:48                 ret 
    )

    (method (nextCel) // method_0353
  0353:78               push1 
  0354:89 58              lsg  
  0356:63 0e             pToa cycleCnt 
  0358:04                 sub 
  0359:36                push 
  035a:43 3d 02         callk Abs 2 

  035d:36                push 
  035e:38 00db          pushi db // $db cycleSpeed
  0361:76               push0 
  0362:63 08             pToa client 
  0364:4a 04             send 4 

  0366:22                 lt? 
  0367:2e 0006             bt code_0370 
  036a:38 01b0          pushi 1b0 // $1b0 loopIsCorrect
  036d:76               push0 
  036e:54 04             self 4 


        code_0370
  0370:30 000a            bnt code_037d 
  0373:39 06            pushi 6 // $6 loop
  0375:76               push0 
  0376:63 08             pToa client 
  0378:4a 04             send 4 

  037a:32 0022            jmp code_039f 

        code_037d
  037d:81 58              lag  
  037f:65 0e             aTop cycleCnt 
  0381:67 12             pTos loopIndex 
  0383:67 0c             pTos cycleDir 
  0385:39 08            pushi 8 // $8 underBits
  0387:63 14             pToa numOfLoops 
  0389:08                 div 
  038a:06                 mul 
  038b:02                 add 
  038c:65 12             aTop loopIndex 
  038e:7a               push2 
  038f:67 12             pTos loopIndex 
  0391:39 08            pushi 8 // $8 underBits
  0393:46 03e7 0001 04  calle 3e7 procedure_0001 4 //  

  0399:65 12             aTop loopIndex 
  039b:63 12             pToa loopIndex 
  039d:93 08             lali local8 

        code_039f
  039f:48                 ret 
    )

    (method (cycleDone) // method_0325
  0325:35 01              ldi 1 
  0327:65 10             aTop completed 
  0329:a1 25              sag  
  032b:48                 ret 
    )

    (method (loopIsCorrect) // method_032c
  032c:78               push1 
  032d:7a               push2 
  032e:67 12             pTos loopIndex 
  0330:35 2d              ldi 2d 
  0332:06                 mul 
  0333:36                push 
  0334:39 3a            pushi 3a // $3a heading
  0336:76               push0 
  0337:63 08             pToa client 
  0339:4a 04             send 4 

  033b:36                push 
  033c:46 03d6 0002 04  calle 3d6 procedure_0002 4 //  

  0342:36                push 
  0343:43 3d 02         callk Abs 2 

  0346:36                push 
  0347:38 00b4          pushi b4 // $b4 busy
  034a:63 14             pToa numOfLoops 
  034c:08                 div 
  034d:36                push 
  034e:35 01              ldi 1 
  0350:02                 add 
  0351:22                 lt? 
  0352:48                 ret 
    )

)



