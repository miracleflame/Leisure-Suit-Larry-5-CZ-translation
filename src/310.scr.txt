(script 310)

(string
    string_1842 "To you, all airports look alike (although the landscaping does vary slightly)."
    string_1891 "rm310"
    string_1897 "plane"
    string_189d "bird"
    string_18a2 "traffic"
    string_18aa "sock"
    string_18af "flag"
    string_18b4 "arrow"
    string_18ba "dash"
    string_18bf "sLand"
    string_18c5 "tree1"
    string_18cb "tree2"
    string_18d1 "tree3"
    string_18d7 "tree4"
    string_18dd "tree5"
    string_18e3 "water1"
    string_18ea "water2"
    string_18f1 "mnt1"
    string_18f6 "mnt2"
    string_18fb "cloud"
    string_1901 "the sky"
    string_1909 "Hills stretch off into the distance."
    string_192e "sky"
    string_1932 "the trees"
    string_193c "This airport is rife with trees."
    string_195d "aTree"
    string_1963 "the tree"
    string_196c "aTree2"
    string_1973 "aTree3"
    string_197a "the airplane"
    string_1987 "You hope you don't have to wait for that airplane to take off."
    string_19c6 "aPlane"
    string_19cd "aPlane2"
    string_19d5 "the tower"
    string_19df "The control tower is staffed with non-union air traffic controllers."
    string_1a24 "tower"
    string_1a2a "You"
    string_1a2e "sCrash"
    string_1a35 "sTakeOff"
    string_1a3e "theMusic3"
    string_1a48 "sFlyGumbo"
    string_1a52 "sFly"
    string_1a57 ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0001
    local5 = $0001
    local6 = $003a
    local7 = $0047
    local8 = $0001
    local9 = $0002
    local10 = $0050
    local11 = $0063
    local12 = $0001
    local13 = $0003
    local14 = $0062
    local15 = $0079
    local16 = $0001
    local17 = $0004
    local18 = $0076
    local19 = $008d
    local20 = $0001
    local21 = $0005
    local22 = $0083
    local23 = $0095
    local24 = $0001
    local25 = $0006
    local26 = $0091
    local27 = $009c
    local28 = $8000
    local29 = $0001
    local30 = $0007
    local31 = $00ab
    local32 = $0096
    local33 = $0001
    local34 = $0008
    local35 = $00c3
    local36 = $0085
    local37 = $8000
    local38 = $0000
    local39 = $0004
    local40 = $00c7
    local41 = $0064
    local42 = $0000
    local43 = $0005
    local44 = $00bc
    local45 = $0066
    local46 = $0000
    local47 = $0006
    local48 = $00ae
    local49 = $0065
    local50 = $0000
    local51 = $0007
    local52 = $00a5
    local53 = $0065
    local54 = $8000
    local55 = $0001
    local56 = $0001
    local57 = $0029
    local58 = $0023
    local59 = $0001
    local60 = $0002
    local61 = $0036
    local62 = $0035
    local63 = $0001
    local64 = $0003
    local65 = $003f
    local66 = $0044
    local67 = $0001
    local68 = $0004
    local69 = $004d
    local70 = $005a
    local71 = $0001
    local72 = $0005
    local73 = $0060
    local74 = $006f
    local75 = $8000
    local76 = $0001
    local77 = $0006
    local78 = $0070
    local79 = $0072
    local80 = $0001
    local81 = $0007
    local82 = $0073
    local83 = $0075
    local84 = $8000
    local85 = $0002
    local86 = $0000
    local87 = $0112
    local88 = $0094
    local89 = $0002
    local90 = $0001
    local91 = $00ef
    local92 = $0099
    local93 = $0002
    local94 = $0002
    local95 = $00ca
    local96 = $009d
    local97 = $0002
    local98 = $0003
    local99 = $00a7
    local100 = $009c
    local101 = $0002
    local102 = $0004
    local103 = $0091
    local104 = $0096
    local105 = $0002
    local106 = $0005
    local107 = $0086
    local108 = $0092
    local109 = $0002
    local110 = $0006
    local111 = $0086
    local112 = $0092
    local113 = $8000
)

// 014c
(instance publicrm310 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $1842
        picture $0
        style $ffff
        horizon $0
        controls $0
        north $a0
        east $a0
        south $a0
        west $a0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 6b            pushi 6b // $6b init
  0010:76               push0 
  0011:57 72 04         super LLRoom 4 

  0014:76               push0 
  0015:45 02 00         callb procedure_0002 0 //  

  0018:39 6b            pushi 6b // $6b init
  001a:76               push0 
  001b:72 0bb6          lofsa $0bb6 // sky
  001e:4a 04             send 4 

  0020:39 6b            pushi 6b // $6b init
  0022:76               push0 
  0023:72 0bf2          lofsa $0bf2 // aTree
  0026:4a 04             send 4 

  0028:39 6b            pushi 6b // $6b init
  002a:76               push0 
  002b:72 0c2e          lofsa $0c2e // aTree2
  002e:4a 04             send 4 

  0030:39 6b            pushi 6b // $6b init
  0032:76               push0 
  0033:72 0c6a          lofsa $0c6a // aTree3
  0036:4a 04             send 4 

  0038:39 6b            pushi 6b // $6b init
  003a:76               push0 
  003b:72 0ca6          lofsa $0ca6 // aPlane
  003e:4a 04             send 4 

  0040:39 6b            pushi 6b // $6b init
  0042:76               push0 
  0043:72 0cf6          lofsa $0cf6 // aPlane2
  0046:4a 04             send 4 

  0048:39 6b            pushi 6b // $6b init
  004a:76               push0 
  004b:72 0d36          lofsa $0d36 // tower
  004e:4a 04             send 4 

  0050:76               push0 
  0051:40 036d 00        call proc_03c2 0 

  0055:89 0c              lsg  
  0057:3c                 dup 
  0058:34 0140            ldi 140 
  005b:1a                 eq? 
  005c:30 0021            bnt code_0080 
  005f:7a               push2 
  0060:38 0084          pushi 84 // $84 cycles
  0063:38 013a          pushi 13a // $13a input
  0066:43 00 04         callk Load 4 

  0069:7a               push2 
  006a:38 0084          pushi 84 // $84 cycles
  006d:38 0138          pushi 138 // $138 vanishingX
  0070:43 00 04         callk Load 4 

  0073:38 008e          pushi 8e // $8e setScript
  0076:78               push1 
  0077:72 08b0          lofsa $08b0 // sLand
  007a:36                push 
  007b:54 06             self 6 

  007d:32 004f            jmp code_00cf 

        code_0080
  0080:3c                 dup 
  0081:34 0186            ldi 186 
  0084:1a                 eq? 
  0085:30 0028            bnt code_00b0 
  0088:39 6b            pushi 6b // $6b init
  008a:76               push0 
  008b:39 2b            pushi 2b // $2b number
  008d:78               push1 
  008e:38 0182          pushi 182 // $182 initialized
  0091:39 66            pushi 66 // $66 flags
  0093:78               push1 
  0094:78               push1 
  0095:39 2a            pushi 2a // $2a play
  0097:76               push0 
  0098:38 00a2          pushi a2 // $a2 setLoop
  009b:78               push1 
  009c:39 ff            pushi ff // $ff syncNum
  009e:72 13bc          lofsa $13bc // theMusic3
  00a1:4a 1a             send 1a 

  00a3:38 008e          pushi 8e // $8e setScript
  00a6:78               push1 
  00a7:72 1220          lofsa $1220 // sCrash
  00aa:36                push 
  00ab:54 06             self 6 

  00ad:32 001f            jmp code_00cf 

        code_00b0
  00b0:89 9c              lsg  
  00b2:35 03              ldi 3 
  00b4:1a                 eq? 
  00b5:30 000d            bnt code_00c5 
  00b8:38 008e          pushi 8e // $8e setScript
  00bb:78               push1 
  00bc:72 158c          lofsa $158c // sFlyGumbo
  00bf:36                push 
  00c0:54 06             self 6 

  00c2:32 000a            jmp code_00cf 

        code_00c5
  00c5:38 008e          pushi 8e // $8e setScript
  00c8:78               push1 
  00c9:72 1814          lofsa $1814 // sFly
  00cc:36                push 
  00cd:54 06             self 6 


        code_00cf
  00cf:3a                toss 
  00d0:39 3c            pushi 3c // $3c doit
  00d2:76               push0 
  00d3:81 0a              lag  
  00d5:4a 04             send 4 

  00d7:48                 ret 
    )

    (method (cue) // method_00fb
  00fb:83 02              lal local2 
  00fd:30 0045            bnt code_0145 
  0100:c3 03              +al local3 
  0102:36                push 
  0103:3c                 dup 
  0104:35 01              ldi 1 
  0106:1a                 eq? 
  0107:30 0027            bnt code_0131 
  010a:38 00c2          pushi c2 // $c2 show
  010d:76               push0 
  010e:38 0134          pushi 134 // $134 setStep
  0111:7a               push2 
  0112:39 04            pushi 4 // $4 x
  0114:3c                 dup 
  0115:38 0096          pushi 96 // $96 setCycle
  0118:78               push1 
  0119:51 17            class Fwd 
  011b:36                push 
  011c:38 011b          pushi 11b // $11b setMotion
  011f:39 04            pushi 4 // $4 x
  0121:51 1e            class MoveTo 
  0123:36                push 
  0124:8b 00              lsl local0 
  0126:8b 01              lsl local1 
  0128:7c            pushSelf 
  0129:72 021a          lofsa $021a // bird
  012c:4a 1e             send 1e 

  012e:32 0013            jmp code_0144 

        code_0131
  0131:3c                 dup 
  0132:35 02              ldi 2 
  0134:1a                 eq? 
  0135:30 000c            bnt code_0144 
  0138:35 00              ldi 0 
  013a:a3 02              sal local2 
  013c:39 6c            pushi 6c // $6c dispose
  013e:76               push0 
  013f:72 021a          lofsa $021a // bird
  0142:4a 04             send 4 


        code_0144
  0144:3a                toss 

        code_0145
  0145:48                 ret 
    )

    (method (newRoom) // method_00d8
  00d8:89 0c              lsg  
  00da:34 0186            ldi 186 
  00dd:1a                 eq? 
  00de:30 0010            bnt code_00f1 
  00e1:38 009c          pushi 9c // $9c stop
  00e4:76               push0 
  00e5:81 66              lag  
  00e7:4a 04             send 4 

  00e9:38 009c          pushi 9c // $9c stop
  00ec:76               push0 
  00ed:81 67              lag  
  00ef:4a 04             send 4 


        code_00f1
  00f1:38 0179          pushi 179 // $179 newRoom
  00f4:78               push1 
  00f5:8f 01              lsp param1 
  00f7:57 72 06         super LLRoom 6 

  00fa:48                 ret 
    )

)

// 0196
(instance plane of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $137
        loop $0
        cel $0
        priority $d
        underBits $0
        signal $7810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 0214
(instance bird of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $136
        loop $0
        cel $0
        priority $f
        underBits $0
        signal $6810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 0292
(instance traffic of Prop
    (properties
        x $105
        y $37
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $136
        loop $0
        cel $0
        priority $2
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 02f8
(instance sock of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $136
        loop $2
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 035e
(instance flag of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $136
        loop $0
        cel $0
        priority $4
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0690
(instance arrow of View
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $13b
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $101
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 06ec
(instance dash of View
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $13b
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $5810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 08aa
(instance sLand of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0746
  0746:87 01              lap param1 
  0748:65 0a             aTop state 
  074a:36                push 
  074b:3c                 dup 
  074c:35 00              ldi 0 
  074e:1a                 eq? 
  074f:30 0018            bnt code_076a 
  0752:39 2b            pushi 2b // $2b number
  0754:78               push1 
  0755:38 0138          pushi 138 // $138 vanishingX
  0758:39 06            pushi 6 // $6 loop
  075a:78               push1 
  075b:78               push1 
  075c:39 2a            pushi 2a // $2a play
  075e:76               push0 
  075f:81 66              lag  
  0761:4a 10             send 10 

  0763:35 02              ldi 2 
  0765:65 10             aTop cycles 
  0767:32 0137            jmp code_08a1 

        code_076a
  076a:3c                 dup 
  076b:35 01              ldi 1 
  076d:1a                 eq? 
  076e:30 003f            bnt code_07b0 
  0771:39 6b            pushi 6b // $6b init
  0773:76               push0 
  0774:38 011c          pushi 11c // $11c posn
  0777:7a               push2 
  0778:38 013f          pushi 13f // $13f inputLineAddr
  077b:39 35            pushi 35 // $35 b-incr
  077d:38 00a2          pushi a2 // $a2 setLoop
  0780:78               push1 
  0781:39 04            pushi 4 // $4 x
  0783:38 0120          pushi 120 // $120 setCel
  0786:78               push1 
  0787:76               push0 
  0788:38 0134          pushi 134 // $134 setStep
  078b:7a               push2 
  078c:39 07            pushi 7 // $7 cel
  078e:3c                 dup 
  078f:38 00db          pushi db // $db cycleSpeed
  0792:78               push1 
  0793:39 0a            pushi a // $a nsLeft
  0795:39 38            pushi 38 // $38 moveSpeed
  0797:78               push1 
  0798:39 03            pushi 3 // $3 y
  079a:38 011b          pushi 11b // $11b setMotion
  079d:39 04            pushi 4 // $4 x
  079f:51 1e            class MoveTo 
  07a1:36                push 
  07a2:38 00c2          pushi c2 // $c2 show
  07a5:39 73            pushi 73 // $73 add
  07a7:7c            pushSelf 
  07a8:72 019c          lofsa $019c // plane
  07ab:4a 38             send 38 

  07ad:32 00f1            jmp code_08a1 

        code_07b0
  07b0:3c                 dup 
  07b1:35 02              ldi 2 
  07b3:1a                 eq? 
  07b4:30 0038            bnt code_07ef 
  07b7:39 2b            pushi 2b // $2b number
  07b9:78               push1 
  07ba:38 013a          pushi 13a // $13a input
  07bd:39 06            pushi 6 // $6 loop
  07bf:78               push1 
  07c0:78               push1 
  07c1:39 2a            pushi 2a // $2a play
  07c3:76               push0 
  07c4:81 67              lag  
  07c6:4a 10             send 10 

  07c8:38 0096          pushi 96 // $96 setCycle
  07cb:78               push1 
  07cc:51 1a            class End 
  07ce:36                push 
  07cf:38 0134          pushi 134 // $134 setStep
  07d2:7a               push2 
  07d3:39 06            pushi 6 // $6 loop
  07d5:3c                 dup 
  07d6:38 011b          pushi 11b // $11b setMotion
  07d9:39 04            pushi 4 // $4 x
  07db:51 1e            class MoveTo 
  07dd:36                push 
  07de:39 68            pushi 68 // $68 restart
  07e0:39 79            pushi 79 // $79 first
  07e2:7c            pushSelf 
  07e3:72 019c          lofsa $019c // plane
  07e6:4a 1a             send 1a 

  07e8:35 10              ldi 10 
  07ea:65 16             aTop ticks 
  07ec:32 00b2            jmp code_08a1 

        code_07ef
  07ef:3c                 dup 
  07f0:35 03              ldi 3 
  07f2:1a                 eq? 
  07f3:30 000b            bnt code_0801 
  07f6:38 009c          pushi 9c // $9c stop
  07f9:76               push0 
  07fa:81 67              lag  
  07fc:4a 04             send 4 

  07fe:32 00a0            jmp code_08a1 

        code_0801
  0801:3c                 dup 
  0802:35 04              ldi 4 
  0804:1a                 eq? 
  0805:30 0020            bnt code_0828 
  0808:38 0134          pushi 134 // $134 setStep
  080b:7a               push2 
  080c:39 04            pushi 4 // $4 x
  080e:3c                 dup 
  080f:38 011b          pushi 11b // $11b setMotion
  0812:39 04            pushi 4 // $4 x
  0814:51 1e            class MoveTo 
  0816:36                push 
  0817:39 d9            pushi d9 // $d9 cycleDone
  0819:39 7f            pushi 7f // $7f addAfter
  081b:7c            pushSelf 
  081c:72 019c          lofsa $019c // plane
  081f:4a 14             send 14 

  0821:35 14              ldi 14 
  0823:65 16             aTop ticks 
  0825:32 0079            jmp code_08a1 

        code_0828
  0828:3c                 dup 
  0829:35 05              ldi 5 
  082b:1a                 eq? 
  082c:30 0012            bnt code_0841 
  082f:38 009f          pushi 9f // $9f fade
  0832:39 04            pushi 4 // $4 x
  0834:76               push0 
  0835:39 0f            pushi f // $f lsBottom
  0837:39 0c            pushi c // $c nsRight
  0839:78               push1 
  083a:81 66              lag  
  083c:4a 0c             send c 

  083e:32 0060            jmp code_08a1 

        code_0841
  0841:3c                 dup 
  0842:35 06              ldi 6 
  0844:1a                 eq? 
  0845:30 0007            bnt code_084f 
  0848:35 04              ldi 4 
  084a:65 12             aTop seconds 
  084c:32 0052            jmp code_08a1 

        code_084f
  084f:3c                 dup 
  0850:35 07              ldi 7 
  0852:1a                 eq? 
  0853:30 004b            bnt code_08a1 
  0856:39 20            pushi 20 // $20 state
  0858:76               push0 
  0859:39 43            pushi 43 // $43 at
  085b:78               push1 
  085c:39 08            pushi 8 // $8 underBits
  085e:51 40            class Inv 
  0860:4a 06             send 6 

  0862:4a 04             send 4 

  0864:a1 a0              sag  
  0866:38 009b          pushi 9b // $9b owner
  0869:76               push0 
  086a:39 43            pushi 43 // $43 at
  086c:78               push1 
  086d:78               push1 
  086e:51 40            class Inv 
  0870:4a 06             send 6 

  0872:4a 04             send 4 

  0874:36                push 
  0875:35 17              ldi 17 
  0877:1c                 ne? 
  0878:30 000f            bnt code_088a 
  087b:38 009b          pushi 9b // $9b owner
  087e:78               push1 
  087f:76               push0 
  0880:39 43            pushi 43 // $43 at
  0882:78               push1 
  0883:78               push1 
  0884:51 40            class Inv 
  0886:4a 06             send 6 

  0888:4a 06             send 6 


        code_088a
  088a:78               push1 
  088b:39 08            pushi 8 // $8 underBits
  088d:45 08 02         callb procedure_0008 2 //  

  0890:78               push1 
  0891:39 20            pushi 20 // $20 state
  0893:45 08 02         callb procedure_0008 2 //  

  0896:38 0179          pushi 179 // $179 newRoom
  0899:78               push1 
  089a:38 0122          pushi 122 // $122 addToPic
  089d:81 02              lag  
  089f:4a 06             send 6 


        code_08a1
  08a1:3a                toss 
  08a2:48                 ret 
  08a3:00                bnot 
    )

)

// 08e0
(instance tree1 of PicView
    (properties
        x $8b
        y $7a
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $6
        cel $3
        priority $e
        signal $4810
        palette $0
    )
)

// 0928
(instance tree2 of PicView
    (properties
        x $e
        y $92
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $6
        cel $1
        priority $e
        signal $4810
        palette $0
    )
)

// 0970
(instance tree3 of PicView
    (properties
        x $0
        y $90
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $6
        cel $2
        priority $e
        signal $4810
        palette $0
    )
)

// 09b8
(instance tree4 of PicView
    (properties
        x $16
        y $b3
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $6
        cel $0
        priority $e
        signal $4810
        palette $0
    )
)

// 0a00
(instance tree5 of PicView
    (properties
        x $131
        y $b0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $6
        cel $2
        priority $e
        signal $4810
        palette $0
    )
)

// 0a48
(instance water1 of PicView
    (properties
        x $28
        y $2d
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $8
        cel $0
        priority $1
        signal $4810
        palette $0
    )
)

// 0a90
(instance water2 of PicView
    (properties
        x $b3
        y $2c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $8
        cel $1
        priority $1
        signal $4810
        palette $0
    )
)

// 0ad8
(instance mnt1 of PicView
    (properties
        x $ea
        y $26
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $7
        cel $0
        priority $1
        signal $4810
        palette $0
    )
)

// 0b20
(instance mnt2 of PicView
    (properties
        x $c6
        y $24
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $7
        cel $0
        priority $1
        signal $4810
        palette $0
    )
)

// 0b68
(instance cloud of PicView
    (properties
        x $dd
        y $20
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $136
        loop $7
        cel $1
        priority $1
        signal $4810
        palette $0
    )
)

// 0bb0
(instance sky of Feature
    (properties
        x $9f
        y $14
        z $0
        heading $0
        noun $0
        nsTop $ffff
        nsLeft $0
        nsBottom $29
        nsRight $13f
        description $1901
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1909
    )
)

// 0bec
(instance aTree of Feature
    (properties
        x $18
        y $7f
        z $0
        heading $0
        noun $0
        nsTop $4d
        nsLeft $0
        nsBottom $b1
        nsRight $31
        description $1932
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $193c
    )
)

// 0c28
(instance aTree2 of Feature
    (properties
        x $12c
        y $8e
        z $0
        heading $0
        noun $0
        nsTop $6c
        nsLeft $11a
        nsBottom $b0
        nsRight $13f
        description $1963
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $193c
    )
)

// 0c64
(instance aTree3 of Feature
    (properties
        x $8e
        y $62
        z $0
        heading $0
        noun $0
        nsTop $49
        nsLeft $7a
        nsBottom $7c
        nsRight $a2
        description $1932
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $193c
    )
)

// 0ca0
(instance aPlane of Feature
    (properties
        x $5f
        y $42
        z $0
        heading $0
        noun $0
        nsTop $3a
        nsLeft $47
        nsBottom $4a
        nsRight $78
        description $197a
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1987
    )
)

// 0cf0
(instance aPlane2 of Feature
    (properties
        x $e7
        y $41
        z $0
        heading $0
        noun $0
        nsTop $3b
        nsLeft $d8
        nsBottom $47
        nsRight $f6
        description $197a
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_0cda
  0cda:38 010c          pushi 10c // $10c doVerb
  0cdd:7a               push2 
  0cde:8f 01              lsp param1 
  0ce0:8f 02              lsp param2 
  0ce2:59 03            &rest 3 
  0ce4:72 0ca6          lofsa $0ca6 // aPlane
  0ce7:4a 08             send 8 

  0ce9:48                 ret 
    )

)

// 0d30
(instance tower of Feature
    (properties
        x $109
        y $38
        z $0
        heading $0
        noun $0
        nsTop $22
        nsLeft $f8
        nsBottom $4f
        nsRight $11a
        description $19d5
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $19df
    )
)

// 121a
(instance sCrash of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0d6a
  0d6a:87 01              lap param1 
  0d6c:65 0a             aTop state 
  0d6e:36                push 
  0d6f:3c                 dup 
  0d70:35 00              ldi 0 
  0d72:1a                 eq? 
  0d73:30 0007            bnt code_0d7d 
  0d76:35 1e              ldi 1e 
  0d78:65 16             aTop ticks 
  0d7a:32 0494            jmp code_1211 

        code_0d7d
  0d7d:3c                 dup 
  0d7e:35 01              ldi 1 
  0d80:1a                 eq? 
  0d81:30 000f            bnt code_0d93 
  0d84:39 04            pushi 4 // $4 x
  0d86:38 0136          pushi 136 // $136 horizon
  0d89:76               push0 
  0d8a:39 6c            pushi 6c // $6c dispose
  0d8c:7c            pushSelf 
  0d8d:45 0e 08         callb procedure_000e 8 //  

  0d90:32 047e            jmp code_1211 

        code_0d93
  0d93:3c                 dup 
  0d94:35 02              ldi 2 
  0d96:1a                 eq? 
  0d97:30 0007            bnt code_0da1 
  0d9a:35 1e              ldi 1e 
  0d9c:65 16             aTop ticks 
  0d9e:32 0470            jmp code_1211 

        code_0da1
  0da1:3c                 dup 
  0da2:35 03              ldi 3 
  0da4:1a                 eq? 
  0da5:30 0055            bnt code_0dfd 
  0da8:39 2b            pushi 2b // $2b number
  0daa:78               push1 
  0dab:38 018c          pushi 18c // $18c drawPic
  0dae:39 06            pushi 6 // $6 loop
  0db0:78               push1 
  0db1:78               push1 
  0db2:39 2a            pushi 2a // $2a play
  0db4:76               push0 
  0db5:81 67              lag  
  0db7:4a 10             send 10 

  0db9:39 6b            pushi 6b // $6b init
  0dbb:76               push0 
  0dbc:38 011c          pushi 11c // $11c posn
  0dbf:7a               push2 
  0dc0:39 27            pushi 27 // $27 who
  0dc2:39 32            pushi 32 // $32 b-i2
  0dc4:38 00a2          pushi a2 // $a2 setLoop
  0dc7:78               push1 
  0dc8:78               push1 
  0dc9:38 0120          pushi 120 // $120 setCel
  0dcc:78               push1 
  0dcd:76               push0 
  0dce:38 0134          pushi 134 // $134 setStep
  0dd1:7a               push2 
  0dd2:39 0a            pushi a // $a nsLeft
  0dd4:3c                 dup 
  0dd5:39 38            pushi 38 // $38 moveSpeed
  0dd7:78               push1 
  0dd8:7a               push2 
  0dd9:38 00db          pushi db // $db cycleSpeed
  0ddc:78               push1 
  0ddd:39 09            pushi 9 // $9 nsTop
  0ddf:38 0121          pushi 121 // $121 ignoreActors
  0de2:78               push1 
  0de3:78               push1 
  0de4:39 12            pushi 12 // $12 illegalBits
  0de6:78               push1 
  0de7:76               push0 
  0de8:38 0096          pushi 96 // $96 setCycle
  0deb:39 03            pushi 3 // $3 y
  0ded:51 5d            class MCyc 
  0def:36                push 
  0df0:5b 02 04           lea 2 4 
  0df3:36                push 
  0df4:7c            pushSelf 
  0df5:72 019c          lofsa $019c // plane
  0df8:4a 42             send 42 

  0dfa:32 0414            jmp code_1211 

        code_0dfd
  0dfd:3c                 dup 
  0dfe:35 04              ldi 4 
  0e00:1a                 eq? 
  0e01:30 002f            bnt code_0e33 
  0e04:39 2b            pushi 2b // $2b number
  0e06:78               push1 
  0e07:38 0139          pushi 139 // $139 alterEgo
  0e0a:39 06            pushi 6 // $6 loop
  0e0c:78               push1 
  0e0d:78               push1 
  0e0e:39 2a            pushi 2a // $2a play
  0e10:76               push0 
  0e11:81 66              lag  
  0e13:4a 10             send 10 

  0e15:39 08            pushi 8 // $8 underBits
  0e17:38 0136          pushi 136 // $136 horizon
  0e1a:78               push1 
  0e1b:39 43            pushi 43 // $43 at
  0e1d:39 ff            pushi ff // $ff syncNum
  0e1f:39 14            pushi 14 // $14 brLeft
  0e21:39 50            pushi 50 // $50 title
  0e23:72 1a2a          lofsa $1a2a // You
  0e26:36                push 
  0e27:39 6c            pushi 6c // $6c dispose
  0e29:45 0e 10         callb procedure_000e 10 //  

  0e2c:35 02              ldi 2 
  0e2e:65 10             aTop cycles 
  0e30:32 03de            jmp code_1211 

        code_0e33
  0e33:3c                 dup 
  0e34:35 05              ldi 5 
  0e36:1a                 eq? 
  0e37:30 0026            bnt code_0e60 
  0e3a:39 2b            pushi 2b // $2b number
  0e3c:78               push1 
  0e3d:38 0188          pushi 188 // $188 picAngle
  0e40:39 06            pushi 6 // $6 loop
  0e42:78               push1 
  0e43:78               push1 
  0e44:39 2a            pushi 2a // $2a play
  0e46:76               push0 
  0e47:81 67              lag  
  0e49:4a 10             send 10 

  0e4b:38 0096          pushi 96 // $96 setCycle
  0e4e:39 03            pushi 3 // $3 y
  0e50:51 5d            class MCyc 
  0e52:36                push 
  0e53:5b 02 1d           lea 2 1d 
  0e56:36                push 
  0e57:7c            pushSelf 
  0e58:72 019c          lofsa $019c // plane
  0e5b:4a 0a             send a 

  0e5d:32 03b1            jmp code_1211 

        code_0e60
  0e60:3c                 dup 
  0e61:35 06              ldi 6 
  0e63:1a                 eq? 
  0e64:30 0016            bnt code_0e7d 
  0e67:38 011b          pushi 11b // $11b setMotion
  0e6a:39 04            pushi 4 // $4 x
  0e6c:51 1e            class MoveTo 
  0e6e:36                push 
  0e6f:38 013f          pushi 13f // $13f inputLineAddr
  0e72:39 32            pushi 32 // $32 b-i2
  0e74:7c            pushSelf 
  0e75:72 019c          lofsa $019c // plane
  0e78:4a 0c             send c 

  0e7a:32 0394            jmp code_1211 

        code_0e7d
  0e7d:3c                 dup 
  0e7e:35 07              ldi 7 
  0e80:1a                 eq? 
  0e81:30 000f            bnt code_0e93 
  0e84:39 69            pushi 69 // $69 hide
  0e86:76               push0 
  0e87:72 019c          lofsa $019c // plane
  0e8a:4a 04             send 4 

  0e8c:35 03              ldi 3 
  0e8e:65 12             aTop seconds 
  0e90:32 037e            jmp code_1211 

        code_0e93
  0e93:3c                 dup 
  0e94:35 08              ldi 8 
  0e96:1a                 eq? 
  0e97:30 0019            bnt code_0eb3 
  0e9a:81 19              lag  
  0e9c:30 0005            bnt code_0ea4 
  0e9f:39 6c            pushi 6c // $6c dispose
  0ea1:76               push0 
  0ea2:4a 04             send 4 


        code_0ea4
  0ea4:39 04            pushi 4 // $4 x
  0ea6:38 0136          pushi 136 // $136 horizon
  0ea9:7a               push2 
  0eaa:39 6c            pushi 6c // $6c dispose
  0eac:7c            pushSelf 
  0ead:45 0e 08         callb procedure_000e 8 //  

  0eb0:32 035e            jmp code_1211 

        code_0eb3
  0eb3:3c                 dup 
  0eb4:35 09              ldi 9 
  0eb6:1a                 eq? 
  0eb7:30 0007            bnt code_0ec1 
  0eba:35 02              ldi 2 
  0ebc:65 12             aTop seconds 
  0ebe:32 0350            jmp code_1211 

        code_0ec1
  0ec1:3c                 dup 
  0ec2:35 0a              ldi a 
  0ec4:1a                 eq? 
  0ec5:30 003d            bnt code_0f05 
  0ec8:39 2b            pushi 2b // $2b number
  0eca:78               push1 
  0ecb:38 018c          pushi 18c // $18c drawPic
  0ece:39 06            pushi 6 // $6 loop
  0ed0:78               push1 
  0ed1:78               push1 
  0ed2:39 2a            pushi 2a // $2a play
  0ed4:76               push0 
  0ed5:81 67              lag  
  0ed7:4a 10             send 10 

  0ed9:38 00c2          pushi c2 // $c2 show
  0edc:76               push0 
  0edd:38 00a2          pushi a2 // $a2 setLoop
  0ee0:78               push1 
  0ee1:76               push0 
  0ee2:38 0120          pushi 120 // $120 setCel
  0ee5:78               push1 
  0ee6:76               push0 
  0ee7:38 011c          pushi 11c // $11c posn
  0eea:7a               push2 
  0eeb:38 013b          pushi 13b // $13b controls
  0eee:78               push1 
  0eef:38 011b          pushi 11b // $11b setMotion
  0ef2:39 04            pushi 4 // $4 x
  0ef4:51 1e            class MoveTo 
  0ef6:36                push 
  0ef7:38 00d9          pushi d9 // $d9 cycleDone
  0efa:39 66            pushi 66 // $66 flags
  0efc:7c            pushSelf 
  0efd:72 019c          lofsa $019c // plane
  0f00:4a 24             send 24 

  0f02:32 030c            jmp code_1211 

        code_0f05
  0f05:3c                 dup 
  0f06:35 0b              ldi b 
  0f08:1a                 eq? 
  0f09:30 003d            bnt code_0f49 
  0f0c:39 08            pushi 8 // $8 underBits
  0f0e:38 0136          pushi 136 // $136 horizon
  0f11:39 03            pushi 3 // $3 y
  0f13:39 43            pushi 43 // $43 at
  0f15:39 ff            pushi ff // $ff syncNum
  0f17:38 00b9          pushi b9 // $b9 bottom
  0f1a:39 50            pushi 50 // $50 title
  0f1c:72 1a2a          lofsa $1a2a // You
  0f1f:36                push 
  0f20:39 6c            pushi 6c // $6c dispose
  0f22:45 0e 10         callb procedure_000e 10 //  

  0f25:39 2b            pushi 2b // $2b number
  0f27:78               push1 
  0f28:38 0139          pushi 139 // $139 alterEgo
  0f2b:39 06            pushi 6 // $6 loop
  0f2d:78               push1 
  0f2e:78               push1 
  0f2f:39 2a            pushi 2a // $2a play
  0f31:76               push0 
  0f32:81 66              lag  
  0f34:4a 10             send 10 

  0f36:38 0096          pushi 96 // $96 setCycle
  0f39:39 04            pushi 4 // $4 x
  0f3b:51 19            class CT 
  0f3d:36                push 
  0f3e:7a               push2 
  0f3f:78               push1 
  0f40:7c            pushSelf 
  0f41:72 019c          lofsa $019c // plane
  0f44:4a 0c             send c 

  0f46:32 02c8            jmp code_1211 

        code_0f49
  0f49:3c                 dup 
  0f4a:35 0c              ldi c 
  0f4c:1a                 eq? 
  0f4d:30 0035            bnt code_0f85 
  0f50:39 2b            pushi 2b // $2b number
  0f52:78               push1 
  0f53:38 0188          pushi 188 // $188 picAngle
  0f56:39 06            pushi 6 // $6 loop
  0f58:78               push1 
  0f59:78               push1 
  0f5a:39 2a            pushi 2a // $2a play
  0f5c:76               push0 
  0f5d:81 67              lag  
  0f5f:4a 10             send 10 

  0f61:38 0120          pushi 120 // $120 setCel
  0f64:78               push1 
  0f65:39 03            pushi 3 // $3 y
  0f67:38 011c          pushi 11c // $11c posn
  0f6a:7a               push2 
  0f6b:38 00d2          pushi d2 // $d2 useIconItem
  0f6e:39 65            pushi 65 // $65 topString
  0f70:38 0096          pushi 96 // $96 setCycle
  0f73:39 03            pushi 3 // $3 y
  0f75:51 5d            class MCyc 
  0f77:36                push 
  0f78:5b 02 26           lea 2 26 
  0f7b:36                push 
  0f7c:7c            pushSelf 
  0f7d:72 019c          lofsa $019c // plane
  0f80:4a 18             send 18 

  0f82:32 028c            jmp code_1211 

        code_0f85
  0f85:3c                 dup 
  0f86:35 0d              ldi d 
  0f88:1a                 eq? 
  0f89:30 001b            bnt code_0fa7 
  0f8c:38 0120          pushi 120 // $120 setCel
  0f8f:78               push1 
  0f90:39 08            pushi 8 // $8 underBits
  0f92:38 011b          pushi 11b // $11b setMotion
  0f95:39 04            pushi 4 // $4 x
  0f97:51 1e            class MoveTo 
  0f99:36                push 
  0f9a:39 2e            pushi 2e // $2e dx
  0f9c:39 03            pushi 3 // $3 y
  0f9e:7c            pushSelf 
  0f9f:72 019c          lofsa $019c // plane
  0fa2:4a 12             send 12 

  0fa4:32 026a            jmp code_1211 

        code_0fa7
  0fa7:3c                 dup 
  0fa8:35 0e              ldi e 
  0faa:1a                 eq? 
  0fab:30 000f            bnt code_0fbd 
  0fae:39 69            pushi 69 // $69 hide
  0fb0:76               push0 
  0fb1:72 019c          lofsa $019c // plane
  0fb4:4a 04             send 4 

  0fb6:35 03              ldi 3 
  0fb8:65 12             aTop seconds 
  0fba:32 0254            jmp code_1211 

        code_0fbd
  0fbd:3c                 dup 
  0fbe:35 0f              ldi f 
  0fc0:1a                 eq? 
  0fc1:30 001a            bnt code_0fde 
  0fc4:81 19              lag  
  0fc6:30 0005            bnt code_0fce 
  0fc9:39 6c            pushi 6c // $6c dispose
  0fcb:76               push0 
  0fcc:4a 04             send 4 


        code_0fce
  0fce:39 04            pushi 4 // $4 x
  0fd0:38 0136          pushi 136 // $136 horizon
  0fd3:39 04            pushi 4 // $4 x
  0fd5:39 6c            pushi 6c // $6c dispose
  0fd7:7c            pushSelf 
  0fd8:45 0e 08         callb procedure_000e 8 //  

  0fdb:32 0233            jmp code_1211 

        code_0fde
  0fde:3c                 dup 
  0fdf:35 10              ldi 10 
  0fe1:1a                 eq? 
  0fe2:30 0007            bnt code_0fec 
  0fe5:35 03              ldi 3 
  0fe7:65 12             aTop seconds 
  0fe9:32 0225            jmp code_1211 

        code_0fec
  0fec:3c                 dup 
  0fed:35 11              ldi 11 
  0fef:1a                 eq? 
  0ff0:30 0010            bnt code_1003 
  0ff3:39 04            pushi 4 // $4 x
  0ff5:38 0136          pushi 136 // $136 horizon
  0ff8:39 05            pushi 5 // $5 view
  0ffa:39 6c            pushi 6c // $6c dispose
  0ffc:7c            pushSelf 
  0ffd:45 0e 08         callb procedure_000e 8 //  

  1000:32 020e            jmp code_1211 

        code_1003
  1003:3c                 dup 
  1004:35 12              ldi 12 
  1006:1a                 eq? 
  1007:30 0007            bnt code_1011 
  100a:35 03              ldi 3 
  100c:65 12             aTop seconds 
  100e:32 0200            jmp code_1211 

        code_1011
  1011:3c                 dup 
  1012:35 13              ldi 13 
  1014:1a                 eq? 
  1015:30 003c            bnt code_1054 
  1018:39 2b            pushi 2b // $2b number
  101a:78               push1 
  101b:38 018c          pushi 18c // $18c drawPic
  101e:39 06            pushi 6 // $6 loop
  1020:78               push1 
  1021:78               push1 
  1022:39 2a            pushi 2a // $2a play
  1024:76               push0 
  1025:81 67              lag  
  1027:4a 10             send 10 

  1029:38 00a2          pushi a2 // $a2 setLoop
  102c:78               push1 
  102d:78               push1 
  102e:38 0120          pushi 120 // $120 setCel
  1031:78               push1 
  1032:76               push0 
  1033:38 011c          pushi 11c // $11c posn
  1036:7a               push2 
  1037:39 15            pushi 15 // $15 brBottom
  1039:39 fc            pushi fc // $fc syncTime
  103b:38 0096          pushi 96 // $96 setCycle
  103e:39 03            pushi 3 // $3 y
  1040:51 5d            class MCyc 
  1042:36                push 
  1043:5b 02 37           lea 2 37 
  1046:36                push 
  1047:7c            pushSelf 
  1048:38 00c2          pushi c2 // $c2 show
  104b:76               push0 
  104c:72 019c          lofsa $019c // plane
  104f:4a 22             send 22 

  1051:32 01bd            jmp code_1211 

        code_1054
  1054:3c                 dup 
  1055:35 14              ldi 14 
  1057:1a                 eq? 
  1058:30 0018            bnt code_1073 
  105b:39 2b            pushi 2b // $2b number
  105d:78               push1 
  105e:38 0139          pushi 139 // $139 alterEgo
  1061:39 06            pushi 6 // $6 loop
  1063:78               push1 
  1064:78               push1 
  1065:39 2a            pushi 2a // $2a play
  1067:76               push0 
  1068:81 66              lag  
  106a:4a 10             send 10 

  106c:35 02              ldi 2 
  106e:65 16             aTop ticks 
  1070:32 019e            jmp code_1211 

        code_1073
  1073:3c                 dup 
  1074:35 15              ldi 15 
  1076:1a                 eq? 
  1077:30 002a            bnt code_10a4 
  107a:39 2b            pushi 2b // $2b number
  107c:78               push1 
  107d:38 0188          pushi 188 // $188 picAngle
  1080:39 06            pushi 6 // $6 loop
  1082:78               push1 
  1083:78               push1 
  1084:39 2a            pushi 2a // $2a play
  1086:76               push0 
  1087:81 67              lag  
  1089:4a 10             send 10 

  108b:38 0096          pushi 96 // $96 setCycle
  108e:39 03            pushi 3 // $3 y
  1090:51 5d            class MCyc 
  1092:36                push 
  1093:5b 02 4c           lea 2 4c 
  1096:36                push 
  1097:7c            pushSelf 
  1098:38 00c2          pushi c2 // $c2 show
  109b:76               push0 
  109c:72 019c          lofsa $019c // plane
  109f:4a 0e             send e 

  10a1:32 016d            jmp code_1211 

        code_10a4
  10a4:3c                 dup 
  10a5:35 16              ldi 16 
  10a7:1a                 eq? 
  10a8:30 001c            bnt code_10c7 
  10ab:38 0120          pushi 120 // $120 setCel
  10ae:78               push1 
  10af:39 08            pushi 8 // $8 underBits
  10b1:38 011b          pushi 11b // $11b setMotion
  10b4:39 04            pushi 4 // $4 x
  10b6:51 1e            class MoveTo 
  10b8:36                push 
  10b9:38 00fa          pushi fa // $fa outOfTouch
  10bc:39 fb            pushi fb // $fb offScreenOK
  10be:7c            pushSelf 
  10bf:72 019c          lofsa $019c // plane
  10c2:4a 12             send 12 

  10c4:32 014a            jmp code_1211 

        code_10c7
  10c7:3c                 dup 
  10c8:35 17              ldi 17 
  10ca:1a                 eq? 
  10cb:30 000f            bnt code_10dd 
  10ce:39 69            pushi 69 // $69 hide
  10d0:76               push0 
  10d1:72 019c          lofsa $019c // plane
  10d4:4a 04             send 4 

  10d6:35 14              ldi 14 
  10d8:65 16             aTop ticks 
  10da:32 0134            jmp code_1211 

        code_10dd
  10dd:3c                 dup 
  10de:35 18              ldi 18 
  10e0:1a                 eq? 
  10e1:30 0010            bnt code_10f4 
  10e4:7a               push2 
  10e5:38 0136          pushi 136 // $136 horizon
  10e8:39 06            pushi 6 // $6 loop
  10ea:45 0e 04         callb procedure_000e 4 //  

  10ed:35 05              ldi 5 
  10ef:65 12             aTop seconds 
  10f1:32 011d            jmp code_1211 

        code_10f4
  10f4:3c                 dup 
  10f5:35 19              ldi 19 
  10f7:1a                 eq? 
  10f8:30 001f            bnt code_111a 
  10fb:39 08            pushi 8 // $8 underBits
  10fd:38 0136          pushi 136 // $136 horizon
  1100:39 07            pushi 7 // $7 cel
  1102:39 43            pushi 43 // $43 at
  1104:39 ff            pushi ff // $ff syncNum
  1106:39 14            pushi 14 // $14 brLeft
  1108:39 50            pushi 50 // $50 title
  110a:72 1a2a          lofsa $1a2a // You
  110d:36                push 
  110e:39 6c            pushi 6c // $6c dispose
  1110:45 0e 10         callb procedure_000e 10 //  

  1113:35 02              ldi 2 
  1115:65 12             aTop seconds 
  1117:32 00f7            jmp code_1211 

        code_111a
  111a:3c                 dup 
  111b:35 1a              ldi 1a 
  111d:1a                 eq? 
  111e:30 002d            bnt code_114e 
  1121:38 00c2          pushi c2 // $c2 show
  1124:76               push0 
  1125:38 00a2          pushi a2 // $a2 setLoop
  1128:78               push1 
  1129:7a               push2 
  112a:38 0120          pushi 120 // $120 setCel
  112d:78               push1 
  112e:76               push0 
  112f:38 011c          pushi 11c // $11c posn
  1132:7a               push2 
  1133:38 014b          pushi 14b // $14b readString
  1136:38 0088          pushi 88 // $88 lastTicks
  1139:38 0096          pushi 96 // $96 setCycle
  113c:39 03            pushi 3 // $3 y
  113e:51 5d            class MCyc 
  1140:36                push 
  1141:5b 02 55           lea 2 55 
  1144:36                push 
  1145:7c            pushSelf 
  1146:72 019c          lofsa $019c // plane
  1149:4a 22             send 22 

  114b:32 00c3            jmp code_1211 

        code_114e
  114e:3c                 dup 
  114f:35 1b              ldi 1b 
  1151:1a                 eq? 
  1152:30 0049            bnt code_119e 
  1155:39 2b            pushi 2b // $2b number
  1157:78               push1 
  1158:38 013a          pushi 13a // $13a input
  115b:39 06            pushi 6 // $6 loop
  115d:78               push1 
  115e:78               push1 
  115f:39 2a            pushi 2a // $2a play
  1161:76               push0 
  1162:81 67              lag  
  1164:4a 10             send 10 

  1166:38 009c          pushi 9c // $9c stop
  1169:76               push0 
  116a:81 66              lag  
  116c:4a 04             send 4 

  116e:38 00a2          pushi a2 // $a2 setLoop
  1171:78               push1 
  1172:39 05            pushi 5 // $5 view
  1174:38 0120          pushi 120 // $120 setCel
  1177:78               push1 
  1178:76               push0 
  1179:38 00db          pushi db // $db cycleSpeed
  117c:78               push1 
  117d:39 09            pushi 9 // $9 nsTop
  117f:38 0096          pushi 96 // $96 setCycle
  1182:78               push1 
  1183:51 1a            class End 
  1185:36                push 
  1186:38 011b          pushi 11b // $11b setMotion
  1189:39 03            pushi 3 // $3 y
  118b:51 1e            class MoveTo 
  118d:36                push 
  118e:39 56            pushi 56 // $56 parseLang
  1190:39 73            pushi 73 // $73 add
  1192:72 019c          lofsa $019c // plane
  1195:4a 22             send 22 

  1197:35 05              ldi 5 
  1199:65 12             aTop seconds 
  119b:32 0073            jmp code_1211 

        code_119e
  119e:3c                 dup 
  119f:35 1c              ldi 1c 
  11a1:1a                 eq? 
  11a2:30 002c            bnt code_11d1 
  11a5:39 2b            pushi 2b // $2b number
  11a7:78               push1 
  11a8:38 0187          pushi 187 // $187 west
  11ab:39 06            pushi 6 // $6 loop
  11ad:78               push1 
  11ae:78               push1 
  11af:39 2a            pushi 2a // $2a play
  11b1:76               push0 
  11b2:81 66              lag  
  11b4:4a 10             send 10 

  11b6:39 09            pushi 9 // $9 nsTop
  11b8:38 0136          pushi 136 // $136 horizon
  11bb:39 08            pushi 8 // $8 underBits
  11bd:39 43            pushi 43 // $43 at
  11bf:39 ff            pushi ff // $ff syncNum
  11c1:39 0f            pushi f // $f lsBottom
  11c3:39 46            pushi 46 // $46 width
  11c5:38 0118          pushi 118 // $118 isNotHidden
  11c8:39 6c            pushi 6c // $6c dispose
  11ca:7c            pushSelf 
  11cb:45 0e 12         callb procedure_000e 12 //  

  11ce:32 0040            jmp code_1211 

        code_11d1
  11d1:3c                 dup 
  11d2:35 1d              ldi 1d 
  11d4:1a                 eq? 
  11d5:30 0007            bnt code_11df 
  11d8:35 02              ldi 2 
  11da:65 12             aTop seconds 
  11dc:32 0032            jmp code_1211 

        code_11df
  11df:3c                 dup 
  11e0:35 1e              ldi 1e 
  11e2:1a                 eq? 
  11e3:30 0019            bnt code_11ff 
  11e6:7a               push2 
  11e7:38 0136          pushi 136 // $136 horizon
  11ea:39 09            pushi 9 // $9 nsTop
  11ec:45 0e 04         callb procedure_000e 4 //  

  11ef:7a               push2 
  11f0:38 0136          pushi 136 // $136 horizon
  11f3:39 0a            pushi a // $a nsLeft
  11f5:45 0e 04         callb procedure_000e 4 //  

  11f8:35 03              ldi 3 
  11fa:65 12             aTop seconds 
  11fc:32 0012            jmp code_1211 

        code_11ff
  11ff:3c                 dup 
  1200:35 1f              ldi 1f 
  1202:1a                 eq? 
  1203:30 000b            bnt code_1211 
  1206:38 0179          pushi 179 // $179 newRoom
  1209:78               push1 
  120a:38 0127          pushi 127 // $127 baseSetter
  120d:81 02              lag  
  120f:4a 06             send 6 


        code_1211
  1211:3a                toss 
  1212:48                 ret 
  1213:00                bnot 
    )

)

// 1380
(instance sTakeOff of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_124e
  124e:87 01              lap param1 
  1250:65 0a             aTop state 
  1252:36                push 
  1253:3c                 dup 
  1254:35 00              ldi 0 
  1256:1a                 eq? 
  1257:30 004d            bnt code_12a7 
  125a:39 2b            pushi 2b // $2b number
  125c:78               push1 
  125d:38 0137          pushi 137 // $137 vanishingY
  1260:39 06            pushi 6 // $6 loop
  1262:78               push1 
  1263:78               push1 
  1264:39 2a            pushi 2a // $2a play
  1266:76               push0 
  1267:38 009e          pushi 9e // $9e hold
  126a:78               push1 
  126b:39 0a            pushi a // $a nsLeft
  126d:81 66              lag  
  126f:4a 16             send 16 

  1271:39 6b            pushi 6b // $6b init
  1273:76               push0 
  1274:38 00c2          pushi c2 // $c2 show
  1277:76               push0 
  1278:38 011c          pushi 11c // $11c posn
  127b:7a               push2 
  127c:39 da            pushi da // $da motionCue
  127e:39 7f            pushi 7f // $7f addAfter
  1280:38 00a2          pushi a2 // $a2 setLoop
  1283:78               push1 
  1284:39 03            pushi 3 // $3 y
  1286:38 0120          pushi 120 // $120 setCel
  1289:78               push1 
  128a:76               push0 
  128b:38 0134          pushi 134 // $134 setStep
  128e:7a               push2 
  128f:7a               push2 
  1290:7a               push2 
  1291:38 00db          pushi db // $db cycleSpeed
  1294:78               push1 
  1295:39 06            pushi 6 // $6 loop
  1297:39 38            pushi 38 // $38 moveSpeed
  1299:78               push1 
  129a:7a               push2 
  129b:72 019c          lofsa $019c // plane
  129e:4a 30             send 30 

  12a0:35 3c              ldi 3c 
  12a2:65 16             aTop ticks 
  12a4:32 00d1            jmp code_1378 

        code_12a7
  12a7:3c                 dup 
  12a8:35 01              ldi 1 
  12aa:1a                 eq? 
  12ab:30 0015            bnt code_12c3 
  12ae:38 011b          pushi 11b // $11b setMotion
  12b1:39 04            pushi 4 // $4 x
  12b3:51 1e            class MoveTo 
  12b5:36                push 
  12b6:39 21            pushi 21 // $21 font
  12b8:39 77            pushi 77 // $77 contains
  12ba:7c            pushSelf 
  12bb:72 019c          lofsa $019c // plane
  12be:4a 0c             send c 

  12c0:32 00b5            jmp code_1378 

        code_12c3
  12c3:3c                 dup 
  12c4:35 02              ldi 2 
  12c6:1a                 eq? 
  12c7:30 001c            bnt code_12e6 
  12ca:38 0134          pushi 134 // $134 setStep
  12cd:7a               push2 
  12ce:39 03            pushi 3 // $3 y
  12d0:3c                 dup 
  12d1:38 011b          pushi 11b // $11b setMotion
  12d4:39 04            pushi 4 // $4 x
  12d6:51 1e            class MoveTo 
  12d8:36                push 
  12d9:39 58            pushi 58 // $58 subtitleLang
  12db:39 76            pushi 76 // $76 allTrue
  12dd:7c            pushSelf 
  12de:72 019c          lofsa $019c // plane
  12e1:4a 14             send 14 

  12e3:32 0092            jmp code_1378 

        code_12e6
  12e6:3c                 dup 
  12e7:35 03              ldi 3 
  12e9:1a                 eq? 
  12ea:30 001d            bnt code_130a 
  12ed:38 0134          pushi 134 // $134 setStep
  12f0:7a               push2 
  12f1:39 04            pushi 4 // $4 x
  12f3:3c                 dup 
  12f4:38 011b          pushi 11b // $11b setMotion
  12f7:39 04            pushi 4 // $4 x
  12f9:51 1e            class MoveTo 
  12fb:36                push 
  12fc:38 0082          pushi 82 // $82 start
  12ff:39 73            pushi 73 // $73 add
  1301:7c            pushSelf 
  1302:72 019c          lofsa $019c // plane
  1305:4a 14             send 14 

  1307:32 006e            jmp code_1378 

        code_130a
  130a:3c                 dup 
  130b:35 04              ldi 4 
  130d:1a                 eq? 
  130e:30 001d            bnt code_132e 
  1311:38 0096          pushi 96 // $96 setCycle
  1314:7a               push2 
  1315:51 1a            class End 
  1317:36                push 
  1318:7c            pushSelf 
  1319:38 011b          pushi 11b // $11b setMotion
  131c:39 03            pushi 3 // $3 y
  131e:51 1e            class MoveTo 
  1320:36                push 
  1321:38 00be          pushi be // $be maskLoop
  1324:39 6f            pushi 6f // $6f isKindOf
  1326:72 019c          lofsa $019c // plane
  1329:4a 12             send 12 

  132b:32 004a            jmp code_1378 

        code_132e
  132e:3c                 dup 
  132f:35 05              ldi 5 
  1331:1a                 eq? 
  1332:30 002f            bnt code_1364 
  1335:39 7a            pushi 7a // $7a release
  1337:76               push0 
  1338:38 009f          pushi 9f // $9f fade
  133b:39 04            pushi 4 // $4 x
  133d:76               push0 
  133e:39 0f            pushi f // $f lsBottom
  1340:39 05            pushi 5 // $5 view
  1342:78               push1 
  1343:81 66              lag  
  1345:4a 10             send 10 

  1347:38 0134          pushi 134 // $134 setStep
  134a:7a               push2 
  134b:39 06            pushi 6 // $6 loop
  134d:3c                 dup 
  134e:38 011b          pushi 11b // $11b setMotion
  1351:39 04            pushi 4 // $4 x
  1353:51 1e            class MoveTo 
  1355:36                push 
  1356:38 0161          pushi 161 // $161 topBordColor2
  1359:39 0c            pushi c // $c nsRight
  135b:7c            pushSelf 
  135c:72 019c          lofsa $019c // plane
  135f:4a 14             send 14 

  1361:32 0014            jmp code_1378 

        code_1364
  1364:3c                 dup 
  1365:35 06              ldi 6 
  1367:1a                 eq? 
  1368:30 000d            bnt code_1378 
  136b:39 6c            pushi 6c // $6c dispose
  136d:76               push0 
  136e:72 019c          lofsa $019c // plane
  1371:4a 04             send 4 

  1373:39 6c            pushi 6c // $6c dispose
  1375:76               push0 
  1376:54 04             self 4 


        code_1378
  1378:3a                toss 
  1379:48                 ret 
    )

)

// 13b6
(instance theMusic3 of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 1586
(instance sFlyGumbo of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_13ea
  13ea:87 01              lap param1 
  13ec:65 0a             aTop state 
  13ee:36                push 
  13ef:3c                 dup 
  13f0:35 00              ldi 0 
  13f2:1a                 eq? 
  13f3:30 000e            bnt code_1404 
  13f6:38 008e          pushi 8e // $8e setScript
  13f9:7a               push2 
  13fa:72 1386          lofsa $1386 // sTakeOff
  13fd:36                push 
  13fe:7c            pushSelf 
  13ff:54 08             self 8 

  1401:32 0179            jmp code_157d 

        code_1404
  1404:3c                 dup 
  1405:35 01              ldi 1 
  1407:1a                 eq? 
  1408:30 00a2            bnt code_14ad 
  140b:38 00c9          pushi c9 // $c9 disable
  140e:76               push0 
  140f:81 45              lag  
  1411:4a 04             send 4 

  1413:35 03              ldi 3 
  1415:a1 9c              sag  
  1417:39 2b            pushi 2b // $2b number
  1419:78               push1 
  141a:38 013b          pushi 13b // $13b controls
  141d:39 06            pushi 6 // $6 loop
  141f:78               push1 
  1420:78               push1 
  1421:39 2a            pushi 2a // $2a play
  1423:78               push1 
  1424:7c            pushSelf 
  1425:81 67              lag  
  1427:4a 12             send 12 

  1429:81 19              lag  
  142b:30 0005            bnt code_1433 
  142e:39 6c            pushi 6c // $6c dispose
  1430:76               push0 
  1431:4a 04             send 4 


        code_1433
  1433:39 74            pushi 74 // $74 eachElementDo
  1435:78               push1 
  1436:39 6c            pushi 6c // $6c dispose
  1438:81 05              lag  
  143a:4a 06             send 6 

  143c:38 018c          pushi 18c // $18c drawPic
  143f:7a               push2 
  1440:38 013b          pushi 13b // $13b controls
  1443:39 0a            pushi a // $a nsLeft
  1445:81 02              lag  
  1447:4a 08             send 8 

  1449:39 07            pushi 7 // $7 cel
  144b:38 0136          pushi 136 // $136 horizon
  144e:39 0b            pushi b // $b nsBottom
  1450:39 43            pushi 43 // $43 at
  1452:39 ff            pushi ff // $ff syncNum
  1454:39 14            pushi 14 // $14 brLeft
  1456:39 6c            pushi 6c // $6c dispose
  1458:7c            pushSelf 
  1459:45 0e 0e         callb procedure_000e e //  

  145c:39 6b            pushi 6b // $6b init
  145e:76               push0 
  145f:38 00a2          pushi a2 // $a2 setLoop
  1462:78               push1 
  1463:78               push1 
  1464:39 42            pushi 42 // $42 setPri
  1466:78               push1 
  1467:39 0f            pushi f // $f lsBottom
  1469:38 011c          pushi 11c // $11c posn
  146c:7a               push2 
  146d:38 00be          pushi be // $be maskLoop
  1470:39 7a            pushi 7a // $7a release
  1472:72 0696          lofsa $0696 // arrow
  1475:4a 18             send 18 

  1477:39 6b            pushi 6b // $6b init
  1479:76               push0 
  147a:39 42            pushi 42 // $42 setPri
  147c:78               push1 
  147d:78               push1 
  147e:38 00a2          pushi a2 // $a2 setLoop
  1481:78               push1 
  1482:7a               push2 
  1483:38 011c          pushi 11c // $11c posn
  1486:7a               push2 
  1487:39 04            pushi 4 // $4 x
  1489:76               push0 
  148a:72 0696          lofsa $0696 // arrow
  148d:4a 04             send 4 

  148f:36                push 
  1490:35 02              ldi 2 
  1492:02                 add 
  1493:36                push 
  1494:39 03            pushi 3 // $3 y
  1496:76               push0 
  1497:72 0696          lofsa $0696 // arrow
  149a:4a 04             send 4 

  149c:36                push 
  149d:35 02              ldi 2 
  149f:04                 sub 
  14a0:36                push 
  14a1:38 0122          pushi 122 // $122 addToPic
  14a4:76               push0 
  14a5:72 06f2          lofsa $06f2 // dash
  14a8:4a 1c             send 1c 

  14aa:32 00d0            jmp code_157d 

        code_14ad
  14ad:3c                 dup 
  14ae:35 02              ldi 2 
  14b0:1a                 eq? 
  14b1:30 000b            bnt code_14bf 
  14b4:35 1e              ldi 1e 
  14b6:65 16             aTop ticks 
  14b8:35 08              ldi 8 
  14ba:65 1a             aTop register 
  14bc:32 00be            jmp code_157d 

        code_14bf
  14bf:3c                 dup 
  14c0:35 03              ldi 3 
  14c2:1a                 eq? 
  14c3:30 002e            bnt code_14f4 
  14c6:63 0a             pToa state 
  14c8:65 0c             aTop start 
  14ca:38 011c          pushi 11c // $11c posn
  14cd:7a               push2 
  14ce:39 04            pushi 4 // $4 x
  14d0:76               push0 
  14d1:72 0696          lofsa $0696 // arrow
  14d4:4a 04             send 4 

  14d6:36                push 
  14d7:35 05              ldi 5 
  14d9:04                 sub 
  14da:36                push 
  14db:39 03            pushi 3 // $3 y
  14dd:76               push0 
  14de:72 0696          lofsa $0696 // arrow
  14e1:4a 04             send 4 

  14e3:36                push 
  14e4:35 01              ldi 1 
  14e6:04                 sub 
  14e7:36                push 
  14e8:72 0696          lofsa $0696 // arrow
  14eb:4a 08             send 8 

  14ed:35 1e              ldi 1e 
  14ef:65 16             aTop ticks 
  14f1:32 0089            jmp code_157d 

        code_14f4
  14f4:3c                 dup 
  14f5:35 04              ldi 4 
  14f7:1a                 eq? 
  14f8:30 003a            bnt code_1535 
  14fb:39 6b            pushi 6b // $6b init
  14fd:76               push0 
  14fe:39 42            pushi 42 // $42 setPri
  1500:78               push1 
  1501:78               push1 
  1502:38 00a2          pushi a2 // $a2 setLoop
  1505:78               push1 
  1506:7a               push2 
  1507:38 011c          pushi 11c // $11c posn
  150a:7a               push2 
  150b:39 04            pushi 4 // $4 x
  150d:76               push0 
  150e:72 0696          lofsa $0696 // arrow
  1511:4a 04             send 4 

  1513:36                push 
  1514:35 02              ldi 2 
  1516:02                 add 
  1517:36                push 
  1518:39 03            pushi 3 // $3 y
  151a:76               push0 
  151b:72 0696          lofsa $0696 // arrow
  151e:4a 04             send 4 

  1520:36                push 
  1521:35 02              ldi 2 
  1523:04                 sub 
  1524:36                push 
  1525:38 0122          pushi 122 // $122 addToPic
  1528:76               push0 
  1529:72 06f2          lofsa $06f2 // dash
  152c:4a 1c             send 1c 

  152e:35 1e              ldi 1e 
  1530:65 16             aTop ticks 
  1532:32 0048            jmp code_157d 

        code_1535
  1535:3c                 dup 
  1536:35 05              ldi 5 
  1538:1a                 eq? 
  1539:30 0027            bnt code_1563 
  153c:6d 1a            dpToa register 
  153e:18                 not 
  153f:30 0019            bnt code_155b 
  1542:39 2b            pushi 2b // $2b number
  1544:78               push1 
  1545:38 0141          pushi 141 // $141 curEvent
  1548:39 06            pushi 6 // $6 loop
  154a:78               push1 
  154b:39 ff            pushi ff // $ff syncNum
  154d:39 2a            pushi 2a // $2a play
  154f:76               push0 
  1550:81 66              lag  
  1552:4a 10             send 10 

  1554:35 02              ldi 2 
  1556:65 10             aTop cycles 
  1558:32 0022            jmp code_157d 

        code_155b
  155b:39 6b            pushi 6b // $6b init
  155d:76               push0 
  155e:54 04             self 4 

  1560:32 001a            jmp code_157d 

        code_1563
  1563:3c                 dup 
  1564:35 06              ldi 6 
  1566:1a                 eq? 
  1567:30 0013            bnt code_157d 
  156a:38 00a7          pushi a7 // $a7 enable
  156d:76               push0 
  156e:81 45              lag  
  1570:4a 04             send 4 

  1572:38 0179          pushi 179 // $179 newRoom
  1575:78               push1 
  1576:38 0140          pushi 140 // $140 mapKeyToDir
  1579:81 02              lag  
  157b:4a 06             send 6 


        code_157d
  157d:3a                toss 
  157e:48                 ret 
  157f:00                bnot 
    )

)

// 180e
(instance sFly of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_15ba
  15ba:87 01              lap param1 
  15bc:65 0a             aTop state 
  15be:36                push 
  15bf:3c                 dup 
  15c0:35 00              ldi 0 
  15c2:1a                 eq? 
  15c3:30 000e            bnt code_15d4 
  15c6:38 008e          pushi 8e // $8e setScript
  15c9:7a               push2 
  15ca:72 1386          lofsa $1386 // sTakeOff
  15cd:36                push 
  15ce:7c            pushSelf 
  15cf:54 08             self 8 

  15d1:32 0231            jmp code_1805 

        code_15d4
  15d4:3c                 dup 
  15d5:35 01              ldi 1 
  15d7:1a                 eq? 
  15d8:30 00b3            bnt code_168e 
  15db:89 a0              lsg  
  15dd:35 00              ldi 0 
  15df:1a                 eq? 
  15e0:30 0092            bnt code_1675 
  15e3:38 00c9          pushi c9 // $c9 disable
  15e6:76               push0 
  15e7:81 45              lag  
  15e9:4a 04             send 4 

  15eb:39 2b            pushi 2b // $2b number
  15ed:78               push1 
  15ee:38 013b          pushi 13b // $13b controls
  15f1:39 06            pushi 6 // $6 loop
  15f3:78               push1 
  15f4:78               push1 
  15f5:39 2a            pushi 2a // $2a play
  15f7:78               push1 
  15f8:7c            pushSelf 
  15f9:81 67              lag  
  15fb:4a 12             send 12 

  15fd:81 19              lag  
  15ff:30 0005            bnt code_1607 
  1602:39 6c            pushi 6c // $6c dispose
  1604:76               push0 
  1605:4a 04             send 4 


        code_1607
  1607:39 74            pushi 74 // $74 eachElementDo
  1609:78               push1 
  160a:39 6c            pushi 6c // $6c dispose
  160c:81 05              lag  
  160e:4a 06             send 6 

  1610:38 018c          pushi 18c // $18c drawPic
  1613:7a               push2 
  1614:38 013b          pushi 13b // $13b controls
  1617:39 0a            pushi a // $a nsLeft
  1619:81 02              lag  
  161b:4a 08             send 8 

  161d:39 6b            pushi 6b // $6b init
  161f:76               push0 
  1620:39 42            pushi 42 // $42 setPri
  1622:78               push1 
  1623:39 0f            pushi f // $f lsBottom
  1625:38 011c          pushi 11c // $11c posn
  1628:7a               push2 
  1629:39 34            pushi 34 // $34 b-xAxis
  162b:39 67            pushi 67 // $67 quitGame
  162d:38 00a2          pushi a2 // $a2 setLoop
  1630:78               push1 
  1631:76               push0 
  1632:72 0696          lofsa $0696 // arrow
  1635:4a 18             send 18 

  1637:39 6b            pushi 6b // $6b init
  1639:76               push0 
  163a:39 42            pushi 42 // $42 setPri
  163c:78               push1 
  163d:78               push1 
  163e:38 00a2          pushi a2 // $a2 setLoop
  1641:78               push1 
  1642:7a               push2 
  1643:38 011c          pushi 11c // $11c posn
  1646:7a               push2 
  1647:39 04            pushi 4 // $4 x
  1649:76               push0 
  164a:72 0696          lofsa $0696 // arrow
  164d:4a 04             send 4 

  164f:36                push 
  1650:35 02              ldi 2 
  1652:04                 sub 
  1653:36                push 
  1654:39 03            pushi 3 // $3 y
  1656:76               push0 
  1657:72 0696          lofsa $0696 // arrow
  165a:4a 04             send 4 

  165c:36                push 
  165d:35 02              ldi 2 
  165f:04                 sub 
  1660:36                push 
  1661:38 0122          pushi 122 // $122 addToPic
  1664:76               push0 
  1665:72 06f2          lofsa $06f2 // dash
  1668:4a 1c             send 1c 

  166a:35 02              ldi 2 
  166c:65 12             aTop seconds 
  166e:35 06              ldi 6 
  1670:65 1a             aTop register 
  1672:32 0190            jmp code_1805 

        code_1675
  1675:38 018c          pushi 18c // $18c drawPic
  1678:7a               push2 
  1679:78               push1 
  167a:39 0a            pushi a // $a nsLeft
  167c:81 02              lag  
  167e:4a 08             send 8 

  1680:38 0179          pushi 179 // $179 newRoom
  1683:78               push1 
  1684:38 0140          pushi 140 // $140 mapKeyToDir
  1687:81 02              lag  
  1689:4a 06             send 6 

  168b:32 0177            jmp code_1805 

        code_168e
  168e:3c                 dup 
  168f:35 02              ldi 2 
  1691:1a                 eq? 
  1692:30 002e            bnt code_16c3 
  1695:63 0a             pToa state 
  1697:65 0c             aTop start 
  1699:38 011c          pushi 11c // $11c posn
  169c:7a               push2 
  169d:39 04            pushi 4 // $4 x
  169f:76               push0 
  16a0:72 0696          lofsa $0696 // arrow
  16a3:4a 04             send 4 

  16a5:36                push 
  16a6:35 05              ldi 5 
  16a8:02                 add 
  16a9:36                push 
  16aa:39 03            pushi 3 // $3 y
  16ac:76               push0 
  16ad:72 0696          lofsa $0696 // arrow
  16b0:4a 04             send 4 

  16b2:36                push 
  16b3:35 02              ldi 2 
  16b5:04                 sub 
  16b6:36                push 
  16b7:72 0696          lofsa $0696 // arrow
  16ba:4a 08             send 8 

  16bc:35 1e              ldi 1e 
  16be:65 16             aTop ticks 
  16c0:32 0142            jmp code_1805 

        code_16c3
  16c3:3c                 dup 
  16c4:35 03              ldi 3 
  16c6:1a                 eq? 
  16c7:30 003a            bnt code_1704 
  16ca:39 6b            pushi 6b // $6b init
  16cc:76               push0 
  16cd:39 42            pushi 42 // $42 setPri
  16cf:78               push1 
  16d0:78               push1 
  16d1:38 00a2          pushi a2 // $a2 setLoop
  16d4:78               push1 
  16d5:7a               push2 
  16d6:38 011c          pushi 11c // $11c posn
  16d9:7a               push2 
  16da:39 04            pushi 4 // $4 x
  16dc:76               push0 
  16dd:72 0696          lofsa $0696 // arrow
  16e0:4a 04             send 4 

  16e2:36                push 
  16e3:35 02              ldi 2 
  16e5:04                 sub 
  16e6:36                push 
  16e7:39 03            pushi 3 // $3 y
  16e9:76               push0 
  16ea:72 0696          lofsa $0696 // arrow
  16ed:4a 04             send 4 

  16ef:36                push 
  16f0:35 02              ldi 2 
  16f2:04                 sub 
  16f3:36                push 
  16f4:38 0122          pushi 122 // $122 addToPic
  16f7:76               push0 
  16f8:72 06f2          lofsa $06f2 // dash
  16fb:4a 1c             send 1c 

  16fd:35 1e              ldi 1e 
  16ff:65 16             aTop ticks 
  1701:32 0101            jmp code_1805 

        code_1704
  1704:3c                 dup 
  1705:35 04              ldi 4 
  1707:1a                 eq? 
  1708:30 003c            bnt code_1747 
  170b:6d 1a            dpToa register 
  170d:18                 not 
  170e:30 002e            bnt code_173f 
  1711:35 01              ldi 1 
  1713:65 16             aTop ticks 
  1715:35 07              ldi 7 
  1717:65 1a             aTop register 
  1719:38 011c          pushi 11c // $11c posn
  171c:7a               push2 
  171d:39 04            pushi 4 // $4 x
  171f:76               push0 
  1720:72 0696          lofsa $0696 // arrow
  1723:4a 04             send 4 

  1725:36                push 
  1726:35 01              ldi 1 
  1728:02                 add 
  1729:36                push 
  172a:39 03            pushi 3 // $3 y
  172c:76               push0 
  172d:72 0696          lofsa $0696 // arrow
  1730:4a 04             send 4 

  1732:36                push 
  1733:35 01              ldi 1 
  1735:04                 sub 
  1736:36                push 
  1737:72 0696          lofsa $0696 // arrow
  173a:4a 08             send 8 

  173c:32 00c6            jmp code_1805 

        code_173f
  173f:39 6b            pushi 6b // $6b init
  1741:76               push0 
  1742:54 04             self 4 

  1744:32 00be            jmp code_1805 

        code_1747
  1747:3c                 dup 
  1748:35 05              ldi 5 
  174a:1a                 eq? 
  174b:30 002e            bnt code_177c 
  174e:63 0a             pToa state 
  1750:65 0c             aTop start 
  1752:38 011c          pushi 11c // $11c posn
  1755:7a               push2 
  1756:39 04            pushi 4 // $4 x
  1758:76               push0 
  1759:72 0696          lofsa $0696 // arrow
  175c:4a 04             send 4 

  175e:36                push 
  175f:35 05              ldi 5 
  1761:02                 add 
  1762:36                push 
  1763:39 03            pushi 3 // $3 y
  1765:76               push0 
  1766:72 0696          lofsa $0696 // arrow
  1769:4a 04             send 4 

  176b:36                push 
  176c:35 01              ldi 1 
  176e:02                 add 
  176f:36                push 
  1770:72 0696          lofsa $0696 // arrow
  1773:4a 08             send 8 

  1775:35 1e              ldi 1e 
  1777:65 16             aTop ticks 
  1779:32 0089            jmp code_1805 

        code_177c
  177c:3c                 dup 
  177d:35 06              ldi 6 
  177f:1a                 eq? 
  1780:30 003a            bnt code_17bd 
  1783:39 6b            pushi 6b // $6b init
  1785:76               push0 
  1786:39 42            pushi 42 // $42 setPri
  1788:78               push1 
  1789:78               push1 
  178a:38 00a2          pushi a2 // $a2 setLoop
  178d:78               push1 
  178e:7a               push2 
  178f:38 011c          pushi 11c // $11c posn
  1792:7a               push2 
  1793:39 04            pushi 4 // $4 x
  1795:76               push0 
  1796:72 0696          lofsa $0696 // arrow
  1799:4a 04             send 4 

  179b:36                push 
  179c:35 02              ldi 2 
  179e:04                 sub 
  179f:36                push 
  17a0:39 03            pushi 3 // $3 y
  17a2:76               push0 
  17a3:72 0696          lofsa $0696 // arrow
  17a6:4a 04             send 4 

  17a8:36                push 
  17a9:35 02              ldi 2 
  17ab:04                 sub 
  17ac:36                push 
  17ad:38 0122          pushi 122 // $122 addToPic
  17b0:76               push0 
  17b1:72 06f2          lofsa $06f2 // dash
  17b4:4a 1c             send 1c 

  17b6:35 1e              ldi 1e 
  17b8:65 16             aTop ticks 
  17ba:32 0048            jmp code_1805 

        code_17bd
  17bd:3c                 dup 
  17be:35 07              ldi 7 
  17c0:1a                 eq? 
  17c1:30 0027            bnt code_17eb 
  17c4:6d 1a            dpToa register 
  17c6:18                 not 
  17c7:30 0019            bnt code_17e3 
  17ca:39 2b            pushi 2b // $2b number
  17cc:78               push1 
  17cd:38 0141          pushi 141 // $141 curEvent
  17d0:39 06            pushi 6 // $6 loop
  17d2:78               push1 
  17d3:39 ff            pushi ff // $ff syncNum
  17d5:39 2a            pushi 2a // $2a play
  17d7:76               push0 
  17d8:81 66              lag  
  17da:4a 10             send 10 

  17dc:35 02              ldi 2 
  17de:65 10             aTop cycles 
  17e0:32 0022            jmp code_1805 

        code_17e3
  17e3:39 6b            pushi 6b // $6b init
  17e5:76               push0 
  17e6:54 04             self 4 

  17e8:32 001a            jmp code_1805 

        code_17eb
  17eb:3c                 dup 
  17ec:35 08              ldi 8 
  17ee:1a                 eq? 
  17ef:30 0013            bnt code_1805 
  17f2:38 00a7          pushi a7 // $a7 enable
  17f5:76               push0 
  17f6:81 45              lag  
  17f8:4a 04             send 4 

  17fa:38 0179          pushi 179 // $179 newRoom
  17fd:78               push1 
  17fe:38 0140          pushi 140 // $140 mapKeyToDir
  1801:81 02              lag  
  1803:4a 06             send 6 


        code_1805
  1805:3a                toss 
  1806:48                 ret 
  1807:00                bnot 
    )

)



(procedure proc_03c2
  03c2:38 018c          pushi 18c // $18c drawPic
  03c5:78               push1 
  03c6:38 0136          pushi 136 // $136 horizon
  03c9:81 02              lag  
  03cb:4a 06             send 6 

  03cd:39 6b            pushi 6b // $6b init
  03cf:76               push0 
  03d0:38 0096          pushi 96 // $96 setCycle
  03d3:78               push1 
  03d4:51 17            class Fwd 
  03d6:36                push 
  03d7:72 0298          lofsa $0298 // traffic
  03da:4a 0a             send a 

  03dc:89 a0              lsg  
  03de:3c                 dup 
  03df:35 00              ldi 0 
  03e1:1a                 eq? 
  03e2:30 0088            bnt code_046d 
  03e5:39 6b            pushi 6b // $6b init
  03e7:76               push0 
  03e8:38 011c          pushi 11c // $11c posn
  03eb:7a               push2 
  03ec:38 0104          pushi 104 // $104 gx
  03ef:38 00a4          pushi a4 // $a4 check
  03f2:38 0096          pushi 96 // $96 setCycle
  03f5:78               push1 
  03f6:51 17            class Fwd 
  03f8:36                push 
  03f9:72 02fe          lofsa $02fe // sock
  03fc:4a 12             send 12 

  03fe:39 6b            pushi 6b // $6b init
  0400:76               push0 
  0401:38 00a2          pushi a2 // $a2 setLoop
  0404:78               push1 
  0405:78               push1 
  0406:38 011c          pushi 11c // $11c posn
  0409:7a               push2 
  040a:39 1d            pushi 1d // $1d back
  040c:39 28            pushi 28 // $28 message
  040e:38 0096          pushi 96 // $96 setCycle
  0411:78               push1 
  0412:51 17            class Fwd 
  0414:36                push 
  0415:72 0364          lofsa $0364 // flag
  0418:4a 18             send 18 

  041a:39 6b            pushi 6b // $6b init
  041c:76               push0 
  041d:72 08e6          lofsa $08e6 // tree1
  0420:4a 04             send 4 

  0422:39 6b            pushi 6b // $6b init
  0424:76               push0 
  0425:72 092e          lofsa $092e // tree2
  0428:4a 04             send 4 

  042a:39 6b            pushi 6b // $6b init
  042c:76               push0 
  042d:72 0976          lofsa $0976 // tree3
  0430:4a 04             send 4 

  0432:39 6b            pushi 6b // $6b init
  0434:76               push0 
  0435:72 09be          lofsa $09be // tree4
  0438:4a 04             send 4 

  043a:39 6b            pushi 6b // $6b init
  043c:76               push0 
  043d:72 0a06          lofsa $0a06 // tree5
  0440:4a 04             send 4 

  0442:39 6b            pushi 6b // $6b init
  0444:76               push0 
  0445:72 0a4e          lofsa $0a4e // water1
  0448:4a 04             send 4 

  044a:39 6b            pushi 6b // $6b init
  044c:76               push0 
  044d:72 0a96          lofsa $0a96 // water2
  0450:4a 04             send 4 

  0452:39 6b            pushi 6b // $6b init
  0454:76               push0 
  0455:72 0ade          lofsa $0ade // mnt1
  0458:4a 04             send 4 

  045a:39 6b            pushi 6b // $6b init
  045c:76               push0 
  045d:72 0b26          lofsa $0b26 // mnt2
  0460:4a 04             send 4 

  0462:39 6b            pushi 6b // $6b init
  0464:76               push0 
  0465:72 0b6e          lofsa $0b6e // cloud
  0468:4a 04             send 4 

  046a:32 00bc            jmp code_0529 

        code_046d
  046d:3c                 dup 
  046e:35 01              ldi 1 
  0470:1a                 eq? 
  0471:30 0038            bnt code_04ac 
  0474:39 6b            pushi 6b // $6b init
  0476:76               push0 
  0477:38 011c          pushi 11c // $11c posn
  047a:7a               push2 
  047b:38 00b9          pushi b9 // $b9 bottom
  047e:39 74            pushi 74 // $74 eachElementDo
  0480:38 0096          pushi 96 // $96 setCycle
  0483:78               push1 
  0484:51 17            class Fwd 
  0486:36                push 
  0487:72 02fe          lofsa $02fe // sock
  048a:4a 12             send 12 

  048c:39 6b            pushi 6b // $6b init
  048e:76               push0 
  048f:38 00a2          pushi a2 // $a2 setLoop
  0492:78               push1 
  0493:39 03            pushi 3 // $3 y
  0495:38 011c          pushi 11c // $11c posn
  0498:7a               push2 
  0499:39 22            pushi 22 // $22 type
  049b:39 2c            pushi 2c // $2c nodePtr
  049d:38 0096          pushi 96 // $96 setCycle
  04a0:78               push1 
  04a1:51 17            class Fwd 
  04a3:36                push 
  04a4:72 0364          lofsa $0364 // flag
  04a7:4a 18             send 18 

  04a9:32 007d            jmp code_0529 

        code_04ac
  04ac:3c                 dup 
  04ad:35 03              ldi 3 
  04af:1a                 eq? 
  04b0:30 0039            bnt code_04ec 
  04b3:39 6b            pushi 6b // $6b init
  04b5:76               push0 
  04b6:38 011c          pushi 11c // $11c posn
  04b9:7a               push2 
  04ba:38 0104          pushi 104 // $104 gx
  04bd:38 00a4          pushi a4 // $a4 check
  04c0:38 0096          pushi 96 // $96 setCycle
  04c3:78               push1 
  04c4:51 17            class Fwd 
  04c6:36                push 
  04c7:72 02fe          lofsa $02fe // sock
  04ca:4a 12             send 12 

  04cc:39 6b            pushi 6b // $6b init
  04ce:76               push0 
  04cf:38 00a2          pushi a2 // $a2 setLoop
  04d2:78               push1 
  04d3:39 03            pushi 3 // $3 y
  04d5:38 011c          pushi 11c // $11c posn
  04d8:7a               push2 
  04d9:39 0a            pushi a // $a nsLeft
  04db:39 2c            pushi 2c // $2c nodePtr
  04dd:38 0096          pushi 96 // $96 setCycle
  04e0:78               push1 
  04e1:51 17            class Fwd 
  04e3:36                push 
  04e4:72 0364          lofsa $0364 // flag
  04e7:4a 18             send 18 

  04e9:32 003d            jmp code_0529 

        code_04ec
  04ec:3c                 dup 
  04ed:35 02              ldi 2 
  04ef:1a                 eq? 
  04f0:30 0036            bnt code_0529 
  04f3:39 6b            pushi 6b // $6b init
  04f5:76               push0 
  04f6:38 011c          pushi 11c // $11c posn
  04f9:7a               push2 
  04fa:38 0104          pushi 104 // $104 gx
  04fd:38 00a4          pushi a4 // $a4 check
  0500:38 0096          pushi 96 // $96 setCycle
  0503:78               push1 
  0504:51 17            class Fwd 
  0506:36                push 
  0507:72 02fe          lofsa $02fe // sock
  050a:4a 12             send 12 

  050c:39 6b            pushi 6b // $6b init
  050e:76               push0 
  050f:38 00a2          pushi a2 // $a2 setLoop
  0512:78               push1 
  0513:39 03            pushi 3 // $3 y
  0515:38 011c          pushi 11c // $11c posn
  0518:7a               push2 
  0519:39 0a            pushi a // $a nsLeft
  051b:39 2c            pushi 2c // $2c nodePtr
  051d:38 0096          pushi 96 // $96 setCycle
  0520:78               push1 
  0521:51 17            class Fwd 
  0523:36                push 
  0524:72 0364          lofsa $0364 // flag
  0527:4a 18             send 18 


        code_0529
  0529:3a                toss 
  052a:89 0c              lsg  
  052c:34 0186            ldi 186 
  052f:1c                 ne? 
  0530:30 0156            bnt code_0689 
  0533:7a               push2 
  0534:78               push1 
  0535:39 0a            pushi a // $a nsLeft
  0537:43 3c 04         callk Random 4 

  053a:36                push 
  053b:3c                 dup 
  053c:35 01              ldi 1 
  053e:1a                 eq? 
  053f:30 002a            bnt code_056c 
  0542:35 f4              ldi f4 
  0544:a3 00              sal local0 
  0546:34 0085            ldi 85 
  0549:a3 01              sal local1 
  054b:35 01              ldi 1 
  054d:a3 02              sal local2 
  054f:39 6b            pushi 6b // $6b init
  0551:76               push0 
  0552:38 00a2          pushi a2 // $a2 setLoop
  0555:78               push1 
  0556:39 04            pushi 4 // $4 x
  0558:38 011c          pushi 11c // $11c posn
  055b:7a               push2 
  055c:38 0147          pushi 147 // $147 get
  055f:39 2f            pushi 2f // $2f dy
  0561:39 69            pushi 69 // $69 hide
  0563:76               push0 
  0564:72 021a          lofsa $021a // bird
  0567:4a 16             send 16 

  0569:32 011c            jmp code_0688 

        code_056c
  056c:3c                 dup 
  056d:35 02              ldi 2 
  056f:1a                 eq? 
  0570:30 002a            bnt code_059d 
  0573:35 49              ldi 49 
  0575:a3 00              sal local0 
  0577:34 00bd            ldi bd 
  057a:a3 01              sal local1 
  057c:35 01              ldi 1 
  057e:a3 02              sal local2 
  0580:39 6b            pushi 6b // $6b init
  0582:76               push0 
  0583:38 00a2          pushi a2 // $a2 setLoop
  0586:78               push1 
  0587:39 04            pushi 4 // $4 x
  0589:38 011c          pushi 11c // $11c posn
  058c:7a               push2 
  058d:38 013f          pushi 13f // $13f inputLineAddr
  0590:39 62            pushi 62 // $62 pri
  0592:39 69            pushi 69 // $69 hide
  0594:76               push0 
  0595:72 021a          lofsa $021a // bird
  0598:4a 16             send 16 

  059a:32 00eb            jmp code_0688 

        code_059d
  059d:3c                 dup 
  059e:35 03              ldi 3 
  05a0:1a                 eq? 
  05a1:30 002a            bnt code_05ce 
  05a4:35 00              ldi 0 
  05a6:a3 00              sal local0 
  05a8:35 67              ldi 67 
  05aa:a3 01              sal local1 
  05ac:35 01              ldi 1 
  05ae:a3 02              sal local2 
  05b0:39 6b            pushi 6b // $6b init
  05b2:76               push0 
  05b3:38 00a2          pushi a2 // $a2 setLoop
  05b6:78               push1 
  05b7:39 04            pushi 4 // $4 x
  05b9:38 011c          pushi 11c // $11c posn
  05bc:7a               push2 
  05bd:38 013f          pushi 13f // $13f inputLineAddr
  05c0:38 008a          pushi 8a // $8a script
  05c3:39 69            pushi 69 // $69 hide
  05c5:76               push0 
  05c6:72 021a          lofsa $021a // bird
  05c9:4a 16             send 16 

  05cb:32 00ba            jmp code_0688 

        code_05ce
  05ce:3c                 dup 
  05cf:35 04              ldi 4 
  05d1:1a                 eq? 
  05d2:30 0029            bnt code_05fe 
  05d5:35 00              ldi 0 
  05d7:a3 00              sal local0 
  05d9:35 26              ldi 26 
  05db:a3 01              sal local1 
  05dd:35 01              ldi 1 
  05df:a3 02              sal local2 
  05e1:39 6b            pushi 6b // $6b init
  05e3:76               push0 
  05e4:38 00a2          pushi a2 // $a2 setLoop
  05e7:78               push1 
  05e8:39 04            pushi 4 // $4 x
  05ea:38 011c          pushi 11c // $11c posn
  05ed:7a               push2 
  05ee:38 013f          pushi 13f // $13f inputLineAddr
  05f1:39 24            pushi 24 // $24 cursor
  05f3:39 69            pushi 69 // $69 hide
  05f5:76               push0 
  05f6:72 021a          lofsa $021a // bird
  05f9:4a 16             send 16 

  05fb:32 008a            jmp code_0688 

        code_05fe
  05fe:3c                 dup 
  05ff:35 05              ldi 5 
  0601:1a                 eq? 
  0602:30 0028            bnt code_062d 
  0605:34 013f            ldi 13f 
  0608:a3 00              sal local0 
  060a:35 3f              ldi 3f 
  060c:a3 01              sal local1 
  060e:35 01              ldi 1 
  0610:a3 02              sal local2 
  0612:39 6b            pushi 6b // $6b init
  0614:76               push0 
  0615:38 00a2          pushi a2 // $a2 setLoop
  0618:78               push1 
  0619:39 05            pushi 5 // $5 view
  061b:38 011c          pushi 11c // $11c posn
  061e:7a               push2 
  061f:76               push0 
  0620:39 7b            pushi 7b // $7b last
  0622:39 69            pushi 69 // $69 hide
  0624:76               push0 
  0625:72 021a          lofsa $021a // bird
  0628:4a 16             send 16 

  062a:32 005b            jmp code_0688 

        code_062d
  062d:3c                 dup 
  062e:35 06              ldi 6 
  0630:1a                 eq? 
  0631:30 0028            bnt code_065c 
  0634:34 013f            ldi 13f 
  0637:a3 00              sal local0 
  0639:35 78              ldi 78 
  063b:a3 01              sal local1 
  063d:35 01              ldi 1 
  063f:a3 02              sal local2 
  0641:39 6b            pushi 6b // $6b init
  0643:76               push0 
  0644:38 00a2          pushi a2 // $a2 setLoop
  0647:78               push1 
  0648:39 05            pushi 5 // $5 view
  064a:38 011c          pushi 11c // $11c posn
  064d:7a               push2 
  064e:76               push0 
  064f:39 28            pushi 28 // $28 message
  0651:39 69            pushi 69 // $69 hide
  0653:76               push0 
  0654:72 021a          lofsa $021a // bird
  0657:4a 16             send 16 

  0659:32 002c            jmp code_0688 

        code_065c
  065c:3c                 dup 
  065d:35 07              ldi 7 
  065f:1a                 eq? 
  0660:30 0025            bnt code_0688 
  0663:34 013f            ldi 13f 
  0666:a3 00              sal local0 
  0668:35 78              ldi 78 
  066a:a3 01              sal local1 
  066c:35 01              ldi 1 
  066e:a3 02              sal local2 
  0670:39 6b            pushi 6b // $6b init
  0672:76               push0 
  0673:38 00a2          pushi a2 // $a2 setLoop
  0676:78               push1 
  0677:39 05            pushi 5 // $5 view
  0679:38 011c          pushi 11c // $11c posn
  067c:7a               push2 
  067d:76               push0 
  067e:39 28            pushi 28 // $28 message
  0680:39 69            pushi 69 // $69 hide
  0682:76               push0 
  0683:72 021a          lofsa $021a // bird
  0686:4a 16             send 16 


        code_0688
  0688:3a                toss 

        code_0689
  0689:48                 ret 
)

