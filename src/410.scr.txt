(script 410)

(string
    string_06c4 "rm410"
    string_06ca "steam"
    string_06d0 "desmond"
    string_06d8 "arrow"
    string_06de "reflection"
    string_06e9 "sCartoon"
    string_06f2 "sDesmondCartoon"
    string_0702 "sCartoon2"
)

(said
)

(local
    local0 = $0000
)

// 0134
(instance publicrm410 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $19a
        style $ffff
        horizon $0
        controls $0
        north $0
        east $190
        south $19f
        west $1a4
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 6b            pushi 6b // $6b init
  0010:76               push0 
  0011:38 020a          pushi 20a // $20a normalize
  0014:78               push1 
  0015:38 019b          pushi 19b // $19b lower
  0018:81 00              lag  
  001a:4a 0a             send a 

  001c:39 04            pushi 4 // $4 x
  001e:38 0080          pushi 80 // $80 indexOf
  0021:38 019a          pushi 19a // $19a higher
  0024:38 019b          pushi 19b // $19b lower
  0027:38 019c          pushi 19c // $19c normal
  002a:46 03be 0000 08  calle 3be procedure_0000 8 //  

  0030:39 03            pushi 3 // $3 y
  0032:38 0084          pushi 84 // $84 cycles
  0035:38 019a          pushi 19a // $19a higher
  0038:38 01a4          pushi 1a4 // $1a4 angleStep
  003b:46 03be 0000 06  calle 3be procedure_0000 6 //  

  0041:89 0c              lsg  
  0043:3c                 dup 
  0044:63 20             pToa south 
  0046:1a                 eq? 
  0047:30 0078            bnt code_00c2 
  004a:39 04            pushi 4 // $4 x
  004c:78               push1 
  004d:38 009d          pushi 9d // $9d pause
  0050:39 03            pushi 3 // $3 y
  0052:78               push1 
  0053:39 7d            pushi 7d // $7d addToFront
  0055:38 00a2          pushi a2 // $a2 setLoop
  0058:78               push1 
  0059:39 03            pushi 3 // $3 y
  005b:38 0120          pushi 120 // $120 setCel
  005e:78               push1 
  005f:76               push0 
  0060:38 0096          pushi 96 // $96 setCycle
  0063:78               push1 
  0064:76               push0 
  0065:81 00              lag  
  0067:4a 1e             send 1e 

  0069:39 6b            pushi 6b // $6b init
  006b:76               push0 
  006c:39 04            pushi 4 // $4 x
  006e:78               push1 
  006f:38 009d          pushi 9d // $9d pause
  0072:39 03            pushi 3 // $3 y
  0074:78               push1 
  0075:39 7d            pushi 7d // $7d addToFront
  0077:38 00a2          pushi a2 // $a2 setLoop
  007a:78               push1 
  007b:39 04            pushi 4 // $4 x
  007d:38 0120          pushi 120 // $120 setCel
  0080:78               push1 
  0081:76               push0 
  0082:38 0096          pushi 96 // $96 setCycle
  0085:78               push1 
  0086:76               push0 
  0087:72 02f0          lofsa $02f0 // reflection
  008a:4a 22             send 22 

  008c:39 6b            pushi 6b // $6b init
  008e:76               push0 
  008f:39 04            pushi 4 // $4 x
  0091:78               push1 
  0092:38 0082          pushi 82 // $82 start
  0095:39 03            pushi 3 // $3 y
  0097:78               push1 
  0098:39 7d            pushi 7d // $7d addToFront
  009a:38 00a2          pushi a2 // $a2 setLoop
  009d:78               push1 
  009e:39 04            pushi 4 // $4 x
  00a0:38 0120          pushi 120 // $120 setCel
  00a3:78               push1 
  00a4:76               push0 
  00a5:38 0096          pushi 96 // $96 setCycle
  00a8:78               push1 
  00a9:76               push0 
  00aa:39 11            pushi 11 // $11 signal
  00ac:78               push1 
  00ad:38 4000          pushi 4000 // $4000 sel_16384
  00b0:72 01e6          lofsa $01e6 // desmond
  00b3:4a 28             send 28 

  00b5:38 008e          pushi 8e // $8e setScript
  00b8:78               push1 
  00b9:72 0696          lofsa $0696 // sCartoon2
  00bc:36                push 
  00bd:54 06             self 6 

  00bf:32 0019            jmp code_00db 

        code_00c2
  00c2:39 6b            pushi 6b // $6b init
  00c4:76               push0 
  00c5:38 0096          pushi 96 // $96 setCycle
  00c8:78               push1 
  00c9:51 17            class Fwd 
  00cb:36                push 
  00cc:72 01e6          lofsa $01e6 // desmond
  00cf:4a 0a             send a 

  00d1:38 008e          pushi 8e // $8e setScript
  00d4:78               push1 
  00d5:72 047c          lofsa $047c // sCartoon
  00d8:36                push 
  00d9:54 06             self 6 


        code_00db
  00db:3a                toss 
  00dc:39 6b            pushi 6b // $6b init
  00de:76               push0 
  00df:57 72 04         super LLRoom 4 

  00e2:39 6b            pushi 6b // $6b init
  00e4:76               push0 
  00e5:38 0096          pushi 96 // $96 setCycle
  00e8:78               push1 
  00e9:51 17            class Fwd 
  00eb:36                push 
  00ec:72 0180          lofsa $0180 // steam
  00ef:4a 0a             send a 

  00f1:39 6b            pushi 6b // $6b init
  00f3:76               push0 
  00f4:38 0096          pushi 96 // $96 setCycle
  00f7:78               push1 
  00f8:51 17            class Fwd 
  00fa:36                push 
  00fb:72 0264          lofsa $0264 // arrow
  00fe:4a 0a             send a 

  0100:48                 ret 
    )

    (method (newRoom) // method_0101
  0101:8f 01              lsp param1 
  0103:34 019f            ldi 19f 
  0106:1c                 ne? 
  0107:30 0010            bnt code_011a 
  010a:38 009f          pushi 9f // $9f fade
  010d:39 05            pushi 5 // $5 view
  010f:76               push0 
  0110:39 0f            pushi f // $f lsBottom
  0112:39 0c            pushi c // $c nsRight
  0114:78               push1 
  0115:7c            pushSelf 
  0116:81 66              lag  
  0118:4a 0e             send e 


        code_011a
  011a:81 19              lag  
  011c:30 0005            bnt code_0124 
  011f:39 6c            pushi 6c // $6c dispose
  0121:76               push0 
  0122:4a 04             send 4 


        code_0124
  0124:38 0179          pushi 179 // $179 newRoom
  0127:78               push1 
  0128:8f 01              lsp param1 
  012a:57 72 06         super LLRoom 6 

  012d:48                 ret 
    )

)

// 017a
(instance steam of Prop
    (properties
        x $85
        y $a2
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $19a
        loop $0
        cel $4
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
)

// 01e0
(instance desmond of Actor
    (properties
        x $1f
        y $79
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $19c
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 025e
(instance arrow of Prop
    (properties
        x $11e
        y $4b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $19a
        loop $1
        cel $1
        priority $f
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $4
    )
)

// 02ea
(instance reflection of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $19b
        loop $2
        cel $0
        priority $1
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doit) // method_02c2
  02c2:39 04            pushi 4 // $4 x
  02c4:76               push0 
  02c5:81 00              lag  
  02c7:4a 04             send 4 

  02c9:65 08             aTop x 
  02cb:39 7d            pushi 7d // $7d addToFront
  02cd:3c                 dup 
  02ce:39 03            pushi 3 // $3 y
  02d0:76               push0 
  02d1:81 00              lag  
  02d3:4a 04             send 4 

  02d5:04                 sub 
  02d6:02                 add 
  02d7:65 0a             aTop y 
  02d9:39 07            pushi 7 // $7 cel
  02db:76               push0 
  02dc:81 00              lag  
  02de:4a 04             send 4 

  02e0:65 32             aTop cel 
  02e2:48                 ret 
  02e3:00                bnot 
    )

)

// 0476
(instance sCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_036a
  036a:87 01              lap param1 
  036c:65 0a             aTop state 
  036e:36                push 
  036f:3c                 dup 
  0370:35 00              ldi 0 
  0372:1a                 eq? 
  0373:30 004f            bnt code_03c5 
  0376:39 04            pushi 4 // $4 x
  0378:78               push1 
  0379:38 0106          pushi 106 // $106 waitApogeeX
  037c:39 03            pushi 3 // $3 y
  037e:78               push1 
  037f:39 6f            pushi 6f // $6f isKindOf
  0381:38 00db          pushi db // $db cycleSpeed
  0384:78               push1 
  0385:39 06            pushi 6 // $6 loop
  0387:39 38            pushi 38 // $38 moveSpeed
  0389:78               push1 
  038a:39 06            pushi 6 // $6 loop
  038c:38 00a2          pushi a2 // $a2 setLoop
  038f:78               push1 
  0390:76               push0 
  0391:38 011b          pushi 11b // $11b setMotion
  0394:39 04            pushi 4 // $4 x
  0396:51 1e            class MoveTo 
  0398:36                push 
  0399:38 00e2          pushi e2 // $e2 setTarget
  039c:39 7d            pushi 7d // $7d addToFront
  039e:7c            pushSelf 
  039f:81 00              lag  
  03a1:4a 2a             send 2a 

  03a3:39 6b            pushi 6b // $6b init
  03a5:76               push0 
  03a6:72 02f0          lofsa $02f0 // reflection
  03a9:4a 04             send 4 

  03ab:39 2b            pushi 2b // $2b number
  03ad:78               push1 
  03ae:38 019a          pushi 19a // $19a higher
  03b1:39 66            pushi 66 // $66 flags
  03b3:78               push1 
  03b4:78               push1 
  03b5:38 00a2          pushi a2 // $a2 setLoop
  03b8:78               push1 
  03b9:39 ff            pushi ff // $ff syncNum
  03bb:39 2a            pushi 2a // $2a play
  03bd:76               push0 
  03be:81 66              lag  
  03c0:4a 16             send 16 

  03c2:32 00a8            jmp code_046d 

        code_03c5
  03c5:3c                 dup 
  03c6:35 01              ldi 1 
  03c8:1a                 eq? 
  03c9:30 003f            bnt code_040b 
  03cc:39 07            pushi 7 // $7 cel
  03ce:38 019a          pushi 19a // $19a higher
  03d1:76               push0 
  03d2:39 43            pushi 43 // $43 at
  03d4:39 ff            pushi ff // $ff syncNum
  03d6:39 0f            pushi f // $f lsBottom
  03d8:39 46            pushi 46 // $46 width
  03da:38 0118          pushi 118 // $118 isNotHidden
  03dd:45 0e 0e         callb procedure_000e e //  

  03e0:38 00a2          pushi a2 // $a2 setLoop
  03e3:78               push1 
  03e4:76               push0 
  03e5:38 011b          pushi 11b // $11b setMotion
  03e8:39 04            pushi 4 // $4 x
  03ea:51 1e            class MoveTo 
  03ec:36                push 
  03ed:38 009d          pushi 9d // $9d pause
  03f0:39 7d            pushi 7d // $7d addToFront
  03f2:7c            pushSelf 
  03f3:81 00              lag  
  03f5:4a 12             send 12 

  03f7:38 008e          pushi 8e // $8e setScript
  03fa:78               push1 
  03fb:72 0542          lofsa $0542 // sDesmondCartoon
  03fe:36                push 
  03ff:72 01e6          lofsa $01e6 // desmond
  0402:4a 06             send 6 

  0404:35 14              ldi 14 
  0406:65 10             aTop cycles 
  0408:32 0062            jmp code_046d 

        code_040b
  040b:3c                 dup 
  040c:35 02              ldi 2 
  040e:1a                 eq? 
  040f:30 0026            bnt code_0438 
  0412:39 05            pushi 5 // $5 view
  0414:38 019a          pushi 19a // $19a higher
  0417:78               push1 
  0418:39 43            pushi 43 // $43 at
  041a:39 ff            pushi ff // $ff syncNum
  041c:39 14            pushi 14 // $14 brLeft
  041e:45 0e 0a         callb procedure_000e a //  

  0421:39 07            pushi 7 // $7 cel
  0423:38 019a          pushi 19a // $19a higher
  0426:7a               push2 
  0427:39 43            pushi 43 // $43 at
  0429:39 ff            pushi ff // $ff syncNum
  042b:39 0f            pushi f // $f lsBottom
  042d:39 46            pushi 46 // $46 width
  042f:38 0118          pushi 118 // $118 isNotHidden
  0432:45 0e 0e         callb procedure_000e e //  

  0435:32 0035            jmp code_046d 

        code_0438
  0438:3c                 dup 
  0439:35 03              ldi 3 
  043b:1a                 eq? 
  043c:30 002e            bnt code_046d 
  043f:38 00a2          pushi a2 // $a2 setLoop
  0442:78               push1 
  0443:39 03            pushi 3 // $3 y
  0445:38 0120          pushi 120 // $120 setCel
  0448:78               push1 
  0449:76               push0 
  044a:38 0096          pushi 96 // $96 setCycle
  044d:78               push1 
  044e:76               push0 
  044f:81 00              lag  
  0451:4a 12             send 12 

  0453:38 00a2          pushi a2 // $a2 setLoop
  0456:78               push1 
  0457:39 04            pushi 4 // $4 x
  0459:38 0120          pushi 120 // $120 setCel
  045c:78               push1 
  045d:76               push0 
  045e:38 0096          pushi 96 // $96 setCycle
  0461:78               push1 
  0462:76               push0 
  0463:72 02f0          lofsa $02f0 // reflection
  0466:4a 12             send 12 

  0468:39 6c            pushi 6c // $6c dispose
  046a:76               push0 
  046b:54 04             self 4 


        code_046d
  046d:3a                toss 
  046e:48                 ret 
  046f:00                bnot 
    )

)

// 053c
(instance sDesmondCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_04aa
  04aa:87 01              lap param1 
  04ac:65 0a             aTop state 
  04ae:36                push 
  04af:3c                 dup 
  04b0:35 00              ldi 0 
  04b2:1a                 eq? 
  04b3:30 001b            bnt code_04d1 
  04b6:38 00a2          pushi a2 // $a2 setLoop
  04b9:78               push1 
  04ba:39 03            pushi 3 // $3 y
  04bc:38 0120          pushi 120 // $120 setCel
  04bf:78               push1 
  04c0:76               push0 
  04c1:38 0096          pushi 96 // $96 setCycle
  04c4:7a               push2 
  04c5:51 1a            class End 
  04c7:36                push 
  04c8:7c            pushSelf 
  04c9:72 01e6          lofsa $01e6 // desmond
  04cc:4a 14             send 14 

  04ce:32 0063            jmp code_0534 

        code_04d1
  04d1:3c                 dup 
  04d2:35 01              ldi 1 
  04d4:1a                 eq? 
  04d5:30 0027            bnt code_04ff 
  04d8:38 00a2          pushi a2 // $a2 setLoop
  04db:78               push1 
  04dc:76               push0 
  04dd:38 0120          pushi 120 // $120 setCel
  04e0:78               push1 
  04e1:76               push0 
  04e2:38 0096          pushi 96 // $96 setCycle
  04e5:78               push1 
  04e6:51 18            class Walk 
  04e8:36                push 
  04e9:38 011b          pushi 11b // $11b setMotion
  04ec:39 04            pushi 4 // $4 x
  04ee:51 1e            class MoveTo 
  04f0:36                push 
  04f1:38 0082          pushi 82 // $82 start
  04f4:39 7d            pushi 7d // $7d addToFront
  04f6:7c            pushSelf 
  04f7:72 01e6          lofsa $01e6 // desmond
  04fa:4a 1e             send 1e 

  04fc:32 0035            jmp code_0534 

        code_04ff
  04ff:3c                 dup 
  0500:35 02              ldi 2 
  0502:1a                 eq? 
  0503:30 001c            bnt code_0522 
  0506:38 00a2          pushi a2 // $a2 setLoop
  0509:78               push1 
  050a:39 04            pushi 4 // $4 x
  050c:38 0120          pushi 120 // $120 setCel
  050f:78               push1 
  0510:76               push0 
  0511:38 0096          pushi 96 // $96 setCycle
  0514:78               push1 
  0515:76               push0 
  0516:72 01e6          lofsa $01e6 // desmond
  0519:4a 12             send 12 

  051b:35 03              ldi 3 
  051d:65 12             aTop seconds 
  051f:32 0012            jmp code_0534 

        code_0522
  0522:3c                 dup 
  0523:35 03              ldi 3 
  0525:1a                 eq? 
  0526:30 000b            bnt code_0534 
  0529:38 0179          pushi 179 // $179 newRoom
  052c:78               push1 
  052d:38 019f          pushi 19f // $19f update
  0530:81 02              lag  
  0532:4a 06             send 6 


        code_0534
  0534:3a                toss 
  0535:48                 ret 
    )

)

// 0690
(instance sCartoon2 of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0570
  0570:87 01              lap param1 
  0572:65 0a             aTop state 
  0574:36                push 
  0575:3c                 dup 
  0576:35 00              ldi 0 
  0578:1a                 eq? 
  0579:30 001e            bnt code_059a 
  057c:39 2b            pushi 2b // $2b number
  057e:78               push1 
  057f:38 01a4          pushi 1a4 // $1a4 angleStep
  0582:39 66            pushi 66 // $66 flags
  0584:78               push1 
  0585:78               push1 
  0586:38 00a2          pushi a2 // $a2 setLoop
  0589:78               push1 
  058a:39 ff            pushi ff // $ff syncNum
  058c:39 2a            pushi 2a // $2a play
  058e:76               push0 
  058f:81 66              lag  
  0591:4a 16             send 16 

  0593:35 7b              ldi 7b 
  0595:65 16             aTop ticks 
  0597:32 00ee            jmp code_0688 

        code_059a
  059a:3c                 dup 
  059b:35 01              ldi 1 
  059d:1a                 eq? 
  059e:30 0070            bnt code_0611 
  05a1:39 06            pushi 6 // $6 loop
  05a3:78               push1 
  05a4:7a               push2 
  05a5:72 02f0          lofsa $02f0 // reflection
  05a8:4a 06             send 6 

  05aa:38 00db          pushi db // $db cycleSpeed
  05ad:78               push1 
  05ae:39 06            pushi 6 // $6 loop
  05b0:39 38            pushi 38 // $38 moveSpeed
  05b2:78               push1 
  05b3:39 06            pushi 6 // $6 loop
  05b5:38 00a2          pushi a2 // $a2 setLoop
  05b8:78               push1 
  05b9:76               push0 
  05ba:38 0096          pushi 96 // $96 setCycle
  05bd:78               push1 
  05be:51 18            class Walk 
  05c0:36                push 
  05c1:38 011b          pushi 11b // $11b setMotion
  05c4:39 04            pushi 4 // $4 x
  05c6:51 1e            class MoveTo 
  05c8:36                push 
  05c9:38 008b          pushi 8b // $8b caller
  05cc:39 7d            pushi 7d // $7d addToFront
  05ce:7c            pushSelf 
  05cf:81 00              lag  
  05d1:4a 24             send 24 

  05d3:38 00a2          pushi a2 // $a2 setLoop
  05d6:78               push1 
  05d7:78               push1 
  05d8:38 0120          pushi 120 // $120 setCel
  05db:78               push1 
  05dc:76               push0 
  05dd:38 00db          pushi db // $db cycleSpeed
  05e0:78               push1 
  05e1:38 00db          pushi db // $db cycleSpeed
  05e4:76               push0 
  05e5:81 00              lag  
  05e7:4a 04             send 4 

  05e9:36                push 
  05ea:39 38            pushi 38 // $38 moveSpeed
  05ec:78               push1 
  05ed:39 38            pushi 38 // $38 moveSpeed
  05ef:76               push0 
  05f0:81 00              lag  
  05f2:4a 04             send 4 

  05f4:36                push 
  05f5:38 0096          pushi 96 // $96 setCycle
  05f8:78               push1 
  05f9:51 18            class Walk 
  05fb:36                push 
  05fc:38 011b          pushi 11b // $11b setMotion
  05ff:39 03            pushi 3 // $3 y
  0601:51 1e            class MoveTo 
  0603:36                push 
  0604:39 f6            pushi f6 // $f6 nonBumps
  0606:38 008a          pushi 8a // $8a script
  0609:72 01e6          lofsa $01e6 // desmond
  060c:4a 28             send 28 

  060e:32 0077            jmp code_0688 

        code_0611
  0611:3c                 dup 
  0612:35 02              ldi 2 
  0614:1a                 eq? 
  0615:30 001c            bnt code_0634 
  0618:39 6c            pushi 6c // $6c dispose
  061a:76               push0 
  061b:72 02f0          lofsa $02f0 // reflection
  061e:4a 04             send 4 

  0620:38 011b          pushi 11b // $11b setMotion
  0623:39 04            pushi 4 // $4 x
  0625:51 1e            class MoveTo 
  0627:36                push 
  0628:76               push0 
  0629:38 0091          pushi 91 // $91 globalize
  062c:7c            pushSelf 
  062d:81 00              lag  
  062f:4a 0c             send c 

  0631:32 0054            jmp code_0688 

        code_0634
  0634:3c                 dup 
  0635:35 03              ldi 3 
  0637:1a                 eq? 
  0638:30 003b            bnt code_0676 
  063b:39 6c            pushi 6c // $6c dispose
  063d:76               push0 
  063e:72 0180          lofsa $0180 // steam
  0641:4a 04             send 4 

  0643:39 6c            pushi 6c // $6c dispose
  0645:76               push0 
  0646:72 0264          lofsa $0264 // arrow
  0649:4a 04             send 4 

  064b:39 6c            pushi 6c // $6c dispose
  064d:76               push0 
  064e:72 01e6          lofsa $01e6 // desmond
  0651:4a 04             send 4 

  0653:39 6c            pushi 6c // $6c dispose
  0655:76               push0 
  0656:81 00              lag  
  0658:4a 04             send 4 

  065a:7a               push2 
  065b:78               push1 
  065c:38 8007          pushi 8007 // $8007 sel_32775
  065f:43 08 04         callk DrawPic 4 

  0662:39 04            pushi 4 // $4 x
  0664:3c                 dup 
  0665:89 80              lsg  
  0667:38 019a          pushi 19a // $19a higher
  066a:39 03            pushi 3 // $3 y
  066c:45 19 08         callb procedure_0019 8 //  

  066f:35 07              ldi 7 
  0671:65 12             aTop seconds 
  0673:32 0012            jmp code_0688 

        code_0676
  0676:3c                 dup 
  0677:35 04              ldi 4 
  0679:1a                 eq? 
  067a:30 000b            bnt code_0688 
  067d:38 0179          pushi 179 // $179 newRoom
  0680:78               push1 
  0681:38 01a4          pushi 1a4 // $1a4 angleStep
  0684:81 02              lag  
  0686:4a 06             send 6 


        code_0688
  0688:3a                toss 
  0689:48                 ret 
    )

)



