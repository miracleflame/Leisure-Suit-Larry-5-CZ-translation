(script 910)

(string
    string_0e16 "rm910"
    string_0e1c "the faucet"
    string_0e27 "The faucet is drip-, drip-, dripping, right in time to the music that's playing!"
    string_0e78 "faucet"
    string_0e7f "the happy tooth poster"
    string_0e96 "If you maintained a regular schedule of oral hygiene with Chi Chi Lambada, your teeth would be happy too!"
    string_0f00 "mouthPic"
    string_0f09 "the drill"
    string_0f13 "Whenever you see a high-speed dental drill, you make a silent vow to floss more often!"
    string_0f6a "drill"
    string_0f70 "the sink"
    string_0f79 "You love it when a woman orders you to \"Spit!\""
    string_0fa8 "sink"
    string_0fad "the tray of dental tools"
    string_0fc6 "You've always believed dental professionals have latent masochistic tendencies."
    string_1016 "dentalTools"
    string_1022 "the dentist's chair"
    string_1036 "You just love electric furniture!"
    string_1058 "chair"
    string_105e "the window"
    string_1069 "Through the window you see children laughing, skipping, running, playing; all oblivious to their oral hygiene!"
    string_10d8 "theWindow"
    string_10e2 "Chi Chi's degree"
    string_10f3 "Interesting. You never knew the Columbia School of Broadcasting even HAD a dental college!"
    string_114e "degree"
    string_1155 "the spotlight"
    string_1163 "You love to peer at the reflection of your mouth on the surface of the dental spotlight."
    string_11bc "light"
    string_11c2 "Chi Chi Lambada"
    string_11d2 "talkerBust"
    string_11dd "talkerEyes"
    string_11e8 "talkerMouth"
    string_11f4 "sCloseUp"
    string_11fd "sBringInChiChi"
    string_120c "sWorkOnTeeth"
    string_1219 "sDance"
    string_1220 "chiChi"
    string_1227 "sScored"
    string_122f ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0000
    local6 = $0000
)

// 025a
(instance publicrm910 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $38e
        style $ffff
        horizon $0
        controls $0
        north $0
        east $389
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 20            pushi 20 // $20 state
  0010:78               push1 
  0011:76               push0 
  0012:39 43            pushi 43 // $43 at
  0014:78               push1 
  0015:39 16            pushi 16 // $16 brRight
  0017:51 40            class Inv 
  0019:4a 06             send 6 

  001b:4a 06             send 6 

  001d:7a               push2 
  001e:38 0080          pushi 80 // $80 indexOf
  0021:38 038e          pushi 38e // $38e sel_910
  0024:43 00 04         callk Load 4 

  0027:7a               push2 
  0028:38 0080          pushi 80 // $80 indexOf
  002b:38 038f          pushi 38f // $38f sel_911
  002e:43 00 04         callk Load 4 

  0031:7a               push2 
  0032:38 0080          pushi 80 // $80 indexOf
  0035:38 0390          pushi 390 // $390 sel_912
  0038:43 00 04         callk Load 4 

  003b:7a               push2 
  003c:38 0080          pushi 80 // $80 indexOf
  003f:38 0391          pushi 391 // $391 sel_913
  0042:43 00 04         callk Load 4 

  0045:39 6b            pushi 6b // $6b init
  0047:76               push0 
  0048:57 72 04         super LLRoom 4 

  004b:39 6b            pushi 6b // $6b init
  004d:76               push0 
  004e:38 020a          pushi 20a // $20a normalize
  0051:76               push0 
  0052:39 05            pushi 5 // $5 view
  0054:78               push1 
  0055:38 038f          pushi 38f // $38f sel_911
  0058:38 00a2          pushi a2 // $a2 setLoop
  005b:78               push1 
  005c:76               push0 
  005d:38 0096          pushi 96 // $96 setCycle
  0060:78               push1 
  0061:76               push0 
  0062:38 011c          pushi 11c // $11c posn
  0065:39 03            pushi 3 // $3 y
  0067:38 0098          pushi 98 // $98 set60ths
  006a:39 64            pushi 64 // $64 moveDone
  006c:39 fb            pushi fb // $fb offScreenOK
  006e:38 0120          pushi 120 // $120 setCel
  0071:78               push1 
  0072:76               push0 
  0073:39 42            pushi 42 // $42 setPri
  0075:78               push1 
  0076:39 07            pushi 7 // $7 cel
  0078:81 00              lag  
  007a:4a 30             send 30 

  007c:39 6b            pushi 6b // $6b init
  007e:76               push0 
  007f:38 00db          pushi db // $db cycleSpeed
  0082:78               push1 
  0083:39 1c            pushi 1c // $1c color
  0085:38 0096          pushi 96 // $96 setCycle
  0088:78               push1 
  0089:51 17            class Fwd 
  008b:36                push 
  008c:72 02aa          lofsa $02aa // faucet
  008f:4a 10             send 10 

  0091:39 6b            pushi 6b // $6b init
  0093:76               push0 
  0094:72 034c          lofsa $034c // drill
  0097:4a 04             send 4 

  0099:39 6b            pushi 6b // $6b init
  009b:76               push0 
  009c:72 04b4          lofsa $04b4 // light
  009f:4a 04             send 4 

  00a1:39 6b            pushi 6b // $6b init
  00a3:76               push0 
  00a4:72 0478          lofsa $0478 // degree
  00a7:4a 04             send 4 

  00a9:39 6b            pushi 6b // $6b init
  00ab:76               push0 
  00ac:72 043c          lofsa $043c // theWindow
  00af:4a 04             send 4 

  00b1:39 6b            pushi 6b // $6b init
  00b3:76               push0 
  00b4:72 0400          lofsa $0400 // chair
  00b7:4a 04             send 4 

  00b9:39 6b            pushi 6b // $6b init
  00bb:76               push0 
  00bc:72 03c4          lofsa $03c4 // dentalTools
  00bf:4a 04             send 4 

  00c1:39 6b            pushi 6b // $6b init
  00c3:76               push0 
  00c4:72 0388          lofsa $0388 // sink
  00c7:4a 04             send 4 

  00c9:39 6b            pushi 6b // $6b init
  00cb:76               push0 
  00cc:72 0310          lofsa $0310 // mouthPic
  00cf:4a 04             send 4 

  00d1:78               push1 
  00d2:78               push1 
  00d3:45 16 02         callb procedure_0016 2 //  

  00d6:76               push0 
  00d7:45 03 00         callb procedure_0003 0 //  

  00da:78               push1 
  00db:39 04            pushi 4 // $4 x
  00dd:45 07 02         callb procedure_0007 2 //  

  00e0:39 6b            pushi 6b // $6b init
  00e2:76               push0 
  00e3:72 0c6e          lofsa $0c6e // chiChi
  00e6:4a 04             send 4 

  00e8:89 0c              lsg  
  00ea:3c                 dup 
  00eb:34 0393            ldi 393 
  00ee:1a                 eq? 
  00ef:30 0063            bnt code_0155 
  00f2:39 05            pushi 5 // $5 view
  00f4:78               push1 
  00f5:38 0391          pushi 391 // $391 sel_913
  00f8:38 011c          pushi 11c // $11c posn
  00fb:7a               push2 
  00fc:38 00b9          pushi b9 // $b9 bottom
  00ff:39 69            pushi 69 // $69 hide
  0101:38 00a2          pushi a2 // $a2 setLoop
  0104:78               push1 
  0105:39 05            pushi 5 // $5 view
  0107:38 0120          pushi 120 // $120 setCel
  010a:78               push1 
  010b:76               push0 
  010c:38 00db          pushi db // $db cycleSpeed
  010f:78               push1 
  0110:39 08            pushi 8 // $8 underBits
  0112:72 0c6e          lofsa $0c6e // chiChi
  0115:4a 20             send 20 

  0117:78               push1 
  0118:39 33            pushi 33 // $33 b-di
  011a:45 06 02         callb procedure_0006 2 //  

  011d:30 0018            bnt code_0138 
  0120:38 0120          pushi 120 // $120 setCel
  0123:78               push1 
  0124:78               push1 
  0125:81 00              lag  
  0127:4a 06             send 6 

  0129:38 008e          pushi 8e // $8e setScript
  012c:78               push1 
  012d:72 0de8          lofsa $0de8 // sScored
  0130:36                push 
  0131:81 02              lag  
  0133:4a 06             send 6 

  0135:32 003f            jmp code_0177 

        code_0138
  0138:38 0120          pushi 120 // $120 setCel
  013b:78               push1 
  013c:39 04            pushi 4 // $4 x
  013e:81 00              lag  
  0140:4a 06             send 6 

  0142:35 19              ldi 19 
  0144:a3 02              sal local2 
  0146:38 008e          pushi 8e // $8e setScript
  0149:78               push1 
  014a:72 0ae0          lofsa $0ae0 // sWorkOnTeeth
  014d:36                push 
  014e:81 02              lag  
  0150:4a 06             send 6 

  0152:32 0022            jmp code_0177 

        code_0155
  0155:76               push0 
  0156:45 02 00         callb procedure_0002 0 //  

  0159:39 2b            pushi 2b // $2b number
  015b:78               push1 
  015c:38 038e          pushi 38e // $38e sel_910
  015f:39 06            pushi 6 // $6 loop
  0161:78               push1 
  0162:39 ff            pushi ff // $ff syncNum
  0164:39 2a            pushi 2a // $2a play
  0166:76               push0 
  0167:81 66              lag  
  0169:4a 10             send 10 

  016b:38 008e          pushi 8e // $8e setScript
  016e:78               push1 
  016f:72 098e          lofsa $098e // sBringInChiChi
  0172:36                push 
  0173:81 02              lag  
  0175:4a 06             send 6 


        code_0177
  0177:3a                toss 
  0178:48                 ret 
    )

    (method (doit) // method_0238
  0238:39 3c            pushi 3c // $3c doit
  023a:76               push0 
  023b:57 72 04         super LLRoom 4 

  023e:8b 03              lsl local3 
  0240:78               push1 
  0241:78               push1 
  0242:43 42 02         callk GetTime 2 

  0245:1c                 ne? 
  0246:30 0009            bnt code_0252 
  0249:78               push1 
  024a:78               push1 
  024b:43 42 02         callk GetTime 2 

  024e:a3 03              sal local3 
  0250:c3 02              +al local2 

        code_0252
  0252:48                 ret 
  0253:00                bnot 
    )

    (method (doVerb) // method_0179
  0179:8f 01              lsp param1 
  017b:3c                 dup 
  017c:35 02              ldi 2 
  017e:1a                 eq? 
  017f:30 000b            bnt code_018d 
  0182:7a               push2 
  0183:38 038e          pushi 38e // $38e sel_910
  0186:76               push0 
  0187:45 0e 04         callb procedure_000e 4 //  

  018a:32 00a9            jmp code_0236 

        code_018d
  018d:3c                 dup 
  018e:35 04              ldi 4 
  0190:1a                 eq? 
  0191:30 0020            bnt code_01b4 
  0194:8f 02              lsp param2 
  0196:3c                 dup 
  0197:35 15              ldi 15 
  0199:1a                 eq? 
  019a:30 000b            bnt code_01a8 
  019d:7a               push2 
  019e:38 038e          pushi 38e // $38e sel_910
  01a1:78               push1 
  01a2:45 0e 04         callb procedure_000e 4 //  

  01a5:32 0008            jmp code_01b0 

        code_01a8
  01a8:7a               push2 
  01a9:38 038e          pushi 38e // $38e sel_910
  01ac:7a               push2 
  01ad:45 0e 04         callb procedure_000e 4 //  


        code_01b0
  01b0:3a                toss 
  01b1:32 0082            jmp code_0236 

        code_01b4
  01b4:3c                 dup 
  01b5:35 05              ldi 5 
  01b7:1a                 eq? 
  01b8:30 000b            bnt code_01c6 
  01bb:7a               push2 
  01bc:38 038e          pushi 38e // $38e sel_910
  01bf:78               push1 
  01c0:45 0e 04         callb procedure_000e 4 //  

  01c3:32 0070            jmp code_0236 

        code_01c6
  01c6:3c                 dup 
  01c7:35 0a              ldi a 
  01c9:1a                 eq? 
  01ca:30 001d            bnt code_01ea 
  01cd:7a               push2 
  01ce:38 038e          pushi 38e // $38e sel_910
  01d1:39 03            pushi 3 // $3 y
  01d3:45 0e 04         callb procedure_000e 4 //  

  01d6:39 05            pushi 5 // $5 view
  01d8:38 038e          pushi 38e // $38e sel_910
  01db:39 04            pushi 4 // $4 x
  01dd:39 43            pushi 43 // $43 at
  01df:39 ff            pushi ff // $ff syncNum
  01e1:38 00b9          pushi b9 // $b9 bottom
  01e4:45 0e 0a         callb procedure_000e a //  

  01e7:32 004c            jmp code_0236 

        code_01ea
  01ea:3c                 dup 
  01eb:35 01              ldi 1 
  01ed:1a                 eq? 
  01ee:30 0026            bnt code_0217 
  01f1:76               push0 
  01f2:45 02 00         callb procedure_0002 0 //  

  01f5:39 03            pushi 3 // $3 y
  01f7:89 00              lsg  
  01f9:38 038e          pushi 38e // $38e sel_910
  01fc:39 05            pushi 5 // $5 view
  01fe:45 12 06         callb procedure_0012 6 //  

  0201:38 009f          pushi 9f // $9f fade
  0204:76               push0 
  0205:81 66              lag  
  0207:4a 04             send 4 

  0209:38 0179          pushi 179 // $179 newRoom
  020c:78               push1 
  020d:38 0389          pushi 389 // $389 sel_905
  0210:81 02              lag  
  0212:4a 06             send 6 

  0214:32 001f            jmp code_0236 

        code_0217
  0217:3c                 dup 
  0218:35 03              ldi 3 
  021a:1a                 eq? 
  021b:30 000f            bnt code_022d 
  021e:39 03            pushi 3 // $3 y
  0220:89 00              lsg  
  0222:38 038e          pushi 38e // $38e sel_910
  0225:39 06            pushi 6 // $6 loop
  0227:45 12 06         callb procedure_0012 6 //  

  022a:32 0009            jmp code_0236 

        code_022d
  022d:7a               push2 
  022e:38 038e          pushi 38e // $38e sel_910
  0231:39 07            pushi 7 // $7 cel
  0233:45 0e 04         callb procedure_000e 4 //  


        code_0236
  0236:3a                toss 
  0237:48                 ret 
    )

)

// 02a4
(instance faucet of Prop
    (properties
        x $e1
        y $87
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $e1c
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $e27
        yStep $2
        view $38e
        loop $1
        cel $0
        priority $8
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 030a
(instance mouthPic of Feature
    (properties
        x $c6
        y $30
        z $0
        heading $0
        noun $0
        nsTop $21
        nsLeft $b0
        nsBottom $3f
        nsRight $dd
        description $e7f
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $e96
    )
)

// 0346
(instance drill of Feature
    (properties
        x $95
        y $21
        z $0
        heading $0
        noun $0
        nsTop $13
        nsLeft $7b
        nsBottom $2f
        nsRight $af
        description $f09
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $f13
    )
)

// 0382
(instance sink of Feature
    (properties
        x $d9
        y $84
        z $0
        heading $0
        noun $0
        nsTop $76
        nsLeft $c1
        nsBottom $92
        nsRight $f2
        description $f70
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $f79
    )
)

// 03be
(instance dentalTools of Feature
    (properties
        x $7c
        y $6e
        z $0
        heading $0
        noun $0
        nsTop $50
        nsLeft $50
        nsBottom $8d
        nsRight $a9
        description $fad
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $fc6
    )
)

// 03fa
(instance chair of Feature
    (properties
        x $a0
        y $5d
        z $0
        heading $0
        noun $0
        nsTop $3c
        nsLeft $77
        nsBottom $7f
        nsRight $ca
        description $1022
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1036
    )
)

// 0436
(instance theWindow of Feature
    (properties
        x $5d
        y $30
        z $0
        heading $0
        noun $0
        nsTop $15
        nsLeft $51
        nsBottom $4c
        nsRight $6a
        description $105e
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1069
    )
)

// 0472
(instance degree of Feature
    (properties
        x $7b
        y $33
        z $0
        heading $0
        noun $0
        nsTop $29
        nsLeft $70
        nsBottom $3d
        nsRight $86
        description $10e2
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $10f3
    )
)

// 04ae
(instance light of Feature
    (properties
        x $9b
        y $32
        z $0
        heading $0
        noun $0
        nsTop $2b
        nsLeft $93
        nsBottom $3a
        nsRight $a3
        description $1155
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1163
    )
)

// 0504
(instance Chi Chi Lambada of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $21
        nsLeft $16
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $776
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_04e8
  04e8:72 0586          lofsa $0586 // talkerBust
  04eb:65 56             aTop bust 
  04ed:72 05e2          lofsa $05e2 // talkerEyes
  04f0:65 58             aTop eyes 
  04f2:72 0648          lofsa $0648 // talkerMouth
  04f5:65 5a             aTop mouth 
  04f7:39 6b            pushi 6b // $6b init
  04f9:76               push0 
  04fa:57 6f 04         super Talker 4 

  04fd:48                 ret 
    )

)

// 0580
(instance talkerBust of View
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $776
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $101
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 05dc
(instance talkerEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $19
        nsLeft $22
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $776
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $12
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0642
(instance talkerMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $21
        nsLeft $1b
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $776
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 06fc
(instance sCloseUp of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_06a6
  06a6:87 01              lap param1 
  06a8:65 0a             aTop state 
  06aa:36                push 
  06ab:3c                 dup 
  06ac:35 00              ldi 0 
  06ae:1a                 eq? 
  06af:30 000b            bnt code_06bd 
  06b2:76               push0 
  06b3:45 02 00         callb procedure_0002 0 //  

  06b6:35 02              ldi 2 
  06b8:65 10             aTop cycles 
  06ba:32 0036            jmp code_06f3 

        code_06bd
  06bd:3c                 dup 
  06be:35 01              ldi 1 
  06c0:1a                 eq? 
  06c1:30 001d            bnt code_06e1 
  06c4:38 00a2          pushi a2 // $a2 setLoop
  06c7:78               push1 
  06c8:39 05            pushi 5 // $5 view
  06ca:38 0120          pushi 120 // $120 setCel
  06cd:78               push1 
  06ce:38 00ff          pushi ff // $ff syncNum
  06d1:38 0096          pushi 96 // $96 setCycle
  06d4:7a               push2 
  06d5:51 1b            class Beg 
  06d7:36                push 
  06d8:7c            pushSelf 
  06d9:72 0c6e          lofsa $0c6e // chiChi
  06dc:4a 14             send 14 

  06de:32 0012            jmp code_06f3 

        code_06e1
  06e1:3c                 dup 
  06e2:35 02              ldi 2 
  06e4:1a                 eq? 
  06e5:30 000b            bnt code_06f3 
  06e8:38 0179          pushi 179 // $179 newRoom
  06eb:78               push1 
  06ec:38 0393          pushi 393 // $393 sel_915
  06ef:81 02              lag  
  06f1:4a 06             send 6 


        code_06f3
  06f3:3a                toss 
  06f4:48                 ret 
  06f5:00                bnot 
    )

)

// 0988
(instance sBringInChiChi of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0730
  0730:3f 02             link 2 // (var $2)
  0732:87 01              lap param1 
  0734:65 0a             aTop state 
  0736:36                push 
  0737:3c                 dup 
  0738:35 00              ldi 0 
  073a:1a                 eq? 
  073b:30 000b            bnt code_0749 
  073e:76               push0 
  073f:45 02 00         callb procedure_0002 0 //  

  0742:35 3c              ldi 3c 
  0744:65 16             aTop ticks 
  0746:32 0236            jmp code_097f 

        code_0749
  0749:3c                 dup 
  074a:35 01              ldi 1 
  074c:1a                 eq? 
  074d:30 0012            bnt code_0762 
  0750:39 05            pushi 5 // $5 view
  0752:89 00              lsg  
  0754:38 038e          pushi 38e // $38e sel_910
  0757:39 08            pushi 8 // $8 underBits
  0759:39 6c            pushi 6c // $6c dispose
  075b:7c            pushSelf 
  075c:45 12 0a         callb procedure_0012 a //  

  075f:32 021d            jmp code_097f 

        code_0762
  0762:3c                 dup 
  0763:35 02              ldi 2 
  0765:1a                 eq? 
  0766:30 0007            bnt code_0770 
  0769:35 3c              ldi 3c 
  076b:65 16             aTop ticks 
  076d:32 020f            jmp code_097f 

        code_0770
  0770:3c                 dup 
  0771:35 03              ldi 3 
  0773:1a                 eq? 
  0774:30 0016            bnt code_078d 
  0777:38 0120          pushi 120 // $120 setCel
  077a:78               push1 
  077b:78               push1 
  077c:38 00db          pushi db // $db cycleSpeed
  077f:78               push1 
  0780:39 06            pushi 6 // $6 loop
  0782:81 00              lag  
  0784:4a 0c             send c 

  0786:35 1e              ldi 1e 
  0788:65 16             aTop ticks 
  078a:32 01f2            jmp code_097f 

        code_078d
  078d:3c                 dup 
  078e:35 04              ldi 4 
  0790:1a                 eq? 
  0791:30 0010            bnt code_07a4 
  0794:39 04            pushi 4 // $4 x
  0796:38 038e          pushi 38e // $38e sel_910
  0799:39 09            pushi 9 // $9 nsTop
  079b:39 6c            pushi 6c // $6c dispose
  079d:7c            pushSelf 
  079e:45 0e 08         callb procedure_000e 8 //  

  07a1:32 01db            jmp code_097f 

        code_07a4
  07a4:3c                 dup 
  07a5:35 05              ldi 5 
  07a7:1a                 eq? 
  07a8:30 0007            bnt code_07b2 
  07ab:35 03              ldi 3 
  07ad:65 12             aTop seconds 
  07af:32 01cd            jmp code_097f 

        code_07b2
  07b2:3c                 dup 
  07b3:35 06              ldi 6 
  07b5:1a                 eq? 
  07b6:30 0049            bnt code_0802 
  07b9:39 05            pushi 5 // $5 view
  07bb:78               push1 
  07bc:38 0390          pushi 390 // $390 sel_912
  07bf:38 00a2          pushi a2 // $a2 setLoop
  07c2:78               push1 
  07c3:78               push1 
  07c4:38 0120          pushi 120 // $120 setCel
  07c7:78               push1 
  07c8:39 ff            pushi ff // $ff syncNum
  07ca:38 0096          pushi 96 // $96 setCycle
  07cd:78               push1 
  07ce:51 17            class Fwd 
  07d0:36                push 
  07d1:38 00db          pushi db // $db cycleSpeed
  07d4:78               push1 
  07d5:39 06            pushi 6 // $6 loop
  07d7:38 0134          pushi 134 // $134 setStep
  07da:7a               push2 
  07db:39 03            pushi 3 // $3 y
  07dd:7a               push2 
  07de:39 38            pushi 38 // $38 moveSpeed
  07e0:78               push1 
  07e1:39 06            pushi 6 // $6 loop
  07e3:38 0121          pushi 121 // $121 ignoreActors
  07e6:78               push1 
  07e7:78               push1 
  07e8:39 12            pushi 12 // $12 illegalBits
  07ea:78               push1 
  07eb:76               push0 
  07ec:38 011b          pushi 11b // $11b setMotion
  07ef:39 04            pushi 4 // $4 x
  07f1:51 1e            class MoveTo 
  07f3:36                push 
  07f4:38 00b9          pushi b9 // $b9 bottom
  07f7:39 69            pushi 69 // $69 hide
  07f9:7c            pushSelf 
  07fa:72 0c6e          lofsa $0c6e // chiChi
  07fd:4a 44             send 44 

  07ff:32 017d            jmp code_097f 

        code_0802
  0802:3c                 dup 
  0803:35 07              ldi 7 
  0805:1a                 eq? 
  0806:30 0026            bnt code_082f 
  0809:39 05            pushi 5 // $5 view
  080b:78               push1 
  080c:38 0391          pushi 391 // $391 sel_913
  080f:38 00a2          pushi a2 // $a2 setLoop
  0812:78               push1 
  0813:78               push1 
  0814:38 0120          pushi 120 // $120 setCel
  0817:78               push1 
  0818:76               push0 
  0819:38 0096          pushi 96 // $96 setCycle
  081c:78               push1 
  081d:76               push0 
  081e:38 011b          pushi 11b // $11b setMotion
  0821:78               push1 
  0822:76               push0 
  0823:72 0c6e          lofsa $0c6e // chiChi
  0826:4a 1e             send 1e 

  0828:35 1e              ldi 1e 
  082a:65 16             aTop ticks 
  082c:32 0150            jmp code_097f 

        code_082f
  082f:3c                 dup 
  0830:35 08              ldi 8 
  0832:1a                 eq? 
  0833:30 0017            bnt code_084d 
  0836:39 06            pushi 6 // $6 loop
  0838:72 050a          lofsa $050a // Chi Chi Lambada
  083b:36                push 
  083c:38 038e          pushi 38e // $38e sel_910
  083f:39 0a            pushi a // $a nsLeft
  0841:39 6c            pushi 6c // $6c dispose
  0843:38 008b          pushi 8b // $8b caller
  0846:7c            pushSelf 
  0847:45 12 0c         callb procedure_0012 c //  

  084a:32 0132            jmp code_097f 

        code_084d
  084d:3c                 dup 
  084e:35 09              ldi 9 
  0850:1a                 eq? 
  0851:30 0014            bnt code_0868 
  0854:38 0120          pushi 120 // $120 setCel
  0857:78               push1 
  0858:76               push0 
  0859:38 011d          pushi 11d // $11d stopUpd
  085c:76               push0 
  085d:81 00              lag  
  085f:4a 0a             send a 

  0861:35 1e              ldi 1e 
  0863:65 16             aTop ticks 
  0865:32 0117            jmp code_097f 

        code_0868
  0868:3c                 dup 
  0869:35 0a              ldi a 
  086b:1a                 eq? 
  086c:30 001a            bnt code_0889 
  086f:39 06            pushi 6 // $6 loop
  0871:89 00              lsg  
  0873:38 038e          pushi 38e // $38e sel_910
  0876:39 0b            pushi b // $b nsBottom
  0878:39 43            pushi 43 // $43 at
  087a:39 ff            pushi ff // $ff syncNum
  087c:38 00b9          pushi b9 // $b9 bottom
  087f:45 12 0c         callb procedure_0012 c //  

  0882:35 3c              ldi 3c 
  0884:65 16             aTop ticks 
  0886:32 00f6            jmp code_097f 

        code_0889
  0889:3c                 dup 
  088a:35 0b              ldi b 
  088c:1a                 eq? 
  088d:30 0024            bnt code_08b4 
  0890:39 06            pushi 6 // $6 loop
  0892:72 050a          lofsa $050a // Chi Chi Lambada
  0895:36                push 
  0896:38 038e          pushi 38e // $38e sel_910
  0899:39 0c            pushi c // $c nsRight
  089b:39 6c            pushi 6c // $6c dispose
  089d:38 008b          pushi 8b // $8b caller
  08a0:7c            pushSelf 
  08a1:45 12 0c         callb procedure_0012 c //  

  08a4:38 0120          pushi 120 // $120 setCel
  08a7:78               push1 
  08a8:7a               push2 
  08a9:38 011d          pushi 11d // $11d stopUpd
  08ac:76               push0 
  08ad:81 00              lag  
  08af:4a 0a             send a 

  08b1:32 00cb            jmp code_097f 

        code_08b4
  08b4:3c                 dup 
  08b5:35 0c              ldi c 
  08b7:1a                 eq? 
  08b8:30 0007            bnt code_08c2 
  08bb:35 3c              ldi 3c 
  08bd:65 16             aTop ticks 
  08bf:32 00bd            jmp code_097f 

        code_08c2
  08c2:3c                 dup 
  08c3:35 0d              ldi d 
  08c5:1a                 eq? 
  08c6:30 0035            bnt code_08fe 
  08c9:39 05            pushi 5 // $5 view
  08cb:78               push1 
  08cc:38 0391          pushi 391 // $391 sel_913
  08cf:38 00a2          pushi a2 // $a2 setLoop
  08d2:78               push1 
  08d3:39 05            pushi 5 // $5 view
  08d5:38 0120          pushi 120 // $120 setCel
  08d8:78               push1 
  08d9:76               push0 
  08da:38 00db          pushi db // $db cycleSpeed
  08dd:78               push1 
  08de:39 08            pushi 8 // $8 underBits
  08e0:38 0096          pushi 96 // $96 setCycle
  08e3:7a               push2 
  08e4:51 1a            class End 
  08e6:36                push 
  08e7:7c            pushSelf 
  08e8:72 0c6e          lofsa $0c6e // chiChi
  08eb:4a 20             send 20 

  08ed:38 0120          pushi 120 // $120 setCel
  08f0:78               push1 
  08f1:39 04            pushi 4 // $4 x
  08f3:38 011d          pushi 11d // $11d stopUpd
  08f6:76               push0 
  08f7:81 00              lag  
  08f9:4a 0a             send a 

  08fb:32 0081            jmp code_097f 

        code_08fe
  08fe:3c                 dup 
  08ff:35 0e              ldi e 
  0901:1a                 eq? 
  0902:30 0022            bnt code_0927 
  0905:7a               push2 
  0906:38 038e          pushi 38e // $38e sel_910
  0909:39 0d            pushi d // $d lsTop
  090b:45 0e 04         callb procedure_000e 4 //  

  090e:39 2b            pushi 2b // $2b number
  0910:78               push1 
  0911:38 0390          pushi 390 // $390 sel_912
  0914:39 06            pushi 6 // $6 loop
  0916:78               push1 
  0917:39 ff            pushi ff // $ff syncNum
  0919:39 2a            pushi 2a // $2a play
  091b:76               push0 
  091c:81 67              lag  
  091e:4a 10             send 10 

  0920:35 04              ldi 4 
  0922:65 12             aTop seconds 
  0924:32 0058            jmp code_097f 

        code_0927
  0927:3c                 dup 
  0928:35 0f              ldi f 
  092a:1a                 eq? 
  092b:30 0020            bnt code_094e 
  092e:76               push0 
  092f:45 03 00         callb procedure_0003 0 //  

  0932:38 011a          pushi 11a // $11a canControl
  0935:78               push1 
  0936:76               push0 
  0937:51 31            class User 
  0939:4a 06             send 6 

  093b:38 009c          pushi 9c // $9c stop
  093e:76               push0 
  093f:81 67              lag  
  0941:4a 04             send 4 

  0943:35 00              ldi 0 
  0945:a3 02              sal local2 
  0947:35 04              ldi 4 
  0949:65 12             aTop seconds 
  094b:32 0031            jmp code_097f 

        code_094e
  094e:3c                 dup 
  094f:35 10              ldi 10 
  0951:1a                 eq? 
  0952:30 0017            bnt code_096c 
  0955:39 06            pushi 6 // $6 loop
  0957:72 050a          lofsa $050a // Chi Chi Lambada
  095a:36                push 
  095b:38 038e          pushi 38e // $38e sel_910
  095e:39 0e            pushi e // $e lsLeft
  0960:39 6c            pushi 6c // $6c dispose
  0962:38 008b          pushi 8b // $8b caller
  0965:7c            pushSelf 
  0966:45 12 0c         callb procedure_0012 c //  

  0969:32 0013            jmp code_097f 

        code_096c
  096c:3c                 dup 
  096d:35 11              ldi 11 
  096f:1a                 eq? 
  0970:30 000c            bnt code_097f 
  0973:38 008e          pushi 8e // $8e setScript
  0976:78               push1 
  0977:72 0ae0          lofsa $0ae0 // sWorkOnTeeth
  097a:36                push 
  097b:81 02              lag  
  097d:4a 06             send 6 


        code_097f
  097f:3a                toss 
  0980:48                 ret 
  0981:00                bnot 
    )

)

// 0ada
(instance sWorkOnTeeth of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_09bc
  09bc:87 01              lap param1 
  09be:65 0a             aTop state 
  09c0:36                push 
  09c1:3c                 dup 
  09c2:35 00              ldi 0 
  09c4:1a                 eq? 
  09c5:30 0028            bnt code_09f0 
  09c8:38 00db          pushi db // $db cycleSpeed
  09cb:78               push1 
  09cc:7a               push2 
  09cd:39 03            pushi 3 // $3 y
  09cf:39 06            pushi 6 // $6 loop
  09d1:43 3c 04         callk Random 4 

  09d4:36                push 
  09d5:38 00a2          pushi a2 // $a2 setLoop
  09d8:78               push1 
  09d9:39 06            pushi 6 // $6 loop
  09db:38 0120          pushi 120 // $120 setCel
  09de:78               push1 
  09df:76               push0 
  09e0:38 0096          pushi 96 // $96 setCycle
  09e3:7a               push2 
  09e4:51 1a            class End 
  09e6:36                push 
  09e7:7c            pushSelf 
  09e8:72 0c6e          lofsa $0c6e // chiChi
  09eb:4a 1a             send 1a 

  09ed:32 00e2            jmp code_0ad2 

        code_09f0
  09f0:3c                 dup 
  09f1:35 01              ldi 1 
  09f3:1a                 eq? 
  09f4:30 0030            bnt code_0a27 
  09f7:8b 02              lsl local2 
  09f9:35 1e              ldi 1e 
  09fb:1e                 gt? 
  09fc:30 0021            bnt code_0a20 
  09ff:83 06              lal local6 
  0a01:18                 not 
  0a02:30 001b            bnt code_0a20 
  0a05:39 06            pushi 6 // $6 loop
  0a07:72 050a          lofsa $050a // Chi Chi Lambada
  0a0a:36                push 
  0a0b:38 038e          pushi 38e // $38e sel_910
  0a0e:39 0f            pushi f // $f lsBottom
  0a10:39 6c            pushi 6c // $6c dispose
  0a12:38 008b          pushi 8b // $8b caller
  0a15:7c            pushSelf 
  0a16:45 12 0c         callb procedure_0012 c //  

  0a19:35 01              ldi 1 
  0a1b:a3 06              sal local6 
  0a1d:32 00b2            jmp code_0ad2 

        code_0a20
  0a20:35 3c              ldi 3c 
  0a22:65 16             aTop ticks 
  0a24:32 00ab            jmp code_0ad2 

        code_0a27
  0a27:3c                 dup 
  0a28:35 02              ldi 2 
  0a2a:1a                 eq? 
  0a2b:30 0007            bnt code_0a35 
  0a2e:35 1e              ldi 1e 
  0a30:65 16             aTop ticks 
  0a32:32 009d            jmp code_0ad2 

        code_0a35
  0a35:3c                 dup 
  0a36:35 03              ldi 3 
  0a38:1a                 eq? 
  0a39:30 0010            bnt code_0a4c 
  0a3c:38 0096          pushi 96 // $96 setCycle
  0a3f:7a               push2 
  0a40:51 1b            class Beg 
  0a42:36                push 
  0a43:7c            pushSelf 
  0a44:72 0c6e          lofsa $0c6e // chiChi
  0a47:4a 08             send 8 

  0a49:32 0086            jmp code_0ad2 

        code_0a4c
  0a4c:3c                 dup 
  0a4d:35 04              ldi 4 
  0a4f:1a                 eq? 
  0a50:30 0007            bnt code_0a5a 
  0a53:35 3c              ldi 3c 
  0a55:65 16             aTop ticks 
  0a57:32 0078            jmp code_0ad2 

        code_0a5a
  0a5a:3c                 dup 
  0a5b:35 05              ldi 5 
  0a5d:1a                 eq? 
  0a5e:30 0053            bnt code_0ab4 
  0a61:8b 02              lsl local2 
  0a63:35 23              ldi 23 
  0a65:1e                 gt? 
  0a66:30 0043            bnt code_0aac 
  0a69:76               push0 
  0a6a:45 02 00         callb procedure_0002 0 //  

  0a6d:39 06            pushi 6 // $6 loop
  0a6f:72 050a          lofsa $050a // Chi Chi Lambada
  0a72:36                push 
  0a73:38 038e          pushi 38e // $38e sel_910
  0a76:39 10            pushi 10 // $10 lsRight
  0a78:39 6c            pushi 6c // $6c dispose
  0a7a:38 008b          pushi 8b // $8b caller
  0a7d:7c            pushSelf 
  0a7e:45 12 0c         callb procedure_0012 c //  

  0a81:38 00a2          pushi a2 // $a2 setLoop
  0a84:78               push1 
  0a85:39 05            pushi 5 // $5 view
  0a87:38 0120          pushi 120 // $120 setCel
  0a8a:78               push1 
  0a8b:38 00ff          pushi ff // $ff syncNum
  0a8e:38 00db          pushi db // $db cycleSpeed
  0a91:78               push1 
  0a92:39 08            pushi 8 // $8 underBits
  0a94:38 0096          pushi 96 // $96 setCycle
  0a97:7a               push2 
  0a98:51 1b            class Beg 
  0a9a:36                push 
  0a9b:7c            pushSelf 
  0a9c:72 0c6e          lofsa $0c6e // chiChi
  0a9f:4a 1a             send 1a 

  0aa1:38 009f          pushi 9f // $9f fade
  0aa4:76               push0 
  0aa5:81 66              lag  
  0aa7:4a 04             send 4 

  0aa9:32 0026            jmp code_0ad2 

        code_0aac
  0aac:39 6b            pushi 6b // $6b init
  0aae:76               push0 
  0aaf:54 04             self 4 

  0ab1:32 001e            jmp code_0ad2 

        code_0ab4
  0ab4:3c                 dup 
  0ab5:35 06              ldi 6 
  0ab7:1a                 eq? 
  0ab8:30 0005            bnt code_0ac0 
  0abb:35 00              ldi 0 
  0abd:32 0012            jmp code_0ad2 

        code_0ac0
  0ac0:3c                 dup 
  0ac1:35 07              ldi 7 
  0ac3:1a                 eq? 
  0ac4:30 000b            bnt code_0ad2 
  0ac7:38 0179          pushi 179 // $179 newRoom
  0aca:78               push1 
  0acb:38 0389          pushi 389 // $389 sel_905
  0ace:81 02              lag  
  0ad0:4a 06             send 6 


        code_0ad2
  0ad2:3a                toss 
  0ad3:48                 ret 
    )

)

// 0b8e
(instance sDance of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0b0e
  0b0e:3f 02             link 2 // (var $2)
  0b10:87 01              lap param1 
  0b12:65 0a             aTop state 
  0b14:36                push 
  0b15:3c                 dup 
  0b16:35 00              ldi 0 
  0b18:1a                 eq? 
  0b19:30 000d            bnt code_0b29 
  0b1c:35 1e              ldi 1e 
  0b1e:65 1a             aTop register 
  0b20:38 008d          pushi 8d // $8d cue
  0b23:76               push0 
  0b24:54 04             self 4 

  0b26:32 005d            jmp code_0b86 

        code_0b29
  0b29:3c                 dup 
  0b2a:35 01              ldi 1 
  0b2c:1a                 eq? 
  0b2d:30 003c            bnt code_0b6c 
  0b30:63 0a             pToa state 
  0b32:65 0c             aTop start 
  0b34:39 05            pushi 5 // $5 view
  0b36:78               push1 
  0b37:38 0391          pushi 391 // $391 sel_913
  0b3a:38 00a2          pushi a2 // $a2 setLoop
  0b3d:78               push1 
  0b3e:7a               push2 
  0b3f:7a               push2 
  0b40:39 04            pushi 4 // $4 x
  0b42:43 3c 04         callk Random 4 

  0b45:36                push 
  0b46:38 0096          pushi 96 // $96 setCycle
  0b49:78               push1 
  0b4a:51 17            class Fwd 
  0b4c:36                push 
  0b4d:38 00db          pushi db // $db cycleSpeed
  0b50:78               push1 
  0b51:7a               push2 
  0b52:39 05            pushi 5 // $5 view
  0b54:39 0c            pushi c // $c nsRight
  0b56:43 3c 04         callk Random 4 

  0b59:36                push 
  0b5a:72 0c6e          lofsa $0c6e // chiChi
  0b5d:4a 18             send 18 

  0b5f:7a               push2 
  0b60:39 0a            pushi a // $a nsLeft
  0b62:39 1e            pushi 1e // $1e mode
  0b64:43 3c 04         callk Random 4 

  0b67:65 16             aTop ticks 
  0b69:32 001a            jmp code_0b86 

        code_0b6c
  0b6c:3c                 dup 
  0b6d:35 02              ldi 2 
  0b6f:1a                 eq? 
  0b70:30 0013            bnt code_0b86 
  0b73:6d 1a            dpToa register 
  0b75:18                 not 
  0b76:30 0008            bnt code_0b81 
  0b79:39 6c            pushi 6c // $6c dispose
  0b7b:76               push0 
  0b7c:54 04             self 4 

  0b7e:32 0005            jmp code_0b86 

        code_0b81
  0b81:39 6b            pushi 6b // $6b init
  0b83:76               push0 
  0b84:54 04             self 4 


        code_0b86
  0b86:3a                toss 
  0b87:48                 ret 
    )

)

// 0c68
(instance chiChi of Actor
    (properties
        x $103
        y $69
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $11c2
        sightAngle $5a
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $390
        loop $0
        cel $0
        priority $8
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0bd5
  0bd5:8f 01              lsp param1 
  0bd7:3c                 dup 
  0bd8:35 03              ldi 3 
  0bda:1a                 eq? 
  0bdb:30 000c            bnt code_0bea 
  0bde:7a               push2 
  0bdf:38 038e          pushi 38e // $38e sel_910
  0be2:39 11            pushi 11 // $11 signal
  0be4:45 0e 04         callb procedure_000e 4 //  

  0be7:32 0075            jmp code_0c5f 

        code_0bea
  0bea:3c                 dup 
  0beb:35 02              ldi 2 
  0bed:1a                 eq? 
  0bee:30 0027            bnt code_0c18 
  0bf1:76               push0 
  0bf2:45 02 00         callb procedure_0002 0 //  

  0bf5:38 00a2          pushi a2 // $a2 setLoop
  0bf8:78               push1 
  0bf9:39 05            pushi 5 // $5 view
  0bfb:38 0120          pushi 120 // $120 setCel
  0bfe:78               push1 
  0bff:38 00ff          pushi ff // $ff syncNum
  0c02:38 00db          pushi db // $db cycleSpeed
  0c05:78               push1 
  0c06:39 08            pushi 8 // $8 underBits
  0c08:38 0096          pushi 96 // $96 setCycle
  0c0b:7a               push2 
  0c0c:51 1b            class Beg 
  0c0e:36                push 
  0c0f:7c            pushSelf 
  0c10:72 0c6e          lofsa $0c6e // chiChi
  0c13:4a 1a             send 1a 

  0c15:32 0047            jmp code_0c5f 

        code_0c18
  0c18:3c                 dup 
  0c19:35 05              ldi 5 
  0c1b:1a                 eq? 
  0c1c:30 000b            bnt code_0c2a 
  0c1f:7a               push2 
  0c20:38 038e          pushi 38e // $38e sel_910
  0c23:78               push1 
  0c24:45 0e 04         callb procedure_000e 4 //  

  0c27:32 0035            jmp code_0c5f 

        code_0c2a
  0c2a:3c                 dup 
  0c2b:35 0a              ldi a 
  0c2d:1a                 eq? 
  0c2e:30 0013            bnt code_0c44 
  0c31:39 04            pushi 4 // $4 x
  0c33:72 050a          lofsa $050a // Chi Chi Lambada
  0c36:36                push 
  0c37:38 038e          pushi 38e // $38e sel_910
  0c3a:39 12            pushi 12 // $12 illegalBits
  0c3c:39 6c            pushi 6c // $6c dispose
  0c3e:45 12 08         callb procedure_0012 8 //  

  0c41:32 001b            jmp code_0c5f 

        code_0c44
  0c44:3c                 dup 
  0c45:35 01              ldi 1 
  0c47:1a                 eq? 
  0c48:30 000c            bnt code_0c57 
  0c4b:38 010c          pushi 10c // $10c doVerb
  0c4e:78               push1 
  0c4f:78               push1 
  0c50:81 02              lag  
  0c52:4a 06             send 6 

  0c54:32 0008            jmp code_0c5f 

        code_0c57
  0c57:7a               push2 
  0c58:38 038e          pushi 38e // $38e sel_910
  0c5b:78               push1 
  0c5c:45 0e 04         callb procedure_000e 4 //  


        code_0c5f
  0c5f:3a                toss 
  0c60:48                 ret 
  0c61:00                bnot 
    )

    (method (cue) // method_0bc2
  0bc2:38 008d          pushi 8d // $8d cue
  0bc5:76               push0 
  0bc6:57 30 04         super Actor 4 

  0bc9:38 0179          pushi 179 // $179 newRoom
  0bcc:78               push1 
  0bcd:38 0393          pushi 393 // $393 sel_915
  0bd0:81 02              lag  
  0bd2:4a 06             send 6 

  0bd4:48                 ret 
    )

)

// 0de2
(instance sScored of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0cec
  0cec:3f 02             link 2 // (var $2)
  0cee:87 01              lap param1 
  0cf0:65 0a             aTop state 
  0cf2:36                push 
  0cf3:3c                 dup 
  0cf4:35 00              ldi 0 
  0cf6:1a                 eq? 
  0cf7:30 000b            bnt code_0d05 
  0cfa:76               push0 
  0cfb:45 02 00         callb procedure_0002 0 //  

  0cfe:35 02              ldi 2 
  0d00:65 10             aTop cycles 
  0d02:32 00d4            jmp code_0dd9 

        code_0d05
  0d05:3c                 dup 
  0d06:35 01              ldi 1 
  0d08:1a                 eq? 
  0d09:30 0017            bnt code_0d23 
  0d0c:38 0120          pushi 120 // $120 setCel
  0d0f:78               push1 
  0d10:78               push1 
  0d11:81 00              lag  
  0d13:4a 06             send 6 

  0d15:38 008e          pushi 8e // $8e setScript
  0d18:7a               push2 
  0d19:72 0b94          lofsa $0b94 // sDance
  0d1c:36                push 
  0d1d:7c            pushSelf 
  0d1e:54 08             self 8 

  0d20:32 00b6            jmp code_0dd9 

        code_0d23
  0d23:3c                 dup 
  0d24:35 02              ldi 2 
  0d26:1a                 eq? 
  0d27:30 002e            bnt code_0d58 
  0d2a:38 0096          pushi 96 // $96 setCycle
  0d2d:78               push1 
  0d2e:76               push0 
  0d2f:38 011d          pushi 11d // $11d stopUpd
  0d32:76               push0 
  0d33:72 0c6e          lofsa $0c6e // chiChi
  0d36:4a 0a             send a 

  0d38:7a               push2 
  0d39:39 28            pushi 28 // $28 message
  0d3b:38 00a5          pushi a5 // $a5 clean
  0d3e:45 0a 04         callb procedure_000a 4 //  

  0d41:39 06            pushi 6 // $6 loop
  0d43:72 050a          lofsa $050a // Chi Chi Lambada
  0d46:36                push 
  0d47:38 038e          pushi 38e // $38e sel_910
  0d4a:39 13            pushi 13 // $13 brTop
  0d4c:39 6c            pushi 6c // $6c dispose
  0d4e:38 008b          pushi 8b // $8b caller
  0d51:7c            pushSelf 
  0d52:45 12 0c         callb procedure_0012 c //  

  0d55:32 0081            jmp code_0dd9 

        code_0d58
  0d58:3c                 dup 
  0d59:35 03              ldi 3 
  0d5b:1a                 eq? 
  0d5c:30 0007            bnt code_0d66 
  0d5f:35 5a              ldi 5a 
  0d61:65 16             aTop ticks 
  0d63:32 0073            jmp code_0dd9 

        code_0d66
  0d66:3c                 dup 
  0d67:35 04              ldi 4 
  0d69:1a                 eq? 
  0d6a:30 001d            bnt code_0d8a 
  0d6d:39 07            pushi 7 // $7 cel
  0d6f:38 038e          pushi 38e // $38e sel_910
  0d72:39 14            pushi 14 // $14 brLeft
  0d74:39 43            pushi 43 // $43 at
  0d76:39 ff            pushi ff // $ff syncNum
  0d78:38 00b9          pushi b9 // $b9 bottom
  0d7b:39 46            pushi 46 // $46 width
  0d7d:38 0118          pushi 118 // $118 isNotHidden
  0d80:45 0e 0e         callb procedure_000e e //  

  0d83:35 7b              ldi 7b 
  0d85:65 16             aTop ticks 
  0d87:32 004f            jmp code_0dd9 

        code_0d8a
  0d8a:3c                 dup 
  0d8b:35 05              ldi 5 
  0d8d:1a                 eq? 
  0d8e:30 0012            bnt code_0da3 
  0d91:38 018c          pushi 18c // $18c drawPic
  0d94:7a               push2 
  0d95:78               push1 
  0d96:39 06            pushi 6 // $6 loop
  0d98:81 02              lag  
  0d9a:4a 08             send 8 

  0d9c:35 03              ldi 3 
  0d9e:65 12             aTop seconds 
  0da0:32 0036            jmp code_0dd9 

        code_0da3
  0da3:3c                 dup 
  0da4:35 06              ldi 6 
  0da6:1a                 eq? 
  0da7:30 001d            bnt code_0dc7 
  0daa:38 009f          pushi 9f // $9f fade
  0dad:76               push0 
  0dae:81 66              lag  
  0db0:4a 04             send 4 

  0db2:39 04            pushi 4 // $4 x
  0db4:39 03            pushi 3 // $3 y
  0db6:89 80              lsg  
  0db8:38 038e          pushi 38e // $38e sel_910
  0dbb:39 15            pushi 15 // $15 brBottom
  0dbd:45 19 08         callb procedure_0019 8 //  

  0dc0:35 03              ldi 3 
  0dc2:65 12             aTop seconds 
  0dc4:32 0012            jmp code_0dd9 

        code_0dc7
  0dc7:3c                 dup 
  0dc8:35 07              ldi 7 
  0dca:1a                 eq? 
  0dcb:30 000b            bnt code_0dd9 
  0dce:38 0179          pushi 179 // $179 newRoom
  0dd1:78               push1 
  0dd2:38 0398          pushi 398 // $398 sel_920
  0dd5:81 02              lag  
  0dd7:4a 06             send 6 


        code_0dd9
  0dd9:3a                toss 
  0dda:48                 ret 
  0ddb:00                bnot 
    )

)



