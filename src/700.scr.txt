(script 700)

(string
    string_2436 "Tramp's Casino is a perfect example of the style of architecture exemplified by Frank Lloyd Wrong."
    string_2499 "rm700"
    string_249f "sRoll"
    string_24a5 "sFromSouth"
    string_24b0 "sOcean"
    string_24b7 "Save"
    string_24bc "Nah, Why Bother?"
    string_24cd "AL says"
    string_24d5 "sFromLimo"
    string_24df "sLimo"
    string_24e5 "\"Please enter a number less than 10000, ok?\""
    string_2512 "Cheri"
    string_2518 "sGirlTalk"
    string_2522 "the seagull"
    string_252e "A lonely seagull flies back and forth, searching for a likely target--you!"
    string_2579 "bird"
    string_257e "the limousine"
    string_258c "Your limousine has returned. Or, perhaps, one suspiciously like it!"
    string_25d0 "limo"
    string_25d5 "the front door of Tramp's Casino"
    string_25f6 "A small bronze plaque over the door reads, \"Through these doors pass the greatest people in the world--OUR SUCKERS!\""
    string_266b "door"
    string_2670 "Brewster"
    string_2679 "Tramp's Casino thoughtfully provides a doorman to satisfy your every travel need--as long as all you need is for him to summon you a limousine!"
    string_2709 "No, thank you"
    string_2717 "Yes, please"
    string_2723 "Your Friendly Doorman"
    string_2739 "doorman"
    string_2741 "the casino greeter"
    string_2754 "Tramp's Casino employs a beautiful young woman to greet all its distinguished visitors."
    string_27ac "changeGirl"
    string_27b7 "the Tramp sign"
    string_27c6 "It says you're in front of Tramp's Casino."
    string_27f1 "trampSign"
    string_27fb "the slot machine sign"
    string_2811 "You presume there must be some form of mechanized gambling within."
    string_2854 "slotSign"
    string_285d "the light"
    string_2867 "Ain't neon grand!"
    string_2879 "leftLight"
    string_2883 "rightLight"
    string_288e "the neon nipples"
    string_289f "leftNip"
    string_28a7 "rightNip"
    string_28b0 "centerNip"
    string_28ba "leftRoller"
    string_28c5 "middleRoller"
    string_28d2 "rightRoller"
    string_28de "the neon sign"
    string_28ec "How you love gaudy things!"
    string_2907 "leftNeon"
    string_2910 "rightNeon"
    string_291a "centerNeon"
    string_2925 "the dollar sign"
    string_2935 "The implication here is that a fella could win some money inside this place!"
    string_2982 "dollars"
    string_298a "the burger stand"
    string_299b "How exciting! There's a restaurant along the Tramp Boardwalk that serves dead cow!"
    string_29ee "burgerStand"
    string_29fa "the boardwalk"
    string_2a08 "The boardwalk leads off to the east, stretching nearly as far as the eye can see."
    string_2a5a "boardwalk"
    string_2a64 "the beach"
    string_2a6e "That little strip of sand leads to a precipitous drop, then straight into the Atlantic! Care for a swim?"
    string_2ad7 "beach"
    string_2add "the lights"
    string_2ae8 "breasts1"
    string_2af1 "breasts2"
    string_2afa "the rear"
    string_2b03 "breasts3"
    string_2b0c "Tight butts drive you nuts!"
    string_2b28 "ass1"
    string_2b2d "ass2"
    string_2b32 "ass3"
    string_2b37 "the girl on the sign"
    string_2b4c "Sure she's only made of plywood, but doesn't she have a great set of lights?"
    string_2b99 "girl1"
    string_2b9f "the girl"
    string_2ba8 "She's in one of your favorite positions... for a sign!"
    string_2bdf "girl2"
    string_2be5 "And you were so afraid you were wasting your money buying this game!"
    string_2c2a "girl3"
    string_2c30 "girlEyes"
    string_2c39 "girlBust"
    string_2c42 "girlMouth"
    string_2c4c "Doorman"
    string_2c54 "manBust"
    string_2c5c "manEyes"
    string_2c64 "manMouth"
    string_2c6d "trampSignF"
    string_2c78 "leftLightF"
    string_2c83 "rightLightF"
    string_2c8f "the slot sign"
    string_2c9d "slotSignF"
    string_2ca7 "leftNeonF"
    string_2cb1 "rightNeonF"
    string_2cbc "centerNeonF"
    string_2cc8 "dollarsF"
    string_2cd1 "soundFX"
    string_2cd9 ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
)

// 0422
(instance publicrm700 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $2436
        picture $2bc
        style $ffff
        horizon $0
        controls $0
        north $2c6
        east $2f8
        south $30c
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 07            pushi 7 // $7 cel
  0010:38 0084          pushi 84 // $84 cycles
  0013:38 02c6          pushi 2c6 // $2c6 sel_710
  0016:38 026e          pushi 26e // $26e sel_622
  0019:38 00ff          pushi ff // $ff syncNum
  001c:38 00c2          pushi c2 // $c2 show
  001f:38 00bf          pushi bf // $bf maskCel
  0022:38 00c0          pushi c0 // $c0 highlightColor
  0025:46 03be 0000 0e  calle 3be procedure_0000 e //  

  002b:39 6b            pushi 6b // $6b init
  002d:76               push0 
  002e:38 020a          pushi 20a // $20a normalize
  0031:78               push1 
  0032:38 0229          pushi 229 // $229 sel_553
  0035:81 00              lag  
  0037:4a 0a             send a 

  0039:89 0c              lsg  
  003b:3c                 dup 
  003c:34 02ee            ldi 2ee 
  003f:1a                 eq? 
  0040:30 0026            bnt code_0069 
  0043:76               push0 
  0044:45 03 00         callb procedure_0003 0 //  

  0047:38 011c          pushi 11c // $11c posn
  004a:7a               push2 
  004b:39 75            pushi 75 // $75 firstTrue
  004d:38 00a4          pushi a4 // $a4 check
  0050:38 00e4          pushi e4 // $e4 setHeading
  0053:78               push1 
  0054:38 00b4          pushi b4 // $b4 busy
  0057:38 0146          pushi 146 // $146 edgeHit
  005a:78               push1 
  005b:76               push0 
  005c:81 00              lag  
  005e:4a 14             send 14 

  0060:78               push1 
  0061:39 31            pushi 31 // $31 b-i1
  0063:45 07 02         callb procedure_0007 2 //  

  0066:32 0081            jmp code_00ea 

        code_0069
  0069:3c                 dup 
  006a:63 1c             pToa north 
  006c:1a                 eq? 
  006d:30 002f            bnt code_009f 
  0070:76               push0 
  0071:45 03 00         callb procedure_0003 0 //  

  0074:38 011c          pushi 11c // $11c posn
  0077:7a               push2 
  0078:39 75            pushi 75 // $75 firstTrue
  007a:38 00a4          pushi a4 // $a4 check
  007d:38 00e4          pushi e4 // $e4 setHeading
  0080:78               push1 
  0081:38 00b4          pushi b4 // $b4 busy
  0084:38 0146          pushi 146 // $146 edgeHit
  0087:78               push1 
  0088:76               push0 
  0089:81 00              lag  
  008b:4a 14             send 14 

  008d:38 009f          pushi 9f // $9f fade
  0090:39 04            pushi 4 // $4 x
  0092:39 50            pushi 50 // $50 title
  0094:39 0a            pushi a // $a nsLeft
  0096:3c                 dup 
  0097:76               push0 
  0098:81 66              lag  
  009a:4a 0c             send c 

  009c:32 004b            jmp code_00ea 

        code_009f
  009f:3c                 dup 
  00a0:63 20             pToa south 
  00a2:1a                 eq? 
  00a3:30 000d            bnt code_00b3 
  00a6:38 008e          pushi 8e // $8e setScript
  00a9:78               push1 
  00aa:72 056a          lofsa $056a // sFromSouth
  00ad:36                push 
  00ae:54 06             self 6 

  00b0:32 0037            jmp code_00ea 

        code_00b3
  00b3:3c                 dup 
  00b4:63 1e             pToa east 
  00b6:1a                 eq? 
  00b7:30 000d            bnt code_00c7 
  00ba:39 03            pushi 3 // $3 y
  00bc:78               push1 
  00bd:38 009b          pushi 9b // $9b owner
  00c0:81 00              lag  
  00c2:4a 06             send 6 

  00c4:32 0023            jmp code_00ea 

        code_00c7
  00c7:3c                 dup 
  00c8:34 00c8            ldi c8 
  00cb:1a                 eq? 
  00cc:30 0011            bnt code_00e0 
  00cf:76               push0 
  00d0:45 02 00         callb procedure_0002 0 //  

  00d3:38 008e          pushi 8e // $8e setScript
  00d6:78               push1 
  00d7:72 0882          lofsa $0882 // sFromLimo
  00da:36                push 
  00db:54 06             self 6 

  00dd:32 000a            jmp code_00ea 

        code_00e0
  00e0:38 008e          pushi 8e // $8e setScript
  00e3:78               push1 
  00e4:72 0882          lofsa $0882 // sFromLimo
  00e7:36                push 
  00e8:54 06             self 6 


        code_00ea
  00ea:3a                toss 
  00eb:39 6b            pushi 6b // $6b init
  00ed:76               push0 
  00ee:57 72 04         super LLRoom 4 

  00f1:39 6b            pushi 6b // $6b init
  00f3:76               push0 
  00f4:38 0119          pushi 119 // $119 approachVerbs
  00f7:78               push1 
  00f8:39 05            pushi 5 // $5 view
  00fa:72 10a6          lofsa $10a6 // doorman
  00fd:4a 0a             send a 

  00ff:89 0c              lsg  
  0101:34 02ee            ldi 2ee 
  0104:1c                 ne? 
  0105:30 000e            bnt code_0116 
  0108:39 6b            pushi 6b // $6b init
  010a:76               push0 
  010b:38 0119          pushi 119 // $119 approachVerbs
  010e:78               push1 
  010f:39 05            pushi 5 // $5 view
  0111:72 11ae          lofsa $11ae // changeGirl
  0114:4a 0a             send a 


        code_0116
  0116:39 6b            pushi 6b // $6b init
  0118:76               push0 
  0119:72 1230          lofsa $1230 // trampSign
  011c:4a 04             send 4 

  011e:39 6b            pushi 6b // $6b init
  0120:76               push0 
  0121:72 132c          lofsa $132c // leftLight
  0124:4a 04             send 4 

  0126:39 6b            pushi 6b // $6b init
  0128:76               push0 
  0129:72 13aa          lofsa $13aa // rightLight
  012c:4a 04             send 4 

  012e:39 6b            pushi 6b // $6b init
  0130:76               push0 
  0131:72 12ae          lofsa $12ae // slotSign
  0134:4a 04             send 4 

  0136:39 6b            pushi 6b // $6b init
  0138:76               push0 
  0139:72 0e40          lofsa $0e40 // bird
  013c:4a 04             send 4 

  013e:39 6b            pushi 6b // $6b init
  0140:76               push0 
  0141:72 149c          lofsa $149c // leftNip
  0144:4a 04             send 4 

  0146:39 6b            pushi 6b // $6b init
  0148:76               push0 
  0149:72 152e          lofsa $152e // rightNip
  014c:4a 04             send 4 

  014e:39 6b            pushi 6b // $6b init
  0150:76               push0 
  0151:72 15c0          lofsa $15c0 // centerNip
  0154:4a 04             send 4 

  0156:39 6b            pushi 6b // $6b init
  0158:76               push0 
  0159:38 0096          pushi 96 // $96 setCycle
  015c:78               push1 
  015d:51 17            class Fwd 
  015f:36                push 
  0160:38 008e          pushi 8e // $8e setScript
  0163:78               push1 
  0164:72 04f2          lofsa $04f2 // sRoll
  0167:36                push 
  0168:72 168e          lofsa $168e // leftRoller
  016b:4a 10             send 10 

  016d:39 6b            pushi 6b // $6b init
  016f:76               push0 
  0170:38 0120          pushi 120 // $120 setCel
  0173:78               push1 
  0174:7a               push2 
  0175:78               push1 
  0176:7a               push2 
  0177:43 3c 04         callk Random 4 

  017a:36                push 
  017b:38 0096          pushi 96 // $96 setCycle
  017e:78               push1 
  017f:51 17            class Fwd 
  0181:36                push 
  0182:72 170e          lofsa $170e // middleRoller
  0185:4a 10             send 10 

  0187:39 6b            pushi 6b // $6b init
  0189:76               push0 
  018a:38 0120          pushi 120 // $120 setCel
  018d:78               push1 
  018e:39 03            pushi 3 // $3 y
  0190:38 0096          pushi 96 // $96 setCycle
  0193:78               push1 
  0194:51 17            class Fwd 
  0196:36                push 
  0197:72 178a          lofsa $178a // rightRoller
  019a:4a 10             send 10 

  019c:39 6b            pushi 6b // $6b init
  019e:76               push0 
  019f:72 1808          lofsa $1808 // leftNeon
  01a2:4a 04             send 4 

  01a4:39 6b            pushi 6b // $6b init
  01a6:76               push0 
  01a7:72 1886          lofsa $1886 // rightNeon
  01aa:4a 04             send 4 

  01ac:39 6b            pushi 6b // $6b init
  01ae:76               push0 
  01af:72 1904          lofsa $1904 // centerNeon
  01b2:4a 04             send 4 

  01b4:39 6b            pushi 6b // $6b init
  01b6:76               push0 
  01b7:72 1982          lofsa $1982 // dollars
  01ba:4a 04             send 4 

  01bc:39 6b            pushi 6b // $6b init
  01be:76               push0 
  01bf:38 0119          pushi 119 // $119 approachVerbs
  01c2:78               push1 
  01c3:39 03            pushi 3 // $3 y
  01c5:72 0f44          lofsa $0f44 // door
  01c8:4a 0a             send a 

  01ca:39 6b            pushi 6b // $6b init
  01cc:76               push0 
  01cd:72 1c0c          lofsa $1c0c // ass1
  01d0:4a 04             send 4 

  01d2:39 6b            pushi 6b // $6b init
  01d4:76               push0 
  01d5:72 1c5c          lofsa $1c5c // ass2
  01d8:4a 04             send 4 

  01da:39 6b            pushi 6b // $6b init
  01dc:76               push0 
  01dd:72 1cac          lofsa $1cac // ass3
  01e0:4a 04             send 4 

  01e2:39 6b            pushi 6b // $6b init
  01e4:76               push0 
  01e5:72 1af0          lofsa $1af0 // breasts1
  01e8:4a 04             send 4 

  01ea:39 6b            pushi 6b // $6b init
  01ec:76               push0 
  01ed:72 1b40          lofsa $1b40 // breasts2
  01f0:4a 04             send 4 

  01f2:39 6b            pushi 6b // $6b init
  01f4:76               push0 
  01f5:72 1b90          lofsa $1b90 // breasts3
  01f8:4a 04             send 4 

  01fa:39 6b            pushi 6b // $6b init
  01fc:76               push0 
  01fd:72 1d28          lofsa $1d28 // girl1
  0200:4a 04             send 4 

  0202:39 6b            pushi 6b // $6b init
  0204:76               push0 
  0205:72 1da4          lofsa $1da4 // girl2
  0208:4a 04             send 4 

  020a:39 6b            pushi 6b // $6b init
  020c:76               push0 
  020d:72 1e20          lofsa $1e20 // girl3
  0210:4a 04             send 4 

  0212:39 6b            pushi 6b // $6b init
  0214:76               push0 
  0215:72 1a22          lofsa $1a22 // burgerStand
  0218:4a 04             send 4 

  021a:39 6b            pushi 6b // $6b init
  021c:76               push0 
  021d:72 1a66          lofsa $1a66 // boardwalk
  0220:4a 04             send 4 

  0222:39 6b            pushi 6b // $6b init
  0224:76               push0 
  0225:72 1aa2          lofsa $1aa2 // beach
  0228:4a 04             send 4 

  022a:39 6b            pushi 6b // $6b init
  022c:76               push0 
  022d:72 21f4          lofsa $21f4 // trampSignF
  0230:4a 04             send 4 

  0232:39 6b            pushi 6b // $6b init
  0234:76               push0 
  0235:72 2230          lofsa $2230 // leftLightF
  0238:4a 04             send 4 

  023a:39 6b            pushi 6b // $6b init
  023c:76               push0 
  023d:72 2282          lofsa $2282 // rightLightF
  0240:4a 04             send 4 

  0242:39 6b            pushi 6b // $6b init
  0244:76               push0 
  0245:72 22c2          lofsa $22c2 // slotSignF
  0248:4a 04             send 4 

  024a:39 6b            pushi 6b // $6b init
  024c:76               push0 
  024d:72 22fe          lofsa $22fe // leftNeonF
  0250:4a 04             send 4 

  0252:39 6b            pushi 6b // $6b init
  0254:76               push0 
  0255:72 233a          lofsa $233a // rightNeonF
  0258:4a 04             send 4 

  025a:39 6b            pushi 6b // $6b init
  025c:76               push0 
  025d:72 2376          lofsa $2376 // centerNeonF
  0260:4a 04             send 4 

  0262:39 6b            pushi 6b // $6b init
  0264:76               push0 
  0265:72 23c8          lofsa $23c8 // dollarsF
  0268:4a 04             send 4 

  026a:38 0176          pushi 176 // $176 addObstacle
  026d:7a               push2 
  026e:39 22            pushi 22 // $22 type
  0270:78               push1 
  0271:7a               push2 
  0272:39 6b            pushi 6b // $6b init
  0274:39 0a            pushi a // $a nsLeft
  0276:38 00dd          pushi dd // $dd lastCel
  0279:38 00b0          pushi b0 // $b0 cycle
  027c:38 00e7          pushi e7 // $e7 dynamic
  027f:38 00ac          pushi ac // $ac moveTo
  0282:38 013f          pushi 13f // $13f inputLineAddr
  0285:38 00ac          pushi ac // $ac moveTo
  0288:38 013f          pushi 13f // $13f inputLineAddr
  028b:38 00bd          pushi bd // $bd maskView
  028e:38 012a          pushi 12a // $12a code
  0291:38 00bd          pushi bd // $bd maskView
  0294:39 72            pushi 72 // $72 yourself
  0296:76               push0 
  0297:39 6a            pushi 6a // $6a new
  0299:76               push0 
  029a:51 23            class Polygon 
  029c:4a 04             send 4 

  029e:4a 22             send 22 

  02a0:36                push 
  02a1:39 22            pushi 22 // $22 type
  02a3:78               push1 
  02a4:7a               push2 
  02a5:39 6b            pushi 6b // $6b init
  02a7:39 2c            pushi 2c // $2c nodePtr
  02a9:39 62            pushi 62 // $62 pri
  02ab:38 00a3          pushi a3 // $a3 send
  02ae:39 54            pushi 54 // $54 delete
  02b0:38 00a3          pushi a3 // $a3 send
  02b3:39 54            pushi 54 // $54 delete
  02b5:38 00a1          pushi a1 // $a1 setVol
  02b8:39 03            pushi 3 // $3 y
  02ba:38 00a1          pushi a1 // $a1 setVol
  02bd:39 03            pushi 3 // $3 y
  02bf:38 00a9          pushi a9 // $a9 track
  02c2:38 00ad          pushi ad // $ad setMark
  02c5:38 00a9          pushi a9 // $a9 track
  02c8:38 00c5          pushi c5 // $c5 mask
  02cb:38 00b0          pushi b0 // $b0 cycle
  02ce:38 00d8          pushi d8 // $d8 nextCel
  02d1:38 00bd          pushi bd // $bd maskView
  02d4:76               push0 
  02d5:38 00bd          pushi bd // $bd maskView
  02d8:76               push0 
  02d9:76               push0 
  02da:38 013f          pushi 13f // $13f inputLineAddr
  02dd:76               push0 
  02de:38 013f          pushi 13f // $13f inputLineAddr
  02e1:38 0097          pushi 97 // $97 setReal
  02e4:38 00fd          pushi fd // $fd syncCue
  02e7:38 0097          pushi 97 // $97 setReal
  02ea:38 00fd          pushi fd // $fd syncCue
  02ed:38 009c          pushi 9c // $9c stop
  02f0:38 00e4          pushi e4 // $e4 setHeading
  02f3:38 00a1          pushi a1 // $a1 setVol
  02f6:38 0093          pushi 93 // $93 ticksToDo
  02f9:38 00a1          pushi a1 // $a1 setVol
  02fc:38 008f          pushi 8f // $8f port
  02ff:38 00a3          pushi a3 // $a3 send
  0302:38 0087          pushi 87 // $87 ticks
  0305:38 00a2          pushi a2 // $a2 setLoop
  0308:39 79            pushi 79 // $79 first
  030a:38 009c          pushi 9c // $9c stop
  030d:39 79            pushi 79 // $79 first
  030f:38 008c          pushi 8c // $8c changeState
  0312:39 73            pushi 73 // $73 add
  0314:38 008c          pushi 8c // $8c changeState
  0317:39 73            pushi 73 // $73 add
  0319:38 009b          pushi 9b // $9b owner
  031c:39 72            pushi 72 // $72 yourself
  031e:76               push0 
  031f:39 6a            pushi 6a // $6a new
  0321:76               push0 
  0322:51 23            class Polygon 
  0324:4a 04             send 4 

  0326:4a 66             send 66 

  0328:36                push 
  0329:81 02              lag  
  032b:4a 08             send 8 

  032d:89 0c              lsg  
  032f:38 0184          pushi 184 // $184 north
  0332:76               push0 
  0333:81 02              lag  
  0335:4a 04             send 4 

  0337:1a                 eq? 
  0338:30 0012            bnt code_034d 
  033b:38 009f          pushi 9f // $9f fade
  033e:39 04            pushi 4 // $4 x
  0340:39 50            pushi 50 // $50 title
  0342:39 0a            pushi a // $a nsLeft
  0344:3c                 dup 
  0345:76               push0 
  0346:81 66              lag  
  0348:4a 0c             send c 

  034a:32 0022            jmp code_036f 

        code_034d
  034d:89 0c              lsg  
  034f:34 00c8            ldi c8 
  0352:1c                 ne? 
  0353:30 0019            bnt code_036f 
  0356:39 2b            pushi 2b // $2b number
  0358:78               push1 
  0359:38 02c6          pushi 2c6 // $2c6 sel_710
  035c:38 00a2          pushi a2 // $a2 setLoop
  035f:78               push1 
  0360:39 ff            pushi ff // $ff syncNum
  0362:39 66            pushi 66 // $66 flags
  0364:78               push1 
  0365:78               push1 
  0366:39 2a            pushi 2a // $2a play
  0368:78               push1 
  0369:39 50            pushi 50 // $50 title
  036b:81 66              lag  
  036d:4a 18             send 18 


        code_036f
  036f:48                 ret 
    )

    (method (doit) // method_0370
  0370:39 3c            pushi 3c // $3c doit
  0372:76               push0 
  0373:59 01            &rest 1 
  0375:57 72 04         super LLRoom 4 

  0378:78               push1 
  0379:76               push0 
  037a:45 06 02         callb procedure_0006 2 //  

  037d:30 0031            bnt code_03b1 
  0380:78               push1 
  0381:89 58              lsg  
  0383:83 01              lal local1 
  0385:04                 sub 
  0386:36                push 
  0387:43 3d 02         callk Abs 2 

  038a:36                push 
  038b:35 06              ldi 6 
  038d:1e                 gt? 
  038e:30 0020            bnt code_03b1 
  0391:81 58              lag  
  0393:a3 01              sal local1 
  0395:39 04            pushi 4 // $4 x
  0397:39 06            pushi 6 // $6 loop
  0399:39 21            pushi 21 // $21 font
  039b:39 30            pushi 30 // $30 b-moveCnt
  039d:39 ff            pushi ff // $ff syncNum
  039f:43 6f 08         callk Palette 8 

  03a2:39 04            pushi 4 // $4 x
  03a4:39 06            pushi 6 // $6 loop
  03a6:38 00e3          pushi e3 // $e3 onTarget
  03a9:38 00e7          pushi e7 // $e7 dynamic
  03ac:39 ff            pushi ff // $ff syncNum
  03ae:43 6f 08         callk Palette 8 


        code_03b1
  03b1:63 08             pToa script 
  03b3:30 0003            bnt code_03b9 
  03b6:32 001d            jmp code_03d6 

        code_03b9
  03b9:39 03            pushi 3 // $3 y
  03bb:76               push0 
  03bc:81 00              lag  
  03be:4a 04             send 4 

  03c0:36                push 
  03c1:34 00b9            ldi b9 
  03c4:1e                 gt? 
  03c5:30 000e            bnt code_03d6 
  03c8:76               push0 
  03c9:45 02 00         callb procedure_0002 0 //  

  03cc:38 008e          pushi 8e // $8e setScript
  03cf:78               push1 
  03d0:72 05da          lofsa $05da // sOcean
  03d3:36                push 
  03d4:54 06             self 6 


        code_03d6
  03d6:48                 ret 
    )

    (method (newRoom) // method_03d7
  03d7:38 0179          pushi 179 // $179 newRoom
  03da:78               push1 
  03db:8f 01              lsp param1 
  03dd:57 72 06         super LLRoom 6 

  03e0:8f 01              lsp param1 
  03e2:34 02c6            ldi 2c6 
  03e5:1a                 eq? 
  03e6:30 0012            bnt code_03fb 
  03e9:38 009f          pushi 9f // $9f fade
  03ec:39 04            pushi 4 // $4 x
  03ee:39 7f            pushi 7f // $7f addAfter
  03f0:39 0a            pushi a // $a nsLeft
  03f2:3c                 dup 
  03f3:76               push0 
  03f4:81 66              lag  
  03f6:4a 0c             send c 

  03f8:32 0008            jmp code_0403 

        code_03fb
  03fb:38 009f          pushi 9f // $9f fade
  03fe:76               push0 
  03ff:81 66              lag  
  0401:4a 04             send 4 


        code_0403
  0403:67 08             pTos script 
  0405:72 05da          lofsa $05da // sOcean
  0408:1a                 eq? 
  0409:30 0005            bnt code_0411 
  040c:35 00              ldi 0 
  040e:32 0009            jmp code_041a 

        code_0411
  0411:38 0179          pushi 179 // $179 newRoom
  0414:78               push1 
  0415:8f 01              lsp param1 
  0417:57 72 06         super LLRoom 6 


        code_041a
  041a:48                 ret 
  041b:00                bnot 
    )

)

// 04ec
(instance sRoll of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_046a
  046a:87 01              lap param1 
  046c:65 0a             aTop state 
  046e:36                push 
  046f:3c                 dup 
  0470:35 00              ldi 0 
  0472:1a                 eq? 
  0473:30 0007            bnt code_047d 
  0476:35 05              ldi 5 
  0478:65 12             aTop seconds 
  047a:32 0066            jmp code_04e3 

        code_047d
  047d:3c                 dup 
  047e:35 01              ldi 1 
  0480:1a                 eq? 
  0481:30 002c            bnt code_04b0 
  0484:39 04            pushi 4 // $4 x
  0486:78               push1 
  0487:39 60            pushi 60 // $60 frame
  0489:39 03            pushi 3 // $3 y
  048b:78               push1 
  048c:39 30            pushi 30 // $30 b-moveCnt
  048e:38 00a2          pushi a2 // $a2 setLoop
  0491:78               push1 
  0492:39 07            pushi 7 // $7 cel
  0494:72 168e          lofsa $168e // leftRoller
  0497:4a 12             send 12 

  0499:39 69            pushi 69 // $69 hide
  049b:76               push0 
  049c:72 170e          lofsa $170e // middleRoller
  049f:4a 04             send 4 

  04a1:39 69            pushi 69 // $69 hide
  04a3:76               push0 
  04a4:72 178a          lofsa $178a // rightRoller
  04a7:4a 04             send 4 

  04a9:35 05              ldi 5 
  04ab:65 12             aTop seconds 
  04ad:32 0033            jmp code_04e3 

        code_04b0
  04b0:3c                 dup 
  04b1:35 02              ldi 2 
  04b3:1a                 eq? 
  04b4:30 002c            bnt code_04e3 
  04b7:39 04            pushi 4 // $4 x
  04b9:78               push1 
  04ba:39 63            pushi 63 // $63 perform
  04bc:39 03            pushi 3 // $3 y
  04be:78               push1 
  04bf:39 33            pushi 33 // $33 b-di
  04c1:38 00a2          pushi a2 // $a2 setLoop
  04c4:78               push1 
  04c5:39 0e            pushi e // $e lsLeft
  04c7:72 168e          lofsa $168e // leftRoller
  04ca:4a 12             send 12 

  04cc:38 00c2          pushi c2 // $c2 show
  04cf:76               push0 
  04d0:72 170e          lofsa $170e // middleRoller
  04d3:4a 04             send 4 

  04d5:38 00c2          pushi c2 // $c2 show
  04d8:76               push0 
  04d9:72 178a          lofsa $178a // rightRoller
  04dc:4a 04             send 4 

  04de:39 6b            pushi 6b // $6b init
  04e0:76               push0 
  04e1:54 04             self 4 


        code_04e3
  04e3:3a                toss 
  04e4:48                 ret 
  04e5:00                bnot 
    )

)

// 0564
(instance sFromSouth of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0520
  0520:87 01              lap param1 
  0522:65 0a             aTop state 
  0524:36                push 
  0525:3c                 dup 
  0526:35 00              ldi 0 
  0528:1a                 eq? 
  0529:30 0020            bnt code_054c 
  052c:38 011c          pushi 11c // $11c posn
  052f:7a               push2 
  0530:38 0140          pushi 140 // $140 mapKeyToDir
  0533:38 00dc          pushi dc // $dc cycler
  0536:38 011b          pushi 11b // $11b setMotion
  0539:39 04            pushi 4 // $4 x
  053b:51 24            class PolyPath 
  053d:36                push 
  053e:38 00dc          pushi dc // $dc cycler
  0541:38 00b4          pushi b4 // $b4 busy
  0544:7c            pushSelf 
  0545:81 00              lag  
  0547:4a 14             send 14 

  0549:32 0010            jmp code_055c 

        code_054c
  054c:3c                 dup 
  054d:35 01              ldi 1 
  054f:1a                 eq? 
  0550:30 0009            bnt code_055c 
  0553:76               push0 
  0554:45 03 00         callb procedure_0003 0 //  

  0557:39 6c            pushi 6c // $6c dispose
  0559:76               push0 
  055a:54 04             self 4 


        code_055c
  055c:3a                toss 
  055d:48                 ret 
    )

)

// 05d4
(instance sOcean of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0598
  0598:87 01              lap param1 
  059a:65 0a             aTop state 
  059c:36                push 
  059d:3c                 dup 
  059e:35 00              ldi 0 
  05a0:1a                 eq? 
  05a1:30 0016            bnt code_05ba 
  05a4:38 011b          pushi 11b // $11b setMotion
  05a7:39 04            pushi 4 // $4 x
  05a9:51 1e            class MoveTo 
  05ab:36                push 
  05ac:38 0140          pushi 140 // $140 mapKeyToDir
  05af:38 00dc          pushi dc // $dc cycler
  05b2:7c            pushSelf 
  05b3:81 00              lag  
  05b5:4a 0c             send c 

  05b7:32 0012            jmp code_05cc 

        code_05ba
  05ba:3c                 dup 
  05bb:35 01              ldi 1 
  05bd:1a                 eq? 
  05be:30 000b            bnt code_05cc 
  05c1:38 0179          pushi 179 // $179 newRoom
  05c4:78               push1 
  05c5:38 030c          pushi 30c // $30c sel_780
  05c8:81 02              lag  
  05ca:4a 06             send 6 


        code_05cc
  05cc:3a                toss 
  05cd:48                 ret 
    )

)

// 087c
(instance sFromLimo of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_0608
  0608:39 3c            pushi 3c // $3c doit
  060a:76               push0 
  060b:59 01            &rest 1 
  060d:57 06 04         super Script 4 

  0610:38 009a          pushi 9a // $9a prevSignal
  0613:76               push0 
  0614:72 2408          lofsa $2408 // soundFX
  0617:4a 04             send 4 

  0619:36                push 
  061a:35 0a              ldi a 
  061c:1a                 eq? 
  061d:30 0021            bnt code_0641 
  0620:39 2b            pushi 2b // $2b number
  0622:76               push0 
  0623:72 2408          lofsa $2408 // soundFX
  0626:4a 04             send 4 

  0628:36                push 
  0629:34 00c2            ldi c2 
  062c:1a                 eq? 
  062d:30 0011            bnt code_0641 
  0630:38 009a          pushi 9a // $9a prevSignal
  0633:78               push1 
  0634:39 05            pushi 5 // $5 view
  0636:72 2408          lofsa $2408 // soundFX
  0639:4a 06             send 6 

  063b:38 008d          pushi 8d // $8d cue
  063e:76               push0 
  063f:54 04             self 4 


        code_0641
  0641:48                 ret 
    )

    (method (changeState) // method_0642
  0642:87 01              lap param1 
  0644:65 0a             aTop state 
  0646:36                push 
  0647:3c                 dup 
  0648:35 00              ldi 0 
  064a:1a                 eq? 
  064b:30 0017            bnt code_0665 
  064e:39 6b            pushi 6b // $6b init
  0650:76               push0 
  0651:72 0ec6          lofsa $0ec6 // limo
  0654:4a 04             send 4 

  0656:39 69            pushi 69 // $69 hide
  0658:76               push0 
  0659:81 00              lag  
  065b:4a 04             send 4 

  065d:34 0096            ldi 96 
  0660:65 16             aTop ticks 
  0662:32 020e            jmp code_0873 

        code_0665
  0665:3c                 dup 
  0666:35 01              ldi 1 
  0668:1a                 eq? 
  0669:30 0015            bnt code_0681 
  066c:39 2b            pushi 2b // $2b number
  066e:78               push1 
  066f:38 00bf          pushi bf // $bf maskCel
  0672:39 2a            pushi 2a // $2a play
  0674:76               push0 
  0675:72 2408          lofsa $2408 // soundFX
  0678:4a 0a             send a 

  067a:35 32              ldi 32 
  067c:65 16             aTop ticks 
  067e:32 01f2            jmp code_0873 

        code_0681
  0681:3c                 dup 
  0682:35 02              ldi 2 
  0684:1a                 eq? 
  0685:30 0007            bnt code_068f 
  0688:35 3c              ldi 3c 
  068a:65 16             aTop ticks 
  068c:32 01e4            jmp code_0873 

        code_068f
  068f:3c                 dup 
  0690:35 03              ldi 3 
  0692:1a                 eq? 
  0693:30 0036            bnt code_06cc 
  0696:38 020a          pushi 20a // $20a normalize
  0699:78               push1 
  069a:38 0229          pushi 229 // $229 sel_553
  069d:39 04            pushi 4 // $4 x
  069f:78               push1 
  06a0:39 6b            pushi 6b // $6b init
  06a2:39 03            pushi 3 // $3 y
  06a4:78               push1 
  06a5:38 00b1          pushi b1 // $b1 advance
  06a8:38 00a2          pushi a2 // $a2 setLoop
  06ab:78               push1 
  06ac:39 03            pushi 3 // $3 y
  06ae:38 00c2          pushi c2 // $c2 show
  06b1:76               push0 
  06b2:38 0120          pushi 120 // $120 setCel
  06b5:78               push1 
  06b6:76               push0 
  06b7:38 011b          pushi 11b // $11b setMotion
  06ba:39 04            pushi 4 // $4 x
  06bc:51 1e            class MoveTo 
  06be:36                push 
  06bf:39 6b            pushi 6b // $6b init
  06c1:38 00a6          pushi a6 // $a6 playBed
  06c4:7c            pushSelf 
  06c5:81 00              lag  
  06c7:4a 2e             send 2e 

  06c9:32 01a7            jmp code_0873 

        code_06cc
  06cc:3c                 dup 
  06cd:35 04              ldi 4 
  06cf:1a                 eq? 
  06d0:30 0015            bnt code_06e8 
  06d3:38 00a2          pushi a2 // $a2 setLoop
  06d6:78               push1 
  06d7:39 ff            pushi ff // $ff syncNum
  06d9:38 00e4          pushi e4 // $e4 setHeading
  06dc:7a               push2 
  06dd:38 00b4          pushi b4 // $b4 busy
  06e0:7c            pushSelf 
  06e1:81 00              lag  
  06e3:4a 0e             send e 

  06e5:32 018b            jmp code_0873 

        code_06e8
  06e8:3c                 dup 
  06e9:35 05              ldi 5 
  06eb:1a                 eq? 
  06ec:30 0007            bnt code_06f6 
  06ef:35 3c              ldi 3c 
  06f1:65 16             aTop ticks 
  06f3:32 017d            jmp code_0873 

        code_06f6
  06f6:3c                 dup 
  06f7:35 06              ldi 6 
  06f9:1a                 eq? 
  06fa:30 0015            bnt code_0712 
  06fd:39 2b            pushi 2b // $2b number
  06ff:78               push1 
  0700:38 00c0          pushi c0 // $c0 highlightColor
  0703:39 2a            pushi 2a // $2a play
  0705:76               push0 
  0706:72 2408          lofsa $2408 // soundFX
  0709:4a 0a             send a 

  070b:35 64              ldi 64 
  070d:65 16             aTop ticks 
  070f:32 0161            jmp code_0873 

        code_0712
  0712:3c                 dup 
  0713:35 07              ldi 7 
  0715:1a                 eq? 
  0716:30 002a            bnt code_0743 
  0719:39 2b            pushi 2b // $2b number
  071b:78               push1 
  071c:38 02c6          pushi 2c6 // $2c6 sel_710
  071f:38 00a2          pushi a2 // $a2 setLoop
  0722:78               push1 
  0723:39 ff            pushi ff // $ff syncNum
  0725:39 66            pushi 66 // $66 flags
  0727:78               push1 
  0728:78               push1 
  0729:39 2a            pushi 2a // $2a play
  072b:78               push1 
  072c:39 50            pushi 50 // $50 title
  072e:81 66              lag  
  0730:4a 18             send 18 

  0732:39 2b            pushi 2b // $2b number
  0734:78               push1 
  0735:38 00c2          pushi c2 // $c2 show
  0738:39 2a            pushi 2a // $2a play
  073a:76               push0 
  073b:72 2408          lofsa $2408 // soundFX
  073e:4a 0a             send a 

  0740:32 0130            jmp code_0873 

        code_0743
  0743:3c                 dup 
  0744:35 08              ldi 8 
  0746:1a                 eq? 
  0747:30 0022            bnt code_076c 
  074a:38 0134          pushi 134 // $134 setStep
  074d:7a               push2 
  074e:78               push1 
  074f:78               push1 
  0750:38 011b          pushi 11b // $11b setMotion
  0753:39 04            pushi 4 // $4 x
  0755:51 1e            class MoveTo 
  0757:36                push 
  0758:39 57            pushi 57 // $57 printLang
  075a:39 03            pushi 3 // $3 y
  075c:76               push0 
  075d:72 0ec6          lofsa $0ec6 // limo
  0760:4a 04             send 4 

  0762:36                push 
  0763:7c            pushSelf 
  0764:72 0ec6          lofsa $0ec6 // limo
  0767:4a 14             send 14 

  0769:32 0107            jmp code_0873 

        code_076c
  076c:3c                 dup 
  076d:35 09              ldi 9 
  076f:1a                 eq? 
  0770:30 0023            bnt code_0796 
  0773:38 0134          pushi 134 // $134 setStep
  0776:7a               push2 
  0777:39 03            pushi 3 // $3 y
  0779:3c                 dup 
  077a:38 011b          pushi 11b // $11b setMotion
  077d:39 04            pushi 4 // $4 x
  077f:51 1e            class MoveTo 
  0781:36                push 
  0782:39 41            pushi 41 // $41 replay
  0784:39 03            pushi 3 // $3 y
  0786:76               push0 
  0787:72 0ec6          lofsa $0ec6 // limo
  078a:4a 04             send 4 

  078c:36                push 
  078d:7c            pushSelf 
  078e:72 0ec6          lofsa $0ec6 // limo
  0791:4a 14             send 14 

  0793:32 00dd            jmp code_0873 

        code_0796
  0796:3c                 dup 
  0797:35 0a              ldi a 
  0799:1a                 eq? 
  079a:30 0023            bnt code_07c0 
  079d:38 0134          pushi 134 // $134 setStep
  07a0:7a               push2 
  07a1:39 04            pushi 4 // $4 x
  07a3:3c                 dup 
  07a4:38 011b          pushi 11b // $11b setMotion
  07a7:39 04            pushi 4 // $4 x
  07a9:51 1e            class MoveTo 
  07ab:36                push 
  07ac:39 32            pushi 32 // $32 b-i2
  07ae:39 03            pushi 3 // $3 y
  07b0:76               push0 
  07b1:72 0ec6          lofsa $0ec6 // limo
  07b4:4a 04             send 4 

  07b6:36                push 
  07b7:7c            pushSelf 
  07b8:72 0ec6          lofsa $0ec6 // limo
  07bb:4a 14             send 14 

  07bd:32 00b3            jmp code_0873 

        code_07c0
  07c0:3c                 dup 
  07c1:35 0b              ldi b 
  07c3:1a                 eq? 
  07c4:30 0023            bnt code_07ea 
  07c7:38 0134          pushi 134 // $134 setStep
  07ca:7a               push2 
  07cb:39 05            pushi 5 // $5 view
  07cd:3c                 dup 
  07ce:38 011b          pushi 11b // $11b setMotion
  07d1:39 04            pushi 4 // $4 x
  07d3:51 1e            class MoveTo 
  07d5:36                push 
  07d6:39 23            pushi 23 // $23 window
  07d8:39 03            pushi 3 // $3 y
  07da:76               push0 
  07db:72 0ec6          lofsa $0ec6 // limo
  07de:4a 04             send 4 

  07e0:36                push 
  07e1:7c            pushSelf 
  07e2:72 0ec6          lofsa $0ec6 // limo
  07e5:4a 14             send 14 

  07e7:32 0089            jmp code_0873 

        code_07ea
  07ea:3c                 dup 
  07eb:35 0c              ldi c 
  07ed:1a                 eq? 
  07ee:30 0023            bnt code_0814 
  07f1:38 0134          pushi 134 // $134 setStep
  07f4:7a               push2 
  07f5:39 06            pushi 6 // $6 loop
  07f7:3c                 dup 
  07f8:38 011b          pushi 11b // $11b setMotion
  07fb:39 04            pushi 4 // $4 x
  07fd:51 1e            class MoveTo 
  07ff:36                push 
  0800:39 a1            pushi a1 // $a1 setVol
  0802:39 03            pushi 3 // $3 y
  0804:76               push0 
  0805:72 0ec6          lofsa $0ec6 // limo
  0808:4a 04             send 4 

  080a:36                push 
  080b:7c            pushSelf 
  080c:72 0ec6          lofsa $0ec6 // limo
  080f:4a 14             send 14 

  0811:32 005f            jmp code_0873 

        code_0814
  0814:3c                 dup 
  0815:35 0d              ldi d 
  0817:1a                 eq? 
  0818:30 001e            bnt code_0839 
  081b:39 6c            pushi 6c // $6c dispose
  081d:76               push0 
  081e:72 0ec6          lofsa $0ec6 // limo
  0821:4a 04             send 4 

  0823:38 020a          pushi 20a // $20a normalize
  0826:78               push1 
  0827:38 0229          pushi 229 // $229 sel_553
  082a:81 00              lag  
  082c:4a 06             send 6 

  082e:76               push0 
  082f:45 03 00         callb procedure_0003 0 //  

  0832:35 01              ldi 1 
  0834:65 10             aTop cycles 
  0836:32 003a            jmp code_0873 

        code_0839
  0839:3c                 dup 
  083a:35 0e              ldi e 
  083c:1a                 eq? 
  083d:30 0033            bnt code_0873 
  0840:39 6c            pushi 6c // $6c dispose
  0842:76               push0 
  0843:54 04             self 4 

  0845:39 0d            pushi d // $d lsTop
  0847:38 02bc          pushi 2bc // $2bc sel_700
  084a:76               push0 
  084b:39 51            pushi 51 // $51 button
  084d:72 24b7          lofsa $24b7 // Save
  0850:36                push 
  0851:78               push1 
  0852:39 51            pushi 51 // $51 button
  0854:72 24bc          lofsa $24bc // Nah, Why Bother?
  0857:36                push 
  0858:76               push0 
  0859:39 50            pushi 50 // $50 title
  085b:72 24cd          lofsa $24cd // AL says
  085e:36                push 
  085f:39 43            pushi 43 // $43 at
  0861:39 ff            pushi ff // $ff syncNum
  0863:39 14            pushi 14 // $14 brLeft
  0865:47 ff 00 1a      calle ff procedure_0000 1a //  

  0869:30 0007            bnt code_0873 
  086c:39 4e            pushi 4e // $4e save
  086e:76               push0 
  086f:81 01              lag  
  0871:4a 04             send 4 


        code_0873
  0873:3a                toss 
  0874:48                 ret 
  0875:00                bnot 
    )

)

// 0c5a
(instance sLimo of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_08b4
  08b4:39 3c            pushi 3c // $3c doit
  08b6:76               push0 
  08b7:59 01            &rest 1 
  08b9:57 06 04         super Script 4 

  08bc:38 009a          pushi 9a // $9a prevSignal
  08bf:76               push0 
  08c0:72 2408          lofsa $2408 // soundFX
  08c3:4a 04             send 4 

  08c5:36                push 
  08c6:35 0a              ldi a 
  08c8:1a                 eq? 
  08c9:30 0021            bnt code_08ed 
  08cc:39 2b            pushi 2b // $2b number
  08ce:76               push0 
  08cf:72 2408          lofsa $2408 // soundFX
  08d2:4a 04             send 4 

  08d4:36                push 
  08d5:34 00c2            ldi c2 
  08d8:1a                 eq? 
  08d9:30 0011            bnt code_08ed 
  08dc:38 009a          pushi 9a // $9a prevSignal
  08df:78               push1 
  08e0:39 05            pushi 5 // $5 view
  08e2:72 2408          lofsa $2408 // soundFX
  08e5:4a 06             send 6 

  08e7:38 008d          pushi 8d // $8d cue
  08ea:76               push0 
  08eb:54 04             self 4 


        code_08ed
  08ed:48                 ret 
    )

    (method (changeState) // method_08ee
  08ee:3f 6e             link 6e // (var $6e)
  08f0:87 01              lap param1 
  08f2:65 0a             aTop state 
  08f4:36                push 
  08f5:3c                 dup 
  08f6:35 00              ldi 0 
  08f8:1a                 eq? 
  08f9:30 0027            bnt code_0923 
  08fc:38 00e4          pushi e4 // $e4 setHeading
  08ff:78               push1 
  0900:38 010e          pushi 10e // $10e description
  0903:81 00              lag  
  0905:4a 06             send 6 

  0907:38 00a2          pushi a2 // $a2 setLoop
  090a:78               push1 
  090b:76               push0 
  090c:38 0120          pushi 120 // $120 setCel
  090f:78               push1 
  0910:76               push0 
  0911:38 0096          pushi 96 // $96 setCycle
  0914:39 03            pushi 3 // $3 y
  0916:51 5f            class Osc 
  0918:36                push 
  0919:78               push1 
  091a:7c            pushSelf 
  091b:72 10a6          lofsa $10a6 // doorman
  091e:4a 16             send 16 

  0920:32 032f            jmp code_0c52 

        code_0923
  0923:3c                 dup 
  0924:35 01              ldi 1 
  0926:1a                 eq? 
  0927:30 004b            bnt code_0975 
  092a:38 00a2          pushi a2 // $a2 setLoop
  092d:78               push1 
  092e:78               push1 
  092f:38 0120          pushi 120 // $120 setCel
  0932:78               push1 
  0933:76               push0 
  0934:72 10a6          lofsa $10a6 // doorman
  0937:4a 0c             send c 

  0939:39 2b            pushi 2b // $2b number
  093b:78               push1 
  093c:38 00ff          pushi ff // $ff syncNum
  093f:39 2a            pushi 2a // $2a play
  0941:76               push0 
  0942:38 009e          pushi 9e // $9e hold
  0945:78               push1 
  0946:39 0a            pushi a // $a nsLeft
  0948:72 2408          lofsa $2408 // soundFX
  094b:4a 10             send 10 

  094d:38 011c          pushi 11c // $11c posn
  0950:7a               push2 
  0951:39 9c            pushi 9c // $9c stop
  0953:38 00b2          pushi b2 // $b2 retreat
  0956:39 6b            pushi 6b // $6b init
  0958:76               push0 
  0959:38 0119          pushi 119 // $119 approachVerbs
  095c:78               push1 
  095d:39 03            pushi 3 // $3 y
  095f:38 011b          pushi 11b // $11b setMotion
  0962:39 04            pushi 4 // $4 x
  0964:51 1e            class MoveTo 
  0966:36                push 
  0967:39 46            pushi 46 // $46 width
  0969:38 00b2          pushi b2 // $b2 retreat
  096c:7c            pushSelf 
  096d:72 0ec6          lofsa $0ec6 // limo
  0970:4a 1e             send 1e 

  0972:32 02dd            jmp code_0c52 

        code_0975
  0975:3c                 dup 
  0976:35 02              ldi 2 
  0978:1a                 eq? 
  0979:30 0019            bnt code_0995 
  097c:38 009e          pushi 9e // $9e hold
  097f:78               push1 
  0980:39 ff            pushi ff // $ff syncNum
  0982:72 2408          lofsa $2408 // soundFX
  0985:4a 06             send 6 

  0987:38 00e4          pushi e4 // $e4 setHeading
  098a:7a               push2 
  098b:39 5a            pushi 5a // $5a points
  098d:7c            pushSelf 
  098e:81 00              lag  
  0990:4a 08             send 8 

  0992:32 02bd            jmp code_0c52 

        code_0995
  0995:3c                 dup 
  0996:35 03              ldi 3 
  0998:1a                 eq? 
  0999:30 008b            bnt code_0a27 
  099c:89 99              lsg  
  099e:3c                 dup 
  099f:35 00              ldi 0 
  09a1:1a                 eq? 
  09a2:30 0022            bnt code_09c7 
  09a5:7a               push2 
  09a6:38 02bc          pushi 2bc // $2bc sel_700
  09a9:78               push1 
  09aa:45 0e 04         callb procedure_000e 4 //  

  09ad:38 00a2          pushi a2 // $a2 setLoop
  09b0:78               push1 
  09b1:78               push1 
  09b2:38 0120          pushi 120 // $120 setCel
  09b5:78               push1 
  09b6:76               push0 
  09b7:38 0096          pushi 96 // $96 setCycle
  09ba:7a               push2 
  09bb:51 1a            class End 
  09bd:36                push 
  09be:7c            pushSelf 
  09bf:72 10a6          lofsa $10a6 // doorman
  09c2:4a 14             send 14 

  09c4:32 005c            jmp code_0a23 

        code_09c7
  09c7:3c                 dup 
  09c8:35 01              ldi 1 
  09ca:1a                 eq? 
  09cb:30 0024            bnt code_09f2 
  09ce:7a               push2 
  09cf:38 02bc          pushi 2bc // $2bc sel_700
  09d2:7a               push2 
  09d3:45 0e 04         callb procedure_000e 4 //  

  09d6:38 00a2          pushi a2 // $a2 setLoop
  09d9:78               push1 
  09da:7a               push2 
  09db:38 0120          pushi 120 // $120 setCel
  09de:78               push1 
  09df:76               push0 
  09e0:38 0096          pushi 96 // $96 setCycle
  09e3:39 03            pushi 3 // $3 y
  09e5:51 5f            class Osc 
  09e7:36                push 
  09e8:78               push1 
  09e9:7c            pushSelf 
  09ea:72 10a6          lofsa $10a6 // doorman
  09ed:4a 16             send 16 

  09ef:32 0031            jmp code_0a23 

        code_09f2
  09f2:39 04            pushi 4 // $4 x
  09f4:5b 04 00           lea 4 0 
  09f7:36                push 
  09f8:38 02bc          pushi 2bc // $2bc sel_700
  09fb:39 03            pushi 3 // $3 y
  09fd:89 99              lsg  
  09ff:43 48 08         callk Format 8 

  0a02:78               push1 
  0a03:5b 04 00           lea 4 0 
  0a06:36                push 
  0a07:45 0e 02         callb procedure_000e 2 //  

  0a0a:38 00a2          pushi a2 // $a2 setLoop
  0a0d:78               push1 
  0a0e:7a               push2 
  0a0f:38 0120          pushi 120 // $120 setCel
  0a12:78               push1 
  0a13:76               push0 
  0a14:38 0096          pushi 96 // $96 setCycle
  0a17:39 03            pushi 3 // $3 y
  0a19:51 5f            class Osc 
  0a1b:36                push 
  0a1c:78               push1 
  0a1d:7c            pushSelf 
  0a1e:72 10a6          lofsa $10a6 // doorman
  0a21:4a 16             send 16 


        code_0a23
  0a23:3a                toss 
  0a24:32 022b            jmp code_0c52 

        code_0a27
  0a27:3c                 dup 
  0a28:35 04              ldi 4 
  0a2a:1a                 eq? 
  0a2b:30 0065            bnt code_0a93 
  0a2e:89 99              lsg  
  0a30:3c                 dup 
  0a31:35 00              ldi 0 
  0a33:1a                 eq? 
  0a34:30 0017            bnt code_0a4e 
  0a37:39 06            pushi 6 // $6 loop
  0a39:72 2046          lofsa $2046 // Doorman
  0a3c:36                push 
  0a3d:38 02bc          pushi 2bc // $2bc sel_700
  0a40:39 04            pushi 4 // $4 x
  0a42:39 6c            pushi 6c // $6c dispose
  0a44:38 008b          pushi 8b // $8b caller
  0a47:7c            pushSelf 
  0a48:45 12 0c         callb procedure_0012 c //  

  0a4b:32 0032            jmp code_0a80 

        code_0a4e
  0a4e:3c                 dup 
  0a4f:35 01              ldi 1 
  0a51:1a                 eq? 
  0a52:30 0017            bnt code_0a6c 
  0a55:39 06            pushi 6 // $6 loop
  0a57:72 2046          lofsa $2046 // Doorman
  0a5a:36                push 
  0a5b:38 02bc          pushi 2bc // $2bc sel_700
  0a5e:39 05            pushi 5 // $5 view
  0a60:39 6c            pushi 6c // $6c dispose
  0a62:38 008b          pushi 8b // $8b caller
  0a65:7c            pushSelf 
  0a66:45 12 0c         callb procedure_0012 c //  

  0a69:32 0014            jmp code_0a80 

        code_0a6c
  0a6c:39 06            pushi 6 // $6 loop
  0a6e:72 2046          lofsa $2046 // Doorman
  0a71:36                push 
  0a72:38 02bc          pushi 2bc // $2bc sel_700
  0a75:39 06            pushi 6 // $6 loop
  0a77:39 6c            pushi 6c // $6c dispose
  0a79:38 008b          pushi 8b // $8b caller
  0a7c:7c            pushSelf 
  0a7d:45 12 0c         callb procedure_0012 c //  


        code_0a80
  0a80:3a                toss 
  0a81:38 0148          pushi 148 // $148 put
  0a84:7a               push2 
  0a85:39 11            pushi 11 // $11 signal
  0a87:76               push0 
  0a88:81 00              lag  
  0a8a:4a 08             send 8 

  0a8c:35 00              ldi 0 
  0a8e:a1 99              sag  
  0a90:32 01bf            jmp code_0c52 

        code_0a93
  0a93:3c                 dup 
  0a94:35 05              ldi 5 
  0a96:1a                 eq? 
  0a97:30 0024            bnt code_0abe 
  0a9a:38 011b          pushi 11b // $11b setMotion
  0a9d:39 04            pushi 4 // $4 x
  0a9f:51 24            class PolyPath 
  0aa1:36                push 
  0aa2:38 0111          pushi 111 // $111 approachX
  0aa5:76               push0 
  0aa6:72 0ec6          lofsa $0ec6 // limo
  0aa9:4a 04             send 4 

  0aab:36                push 
  0aac:38 0112          pushi 112 // $112 approachY
  0aaf:76               push0 
  0ab0:72 0ec6          lofsa $0ec6 // limo
  0ab3:4a 04             send 4 

  0ab5:36                push 
  0ab6:7c            pushSelf 
  0ab7:81 00              lag  
  0ab9:4a 0c             send c 

  0abb:32 0194            jmp code_0c52 

        code_0abe
  0abe:3c                 dup 
  0abf:35 06              ldi 6 
  0ac1:1a                 eq? 
  0ac2:30 000f            bnt code_0ad4 
  0ac5:38 00e4          pushi e4 // $e4 setHeading
  0ac8:7a               push2 
  0ac9:38 00b4          pushi b4 // $b4 busy
  0acc:7c            pushSelf 
  0acd:81 00              lag  
  0acf:4a 08             send 8 

  0ad1:32 017e            jmp code_0c52 

        code_0ad4
  0ad4:3c                 dup 
  0ad5:35 07              ldi 7 
  0ad7:1a                 eq? 
  0ad8:30 0007            bnt code_0ae2 
  0adb:35 3c              ldi 3c 
  0add:65 16             aTop ticks 
  0adf:32 0170            jmp code_0c52 

        code_0ae2
  0ae2:3c                 dup 
  0ae3:35 08              ldi 8 
  0ae5:1a                 eq? 
  0ae6:30 0015            bnt code_0afe 
  0ae9:39 2b            pushi 2b // $2b number
  0aeb:78               push1 
  0aec:38 00bf          pushi bf // $bf maskCel
  0aef:39 2a            pushi 2a // $2a play
  0af1:76               push0 
  0af2:72 2408          lofsa $2408 // soundFX
  0af5:4a 0a             send a 

  0af7:35 32              ldi 32 
  0af9:65 16             aTop ticks 
  0afb:32 0154            jmp code_0c52 

        code_0afe
  0afe:3c                 dup 
  0aff:35 09              ldi 9 
  0b01:1a                 eq? 
  0b02:30 0039            bnt code_0b3e 
  0b05:38 00a2          pushi a2 // $a2 setLoop
  0b08:78               push1 
  0b09:7a               push2 
  0b0a:38 0096          pushi 96 // $96 setCycle
  0b0d:78               push1 
  0b0e:76               push0 
  0b0f:39 42            pushi 42 // $42 setPri
  0b11:78               push1 
  0b12:39 3f            pushi 3f // $3f priority
  0b14:76               push0 
  0b15:81 00              lag  
  0b17:4a 04             send 4 

  0b19:36                push 
  0b1a:38 011b          pushi 11b // $11b setMotion
  0b1d:39 04            pushi 4 // $4 x
  0b1f:51 1e            class MoveTo 
  0b21:36                push 
  0b22:39 04            pushi 4 // $4 x
  0b24:76               push0 
  0b25:81 00              lag  
  0b27:4a 04             send 4 

  0b29:36                push 
  0b2a:39 03            pushi 3 // $3 y
  0b2c:76               push0 
  0b2d:81 00              lag  
  0b2f:4a 04             send 4 

  0b31:36                push 
  0b32:35 06              ldi 6 
  0b34:02                 add 
  0b35:36                push 
  0b36:7c            pushSelf 
  0b37:81 00              lag  
  0b39:4a 1e             send 1e 

  0b3b:32 0114            jmp code_0c52 

        code_0b3e
  0b3e:3c                 dup 
  0b3f:35 0a              ldi a 
  0b41:1a                 eq? 
  0b42:30 0011            bnt code_0b56 
  0b45:39 04            pushi 4 // $4 x
  0b47:78               push1 
  0b48:38 03e8          pushi 3e8 // $3e8 sel_1000
  0b4b:81 00              lag  
  0b4d:4a 06             send 6 

  0b4f:35 3c              ldi 3c 
  0b51:65 16             aTop ticks 
  0b53:32 00fc            jmp code_0c52 

        code_0b56
  0b56:3c                 dup 
  0b57:35 0b              ldi b 
  0b59:1a                 eq? 
  0b5a:30 0015            bnt code_0b72 
  0b5d:39 2b            pushi 2b // $2b number
  0b5f:78               push1 
  0b60:38 00c0          pushi c0 // $c0 highlightColor
  0b63:39 2a            pushi 2a // $2a play
  0b65:76               push0 
  0b66:72 2408          lofsa $2408 // soundFX
  0b69:4a 0a             send a 

  0b6b:35 32              ldi 32 
  0b6d:65 16             aTop ticks 
  0b6f:32 00e0            jmp code_0c52 

        code_0b72
  0b72:3c                 dup 
  0b73:35 0c              ldi c 
  0b75:1a                 eq? 
  0b76:30 0007            bnt code_0b80 
  0b79:35 3c              ldi 3c 
  0b7b:65 16             aTop ticks 
  0b7d:32 00d2            jmp code_0c52 

        code_0b80
  0b80:3c                 dup 
  0b81:35 0d              ldi d 
  0b83:1a                 eq? 
  0b84:30 0011            bnt code_0b98 
  0b87:39 2b            pushi 2b // $2b number
  0b89:78               push1 
  0b8a:38 00c2          pushi c2 // $c2 show
  0b8d:39 2a            pushi 2a // $2a play
  0b8f:76               push0 
  0b90:72 2408          lofsa $2408 // soundFX
  0b93:4a 0a             send a 

  0b95:32 00ba            jmp code_0c52 

        code_0b98
  0b98:3c                 dup 
  0b99:35 0e              ldi e 
  0b9b:1a                 eq? 
  0b9c:30 0023            bnt code_0bc2 
  0b9f:38 0134          pushi 134 // $134 setStep
  0ba2:7a               push2 
  0ba3:39 03            pushi 3 // $3 y
  0ba5:3c                 dup 
  0ba6:38 011b          pushi 11b // $11b setMotion
  0ba9:39 04            pushi 4 // $4 x
  0bab:51 1e            class MoveTo 
  0bad:36                push 
  0bae:39 41            pushi 41 // $41 replay
  0bb0:39 03            pushi 3 // $3 y
  0bb2:76               push0 
  0bb3:72 0ec6          lofsa $0ec6 // limo
  0bb6:4a 04             send 4 

  0bb8:36                push 
  0bb9:7c            pushSelf 
  0bba:72 0ec6          lofsa $0ec6 // limo
  0bbd:4a 14             send 14 

  0bbf:32 0090            jmp code_0c52 

        code_0bc2
  0bc2:3c                 dup 
  0bc3:35 0f              ldi f 
  0bc5:1a                 eq? 
  0bc6:30 0023            bnt code_0bec 
  0bc9:38 0134          pushi 134 // $134 setStep
  0bcc:7a               push2 
  0bcd:39 04            pushi 4 // $4 x
  0bcf:3c                 dup 
  0bd0:38 011b          pushi 11b // $11b setMotion
  0bd3:39 04            pushi 4 // $4 x
  0bd5:51 1e            class MoveTo 
  0bd7:36                push 
  0bd8:39 32            pushi 32 // $32 b-i2
  0bda:39 03            pushi 3 // $3 y
  0bdc:76               push0 
  0bdd:72 0ec6          lofsa $0ec6 // limo
  0be0:4a 04             send 4 

  0be2:36                push 
  0be3:7c            pushSelf 
  0be4:72 0ec6          lofsa $0ec6 // limo
  0be7:4a 14             send 14 

  0be9:32 0066            jmp code_0c52 

        code_0bec
  0bec:3c                 dup 
  0bed:35 10              ldi 10 
  0bef:1a                 eq? 
  0bf0:30 0023            bnt code_0c16 
  0bf3:38 0134          pushi 134 // $134 setStep
  0bf6:7a               push2 
  0bf7:39 05            pushi 5 // $5 view
  0bf9:3c                 dup 
  0bfa:38 011b          pushi 11b // $11b setMotion
  0bfd:39 04            pushi 4 // $4 x
  0bff:51 1e            class MoveTo 
  0c01:36                push 
  0c02:39 23            pushi 23 // $23 window
  0c04:39 03            pushi 3 // $3 y
  0c06:76               push0 
  0c07:72 0ec6          lofsa $0ec6 // limo
  0c0a:4a 04             send 4 

  0c0c:36                push 
  0c0d:7c            pushSelf 
  0c0e:72 0ec6          lofsa $0ec6 // limo
  0c11:4a 14             send 14 

  0c13:32 003c            jmp code_0c52 

        code_0c16
  0c16:3c                 dup 
  0c17:35 11              ldi 11 
  0c19:1a                 eq? 
  0c1a:30 0023            bnt code_0c40 
  0c1d:38 0134          pushi 134 // $134 setStep
  0c20:7a               push2 
  0c21:39 06            pushi 6 // $6 loop
  0c23:3c                 dup 
  0c24:38 011b          pushi 11b // $11b setMotion
  0c27:39 04            pushi 4 // $4 x
  0c29:51 1e            class MoveTo 
  0c2b:36                push 
  0c2c:39 a1            pushi a1 // $a1 setVol
  0c2e:39 03            pushi 3 // $3 y
  0c30:76               push0 
  0c31:72 0ec6          lofsa $0ec6 // limo
  0c34:4a 04             send 4 

  0c36:36                push 
  0c37:7c            pushSelf 
  0c38:72 0ec6          lofsa $0ec6 // limo
  0c3b:4a 14             send 14 

  0c3d:32 0012            jmp code_0c52 

        code_0c40
  0c40:3c                 dup 
  0c41:35 12              ldi 12 
  0c43:1a                 eq? 
  0c44:30 000b            bnt code_0c52 
  0c47:38 0179          pushi 179 // $179 newRoom
  0c4a:78               push1 
  0c4b:38 00c8          pushi c8 // $c8 dispatchEvent
  0c4e:81 02              lag  
  0c50:4a 06             send 6 


        code_0c52
  0c52:3a                toss 
  0c53:48                 ret 
    )

)

// 0dbe
(instance sGirlTalk of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0c92
  0c92:3f 20             link 20 // (var $20)
  0c94:87 01              lap param1 
  0c96:65 0a             aTop state 
  0c98:36                push 
  0c99:3c                 dup 
  0c9a:35 00              ldi 0 
  0c9c:1a                 eq? 
  0c9d:30 009b            bnt code_0d3b 
  0ca0:35 00              ldi 0 
  0ca2:a5 00              sat temp0 

        code_0ca4
  0ca4:76               push0 
  0ca5:85 00              lat temp0 
  0ca7:22                 lt? 
  0ca8:30 0005            bnt code_0cb0 
  0cab:60               pprev 
  0cac:34 2710            ldi 2710 
  0caf:22                 lt? 

        code_0cb0
  0cb0:18                 not 
  0cb1:30 0027            bnt code_0cdb 
  0cb4:35 00              ldi 0 
  0cb6:a5 02              sat temp2 
  0cb8:39 05            pushi 5 // $5 view
  0cba:5b 04 02           lea 4 2 
  0cbd:36                push 
  0cbe:39 06            pushi 6 // $6 loop
  0cc0:72 24e5          lofsa $24e5 // "Please enter a number less than 10000, ok?"
  0cc3:36                push 
  0cc4:39 50            pushi 50 // $50 title
  0cc6:72 2512          lofsa $2512 // Cheri
  0cc9:36                push 
  0cca:47 ff 02 0a      calle ff procedure_0002 a //  

  0cce:78               push1 
  0ccf:5b 04 02           lea 4 2 
  0cd2:36                push 
  0cd3:43 4a 02         callk ReadNumber 2 

  0cd6:a5 00              sat temp0 
  0cd8:32 ffc9            jmp code_0ca4 

        code_0cdb
  0cdb:38 00d5          pushi d5 // $d5 has
  0cde:78               push1 
  0cdf:39 11            pushi 11 // $11 signal
  0ce1:81 00              lag  
  0ce3:4a 06             send 6 

  0ce5:18                 not 
  0ce6:30 0015            bnt code_0cfe 
  0ce9:39 05            pushi 5 // $5 view
  0ceb:72 1e7c          lofsa $1e7c // Cheri
  0cee:36                push 
  0cef:38 02bc          pushi 2bc // $2bc sel_700
  0cf2:39 07            pushi 7 // $7 cel
  0cf4:38 008b          pushi 8b // $8b caller
  0cf7:7c            pushSelf 
  0cf8:45 12 0a         callb procedure_0012 a //  

  0cfb:32 00b8            jmp code_0db6 

        code_0cfe
  0cfe:85 00              lat temp0 
  0d00:a5 01              sat temp1 

        code_0d02
  0d02:8d 00              lst temp0 
  0d04:85 01              lat temp1 
  0d06:1a                 eq? 
  0d07:30 000d            bnt code_0d17 
  0d0a:7a               push2 
  0d0b:78               push1 
  0d0c:38 1af4          pushi 1af4 // $1af4 sel_6900
  0d0f:43 3c 04         callk Random 4 

  0d12:a5 01              sat temp1 
  0d14:32 ffeb            jmp code_0d02 

        code_0d17
  0d17:39 04            pushi 4 // $4 x
  0d19:5b 04 02           lea 4 2 
  0d1c:36                push 
  0d1d:38 02bc          pushi 2bc // $2bc sel_700
  0d20:39 08            pushi 8 // $8 underBits
  0d22:8d 01              lst temp1 
  0d24:43 48 08         callk Format 8 

  0d27:39 04            pushi 4 // $4 x
  0d29:72 1e7c          lofsa $1e7c // Cheri
  0d2c:36                push 
  0d2d:5b 04 02           lea 4 2 
  0d30:36                push 
  0d31:38 008b          pushi 8b // $8b caller
  0d34:7c            pushSelf 
  0d35:45 12 08         callb procedure_0012 8 //  

  0d38:32 007b            jmp code_0db6 

        code_0d3b
  0d3b:3c                 dup 
  0d3c:35 01              ldi 1 
  0d3e:1a                 eq? 
  0d3f:30 005e            bnt code_0da0 
  0d42:38 00d5          pushi d5 // $d5 has
  0d45:78               push1 
  0d46:39 11            pushi 11 // $11 signal
  0d48:81 00              lag  
  0d4a:4a 06             send 6 

  0d4c:30 0017            bnt code_0d66 
  0d4f:39 06            pushi 6 // $6 loop
  0d51:72 1e7c          lofsa $1e7c // Cheri
  0d54:36                push 
  0d55:38 02bc          pushi 2bc // $2bc sel_700
  0d58:39 09            pushi 9 // $9 nsTop
  0d5a:39 6c            pushi 6c // $6c dispose
  0d5c:38 008b          pushi 8b // $8b caller
  0d5f:7c            pushSelf 
  0d60:45 12 0c         callb procedure_0012 c //  

  0d63:32 0050            jmp code_0db6 

        code_0d66
  0d66:39 04            pushi 4 // $4 x
  0d68:72 1e7c          lofsa $1e7c // Cheri
  0d6b:36                push 
  0d6c:38 02bc          pushi 2bc // $2bc sel_700
  0d6f:39 0a            pushi a // $a nsLeft
  0d71:39 6c            pushi 6c // $6c dispose
  0d73:45 12 08         callb procedure_0012 8 //  

  0d76:38 00a2          pushi a2 // $a2 setLoop
  0d79:78               push1 
  0d7a:78               push1 
  0d7b:38 0120          pushi 120 // $120 setCel
  0d7e:78               push1 
  0d7f:76               push0 
  0d80:38 0096          pushi 96 // $96 setCycle
  0d83:39 03            pushi 3 // $3 y
  0d85:51 5f            class Osc 
  0d87:36                push 
  0d88:78               push1 
  0d89:7c            pushSelf 
  0d8a:72 11ae          lofsa $11ae // changeGirl
  0d8d:4a 16             send 16 

  0d8f:38 0147          pushi 147 // $147 get
  0d92:78               push1 
  0d93:39 11            pushi 11 // $11 signal
  0d95:81 00              lag  
  0d97:4a 06             send 6 

  0d99:35 0a              ldi a 
  0d9b:a1 99              sag  
  0d9d:32 0016            jmp code_0db6 

        code_0da0
  0da0:3c                 dup 
  0da1:35 02              ldi 2 
  0da3:1a                 eq? 
  0da4:30 000f            bnt code_0db6 
  0da7:38 00a2          pushi a2 // $a2 setLoop
  0daa:78               push1 
  0dab:76               push0 
  0dac:72 11ae          lofsa $11ae // changeGirl
  0daf:4a 06             send 6 

  0db1:39 6c            pushi 6c // $6c dispose
  0db3:76               push0 
  0db4:54 04             self 4 


        code_0db6
  0db6:3a                toss 
  0db7:48                 ret 
    )

)

// 0e3a
(instance bird of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2522
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $252e
        yStep $5
        view $2bc
        loop $8
        cel $0
        priority $e
        underBits $0
        signal $6810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $0
        xLast $0
        yLast $0
        xStep $7
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (init) // method_0df2
  0df2:39 6b            pushi 6b // $6b init
  0df4:76               push0 
  0df5:57 30 04         super Actor 4 

  0df8:38 0096          pushi 96 // $96 setCycle
  0dfb:78               push1 
  0dfc:51 17            class Fwd 
  0dfe:36                push 
  0dff:38 008d          pushi 8d // $8d cue
  0e02:76               push0 
  0e03:54 0a             self a 

  0e05:48                 ret 
    )

    (method (cue) // method_0e06
  0e06:3f 02             link 2 // (var $2)
  0e08:7a               push2 
  0e09:76               push0 
  0e0a:38 0208          pushi 208 // $208 skating
  0e0d:43 3c 04         callk Random 4 

  0e10:36                push 
  0e11:35 64              ldi 64 
  0e13:04                 sub 
  0e14:a5 00              sat temp0 
  0e16:7a               push2 
  0e17:76               push0 
  0e18:38 0096          pushi 96 // $96 setCycle
  0e1b:43 3c 04         callk Random 4 

  0e1e:36                push 
  0e1f:35 32              ldi 32 
  0e21:04                 sub 
  0e22:a5 01              sat temp1 
  0e24:38 011b          pushi 11b // $11b setMotion
  0e27:39 04            pushi 4 // $4 x
  0e29:51 1e            class MoveTo 
  0e2b:36                push 
  0e2c:8d 00              lst temp0 
  0e2e:8d 01              lst temp1 
  0e30:7c            pushSelf 
  0e31:54 0c             self c 

  0e33:48                 ret 
    )

)

// 0ec0
(instance limo of Actor
    (properties
        x $5d
        y $b4
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $257e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $50
        approachY $af
        approachDist $0
        _approachVerbs $6789
        lookStr $258c
        yStep $2
        view $2bc
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4800
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 0f3e
(instance door of Door
    (properties
        x $76
        y $9b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $25d5
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $78
        approachY $9d
        approachDist $0
        _approachVerbs $6789
        lookStr $25f6
        yStep $2
        view $fb
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $a
        script $0
        cycler $0
        timer $0
        detailLevel $0
        entranceTo $2c6
        locked $0
        openSnd $26e
        closeSnd $26e
        state $0
        doubleDoor $0
        forceOpen $0
        caller $0
        moveToX $76
        moveToY $9a
        enterType $0
        exitType $0
        closeScript $0
        openScript $0
    )
)

// 10a0
(instance doorman of Prop
    (properties
        x $8d
        y $a2
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2670
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $85
        approachY $a5
        approachDist $0
        _approachVerbs $6789
        lookStr $2679
        yStep $2
        view $2bf
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_0fbe
  0fbe:8f 01              lsp param1 
  0fc0:3c                 dup 
  0fc1:35 03              ldi 3 
  0fc3:1a                 eq? 
  0fc4:30 000b            bnt code_0fd2 
  0fc7:38 010c          pushi 10c // $10c doVerb
  0fca:78               push1 
  0fcb:39 05            pushi 5 // $5 view
  0fcd:54 06             self 6 

  0fcf:32 005f            jmp code_1031 

        code_0fd2
  0fd2:3c                 dup 
  0fd3:35 05              ldi 5 
  0fd5:1a                 eq? 
  0fd6:30 0017            bnt code_0ff0 
  0fd9:39 06            pushi 6 // $6 loop
  0fdb:72 2046          lofsa $2046 // Doorman
  0fde:36                push 
  0fdf:38 02bc          pushi 2bc // $2bc sel_700
  0fe2:39 0b            pushi b // $b nsBottom
  0fe4:39 6c            pushi 6c // $6c dispose
  0fe6:38 008b          pushi 8b // $8b caller
  0fe9:7c            pushSelf 
  0fea:45 12 0c         callb procedure_0012 c //  

  0fed:32 0041            jmp code_1031 

        code_0ff0
  0ff0:3c                 dup 
  0ff1:35 0a              ldi a 
  0ff3:1a                 eq? 
  0ff4:30 0013            bnt code_100a 
  0ff7:39 04            pushi 4 // $4 x
  0ff9:72 2046          lofsa $2046 // Doorman
  0ffc:36                push 
  0ffd:38 02bc          pushi 2bc // $2bc sel_700
  1000:39 0c            pushi c // $c nsRight
  1002:39 6c            pushi 6c // $6c dispose
  1004:45 12 08         callb procedure_0012 8 //  

  1007:32 0027            jmp code_1031 

        code_100a
  100a:3c                 dup 
  100b:35 04              ldi 4 
  100d:1a                 eq? 
  100e:30 0013            bnt code_1024 
  1011:39 04            pushi 4 // $4 x
  1013:72 2046          lofsa $2046 // Doorman
  1016:36                push 
  1017:38 02bc          pushi 2bc // $2bc sel_700
  101a:39 0d            pushi d // $d lsTop
  101c:39 6c            pushi 6c // $6c dispose
  101e:45 12 08         callb procedure_0012 8 //  

  1021:32 000d            jmp code_1031 

        code_1024
  1024:38 010c          pushi 10c // $10c doVerb
  1027:7a               push2 
  1028:8f 01              lsp param1 
  102a:8f 02              lsp param2 
  102c:59 03            &rest 3 
  102e:57 2f 08         super Prop 8 


        code_1031
  1031:3a                toss 
  1032:48                 ret 
    )

    (method (cue) // method_1033
  1033:39 0a            pushi a // $a nsLeft
  1035:38 02bc          pushi 2bc // $2bc sel_700
  1038:39 0e            pushi e // $e lsLeft
  103a:39 51            pushi 51 // $51 button
  103c:72 2709          lofsa $2709 // No, thank you
  103f:36                push 
  1040:76               push0 
  1041:39 51            pushi 51 // $51 button
  1043:72 2717          lofsa $2717 // Yes, please
  1046:36                push 
  1047:78               push1 
  1048:39 50            pushi 50 // $50 title
  104a:72 2723          lofsa $2723 // Your Friendly Doorman
  104d:36                push 
  104e:47 ff 00 14      calle ff procedure_0000 14 //  

  1052:30 0037            bnt code_108c 
  1055:76               push0 
  1056:45 02 00         callb procedure_0002 0 //  

  1059:39 03            pushi 3 // $3 y
  105b:89 00              lsg  
  105d:38 02bc          pushi 2bc // $2bc sel_700
  1060:39 0f            pushi f // $f lsBottom
  1062:45 12 06         callb procedure_0012 6 //  

  1065:7a               push2 
  1066:7a               push2 
  1067:38 0084          pushi 84 // $84 cycles
  106a:45 0a 04         callb procedure_000a 4 //  

  106d:39 04            pushi 4 // $4 x
  106f:72 2046          lofsa $2046 // Doorman
  1072:36                push 
  1073:38 02bc          pushi 2bc // $2bc sel_700
  1076:39 10            pushi 10 // $10 lsRight
  1078:39 6c            pushi 6c // $6c dispose
  107a:45 12 08         callb procedure_0012 8 //  

  107d:38 008e          pushi 8e // $8e setScript
  1080:78               push1 
  1081:72 0c60          lofsa $0c60 // sLimo
  1084:36                push 
  1085:81 02              lag  
  1087:4a 06             send 6 

  1089:32 000c            jmp code_1098 

        code_108c
  108c:39 03            pushi 3 // $3 y
  108e:89 00              lsg  
  1090:38 02bc          pushi 2bc // $2bc sel_700
  1093:39 11            pushi 11 // $11 signal
  1095:45 12 06         callb procedure_0012 6 //  


        code_1098
  1098:48                 ret 
  1099:00                bnot 
    )

)

// 11a8
(instance changeGirl of Prop
    (properties
        x $60
        y $a2
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2741
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $67
        approachY $a4
        approachDist $0
        _approachVerbs $6789
        lookStr $2754
        yStep $2
        view $2be
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (init) // method_110c
  110c:39 6b            pushi 6b // $6b init
  110e:76               push0 
  110f:57 2f 04         super Prop 4 

  1112:38 0119          pushi 119 // $119 approachVerbs
  1115:78               push1 
  1116:76               push0 
  1117:54 06             self 6 

  1119:48                 ret 
    )

    (method (doVerb) // method_111a
  111a:3f 20             link 20 // (var $20)
  111c:8f 01              lsp param1 
  111e:3c                 dup 
  111f:35 03              ldi 3 
  1121:1a                 eq? 
  1122:30 0013            bnt code_1138 
  1125:39 04            pushi 4 // $4 x
  1127:72 1e7c          lofsa $1e7c // Cheri
  112a:36                push 
  112b:38 02bc          pushi 2bc // $2bc sel_700
  112e:39 12            pushi 12 // $12 illegalBits
  1130:39 6c            pushi 6c // $6c dispose
  1132:45 12 08         callb procedure_0012 8 //  

  1135:32 0068            jmp code_11a0 

        code_1138
  1138:3c                 dup 
  1139:35 05              ldi 5 
  113b:1a                 eq? 
  113c:30 003a            bnt code_1179 
  113f:83 00              lal local0 
  1141:18                 not 
  1142:30 001f            bnt code_1164 
  1145:39 04            pushi 4 // $4 x
  1147:72 1e7c          lofsa $1e7c // Cheri
  114a:36                push 
  114b:38 02bc          pushi 2bc // $2bc sel_700
  114e:39 13            pushi 13 // $13 brTop
  1150:39 6c            pushi 6c // $6c dispose
  1152:45 12 08         callb procedure_0012 8 //  

  1155:35 01              ldi 1 
  1157:a3 00              sal local0 
  1159:38 0119          pushi 119 // $119 approachVerbs
  115c:78               push1 
  115d:39 05            pushi 5 // $5 view
  115f:54 06             self 6 

  1161:32 003c            jmp code_11a0 

        code_1164
  1164:7a               push2 
  1165:7a               push2 
  1166:38 0083          pushi 83 // $83 timer
  1169:45 0a 04         callb procedure_000a 4 //  

  116c:38 008e          pushi 8e // $8e setScript
  116f:78               push1 
  1170:72 0dc4          lofsa $0dc4 // sGirlTalk
  1173:36                push 
  1174:54 06             self 6 

  1176:32 0027            jmp code_11a0 

        code_1179
  1179:3c                 dup 
  117a:35 0a              ldi a 
  117c:1a                 eq? 
  117d:30 0013            bnt code_1193 
  1180:39 04            pushi 4 // $4 x
  1182:72 1e7c          lofsa $1e7c // Cheri
  1185:36                push 
  1186:38 02bc          pushi 2bc // $2bc sel_700
  1189:39 14            pushi 14 // $14 brLeft
  118b:39 6c            pushi 6c // $6c dispose
  118d:45 12 08         callb procedure_0012 8 //  

  1190:32 000d            jmp code_11a0 

        code_1193
  1193:38 010c          pushi 10c // $10c doVerb
  1196:7a               push2 
  1197:8f 01              lsp param1 
  1199:8f 02              lsp param2 
  119b:59 03            &rest 3 
  119d:57 2f 08         super Prop 8 


        code_11a0
  11a0:3a                toss 
  11a1:48                 ret 
    )

)

// 122a
(instance trampSign of Prop
    (properties
        x $78
        y $64
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $27b7
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $27c6
        yStep $2
        view $2bc
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $3
        script $0
        cycler $0
        timer $0
        detailLevel $1
    )
    (method (init) // method_1214
  1214:38 0096          pushi 96 // $96 setCycle
  1217:78               push1 
  1218:51 17            class Fwd 
  121a:36                push 
  121b:54 06             self 6 

  121d:39 6b            pushi 6b // $6b init
  121f:76               push0 
  1220:57 2f 04         super Prop 4 

  1223:48                 ret 
    )

)

// 12a8
(instance slotSign of Prop
    (properties
        x $4a
        y $26
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $27fb
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2811
        yStep $2
        view $2bc
        loop $4
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $5
        script $0
        cycler $0
        timer $0
        detailLevel $2
    )
    (method (init) // method_1292
  1292:38 0096          pushi 96 // $96 setCycle
  1295:78               push1 
  1296:51 17            class Fwd 
  1298:36                push 
  1299:54 06             self 6 

  129b:39 6b            pushi 6b // $6b init
  129d:76               push0 
  129e:57 2f 04         super Prop 4 

  12a1:48                 ret 
    )

)

// 1326
(instance leftLight of Prop
    (properties
        x $43
        y $7b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $285d
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2867
        yStep $2
        view $2bc
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $2
        script $0
        cycler $0
        timer $0
        detailLevel $2
    )
    (method (init) // method_1310
  1310:38 0096          pushi 96 // $96 setCycle
  1313:78               push1 
  1314:51 17            class Fwd 
  1316:36                push 
  1317:54 06             self 6 

  1319:39 6b            pushi 6b // $6b init
  131b:76               push0 
  131c:57 2f 04         super Prop 4 

  131f:48                 ret 
    )

)

// 13a4
(instance rightLight of Prop
    (properties
        x $ad
        y $7c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $285d
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2867
        yStep $2
        view $2bc
        loop $3
        cel $1
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $4
        script $0
        cycler $0
        timer $0
        detailLevel $2
    )
    (method (init) // method_138e
  138e:38 0096          pushi 96 // $96 setCycle
  1391:78               push1 
  1392:51 17            class Fwd 
  1394:36                push 
  1395:54 06             self 6 

  1397:39 6b            pushi 6b // $6b init
  1399:76               push0 
  139a:57 2f 04         super Prop 4 

  139d:48                 ret 
    )

)

// 1496
(instance leftNip of Prop
    (properties
        x $2b
        y $29
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $288e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $6
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (init) // method_140c
  140c:38 0096          pushi 96 // $96 setCycle
  140f:78               push1 
  1410:51 17            class Fwd 
  1412:36                push 
  1413:54 06             self 6 

  1415:39 6b            pushi 6b // $6b init
  1417:76               push0 
  1418:57 2f 04         super Prop 4 

  141b:48                 ret 
    )

    (method (doVerb) // method_141c
  141c:8f 01              lsp param1 
  141e:3c                 dup 
  141f:35 02              ldi 2 
  1421:1a                 eq? 
  1422:30 0021            bnt code_1446 
  1425:7a               push2 
  1426:76               push0 
  1427:78               push1 
  1428:43 3c 04         callk Random 4 

  142b:30 000c            bnt code_143a 
  142e:7a               push2 
  142f:38 02bc          pushi 2bc // $2bc sel_700
  1432:39 15            pushi 15 // $15 brBottom
  1434:45 0e 04         callb procedure_000e 4 //  

  1437:32 0054            jmp code_148e 

        code_143a
  143a:7a               push2 
  143b:38 02bc          pushi 2bc // $2bc sel_700
  143e:39 16            pushi 16 // $16 brRight
  1440:45 0e 04         callb procedure_000e 4 //  

  1443:32 0048            jmp code_148e 

        code_1446
  1446:3c                 dup 
  1447:35 03              ldi 3 
  1449:1a                 eq? 
  144a:30 0021            bnt code_146e 
  144d:7a               push2 
  144e:76               push0 
  144f:78               push1 
  1450:43 3c 04         callk Random 4 

  1453:30 000c            bnt code_1462 
  1456:7a               push2 
  1457:38 02bc          pushi 2bc // $2bc sel_700
  145a:39 17            pushi 17 // $17 name
  145c:45 0e 04         callb procedure_000e 4 //  

  145f:32 002c            jmp code_148e 

        code_1462
  1462:7a               push2 
  1463:38 02bc          pushi 2bc // $2bc sel_700
  1466:39 18            pushi 18 // $18 key
  1468:45 0e 04         callb procedure_000e 4 //  

  146b:32 0020            jmp code_148e 

        code_146e
  146e:3c                 dup 
  146f:35 05              ldi 5 
  1471:1a                 eq? 
  1472:30 000c            bnt code_1481 
  1475:7a               push2 
  1476:38 02bc          pushi 2bc // $2bc sel_700
  1479:39 19            pushi 19 // $19 time
  147b:45 0e 04         callb procedure_000e 4 //  

  147e:32 000d            jmp code_148e 

        code_1481
  1481:38 010c          pushi 10c // $10c doVerb
  1484:7a               push2 
  1485:8f 01              lsp param1 
  1487:8f 02              lsp param2 
  1489:59 03            &rest 3 
  148b:57 2f 08         super Prop 8 


        code_148e
  148e:3a                toss 
  148f:48                 ret 
    )

)

// 1528
(instance rightNip of Prop
    (properties
        x $dc
        y $44
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $288e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $5
        cel $1
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (init) // method_1502
  1502:38 0096          pushi 96 // $96 setCycle
  1505:78               push1 
  1506:51 17            class Fwd 
  1508:36                push 
  1509:54 06             self 6 

  150b:39 6b            pushi 6b // $6b init
  150d:76               push0 
  150e:57 2f 04         super Prop 4 

  1511:48                 ret 
    )

    (method (doVerb) // method_1512
  1512:38 010c          pushi 10c // $10c doVerb
  1515:7a               push2 
  1516:8f 01              lsp param1 
  1518:8f 02              lsp param2 
  151a:59 03            &rest 3 
  151c:72 149c          lofsa $149c // leftNip
  151f:4a 08             send 8 

  1521:48                 ret 
    )

)

// 15ba
(instance centerNip of Prop
    (properties
        x $9f
        y $1b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $288e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $c
        cel $2
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (init) // method_1594
  1594:38 0096          pushi 96 // $96 setCycle
  1597:78               push1 
  1598:51 17            class Fwd 
  159a:36                push 
  159b:54 06             self 6 

  159d:39 6b            pushi 6b // $6b init
  159f:76               push0 
  15a0:57 2f 04         super Prop 4 

  15a3:48                 ret 
    )

    (method (doVerb) // method_15a4
  15a4:38 010c          pushi 10c // $10c doVerb
  15a7:7a               push2 
  15a8:8f 01              lsp param1 
  15aa:8f 02              lsp param2 
  15ac:59 03            &rest 3 
  15ae:72 149c          lofsa $149c // leftNip
  15b1:4a 08             send 8 

  15b3:48                 ret 
    )

)

// 1688
(instance leftRoller of Prop
    (properties
        x $63
        y $33
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $27fb
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $e
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $7
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (init) // method_1626
  1626:38 0096          pushi 96 // $96 setCycle
  1629:78               push1 
  162a:51 17            class Fwd 
  162c:36                push 
  162d:54 06             self 6 

  162f:39 6b            pushi 6b // $6b init
  1631:76               push0 
  1632:57 2f 04         super Prop 4 

  1635:48                 ret 
    )

    (method (doVerb) // method_1636
  1636:8f 01              lsp param1 
  1638:3c                 dup 
  1639:35 02              ldi 2 
  163b:1a                 eq? 
  163c:30 0021            bnt code_1660 
  163f:7a               push2 
  1640:76               push0 
  1641:78               push1 
  1642:43 3c 04         callk Random 4 

  1645:30 000c            bnt code_1654 
  1648:7a               push2 
  1649:38 02bc          pushi 2bc // $2bc sel_700
  164c:39 1a            pushi 1a // $1a text
  164e:45 0e 04         callb procedure_000e 4 //  

  1651:32 002c            jmp code_1680 

        code_1654
  1654:7a               push2 
  1655:38 02bc          pushi 2bc // $2bc sel_700
  1658:39 1b            pushi 1b // $1b elements
  165a:45 0e 04         callb procedure_000e 4 //  

  165d:32 0020            jmp code_1680 

        code_1660
  1660:3c                 dup 
  1661:35 03              ldi 3 
  1663:1a                 eq? 
  1664:30 000c            bnt code_1673 
  1667:7a               push2 
  1668:38 02bc          pushi 2bc // $2bc sel_700
  166b:39 1c            pushi 1c // $1c color
  166d:45 0e 04         callb procedure_000e 4 //  

  1670:32 000d            jmp code_1680 

        code_1673
  1673:38 010c          pushi 10c // $10c doVerb
  1676:7a               push2 
  1677:8f 01              lsp param1 
  1679:8f 02              lsp param2 
  167b:59 03            &rest 3 
  167d:57 2f 08         super Prop 8 


        code_1680
  1680:3a                toss 
  1681:48                 ret 
    )

)

// 1708
(instance middleRoller of Prop
    (properties
        x $6e
        y $33
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $27fb
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $e
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (doVerb) // method_16f4
  16f4:38 010c          pushi 10c // $10c doVerb
  16f7:7a               push2 
  16f8:8f 01              lsp param1 
  16fa:8f 02              lsp param2 
  16fc:72 168e          lofsa $168e // leftRoller
  16ff:4a 08             send 8 

  1701:48                 ret 
    )

)

// 1784
(instance rightRoller of Prop
    (properties
        x $7a
        y $33
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $27fb
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2bc
        loop $e
        cel $3
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (doVerb) // method_1770
  1770:38 010c          pushi 10c // $10c doVerb
  1773:7a               push2 
  1774:8f 01              lsp param1 
  1776:8f 02              lsp param2 
  1778:72 168e          lofsa $168e // leftRoller
  177b:4a 08             send 8 

  177d:48                 ret 
    )

)

// 1802
(instance leftNeon of Prop
    (properties
        x $34
        y $0
        z $ffc8
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $28de
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
        yStep $2
        view $2bc
        loop $9
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $5
        script $0
        cycler $0
        timer $0
        detailLevel $5
    )
    (method (init) // method_17ec
  17ec:38 0096          pushi 96 // $96 setCycle
  17ef:78               push1 
  17f0:51 17            class Fwd 
  17f2:36                push 
  17f3:54 06             self 6 

  17f5:39 6b            pushi 6b // $6b init
  17f7:76               push0 
  17f8:57 2f 04         super Prop 4 

  17fb:48                 ret 
    )

)

// 1880
(instance rightNeon of Prop
    (properties
        x $c3
        y $0
        z $ffba
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $28de
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
        yStep $2
        view $2bc
        loop $a
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $4
        script $0
        cycler $0
        timer $0
        detailLevel $5
    )
    (method (init) // method_186a
  186a:38 0096          pushi 96 // $96 setCycle
  186d:78               push1 
  186e:51 17            class Fwd 
  1870:36                push 
  1871:54 06             self 6 

  1873:39 6b            pushi 6b // $6b init
  1875:76               push0 
  1876:57 2f 04         super Prop 4 

  1879:48                 ret 
    )

)

// 18fe
(instance centerNeon of Prop
    (properties
        x $7d
        y $26
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $28de
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
        yStep $2
        view $2bc
        loop $b
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $3
        script $0
        cycler $0
        timer $0
        detailLevel $4
    )
    (method (init) // method_18e8
  18e8:38 0096          pushi 96 // $96 setCycle
  18eb:78               push1 
  18ec:51 17            class Fwd 
  18ee:36                push 
  18ef:54 06             self 6 

  18f1:39 6b            pushi 6b // $6b init
  18f3:76               push0 
  18f4:57 2f 04         super Prop 4 

  18f7:48                 ret 
    )

)

// 197c
(instance dollars of Prop
    (properties
        x $79
        y $73
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2925
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2935
        yStep $2
        view $2bc
        loop $d
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $9
        script $0
        cycler $0
        timer $0
        detailLevel $3
    )
    (method (init) // method_1966
  1966:38 0096          pushi 96 // $96 setCycle
  1969:78               push1 
  196a:51 17            class Fwd 
  196c:36                push 
  196d:54 06             self 6 

  196f:39 6b            pushi 6b // $6b init
  1971:76               push0 
  1972:57 2f 04         super Prop 4 

  1975:48                 ret 
    )

)

// 1a1c
(instance burgerStand of Feature
    (properties
        x $118
        y $82
        z $0
        heading $0
        noun $0
        nsTop $6f
        nsLeft $f1
        nsBottom $95
        nsRight $13f
        description $298a
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $299b
    )
    (method (init) // method_19e4
  19e4:39 6b            pushi 6b // $6b init
  19e6:76               push0 
  19e7:57 2c 04         super Feature 4 

  19ea:38 0119          pushi 119 // $119 approachVerbs
  19ed:78               push1 
  19ee:76               push0 
  19ef:54 06             self 6 

  19f1:48                 ret 
    )

    (method (doVerb) // method_19f2
  19f2:8f 01              lsp param1 
  19f4:3c                 dup 
  19f5:35 03              ldi 3 
  19f7:1a                 eq? 
  19f8:30 000c            bnt code_1a07 
  19fb:7a               push2 
  19fc:38 02bc          pushi 2bc // $2bc sel_700
  19ff:39 1d            pushi 1d // $1d back
  1a01:45 0e 04         callb procedure_000e 4 //  

  1a04:32 000d            jmp code_1a14 

        code_1a07
  1a07:38 010c          pushi 10c // $10c doVerb
  1a0a:7a               push2 
  1a0b:8f 01              lsp param1 
  1a0d:8f 02              lsp param2 
  1a0f:59 03            &rest 3 
  1a11:57 2c 08         super Feature 8 


        code_1a14
  1a14:3a                toss 
  1a15:48                 ret 
    )

)

// 1a60
(instance boardwalk of Feature
    (properties
        x $118
        y $a1
        z $0
        heading $0
        noun $0
        nsTop $96
        nsLeft $f1
        nsBottom $ad
        nsRight $13f
        description $29fa
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2a08
    )
)

// 1a9c
(instance beach of Feature
    (properties
        x $b7
        y $6d
        z $0
        heading $0
        noun $0
        nsTop $b0
        nsLeft $ea
        nsBottom $be
        nsRight $140
        description $2a64
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2a6e
    )
)

// 1aea
(instance breasts1 of Feature
    (properties
        x $2a
        y $37
        z $0
        heading $0
        noun $0
        nsTop $21
        nsLeft $1f
        nsBottom $2a
        nsRight $35
        description $2add
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_1ad6
  1ad6:38 010c          pushi 10c // $10c doVerb
  1ad9:7a               push2 
  1ada:8f 01              lsp param1 
  1adc:8f 02              lsp param2 
  1ade:72 149c          lofsa $149c // leftNip
  1ae1:4a 08             send 8 

  1ae3:48                 ret 
    )

)

// 1b3a
(instance breasts2 of Feature
    (properties
        x $9c
        y $14
        z $0
        heading $0
        noun $0
        nsTop $b
        nsLeft $94
        nsBottom $1d
        nsRight $a5
        description $2add
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_1b28
  1b28:38 010c          pushi 10c // $10c doVerb
  1b2b:76               push0 
  1b2c:59 01            &rest 1 
  1b2e:72 149c          lofsa $149c // leftNip
  1b31:4a 04             send 4 

  1b33:48                 ret 
    )

)

// 1b8a
(instance breasts3 of Feature
    (properties
        x $d6
        y $4a
        z $0
        heading $0
        noun $0
        nsTop $3c
        nsLeft $cd
        nsBottom $48
        nsRight $e0
        description $2afa
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_1b78
  1b78:38 010c          pushi 10c // $10c doVerb
  1b7b:76               push0 
  1b7c:59 01            &rest 1 
  1b7e:72 149c          lofsa $149c // leftNip
  1b81:4a 04             send 4 

  1b83:48                 ret 
    )

)

// 1c06
(instance ass1 of Feature
    (properties
        x $21
        y $3e
        z $0
        heading $0
        noun $0
        nsTop $37
        nsLeft $1a
        nsBottom $46
        nsRight $2b
        description $2afa
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2b0c
    )
    (method (doVerb) // method_1bc8
  1bc8:8f 01              lsp param1 
  1bca:3c                 dup 
  1bcb:35 03              ldi 3 
  1bcd:1a                 eq? 
  1bce:30 000c            bnt code_1bdd 
  1bd1:7a               push2 
  1bd2:38 02bc          pushi 2bc // $2bc sel_700
  1bd5:39 1e            pushi 1e // $1e mode
  1bd7:45 0e 04         callb procedure_000e 4 //  

  1bda:32 0020            jmp code_1bfd 

        code_1bdd
  1bdd:3c                 dup 
  1bde:35 05              ldi 5 
  1be0:1a                 eq? 
  1be1:30 000c            bnt code_1bf0 
  1be4:7a               push2 
  1be5:38 02bc          pushi 2bc // $2bc sel_700
  1be8:39 1f            pushi 1f // $1f style
  1bea:45 0e 04         callb procedure_000e 4 //  

  1bed:32 000d            jmp code_1bfd 

        code_1bf0
  1bf0:38 010c          pushi 10c // $10c doVerb
  1bf3:7a               push2 
  1bf4:8f 01              lsp param1 
  1bf6:8f 02              lsp param2 
  1bf8:59 03            &rest 3 
  1bfa:57 2c 08         super Feature 8 


        code_1bfd
  1bfd:3a                toss 
  1bfe:48                 ret 
  1bff:00                bnot 
    )

)

// 1c56
(instance ass2 of Feature
    (properties
        x $78
        y $f
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $6c
        nsBottom $10
        nsRight $85
        description $0
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_1c44
  1c44:38 010c          pushi 10c // $10c doVerb
  1c47:76               push0 
  1c48:59 01            &rest 1 
  1c4a:72 1c0c          lofsa $1c0c // ass1
  1c4d:4a 04             send 4 

  1c4f:48                 ret 
    )

)

// 1ca6
(instance ass3 of Feature
    (properties
        x $d5
        y $57
        z $0
        heading $0
        noun $0
        nsTop $50
        nsLeft $cc
        nsBottom $5f
        nsRight $df
        description $2afa
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_1c94
  1c94:38 010c          pushi 10c // $10c doVerb
  1c97:76               push0 
  1c98:59 01            &rest 1 
  1c9a:72 1c0c          lofsa $1c0c // ass1
  1c9d:4a 04             send 4 

  1c9f:48                 ret 
    )

)

// 1d22
(instance girl1 of Feature
    (properties
        x $22
        y $36
        z $0
        heading $0
        noun $0
        nsTop $14
        nsLeft $8
        nsBottom $58
        nsRight $3d
        description $2b37
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2b4c
    )
    (method (doVerb) // method_1ce4
  1ce4:8f 01              lsp param1 
  1ce6:3c                 dup 
  1ce7:35 03              ldi 3 
  1ce9:1a                 eq? 
  1cea:30 000c            bnt code_1cf9 
  1ced:7a               push2 
  1cee:38 02bc          pushi 2bc // $2bc sel_700
  1cf1:39 20            pushi 20 // $20 state
  1cf3:45 0e 04         callb procedure_000e 4 //  

  1cf6:32 0020            jmp code_1d19 

        code_1cf9
  1cf9:3c                 dup 
  1cfa:35 05              ldi 5 
  1cfc:1a                 eq? 
  1cfd:30 000c            bnt code_1d0c 
  1d00:7a               push2 
  1d01:38 02bc          pushi 2bc // $2bc sel_700
  1d04:39 21            pushi 21 // $21 font
  1d06:45 0e 04         callb procedure_000e 4 //  

  1d09:32 000d            jmp code_1d19 

        code_1d0c
  1d0c:38 010c          pushi 10c // $10c doVerb
  1d0f:7a               push2 
  1d10:8f 01              lsp param1 
  1d12:8f 02              lsp param2 
  1d14:59 03            &rest 3 
  1d16:57 2c 08         super Feature 8 


        code_1d19
  1d19:3a                toss 
  1d1a:48                 ret 
  1d1b:00                bnot 
    )

)

// 1d9e
(instance girl2 of Feature
    (properties
        x $8a
        y $e
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $5c
        nsBottom $1c
        nsRight $b9
        description $2b9f
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2ba8
    )
    (method (doVerb) // method_1d60
  1d60:8f 01              lsp param1 
  1d62:3c                 dup 
  1d63:35 03              ldi 3 
  1d65:1a                 eq? 
  1d66:30 000c            bnt code_1d75 
  1d69:7a               push2 
  1d6a:38 02bc          pushi 2bc // $2bc sel_700
  1d6d:39 22            pushi 22 // $22 type
  1d6f:45 0e 04         callb procedure_000e 4 //  

  1d72:32 0020            jmp code_1d95 

        code_1d75
  1d75:3c                 dup 
  1d76:35 05              ldi 5 
  1d78:1a                 eq? 
  1d79:30 000c            bnt code_1d88 
  1d7c:7a               push2 
  1d7d:38 02bc          pushi 2bc // $2bc sel_700
  1d80:39 23            pushi 23 // $23 window
  1d82:45 0e 04         callb procedure_000e 4 //  

  1d85:32 000d            jmp code_1d95 

        code_1d88
  1d88:38 010c          pushi 10c // $10c doVerb
  1d8b:7a               push2 
  1d8c:8f 01              lsp param1 
  1d8e:8f 02              lsp param2 
  1d90:59 03            &rest 3 
  1d92:57 2c 08         super Feature 8 


        code_1d95
  1d95:3a                toss 
  1d96:48                 ret 
  1d97:00                bnot 
    )

)

// 1e1a
(instance girl3 of Feature
    (properties
        x $ce
        y $48
        z $0
        heading $0
        noun $0
        nsTop $27
        nsLeft $b4
        nsBottom $69
        nsRight $e8
        description $2b9f
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2be5
    )
    (method (doVerb) // method_1ddc
  1ddc:8f 01              lsp param1 
  1dde:3c                 dup 
  1ddf:35 03              ldi 3 
  1de1:1a                 eq? 
  1de2:30 000c            bnt code_1df1 
  1de5:7a               push2 
  1de6:38 02bc          pushi 2bc // $2bc sel_700
  1de9:39 24            pushi 24 // $24 cursor
  1deb:45 0e 04         callb procedure_000e 4 //  

  1dee:32 0020            jmp code_1e11 

        code_1df1
  1df1:3c                 dup 
  1df2:35 05              ldi 5 
  1df4:1a                 eq? 
  1df5:30 000c            bnt code_1e04 
  1df8:7a               push2 
  1df9:38 02bc          pushi 2bc // $2bc sel_700
  1dfc:39 25            pushi 25 // $25 max
  1dfe:45 0e 04         callb procedure_000e 4 //  

  1e01:32 000d            jmp code_1e11 

        code_1e04
  1e04:38 010c          pushi 10c // $10c doVerb
  1e07:7a               push2 
  1e08:8f 01              lsp param1 
  1e0a:8f 02              lsp param2 
  1e0c:59 03            &rest 3 
  1e0e:57 2c 08         super Feature 8 


        code_1e11
  1e11:3a                toss 
  1e12:48                 ret 
  1e13:00                bnot 
    )

)

// 1e76
(instance Cheri of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $f
        nsLeft $c
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a6
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_1e58
  1e58:72 1f5e          lofsa $1f5e // girlBust
  1e5b:65 56             aTop bust 
  1e5d:72 1ef8          lofsa $1ef8 // girlEyes
  1e60:65 58             aTop eyes 
  1e62:72 1fc4          lofsa $1fc4 // girlMouth
  1e65:65 5a             aTop mouth 
  1e67:39 6b            pushi 6b // $6b init
  1e69:76               push0 
  1e6a:59 01            &rest 1 
  1e6c:57 6f 04         super Talker 4 

  1e6f:48                 ret 
    )

)

// 1ef2
(instance girlEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $8
        nsLeft $8
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a6
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1e
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 1f58
(instance girlBust of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a6
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 1fbe
(instance girlMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $21
        nsLeft $1e
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a6
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $8
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 2040
(instance Doorman of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $f
        nsLeft $32
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a7
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_2022
  2022:72 20c2          lofsa $20c2 // manBust
  2025:65 56             aTop bust 
  2027:72 2128          lofsa $2128 // manEyes
  202a:65 58             aTop eyes 
  202c:72 218e          lofsa $218e // manMouth
  202f:65 5a             aTop mouth 
  2031:39 6b            pushi 6b // $6b init
  2033:76               push0 
  2034:59 01            &rest 1 
  2036:57 6f 04         super Talker 4 

  2039:48                 ret 
    )

)

// 20bc
(instance manBust of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a7
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 2122
(instance manEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $8
        nsLeft $8
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a7
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1e
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 2188
(instance manMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $1f
        nsLeft $b
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6a7
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $8
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 21ee
(instance trampSignF of Feature
    (properties
        x $79
        y $98
        z $45
        heading $0
        noun $0
        nsTop $46
        nsLeft $58
        nsBottom $61
        nsRight $9a
        description $27b7
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $27c6
    )
)

// 222a
(instance leftLightF of Feature
    (properties
        x $44
        y $9d
        z $3a
        heading $0
        noun $0
        nsTop $52
        nsLeft $3e
        nsBottom $75
        nsRight $4b
        description $285d
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2867
    )
)

// 227c
(instance rightLightF of Feature
    (properties
        x $ac
        y $9e
        z $3b
        heading $0
        noun $0
        nsTop $51
        nsLeft $a2
        nsBottom $76
        nsRight $b6
        description $285d
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2867
    )
    (method (doVerb) // method_2264
  2264:8f 01              lsp param1 
  2266:38 010c          pushi 10c // $10c doVerb
  2269:7a               push2 
  226a:8f 01              lsp param1 
  226c:8f 02              lsp param2 
  226e:59 03            &rest 3 
  2270:57 2c 08         super Feature 8 

  2273:3a                toss 
  2274:48                 ret 
  2275:00                bnot 
    )

)

// 22bc
(instance slotSignF of Feature
    (properties
        x $3e
        y $a0
        z $67
        heading $0
        noun $0
        nsTop $25
        nsLeft $35
        nsBottom $4e
        nsRight $47
        description $2c8f
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2811
    )
)

// 22f8
(instance leftNeonF of Feature
    (properties
        x $1c
        y $9d
        z $8f
        heading $0
        noun $0
        nsTop $1
        nsLeft $4
        nsBottom $1c
        nsRight $35
        description $28de
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
    )
)

// 2334
(instance rightNeonF of Feature
    (properties
        x $ce
        y $9d
        z $89
        heading $0
        noun $0
        nsTop $0
        nsLeft $b9
        nsBottom $29
        nsRight $e4
        description $28de
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
    )
)

// 2370
(instance centerNeonF of Feature
    (properties
        x $7c
        y $9e
        z $7e
        heading $0
        noun $0
        nsTop $19
        nsLeft $6e
        nsBottom $28
        nsRight $8b
        description $28de
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $28ec
    )
)

// 23c2
(instance dollarsF of Feature
    (properties
        x $7c
        y $9f
        z $32
        heading $0
        noun $0
        nsTop $66
        nsLeft $5a
        nsBottom $74
        nsRight $9e
        description $2925
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2935
    )
    (method (doVerb) // method_23aa
  23aa:8f 01              lsp param1 
  23ac:38 010c          pushi 10c // $10c doVerb
  23af:7a               push2 
  23b0:8f 01              lsp param1 
  23b2:8f 02              lsp param2 
  23b4:59 03            &rest 3 
  23b6:57 2c 08         super Feature 8 

  23b9:3a                toss 
  23ba:48                 ret 
  23bb:00                bnot 
    )

)

// 2402
(instance soundFX of Sound
    (properties
        nodePtr $0
        handle $0
        flags $1
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)



