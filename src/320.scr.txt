(script 320)

(string
    string_2ef2 "Enter dream to debug:"
    string_2f08 "Dream of Athens"
    string_2f18 "Wake up from Athens"
    string_2f2c "Dream of Venice"
    string_2f3c "Wake up from Venice"
    string_2f50 "Dream of Taj Mahal"
    string_2f63 "Wake up from Taj Mahal"
    string_2f7a "Dream of Casablanca"
    string_2f8e "rm320"
    string_2f94 "sFlyingCoach"
    string_2fa1 "your head"
    string_2fab "larry"
    string_2fb1 "the tray"
    string_2fba "tray"
    string_2fbf "your arm"
    string_2fc8 "You've always liked this arm."
    string_2fe6 "arm"
    string_2fea "arm2"
    string_2fef "your body"
    string_2ff9 "body"
    string_2ffe "the cloud"
    string_3008 "cloud"
    string_300e "patti"
    string_3014 "dreamProp1"
    string_301f "dreamProp2"
    string_302a "dreamProp3"
    string_3035 "dreamProp4"
    string_3040 "dreamProp5"
    string_304b "conf"
    string_3050 "sSqeezeNuts"
    string_305c "the airline magazine"
    string_3071 "magazine"
    string_307a "MyForward"
    string_3084 "sDreamAthens"
    string_3091 "The Stewardess"
    string_30a0 "sWakeUpAthens"
    string_30ae "sWakeUpVenice"
    string_30bc "sDreamTaj"
    string_30c6 "sWakeUpTaj"
    string_30d1 "sDreamVenice"
    string_30de "the magazine"
    string_30eb "theMagazine"
    string_30f7 "sDreamCasa"
    string_3102 "Leisure Suit Bogie"
    string_3115 "hisMouth"
    string_311e "Ingrid Patti"
    string_312b "herMouth"
    string_3134 "theMusic3"
    string_313e "zipperSound"
    string_314a "sPlayGuitar"
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
)

// 0306
(instance publicrm320 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $140
        style $7
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:89 0c              lsg  
  0010:35 65              ldi 65 
  0012:1a                 eq? 
  0013:30 00c2            bnt code_00d8 
  0016:39 1d            pushi 1d // $1d back
  0018:72 2ef2          lofsa $2ef2 // Enter dream to debug:
  001b:36                push 
  001c:39 6a            pushi 6a // $6a new
  001e:39 51            pushi 51 // $51 button
  0020:72 2f08          lofsa $2f08 // Dream of Athens
  0023:36                push 
  0024:78               push1 
  0025:39 6a            pushi 6a // $6a new
  0027:39 51            pushi 51 // $51 button
  0029:72 2f18          lofsa $2f18 // Wake up from Athens
  002c:36                push 
  002d:39 05            pushi 5 // $5 view
  002f:39 6a            pushi 6a // $6a new
  0031:39 51            pushi 51 // $51 button
  0033:72 2f2c          lofsa $2f2c // Dream of Venice
  0036:36                push 
  0037:7a               push2 
  0038:39 6a            pushi 6a // $6a new
  003a:39 51            pushi 51 // $51 button
  003c:72 2f3c          lofsa $2f3c // Wake up from Venice
  003f:36                push 
  0040:39 06            pushi 6 // $6 loop
  0042:39 6a            pushi 6a // $6a new
  0044:39 51            pushi 51 // $51 button
  0046:72 2f50          lofsa $2f50 // Dream of Taj Mahal
  0049:36                push 
  004a:39 03            pushi 3 // $3 y
  004c:39 6a            pushi 6a // $6a new
  004e:39 51            pushi 51 // $51 button
  0050:72 2f63          lofsa $2f63 // Wake up from Taj Mahal
  0053:36                push 
  0054:39 07            pushi 7 // $7 cel
  0056:39 6a            pushi 6a // $6a new
  0058:39 51            pushi 51 // $51 button
  005a:72 2f7a          lofsa $2f7a // Dream of Casablanca
  005d:36                push 
  005e:39 04            pushi 4 // $4 x
  0060:46 03ac 0000 3a  calle 3ac procedure_0000 3a //  

  0066:a3 03              sal local3 
  0068:36                push 
  0069:3c                 dup 
  006a:35 01              ldi 1 
  006c:1a                 eq? 
  006d:30 0007            bnt code_0077 
  0070:35 00              ldi 0 
  0072:a1 9c              sag  
  0074:32 0060            jmp code_00d7 

        code_0077
  0077:3c                 dup 
  0078:35 02              ldi 2 
  007a:1a                 eq? 
  007b:30 0007            bnt code_0085 
  007e:35 01              ldi 1 
  0080:a1 9c              sag  
  0082:32 0052            jmp code_00d7 

        code_0085
  0085:3c                 dup 
  0086:35 03              ldi 3 
  0088:1a                 eq? 
  0089:30 0007            bnt code_0093 
  008c:35 02              ldi 2 
  008e:a1 9c              sag  
  0090:32 0044            jmp code_00d7 

        code_0093
  0093:3c                 dup 
  0094:35 04              ldi 4 
  0096:1a                 eq? 
  0097:30 0007            bnt code_00a1 
  009a:35 03              ldi 3 
  009c:a1 9c              sag  
  009e:32 0036            jmp code_00d7 

        code_00a1
  00a1:3c                 dup 
  00a2:35 05              ldi 5 
  00a4:1a                 eq? 
  00a5:30 000c            bnt code_00b4 
  00a8:34 00c8            ldi c8 
  00ab:a1 0c              sag  
  00ad:35 00              ldi 0 
  00af:a1 9c              sag  
  00b1:32 0023            jmp code_00d7 

        code_00b4
  00b4:3c                 dup 
  00b5:35 06              ldi 6 
  00b7:1a                 eq? 
  00b8:30 000c            bnt code_00c7 
  00bb:34 00c8            ldi c8 
  00be:a1 0c              sag  
  00c0:35 01              ldi 1 
  00c2:a1 9c              sag  
  00c4:32 0010            jmp code_00d7 

        code_00c7
  00c7:3c                 dup 
  00c8:35 07              ldi 7 
  00ca:1a                 eq? 
  00cb:30 0009            bnt code_00d7 
  00ce:34 00c8            ldi c8 
  00d1:a1 0c              sag  
  00d3:35 02              ldi 2 
  00d5:a1 9c              sag  

        code_00d7
  00d7:3a                toss 

        code_00d8
  00d8:39 6b            pushi 6b // $6b init
  00da:76               push0 
  00db:57 72 04         super LLRoom 4 

  00de:89 0c              lsg  
  00e0:34 00c8            ldi c8 
  00e3:1c                 ne? 
  00e4:30 0012            bnt code_00f9 
  00e7:39 2b            pushi 2b // $2b number
  00e9:78               push1 
  00ea:38 0141          pushi 141 // $141 curEvent
  00ed:39 06            pushi 6 // $6 loop
  00ef:78               push1 
  00f0:39 ff            pushi ff // $ff syncNum
  00f2:39 2a            pushi 2a // $2a play
  00f4:76               push0 
  00f5:81 66              lag  
  00f7:4a 10             send 10 


        code_00f9
  00f9:39 6b            pushi 6b // $6b init
  00fb:76               push0 
  00fc:38 0134          pushi 134 // $134 setStep
  00ff:7a               push2 
  0100:78               push1 
  0101:78               push1 
  0102:38 011c          pushi 11c // $11c posn
  0105:7a               push2 
  0106:38 00f4          pushi f4 // $f4 nearestDist
  0109:7a               push2 
  010a:39 1e            pushi 1e // $1e mode
  010c:39 2c            pushi 2c // $2c nodePtr
  010e:43 3c 04         callk Random 4 

  0111:36                push 
  0112:38 011b          pushi 11b // $11b setMotion
  0115:39 04            pushi 4 // $4 x
  0117:51 1e            class MoveTo 
  0119:36                push 
  011a:39 3f            pushi 3f // $3f priority
  011c:39 03            pushi 3 // $3 y
  011e:76               push0 
  011f:72 0ac4          lofsa $0ac4 // cloud
  0122:4a 04             send 4 

  0124:36                push 
  0125:72 0ac4          lofsa $0ac4 // cloud
  0128:36                push 
  0129:72 0ac4          lofsa $0ac4 // cloud
  012c:4a 20             send 20 

  012e:89 0c              lsg  
  0130:3c                 dup 
  0131:34 00c8            ldi c8 
  0134:1a                 eq? 
  0135:30 00c6            bnt code_01fe 
  0138:7a               push2 
  0139:38 0084          pushi 84 // $84 cycles
  013c:38 0138          pushi 138 // $138 vanishingX
  013f:43 00 04         callk Load 4 

  0142:35 01              ldi 1 
  0144:a3 01              sal local1 
  0146:89 9c              lsg  
  0148:3c                 dup 
  0149:35 00              ldi 0 
  014b:1a                 eq? 
  014c:30 003b            bnt code_018a 
  014f:39 6b            pushi 6b // $6b init
  0151:76               push0 
  0152:38 0120          pushi 120 // $120 setCel
  0155:78               push1 
  0156:78               push1 
  0157:38 011d          pushi 11d // $11d stopUpd
  015a:76               push0 
  015b:72 075c          lofsa $075c // larry
  015e:4a 0e             send e 

  0160:89 9d              lsg  
  0162:35 01              ldi 1 
  0164:1a                 eq? 
  0165:30 0007            bnt code_016f 
  0168:35 01              ldi 1 
  016a:a1 9c              sag  
  016c:32 0004            jmp code_0173 

        code_016f
  016f:35 02              ldi 2 
  0171:a1 9c              sag  

        code_0173
  0173:7a               push2 
  0174:38 0084          pushi 84 // $84 cycles
  0177:38 015b          pushi 15b // $15b rgtBordColor
  017a:43 00 04         callk Load 4 

  017d:38 008e          pushi 8e // $8e setScript
  0180:78               push1 
  0181:72 1a8c          lofsa $1a8c // sWakeUpAthens
  0184:36                push 
  0185:54 06             self 6 

  0187:32 0070            jmp code_01fa 

        code_018a
  018a:3c                 dup 
  018b:35 01              ldi 1 
  018d:1a                 eq? 
  018e:30 003b            bnt code_01cc 
  0191:39 6b            pushi 6b // $6b init
  0193:76               push0 
  0194:38 0120          pushi 120 // $120 setCel
  0197:78               push1 
  0198:78               push1 
  0199:38 011d          pushi 11d // $11d stopUpd
  019c:76               push0 
  019d:72 075c          lofsa $075c // larry
  01a0:4a 0e             send e 

  01a2:78               push1 
  01a3:39 1c            pushi 1c // $1c color
  01a5:45 06 02         callb procedure_0006 2 //  

  01a8:30 0010            bnt code_01bb 
  01ab:78               push1 
  01ac:39 1d            pushi 1d // $1d back
  01ae:45 06 02         callb procedure_0006 2 //  

  01b1:30 0007            bnt code_01bb 
  01b4:35 03              ldi 3 
  01b6:a1 9c              sag  
  01b8:32 0004            jmp code_01bf 

        code_01bb
  01bb:35 02              ldi 2 
  01bd:a1 9c              sag  

        code_01bf
  01bf:38 008e          pushi 8e // $8e setScript
  01c2:78               push1 
  01c3:72 1e4c          lofsa $1e4c // sWakeUpVenice
  01c6:36                push 
  01c7:54 06             self 6 

  01c9:32 002e            jmp code_01fa 

        code_01cc
  01cc:3c                 dup 
  01cd:35 02              ldi 2 
  01cf:1a                 eq? 
  01d0:30 0027            bnt code_01fa 
  01d3:78               push1 
  01d4:39 1c            pushi 1c // $1c color
  01d6:45 06 02         callb procedure_0006 2 //  

  01d9:30 0010            bnt code_01ec 
  01dc:78               push1 
  01dd:39 1d            pushi 1d // $1d back
  01df:45 06 02         callb procedure_0006 2 //  

  01e2:30 0007            bnt code_01ec 
  01e5:35 03              ldi 3 
  01e7:a1 9c              sag  
  01e9:32 0004            jmp code_01f0 

        code_01ec
  01ec:35 01              ldi 1 
  01ee:a1 9c              sag  

        code_01f0
  01f0:38 008e          pushi 8e // $8e setScript
  01f3:78               push1 
  01f4:72 251a          lofsa $251a // sWakeUpTaj
  01f7:36                push 
  01f8:54 06             self 6 


        code_01fa
  01fa:3a                toss 
  01fb:32 0078            jmp code_0276 

        code_01fe
  01fe:7a               push2 
  01ff:38 0080          pushi 80 // $80 indexOf
  0202:38 0142          pushi 142 // $142 verbMessager
  0205:43 00 04         callk Load 4 

  0208:39 6b            pushi 6b // $6b init
  020a:76               push0 
  020b:38 011d          pushi 11d // $11d stopUpd
  020e:76               push0 
  020f:72 075c          lofsa $075c // larry
  0212:4a 08             send 8 

  0214:39 6b            pushi 6b // $6b init
  0216:76               push0 
  0217:38 011d          pushi 11d // $11d stopUpd
  021a:76               push0 
  021b:72 09cc          lofsa $09cc // body
  021e:4a 08             send 8 

  0220:39 6b            pushi 6b // $6b init
  0222:76               push0 
  0223:38 011d          pushi 11d // $11d stopUpd
  0226:76               push0 
  0227:72 08b0          lofsa $08b0 // arm
  022a:4a 08             send 8 

  022c:39 6b            pushi 6b // $6b init
  022e:76               push0 
  022f:38 011d          pushi 11d // $11d stopUpd
  0232:76               push0 
  0233:72 0842          lofsa $0842 // tray
  0236:4a 08             send 8 

  0238:39 6b            pushi 6b // $6b init
  023a:76               push0 
  023b:38 011d          pushi 11d // $11d stopUpd
  023e:76               push0 
  023f:72 0916          lofsa $0916 // arm2
  0242:4a 08             send 8 

  0244:78               push1 
  0245:39 34            pushi 34 // $34 b-xAxis
  0247:45 06 02         callb procedure_0006 2 //  

  024a:18                 not 
  024b:30 001e            bnt code_026c 
  024e:38 00d5          pushi d5 // $d5 has
  0251:78               push1 
  0252:39 09            pushi 9 // $9 nsTop
  0254:81 00              lag  
  0256:4a 06             send 6 

  0258:18                 not 
  0259:30 0010            bnt code_026c 
  025c:39 6b            pushi 6b // $6b init
  025e:76               push0 
  025f:72 2918          lofsa $2918 // theMagazine
  0262:4a 04             send 4 

  0264:39 6b            pushi 6b // $6b init
  0266:76               push0 
  0267:72 1048          lofsa $1048 // magazine
  026a:4a 04             send 4 


        code_026c
  026c:38 008e          pushi 8e // $8e setScript
  026f:78               push1 
  0270:72 06b6          lofsa $06b6 // sFlyingCoach
  0273:36                push 
  0274:54 06             self 6 


        code_0276
  0276:3a                toss 
  0277:76               push0 
  0278:45 02 00         callb procedure_0002 0 //  

  027b:48                 ret 
    )

    (method (doit) // method_02e4
  02e4:39 3c            pushi 3c // $3c doit
  02e6:76               push0 
  02e7:57 72 04         super LLRoom 4 

  02ea:83 01              lal local1 
  02ec:30 0010            bnt code_02ff 
  02ef:39 04            pushi 4 // $4 x
  02f1:39 06            pushi 6 // $6 loop
  02f3:8b 02              lsl local2 
  02f5:3c                 dup 
  02f6:35 07              ldi 7 
  02f8:02                 add 
  02f9:36                push 
  02fa:39 06            pushi 6 // $6 loop
  02fc:43 6f 08         callk Palette 8 


        code_02ff
  02ff:48                 ret 
    )

    (method (doVerb) // method_027c
  027c:8f 01              lsp param1 
  027e:3c                 dup 
  027f:35 02              ldi 2 
  0281:1a                 eq? 
  0282:30 002b            bnt code_02b0 
  0285:7a               push2 
  0286:38 0140          pushi 140 // $140 mapKeyToDir
  0289:76               push0 
  028a:45 0e 04         callb procedure_000e 4 //  

  028d:78               push1 
  028e:39 34            pushi 34 // $34 b-xAxis
  0290:45 06 02         callb procedure_0006 2 //  

  0293:18                 not 
  0294:30 004b            bnt code_02e2 
  0297:38 00d5          pushi d5 // $d5 has
  029a:78               push1 
  029b:39 09            pushi 9 // $9 nsTop
  029d:81 00              lag  
  029f:4a 06             send 6 

  02a1:18                 not 
  02a2:30 003d            bnt code_02e2 
  02a5:7a               push2 
  02a6:38 0140          pushi 140 // $140 mapKeyToDir
  02a9:78               push1 
  02aa:45 0e 04         callb procedure_000e 4 //  

  02ad:32 0032            jmp code_02e2 

        code_02b0
  02b0:3c                 dup 
  02b1:35 05              ldi 5 
  02b3:1a                 eq? 
  02b4:30 000b            bnt code_02c2 
  02b7:7a               push2 
  02b8:38 0140          pushi 140 // $140 mapKeyToDir
  02bb:7a               push2 
  02bc:45 0e 04         callb procedure_000e 4 //  

  02bf:32 0020            jmp code_02e2 

        code_02c2
  02c2:3c                 dup 
  02c3:35 03              ldi 3 
  02c5:1a                 eq? 
  02c6:30 000c            bnt code_02d5 
  02c9:7a               push2 
  02ca:38 0140          pushi 140 // $140 mapKeyToDir
  02cd:39 03            pushi 3 // $3 y
  02cf:45 0e 04         callb procedure_000e 4 //  

  02d2:32 000d            jmp code_02e2 

        code_02d5
  02d5:38 010c          pushi 10c // $10c doVerb
  02d8:7a               push2 
  02d9:8f 01              lsp param1 
  02db:8f 02              lsp param2 
  02dd:59 03            &rest 3 
  02df:57 72 08         super LLRoom 8 


        code_02e2
  02e2:3a                toss 
  02e3:48                 ret 
    )

)

// 06b0
(instance sFlyingCoach of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_034e
  034e:87 01              lap param1 
  0350:65 0a             aTop state 
  0352:36                push 
  0353:3c                 dup 
  0354:35 00              ldi 0 
  0356:1a                 eq? 
  0357:30 0007            bnt code_0361 
  035a:35 03              ldi 3 
  035c:65 10             aTop cycles 
  035e:32 0347            jmp code_06a8 

        code_0361
  0361:3c                 dup 
  0362:35 01              ldi 1 
  0364:1a                 eq? 
  0365:30 0127            bnt code_048f 
  0368:38 0144          pushi 144 // $144 canInput
  036b:78               push1 
  036c:78               push1 
  036d:51 31            class User 
  036f:4a 06             send 6 

  0371:7a               push2 
  0372:38 0084          pushi 84 // $84 cycles
  0375:38 0140          pushi 140 // $140 mapKeyToDir
  0378:43 00 04         callk Load 4 

  037b:89 9c              lsg  
  037d:3c                 dup 
  037e:35 00              ldi 0 
  0380:1a                 eq? 
  0381:30 0050            bnt code_03d4 
  0384:78               push1 
  0385:38 0190          pushi 190 // $190 roomToEdge
  0388:45 0d 02         callb procedure_000d 2 //  

  038b:7a               push2 
  038c:38 0080          pushi 80 // $80 indexOf
  038f:38 014a          pushi 14a // $14a lastY
  0392:43 00 04         callk Load 4 

  0395:7a               push2 
  0396:38 0080          pushi 80 // $80 indexOf
  0399:38 014f          pushi 14f // $14f seek
  039c:43 00 04         callk Load 4 

  039f:7a               push2 
  03a0:38 0080          pushi 80 // $80 indexOf
  03a3:38 0155          pushi 155 // $155 setMapSet
  03a6:43 00 04         callk Load 4 

  03a9:7a               push2 
  03aa:38 0081          pushi 81 // $81 handleEvent
  03ad:38 014a          pushi 14a // $14a lastY
  03b0:43 00 04         callk Load 4 

  03b3:7a               push2 
  03b4:38 0081          pushi 81 // $81 handleEvent
  03b7:38 014f          pushi 14f // $14f seek
  03ba:43 00 04         callk Load 4 

  03bd:7a               push2 
  03be:38 0081          pushi 81 // $81 handleEvent
  03c1:38 0154          pushi 154 // $154 eraseOnly
  03c4:43 00 04         callk Load 4 

  03c7:7a               push2 
  03c8:38 0084          pushi 84 // $84 cycles
  03cb:38 014a          pushi 14a // $14a lastY
  03ce:43 00 04         callk Load 4 

  03d1:32 00a8            jmp code_047c 

        code_03d4
  03d4:3c                 dup 
  03d5:35 01              ldi 1 
  03d7:1a                 eq? 
  03d8:30 0046            bnt code_0421 
  03db:78               push1 
  03dc:38 0258          pushi 258 // $258 sel_600
  03df:45 0d 02         callb procedure_000d 2 //  

  03e2:7a               push2 
  03e3:38 0080          pushi 80 // $80 indexOf
  03e6:38 015e          pushi 15e // $15e shadowWid
  03e9:43 00 04         callk Load 4 

  03ec:7a               push2 
  03ed:38 0080          pushi 80 // $80 indexOf
  03f0:38 015f          pushi 15f // $15f ck
  03f3:43 00 04         callk Load 4 

  03f6:7a               push2 
  03f7:38 0080          pushi 80 // $80 indexOf
  03fa:38 0141          pushi 141 // $141 curEvent
  03fd:43 00 04         callk Load 4 

  0400:7a               push2 
  0401:38 0080          pushi 80 // $80 indexOf
  0404:38 0164          pushi 164 // $164 rgtBordColor2
  0407:43 00 04         callk Load 4 

  040a:7a               push2 
  040b:38 0081          pushi 81 // $81 handleEvent
  040e:38 015e          pushi 15e // $15e shadowWid
  0411:43 00 04         callk Load 4 

  0414:7a               push2 
  0415:38 0081          pushi 81 // $81 handleEvent
  0418:38 0163          pushi 163 // $163 botBordColor2
  041b:43 00 04         callk Load 4 

  041e:32 005b            jmp code_047c 

        code_0421
  0421:3c                 dup 
  0422:35 02              ldi 2 
  0424:1a                 eq? 
  0425:30 0032            bnt code_045a 
  0428:78               push1 
  0429:38 0320          pushi 320 // $320 sel_800
  042c:45 0d 02         callb procedure_000d 2 //  

  042f:7a               push2 
  0430:38 0080          pushi 80 // $80 indexOf
  0433:38 0172          pushi 172 // $172 showScore
  0436:43 00 04         callk Load 4 

  0439:7a               push2 
  043a:38 0080          pushi 80 // $80 indexOf
  043d:38 0173          pushi 173 // $173 iconBarInvItem
  0440:43 00 04         callk Load 4 

  0443:7a               push2 
  0444:38 0081          pushi 81 // $81 handleEvent
  0447:38 0172          pushi 172 // $172 showScore
  044a:43 00 04         callk Load 4 

  044d:7a               push2 
  044e:38 0084          pushi 84 // $84 cycles
  0451:38 0172          pushi 172 // $172 showScore
  0454:43 00 04         callk Load 4 

  0457:32 0022            jmp code_047c 

        code_045a
  045a:3c                 dup 
  045b:35 03              ldi 3 
  045d:1a                 eq? 
  045e:30 001b            bnt code_047c 
  0461:78               push1 
  0462:38 0181          pushi 181 // $181 keep
  0465:45 0d 02         callb procedure_000d 2 //  

  0468:7a               push2 
  0469:38 0080          pushi 80 // $80 indexOf
  046c:38 017c          pushi 17c // $17c setSpeed
  046f:43 00 04         callk Load 4 

  0472:7a               push2 
  0473:38 0081          pushi 81 // $81 handleEvent
  0476:38 017c          pushi 17c // $17c setSpeed
  0479:43 00 04         callk Load 4 


        code_047c
  047c:3a                toss 
  047d:76               push0 
  047e:40 0c64 00        call proc_10e6 0 

  0482:7a               push2 
  0483:39 0a            pushi a // $a nsLeft
  0485:39 14            pushi 14 // $14 brLeft
  0487:43 3c 04         callk Random 4 

  048a:65 12             aTop seconds 
  048c:32 0219            jmp code_06a8 

        code_048f
  048f:3c                 dup 
  0490:35 02              ldi 2 
  0492:1a                 eq? 
  0493:30 004a            bnt code_04e0 
  0496:76               push0 
  0497:45 02 00         callb procedure_0002 0 //  

  049a:38 0120          pushi 120 // $120 setCel
  049d:78               push1 
  049e:78               push1 
  049f:72 075c          lofsa $075c // larry
  04a2:4a 06             send 6 

  04a4:39 2b            pushi 2b // $2b number
  04a6:78               push1 
  04a7:38 0141          pushi 141 // $141 curEvent
  04aa:38 009f          pushi 9f // $9f fade
  04ad:39 04            pushi 4 // $4 x
  04af:76               push0 
  04b0:39 0f            pushi f // $f lsBottom
  04b2:39 0a            pushi a // $a nsLeft
  04b4:78               push1 
  04b5:81 66              lag  
  04b7:4a 12             send 12 

  04b9:39 2b            pushi 2b // $2b number
  04bb:78               push1 
  04bc:38 0140          pushi 140 // $140 mapKeyToDir
  04bf:39 06            pushi 6 // $6 loop
  04c1:78               push1 
  04c2:39 ff            pushi ff // $ff syncNum
  04c4:39 2a            pushi 2a // $2a play
  04c6:78               push1 
  04c7:39 0a            pushi a // $a nsLeft
  04c9:38 009f          pushi 9f // $9f fade
  04cc:39 04            pushi 4 // $4 x
  04ce:39 7f            pushi 7f // $7f addAfter
  04d0:39 0f            pushi f // $f lsBottom
  04d2:39 05            pushi 5 // $5 view
  04d4:76               push0 
  04d5:81 67              lag  
  04d7:4a 1e             send 1e 

  04d9:35 03              ldi 3 
  04db:65 12             aTop seconds 
  04dd:32 01c8            jmp code_06a8 

        code_04e0
  04e0:3c                 dup 
  04e1:35 03              ldi 3 
  04e3:1a                 eq? 
  04e4:30 0013            bnt code_04fa 
  04e7:38 0122          pushi 122 // $122 addToPic
  04ea:76               push0 
  04eb:39 6c            pushi 6c // $6c dispose
  04ed:76               push0 
  04ee:72 075c          lofsa $075c // larry
  04f1:4a 08             send 8 

  04f3:35 02              ldi 2 
  04f5:65 12             aTop seconds 
  04f7:32 01ae            jmp code_06a8 

        code_04fa
  04fa:3c                 dup 
  04fb:35 04              ldi 4 
  04fd:1a                 eq? 
  04fe:30 0023            bnt code_0524 
  0501:39 6b            pushi 6b // $6b init
  0503:76               push0 
  0504:39 05            pushi 5 // $5 view
  0506:78               push1 
  0507:38 0142          pushi 142 // $142 verbMessager
  050a:38 0120          pushi 120 // $120 setCel
  050d:78               push1 
  050e:78               push1 
  050f:38 011c          pushi 11c // $11c posn
  0512:7a               push2 
  0513:38 0092          pushi 92 // $92 cycleCnt
  0516:39 25            pushi 25 // $25 max
  0518:72 0bb0          lofsa $0bb0 // dreamProp1
  051b:4a 18             send 18 

  051d:35 28              ldi 28 
  051f:65 16             aTop ticks 
  0521:32 0184            jmp code_06a8 

        code_0524
  0524:3c                 dup 
  0525:35 05              ldi 5 
  0527:1a                 eq? 
  0528:30 001a            bnt code_0545 
  052b:38 0120          pushi 120 // $120 setCel
  052e:78               push1 
  052f:7a               push2 
  0530:38 011c          pushi 11c // $11c posn
  0533:7a               push2 
  0534:38 00ab          pushi ab // $ab move
  0537:39 33            pushi 33 // $33 b-di
  0539:72 0bb0          lofsa $0bb0 // dreamProp1
  053c:4a 0e             send e 

  053e:35 28              ldi 28 
  0540:65 16             aTop ticks 
  0542:32 0163            jmp code_06a8 

        code_0545
  0545:3c                 dup 
  0546:35 06              ldi 6 
  0548:1a                 eq? 
  0549:30 002a            bnt code_0576 
  054c:38 0120          pushi 120 // $120 setCel
  054f:78               push1 
  0550:39 03            pushi 3 // $3 y
  0552:38 011c          pushi 11c // $11c posn
  0555:7a               push2 
  0556:38 00c3          pushi c3 // $c3 highlight
  0559:39 4e            pushi 4e // $4e save
  055b:72 0bb0          lofsa $0bb0 // dreamProp1
  055e:4a 0e             send e 

  0560:38 009f          pushi 9f // $9f fade
  0563:39 04            pushi 4 // $4 x
  0565:76               push0 
  0566:39 0f            pushi f // $f lsBottom
  0568:39 05            pushi 5 // $5 view
  056a:78               push1 
  056b:81 67              lag  
  056d:4a 0c             send c 

  056f:35 3c              ldi 3c 
  0571:65 16             aTop ticks 
  0573:32 0132            jmp code_06a8 

        code_0576
  0576:3c                 dup 
  0577:35 07              ldi 7 
  0579:1a                 eq? 
  057a:30 00ae            bnt code_062b 
  057d:89 9c              lsg  
  057f:3c                 dup 
  0580:35 00              ldi 0 
  0582:1a                 eq? 
  0583:30 0022            bnt code_05a8 
  0586:39 2b            pushi 2b // $2b number
  0588:78               push1 
  0589:38 014a          pushi 14a // $14a lastY
  058c:39 06            pushi 6 // $6 loop
  058e:78               push1 
  058f:78               push1 
  0590:39 2a            pushi 2a // $2a play
  0592:78               push1 
  0593:39 1e            pushi 1e // $1e mode
  0595:38 009f          pushi 9f // $9f fade
  0598:39 04            pushi 4 // $4 x
  059a:39 7f            pushi 7f // $7f addAfter
  059c:39 0f            pushi f // $f lsBottom
  059e:39 0a            pushi a // $a nsLeft
  05a0:76               push0 
  05a1:81 66              lag  
  05a3:4a 1e             send 1e 

  05a5:32 007b            jmp code_0623 

        code_05a8
  05a8:3c                 dup 
  05a9:35 01              ldi 1 
  05ab:1a                 eq? 
  05ac:30 0023            bnt code_05d2 
  05af:39 2b            pushi 2b // $2b number
  05b1:78               push1 
  05b2:38 015e          pushi 15e // $15e shadowWid
  05b5:39 06            pushi 6 // $6 loop
  05b7:78               push1 
  05b8:39 ff            pushi ff // $ff syncNum
  05ba:39 2a            pushi 2a // $2a play
  05bc:78               push1 
  05bd:39 1e            pushi 1e // $1e mode
  05bf:38 009f          pushi 9f // $9f fade
  05c2:39 04            pushi 4 // $4 x
  05c4:39 7f            pushi 7f // $7f addAfter
  05c6:39 0f            pushi f // $f lsBottom
  05c8:39 0a            pushi a // $a nsLeft
  05ca:76               push0 
  05cb:81 66              lag  
  05cd:4a 1e             send 1e 

  05cf:32 0051            jmp code_0623 

        code_05d2
  05d2:3c                 dup 
  05d3:35 02              ldi 2 
  05d5:1a                 eq? 
  05d6:30 0023            bnt code_05fc 
  05d9:39 2b            pushi 2b // $2b number
  05db:78               push1 
  05dc:38 0172          pushi 172 // $172 showScore
  05df:39 06            pushi 6 // $6 loop
  05e1:78               push1 
  05e2:39 ff            pushi ff // $ff syncNum
  05e4:39 2a            pushi 2a // $2a play
  05e6:78               push1 
  05e7:39 1e            pushi 1e // $1e mode
  05e9:38 009f          pushi 9f // $9f fade
  05ec:39 04            pushi 4 // $4 x
  05ee:39 7f            pushi 7f // $7f addAfter
  05f0:39 0f            pushi f // $f lsBottom
  05f2:39 0a            pushi a // $a nsLeft
  05f4:76               push0 
  05f5:81 67              lag  
  05f7:4a 1e             send 1e 

  05f9:32 0027            jmp code_0623 

        code_05fc
  05fc:3c                 dup 
  05fd:35 03              ldi 3 
  05ff:1a                 eq? 
  0600:30 0020            bnt code_0623 
  0603:39 2b            pushi 2b // $2b number
  0605:78               push1 
  0606:38 017d          pushi 17d // $17d checkAni
  0609:39 06            pushi 6 // $6 loop
  060b:78               push1 
  060c:39 ff            pushi ff // $ff syncNum
  060e:39 2a            pushi 2a // $2a play
  0610:78               push1 
  0611:39 1e            pushi 1e // $1e mode
  0613:38 009f          pushi 9f // $9f fade
  0616:39 04            pushi 4 // $4 x
  0618:39 7f            pushi 7f // $7f addAfter
  061a:39 0f            pushi f // $f lsBottom
  061c:39 0a            pushi a // $a nsLeft
  061e:76               push0 
  061f:81 66              lag  
  0621:4a 1e             send 1e 


        code_0623
  0623:3a                toss 
  0624:35 28              ldi 28 
  0626:65 16             aTop ticks 
  0628:32 007d            jmp code_06a8 

        code_062b
  062b:3c                 dup 
  062c:35 08              ldi 8 
  062e:1a                 eq? 
  062f:30 001b            bnt code_064d 
  0632:38 0120          pushi 120 // $120 setCel
  0635:78               push1 
  0636:39 04            pushi 4 // $4 x
  0638:38 011c          pushi 11c // $11c posn
  063b:7a               push2 
  063c:38 00c9          pushi c9 // $c9 disable
  063f:39 7a            pushi 7a // $7a release
  0641:72 0bb0          lofsa $0bb0 // dreamProp1
  0644:4a 0e             send e 

  0646:35 1e              ldi 1e 
  0648:65 16             aTop ticks 
  064a:32 005b            jmp code_06a8 

        code_064d
  064d:3c                 dup 
  064e:35 09              ldi 9 
  0650:1a                 eq? 
  0651:30 0054            bnt code_06a8 
  0654:35 01              ldi 1 
  0656:a3 01              sal local1 
  0658:89 9c              lsg  
  065a:3c                 dup 
  065b:35 00              ldi 0 
  065d:1a                 eq? 
  065e:30 000d            bnt code_066e 
  0661:38 008e          pushi 8e // $8e setScript
  0664:78               push1 
  0665:72 156c          lofsa $156c // sDreamAthens
  0668:36                push 
  0669:54 06             self 6 

  066b:32 0039            jmp code_06a7 

        code_066e
  066e:3c                 dup 
  066f:35 01              ldi 1 
  0671:1a                 eq? 
  0672:30 000d            bnt code_0682 
  0675:38 008e          pushi 8e // $8e setScript
  0678:78               push1 
  0679:72 28d2          lofsa $28d2 // sDreamVenice
  067c:36                push 
  067d:54 06             self 6 

  067f:32 0025            jmp code_06a7 

        code_0682
  0682:3c                 dup 
  0683:35 02              ldi 2 
  0685:1a                 eq? 
  0686:30 000d            bnt code_0696 
  0689:38 008e          pushi 8e // $8e setScript
  068c:78               push1 
  068d:72 2088          lofsa $2088 // sDreamTaj
  0690:36                push 
  0691:54 06             self 6 

  0693:32 0011            jmp code_06a7 

        code_0696
  0696:3c                 dup 
  0697:35 03              ldi 3 
  0699:1a                 eq? 
  069a:30 000a            bnt code_06a7 
  069d:38 008e          pushi 8e // $8e setScript
  06a0:78               push1 
  06a1:72 2b16          lofsa $2b16 // sDreamCasa
  06a4:36                push 
  06a5:54 06             self 6 


        code_06a7
  06a7:3a                toss 

        code_06a8
  06a8:3a                toss 
  06a9:48                 ret 
    )

)

// 0756
(instance larry of Actor
    (properties
        x $86
        y $46
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2fa1
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $141
        loop $1
        cel $0
        priority $4
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_06e4
  06e4:8f 01              lsp param1 
  06e6:3c                 dup 
  06e7:35 02              ldi 2 
  06e9:1a                 eq? 
  06ea:30 001d            bnt code_070a 
  06ed:7a               push2 
  06ee:38 0140          pushi 140 // $140 mapKeyToDir
  06f1:39 04            pushi 4 // $4 x
  06f3:45 0e 04         callb procedure_000e 4 //  

  06f6:39 05            pushi 5 // $5 view
  06f8:38 0140          pushi 140 // $140 mapKeyToDir
  06fb:39 05            pushi 5 // $5 view
  06fd:39 43            pushi 43 // $43 at
  06ff:39 ff            pushi ff // $ff syncNum
  0701:38 00b9          pushi b9 // $b9 bottom
  0704:45 0e 0a         callb procedure_000e a //  

  0707:32 0044            jmp code_074e 

        code_070a
  070a:3c                 dup 
  070b:35 05              ldi 5 
  070d:1a                 eq? 
  070e:30 000c            bnt code_071d 
  0711:7a               push2 
  0712:38 0140          pushi 140 // $140 mapKeyToDir
  0715:39 06            pushi 6 // $6 loop
  0717:45 0e 04         callb procedure_000e 4 //  

  071a:32 0031            jmp code_074e 

        code_071d
  071d:3c                 dup 
  071e:35 03              ldi 3 
  0720:1a                 eq? 
  0721:30 001d            bnt code_0741 
  0724:7a               push2 
  0725:38 0140          pushi 140 // $140 mapKeyToDir
  0728:39 07            pushi 7 // $7 cel
  072a:45 0e 04         callb procedure_000e 4 //  

  072d:39 05            pushi 5 // $5 view
  072f:38 0140          pushi 140 // $140 mapKeyToDir
  0732:39 08            pushi 8 // $8 underBits
  0734:39 43            pushi 43 // $43 at
  0736:39 ff            pushi ff // $ff syncNum
  0738:38 00b9          pushi b9 // $b9 bottom
  073b:45 0e 0a         callb procedure_000e a //  

  073e:32 000d            jmp code_074e 

        code_0741
  0741:38 010c          pushi 10c // $10c doVerb
  0744:7a               push2 
  0745:8f 01              lsp param1 
  0747:8f 02              lsp param2 
  0749:59 03            &rest 3 
  074b:57 30 08         super Actor 8 


        code_074e
  074e:3a                toss 
  074f:48                 ret 
    )

)

// 083c
(instance tray of Prop
    (properties
        x $ca
        y $cc
        z $64
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2fb1
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $145
        loop $4
        cel $0
        priority $4
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_07eb
  07eb:8f 01              lsp param1 
  07ed:3c                 dup 
  07ee:35 02              ldi 2 
  07f0:1a                 eq? 
  07f1:30 000c            bnt code_0800 
  07f4:7a               push2 
  07f5:38 0140          pushi 140 // $140 mapKeyToDir
  07f8:39 09            pushi 9 // $9 nsTop
  07fa:45 0e 04         callb procedure_000e 4 //  

  07fd:32 0033            jmp code_0833 

        code_0800
  0800:3c                 dup 
  0801:35 05              ldi 5 
  0803:1a                 eq? 
  0804:30 000c            bnt code_0813 
  0807:7a               push2 
  0808:38 0140          pushi 140 // $140 mapKeyToDir
  080b:39 0a            pushi a // $a nsLeft
  080d:45 0e 04         callb procedure_000e 4 //  

  0810:32 0020            jmp code_0833 

        code_0813
  0813:3c                 dup 
  0814:35 03              ldi 3 
  0816:1a                 eq? 
  0817:30 000c            bnt code_0826 
  081a:7a               push2 
  081b:38 0140          pushi 140 // $140 mapKeyToDir
  081e:39 0b            pushi b // $b nsBottom
  0820:45 0e 04         callb procedure_000e 4 //  

  0823:32 000d            jmp code_0833 

        code_0826
  0826:38 010c          pushi 10c // $10c doVerb
  0829:7a               push2 
  082a:8f 01              lsp param1 
  082c:8f 02              lsp param2 
  082e:59 03            &rest 3 
  0830:57 2f 08         super Prop 8 


        code_0833
  0833:3a                toss 
  0834:48                 ret 
  0835:00                bnot 
    )

    (method (onMe) // method_07d6
  07d6:39 05            pushi 5 // $5 view
  07d8:38 00a4          pushi a4 // $a4 check
  07db:39 50            pushi 50 // $50 title
  07dd:38 00c7          pushi c7 // $c7 advanceCurIcon
  07e0:39 60            pushi 60 // $60 frame
  07e2:8f 01              lsp param1 
  07e4:46 03e7 0004 0a  calle 3e7 procedure_0004 a //  

  07ea:48                 ret 
    )

)

// 08aa
(instance arm of Prop
    (properties
        x $7e
        y $4f
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2fbf
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2fc8
        yStep $2
        view $141
        loop $2
        cel $0
        priority $5
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0910
(instance arm2 of Prop
    (properties
        x $ad
        y $54
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2fbf
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $2fc8
        yStep $2
        view $141
        loop $2
        cel $1
        priority $5
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 09c6
(instance body of Prop
    (properties
        x $a5
        y $7d
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2fef
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $141
        loop $0
        cel $0
        priority $2
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_0974
  0974:8f 01              lsp param1 
  0976:3c                 dup 
  0977:35 02              ldi 2 
  0979:1a                 eq? 
  097a:30 001d            bnt code_099a 
  097d:7a               push2 
  097e:38 0140          pushi 140 // $140 mapKeyToDir
  0981:39 0c            pushi c // $c nsRight
  0983:45 0e 04         callb procedure_000e 4 //  

  0986:39 05            pushi 5 // $5 view
  0988:38 0140          pushi 140 // $140 mapKeyToDir
  098b:39 0d            pushi d // $d lsTop
  098d:39 43            pushi 43 // $43 at
  098f:39 ff            pushi ff // $ff syncNum
  0991:38 00b9          pushi b9 // $b9 bottom
  0994:45 0e 0a         callb procedure_000e a //  

  0997:32 0024            jmp code_09be 

        code_099a
  099a:3c                 dup 
  099b:35 05              ldi 5 
  099d:1a                 eq? 
  099e:30 0010            bnt code_09b1 
  09a1:38 010c          pushi 10c // $10c doVerb
  09a4:7a               push2 
  09a5:8f 01              lsp param1 
  09a7:8f 02              lsp param2 
  09a9:72 075c          lofsa $075c // larry
  09ac:4a 08             send 8 

  09ae:32 000d            jmp code_09be 

        code_09b1
  09b1:38 010c          pushi 10c // $10c doVerb
  09b4:7a               push2 
  09b5:8f 01              lsp param1 
  09b7:8f 02              lsp param2 
  09b9:59 03            &rest 3 
  09bb:57 2f 08         super Prop 8 


        code_09be
  09be:3a                toss 
  09bf:48                 ret 
    )

)

// 0abe
(instance cloud of Actor
    (properties
        x $f4
        y $2c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $2ffe
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0a80
  0a80:8f 01              lsp param1 
  0a82:3c                 dup 
  0a83:35 02              ldi 2 
  0a85:1a                 eq? 
  0a86:30 000c            bnt code_0a95 
  0a89:7a               push2 
  0a8a:38 0140          pushi 140 // $140 mapKeyToDir
  0a8d:39 0e            pushi e // $e lsLeft
  0a8f:45 0e 04         callb procedure_000e 4 //  

  0a92:32 0020            jmp code_0ab5 

        code_0a95
  0a95:3c                 dup 
  0a96:35 03              ldi 3 
  0a98:1a                 eq? 
  0a99:30 000c            bnt code_0aa8 
  0a9c:7a               push2 
  0a9d:38 0140          pushi 140 // $140 mapKeyToDir
  0aa0:39 0f            pushi f // $f lsBottom
  0aa2:45 0e 04         callb procedure_000e 4 //  

  0aa5:32 000d            jmp code_0ab5 

        code_0aa8
  0aa8:38 010c          pushi 10c // $10c doVerb
  0aab:7a               push2 
  0aac:8f 01              lsp param1 
  0aae:8f 02              lsp param2 
  0ab0:59 03            &rest 3 
  0ab2:57 30 08         super Actor 8 


        code_0ab5
  0ab5:3a                toss 
  0ab6:48                 ret 
  0ab7:00                bnot 
    )

    (method (cue) // method_0a2e
  0a2e:c3 00              +al local0 
  0a30:36                push 
  0a31:3c                 dup 
  0a32:35 01              ldi 1 
  0a34:1a                 eq? 
  0a35:30 0012            bnt code_0a4a 
  0a38:39 03            pushi 3 // $3 y
  0a3a:7a               push2 
  0a3b:7a               push2 
  0a3c:39 05            pushi 5 // $5 view
  0a3e:43 3c 04         callk Random 4 

  0a41:36                push 
  0a42:76               push0 
  0a43:7c            pushSelf 
  0a44:45 11 06         callb procedure_0011 6 //  

  0a47:32 0034            jmp code_0a7e 

        code_0a4a
  0a4a:3c                 dup 
  0a4b:35 02              ldi 2 
  0a4d:1a                 eq? 
  0a4e:30 002d            bnt code_0a7e 
  0a51:35 00              ldi 0 
  0a53:a3 00              sal local0 
  0a55:38 011c          pushi 11c // $11c posn
  0a58:7a               push2 
  0a59:38 00f4          pushi f4 // $f4 nearestDist
  0a5c:7a               push2 
  0a5d:39 1e            pushi 1e // $1e mode
  0a5f:39 2c            pushi 2c // $2c nodePtr
  0a61:43 3c 04         callk Random 4 

  0a64:36                push 
  0a65:38 011b          pushi 11b // $11b setMotion
  0a68:39 04            pushi 4 // $4 x
  0a6a:51 1e            class MoveTo 
  0a6c:36                push 
  0a6d:39 3f            pushi 3f // $3f priority
  0a6f:39 03            pushi 3 // $3 y
  0a71:76               push0 
  0a72:72 0ac4          lofsa $0ac4 // cloud
  0a75:4a 04             send 4 

  0a77:36                push 
  0a78:7c            pushSelf 
  0a79:72 0ac4          lofsa $0ac4 // cloud
  0a7c:4a 14             send 14 


        code_0a7e
  0a7e:3a                toss 
  0a7f:48                 ret 
    )

)

// 0b44
(instance patti of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0baa
(instance dreamProp1 of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0c10
(instance dreamProp2 of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0c76
(instance dreamProp3 of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0cdc
(instance dreamProp4 of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0d42
(instance dreamProp5 of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0ed4
(instance conf of Prop
    (properties
        x $b5
        y $4a
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $154
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (cue) // method_0da6
  0da6:38 008d          pushi 8d // $8d cue
  0da9:76               push0 
  0daa:57 2f 04         super Prop 4 

  0dad:7a               push2 
  0dae:78               push1 
  0daf:39 0a            pushi a // $a nsLeft
  0db1:43 3c 04         callk Random 4 

  0db4:36                push 
  0db5:3c                 dup 
  0db6:35 01              ldi 1 
  0db8:1a                 eq? 
  0db9:30 0024            bnt code_0de0 
  0dbc:38 00c2          pushi c2 // $c2 show
  0dbf:76               push0 
  0dc0:38 00a2          pushi a2 // $a2 setLoop
  0dc3:78               push1 
  0dc4:76               push0 
  0dc5:38 011c          pushi 11c // $11c posn
  0dc8:7a               push2 
  0dc9:38 00b5          pushi b5 // $b5 open
  0dcc:39 4a            pushi 4a // $4a pragmaFail
  0dce:38 0120          pushi 120 // $120 setCel
  0dd1:78               push1 
  0dd2:76               push0 
  0dd3:38 0096          pushi 96 // $96 setCycle
  0dd6:7a               push2 
  0dd7:51 1a            class End 
  0dd9:36                push 
  0dda:7c            pushSelf 
  0ddb:54 20             self 20 

  0ddd:32 00eb            jmp code_0ecb 

        code_0de0
  0de0:3c                 dup 
  0de1:35 02              ldi 2 
  0de3:1a                 eq? 
  0de4:30 0024            bnt code_0e0b 
  0de7:38 00c2          pushi c2 // $c2 show
  0dea:76               push0 
  0deb:38 00a2          pushi a2 // $a2 setLoop
  0dee:78               push1 
  0def:76               push0 
  0df0:38 011c          pushi 11c // $11c posn
  0df3:7a               push2 
  0df4:38 00db          pushi db // $db cycleSpeed
  0df7:39 4d            pushi 4d // $4d value
  0df9:38 0120          pushi 120 // $120 setCel
  0dfc:78               push1 
  0dfd:76               push0 
  0dfe:38 0096          pushi 96 // $96 setCycle
  0e01:7a               push2 
  0e02:51 1a            class End 
  0e04:36                push 
  0e05:7c            pushSelf 
  0e06:54 20             self 20 

  0e08:32 00c0            jmp code_0ecb 

        code_0e0b
  0e0b:3c                 dup 
  0e0c:35 03              ldi 3 
  0e0e:1a                 eq? 
  0e0f:30 0024            bnt code_0e36 
  0e12:38 00c2          pushi c2 // $c2 show
  0e15:76               push0 
  0e16:38 00a2          pushi a2 // $a2 setLoop
  0e19:78               push1 
  0e1a:76               push0 
  0e1b:38 011c          pushi 11c // $11c posn
  0e1e:7a               push2 
  0e1f:38 00f6          pushi f6 // $f6 nonBumps
  0e22:39 49            pushi 49 // $49 semanticFail
  0e24:38 0120          pushi 120 // $120 setCel
  0e27:78               push1 
  0e28:76               push0 
  0e29:38 0096          pushi 96 // $96 setCycle
  0e2c:7a               push2 
  0e2d:51 1a            class End 
  0e2f:36                push 
  0e30:7c            pushSelf 
  0e31:54 20             self 20 

  0e33:32 0095            jmp code_0ecb 

        code_0e36
  0e36:3c                 dup 
  0e37:35 04              ldi 4 
  0e39:1a                 eq? 
  0e3a:30 0024            bnt code_0e61 
  0e3d:38 00c2          pushi c2 // $c2 show
  0e40:76               push0 
  0e41:38 00a2          pushi a2 // $a2 setLoop
  0e44:78               push1 
  0e45:78               push1 
  0e46:38 011c          pushi 11c // $11c posn
  0e49:7a               push2 
  0e4a:38 00a9          pushi a9 // $a9 track
  0e4d:39 4a            pushi 4a // $4a pragmaFail
  0e4f:38 0120          pushi 120 // $120 setCel
  0e52:78               push1 
  0e53:76               push0 
  0e54:38 0096          pushi 96 // $96 setCycle
  0e57:7a               push2 
  0e58:51 1a            class End 
  0e5a:36                push 
  0e5b:7c            pushSelf 
  0e5c:54 20             self 20 

  0e5e:32 006a            jmp code_0ecb 

        code_0e61
  0e61:3c                 dup 
  0e62:35 05              ldi 5 
  0e64:1a                 eq? 
  0e65:30 0024            bnt code_0e8c 
  0e68:38 00c2          pushi c2 // $c2 show
  0e6b:76               push0 
  0e6c:38 00a2          pushi a2 // $a2 setLoop
  0e6f:78               push1 
  0e70:78               push1 
  0e71:38 011c          pushi 11c // $11c posn
  0e74:7a               push2 
  0e75:38 00d4          pushi d4 // $d4 activateHeight
  0e78:39 4e            pushi 4e // $4e save
  0e7a:38 0120          pushi 120 // $120 setCel
  0e7d:78               push1 
  0e7e:76               push0 
  0e7f:38 0096          pushi 96 // $96 setCycle
  0e82:7a               push2 
  0e83:51 1a            class End 
  0e85:36                push 
  0e86:7c            pushSelf 
  0e87:54 20             self 20 

  0e89:32 003f            jmp code_0ecb 

        code_0e8c
  0e8c:3c                 dup 
  0e8d:35 06              ldi 6 
  0e8f:1a                 eq? 
  0e90:30 0024            bnt code_0eb7 
  0e93:38 00c2          pushi c2 // $c2 show
  0e96:76               push0 
  0e97:38 00a2          pushi a2 // $a2 setLoop
  0e9a:78               push1 
  0e9b:78               push1 
  0e9c:38 011c          pushi 11c // $11c posn
  0e9f:7a               push2 
  0ea0:38 00e3          pushi e3 // $e3 onTarget
  0ea3:39 41            pushi 41 // $41 replay
  0ea5:38 0120          pushi 120 // $120 setCel
  0ea8:78               push1 
  0ea9:76               push0 
  0eaa:38 0096          pushi 96 // $96 setCycle
  0ead:7a               push2 
  0eae:51 1a            class End 
  0eb0:36                push 
  0eb1:7c            pushSelf 
  0eb2:54 20             self 20 

  0eb4:32 0014            jmp code_0ecb 

        code_0eb7
  0eb7:39 69            pushi 69 // $69 hide
  0eb9:76               push0 
  0eba:54 04             self 4 

  0ebc:39 03            pushi 3 // $3 y
  0ebe:7a               push2 
  0ebf:7a               push2 
  0ec0:39 06            pushi 6 // $6 loop
  0ec2:43 3c 04         callk Random 4 

  0ec5:36                push 
  0ec6:78               push1 
  0ec7:7c            pushSelf 
  0ec8:45 11 06         callb procedure_0011 6 //  


        code_0ecb
  0ecb:3a                toss 
  0ecc:48                 ret 
  0ecd:00                bnot 
    )

)

// 0fac
(instance sSqeezeNuts of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0f3c
  0f3c:87 01              lap param1 
  0f3e:65 0a             aTop state 
  0f40:36                push 
  0f41:3c                 dup 
  0f42:35 00              ldi 0 
  0f44:1a                 eq? 
  0f45:30 002e            bnt code_0f76 
  0f48:39 2b            pushi 2b // $2b number
  0f4a:78               push1 
  0f4b:38 0142          pushi 142 // $142 verbMessager
  0f4e:39 06            pushi 6 // $6 loop
  0f50:78               push1 
  0f51:78               push1 
  0f52:39 2a            pushi 2a // $2a play
  0f54:78               push1 
  0f55:7c            pushSelf 
  0f56:72 2d30          lofsa $2d30 // theMusic3
  0f59:4a 12             send 12 

  0f5b:38 0096          pushi 96 // $96 setCycle
  0f5e:78               push1 
  0f5f:51 1a            class End 
  0f61:36                push 
  0f62:72 08b0          lofsa $08b0 // arm
  0f65:4a 06             send 6 

  0f67:38 0096          pushi 96 // $96 setCycle
  0f6a:78               push1 
  0f6b:51 1a            class End 
  0f6d:36                push 
  0f6e:72 0916          lofsa $0916 // arm2
  0f71:4a 06             send 6 

  0f73:32 002e            jmp code_0fa4 

        code_0f76
  0f76:3c                 dup 
  0f77:35 01              ldi 1 
  0f79:1a                 eq? 
  0f7a:30 001b            bnt code_0f98 
  0f7d:38 0120          pushi 120 // $120 setCel
  0f80:78               push1 
  0f81:76               push0 
  0f82:72 08b0          lofsa $08b0 // arm
  0f85:4a 06             send 6 

  0f87:38 0120          pushi 120 // $120 setCel
  0f8a:78               push1 
  0f8b:76               push0 
  0f8c:72 0916          lofsa $0916 // arm2
  0f8f:4a 06             send 6 

  0f91:35 1e              ldi 1e 
  0f93:65 16             aTop ticks 
  0f95:32 000c            jmp code_0fa4 

        code_0f98
  0f98:3c                 dup 
  0f99:35 02              ldi 2 
  0f9b:1a                 eq? 
  0f9c:30 0005            bnt code_0fa4 
  0f9f:39 6b            pushi 6b // $6b init
  0fa1:76               push0 
  0fa2:54 04             self 4 


        code_0fa4
  0fa4:3a                toss 
  0fa5:48                 ret 
    )

)

// 1042
(instance magazine of View
    (properties
        x $d0
        y $72
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $305c
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $140
        loop $0
        cel $0
        priority $1
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
    (method (doVerb) // method_0fe0
  0fe0:8f 01              lsp param1 
  0fe2:3c                 dup 
  0fe3:35 02              ldi 2 
  0fe5:1a                 eq? 
  0fe6:30 000c            bnt code_0ff5 
  0fe9:7a               push2 
  0fea:38 0140          pushi 140 // $140 mapKeyToDir
  0fed:39 10            pushi 10 // $10 lsRight
  0fef:45 0e 04         callb procedure_000e 4 //  

  0ff2:32 0045            jmp code_103a 

        code_0ff5
  0ff5:3c                 dup 
  0ff6:35 03              ldi 3 
  0ff8:1a                 eq? 
  0ff9:30 0031            bnt code_102d 
  0ffc:38 0147          pushi 147 // $147 get
  0fff:78               push1 
  1000:39 09            pushi 9 // $9 nsTop
  1002:81 00              lag  
  1004:4a 06             send 6 

  1006:39 6c            pushi 6c // $6c dispose
  1008:76               push0 
  1009:72 2918          lofsa $2918 // theMagazine
  100c:4a 04             send 4 

  100e:78               push1 
  100f:39 08            pushi 8 // $8 underBits
  1011:45 0a 02         callb procedure_000a 2 //  

  1014:7a               push2 
  1015:38 0140          pushi 140 // $140 mapKeyToDir
  1018:39 11            pushi 11 // $11 signal
  101a:45 0e 04         callb procedure_000e 4 //  

  101d:39 6c            pushi 6c // $6c dispose
  101f:76               push0 
  1020:72 1048          lofsa $1048 // magazine
  1023:4a 04             send 4 

  1025:39 6c            pushi 6c // $6c dispose
  1027:76               push0 
  1028:54 04             self 4 

  102a:32 000d            jmp code_103a 

        code_102d
  102d:38 010c          pushi 10c // $10c doVerb
  1030:7a               push2 
  1031:8f 01              lsp param1 
  1033:8f 02              lsp param2 
  1035:59 03            &rest 3 
  1037:57 2e 08         super View 8 


        code_103a
  103a:3a                toss 
  103b:48                 ret 
    )

)

// 10c2
(instance MyForward of Fwd
    (properties
        client $0
        caller $0
        cycleDir $1
        cycleCnt $0
        completed $0
    )
    (method (cycleDone) // method_10a0
  10a0:38 00db          pushi db // $db cycleSpeed
  10a3:78               push1 
  10a4:7a               push2 
  10a5:39 06            pushi 6 // $6 loop
  10a7:39 0a            pushi a // $a nsLeft
  10a9:43 3c 04         callk Random 4 

  10ac:36                push 
  10ad:63 08             pToa client 
  10af:4a 06             send 6 

  10b1:38 00d9          pushi d9 // $d9 cycleDone
  10b4:76               push0 
  10b5:59 01            &rest 1 
  10b7:57 17 04         super Fwd 4 

  10ba:48                 ret 
  10bb:00                bnot 
    )

)

// 1566
(instance sDreamAthens of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_1107
  1107:39 3c            pushi 3c // $3c doit
  1109:76               push0 
  110a:57 06 04         super Script 4 

  110d:63 0a             pToa state 
  110f:18                 not 
  1110:30 003d            bnt code_1150 
  1113:38 009a          pushi 9a // $9a prevSignal
  1116:76               push0 
  1117:81 66              lag  
  1119:4a 04             send 4 

  111b:36                push 
  111c:3c                 dup 
  111d:35 0a              ldi a 
  111f:1a                 eq? 
  1120:30 0016            bnt code_1139 
  1123:38 009a          pushi 9a // $9a prevSignal
  1126:78               push1 
  1127:76               push0 
  1128:81 66              lag  
  112a:4a 06             send 6 

  112c:38 0096          pushi 96 // $96 setCycle
  112f:78               push1 
  1130:76               push0 
  1131:72 0b4a          lofsa $0b4a // patti
  1134:4a 06             send 6 

  1136:32 0016            jmp code_114f 

        code_1139
  1139:3c                 dup 
  113a:35 ff              ldi ff 
  113c:1a                 eq? 
  113d:30 000f            bnt code_114f 
  1140:38 009a          pushi 9a // $9a prevSignal
  1143:78               push1 
  1144:76               push0 
  1145:81 66              lag  
  1147:4a 06             send 6 

  1149:38 008d          pushi 8d // $8d cue
  114c:76               push0 
  114d:54 04             self 4 


        code_114f
  114f:3a                toss 

        code_1150
  1150:48                 ret 
    )

    (method (changeState) // method_1151
  1151:3f 02             link 2 // (var $2)
  1153:87 01              lap param1 
  1155:65 0a             aTop state 
  1157:36                push 
  1158:3c                 dup 
  1159:35 00              ldi 0 
  115b:1a                 eq? 
  115c:30 0098            bnt code_11f7 
  115f:78               push1 
  1160:39 34            pushi 34 // $34 b-xAxis
  1162:45 06 02         callb procedure_0006 2 //  

  1165:18                 not 
  1166:30 0016            bnt code_117f 
  1169:38 00d5          pushi d5 // $d5 has
  116c:78               push1 
  116d:39 09            pushi 9 // $9 nsTop
  116f:81 00              lag  
  1171:4a 06             send 6 

  1173:18                 not 
  1174:30 0008            bnt code_117f 
  1177:39 6c            pushi 6c // $6c dispose
  1179:76               push0 
  117a:72 1048          lofsa $1048 // magazine
  117d:4a 04             send 4 


        code_117f
  117f:39 6c            pushi 6c // $6c dispose
  1181:76               push0 
  1182:72 0bb0          lofsa $0bb0 // dreamProp1
  1185:4a 04             send 4 

  1187:39 6c            pushi 6c // $6c dispose
  1189:76               push0 
  118a:72 09cc          lofsa $09cc // body
  118d:4a 04             send 4 

  118f:39 6c            pushi 6c // $6c dispose
  1191:76               push0 
  1192:72 08b0          lofsa $08b0 // arm
  1195:4a 04             send 4 

  1197:39 6c            pushi 6c // $6c dispose
  1199:76               push0 
  119a:72 0842          lofsa $0842 // tray
  119d:4a 04             send 4 

  119f:39 6c            pushi 6c // $6c dispose
  11a1:76               push0 
  11a2:72 0ac4          lofsa $0ac4 // cloud
  11a5:4a 04             send 4 

  11a7:39 6c            pushi 6c // $6c dispose
  11a9:76               push0 
  11aa:72 0916          lofsa $0916 // arm2
  11ad:4a 04             send 4 

  11af:39 6b            pushi 6b // $6b init
  11b1:76               push0 
  11b2:39 05            pushi 5 // $5 view
  11b4:78               push1 
  11b5:38 014a          pushi 14a // $14a lastY
  11b8:38 011c          pushi 11c // $11c posn
  11bb:7a               push2 
  11bc:38 00ac          pushi ac // $ac moveTo
  11bf:39 7d            pushi 7d // $7d addToFront
  11c1:38 00db          pushi db // $db cycleSpeed
  11c4:78               push1 
  11c5:39 0a            pushi a // $a nsLeft
  11c7:38 0096          pushi 96 // $96 setCycle
  11ca:78               push1 
  11cb:51 5e            class RandCycle 
  11cd:36                push 
  11ce:72 0b4a          lofsa $0b4a // patti
  11d1:4a 1e             send 1e 

  11d3:39 08            pushi 8 // $8 underBits
  11d5:39 0b            pushi b // $b nsBottom
  11d7:76               push0 
  11d8:76               push0 
  11d9:38 00c0          pushi c0 // $c0 highlightColor
  11dc:38 0140          pushi 140 // $140 mapKeyToDir
  11df:7a               push2 
  11e0:76               push0 
  11e1:76               push0 
  11e2:43 6c 10         callk Graph 10 

  11e5:35 28              ldi 28 
  11e7:a3 02              sal local2 
  11e9:38 018d          pushi 18d // $18d overlay
  11ec:78               push1 
  11ed:38 014a          pushi 14a // $14a lastY
  11f0:81 02              lag  
  11f2:4a 06             send 6 

  11f4:32 0367            jmp code_155e 

        code_11f7
  11f7:3c                 dup 
  11f8:35 01              ldi 1 
  11fa:1a                 eq? 
  11fb:30 0077            bnt code_1275 
  11fe:35 00              ldi 0 
  1200:a3 01              sal local1 
  1202:38 018c          pushi 18c // $18c drawPic
  1205:78               push1 
  1206:38 0183          pushi 183 // $183 picture
  1209:76               push0 
  120a:81 02              lag  
  120c:4a 04             send 4 

  120e:36                push 
  120f:81 02              lag  
  1211:4a 06             send 6 

  1213:39 08            pushi 8 // $8 underBits
  1215:39 0b            pushi b // $b nsBottom
  1217:76               push0 
  1218:76               push0 
  1219:38 00c0          pushi c0 // $c0 highlightColor
  121c:38 0140          pushi 140 // $140 mapKeyToDir
  121f:7a               push2 
  1220:76               push0 
  1221:76               push0 
  1222:43 6c 10         callk Graph 10 

  1225:39 6b            pushi 6b // $6b init
  1227:76               push0 
  1228:38 0122          pushi 122 // $122 addToPic
  122b:76               push0 
  122c:39 6c            pushi 6c // $6c dispose
  122e:76               push0 
  122f:72 075c          lofsa $075c // larry
  1232:4a 0c             send c 

  1234:35 28              ldi 28 
  1236:a3 02              sal local2 
  1238:38 018d          pushi 18d // $18d overlay
  123b:78               push1 
  123c:38 014f          pushi 14f // $14f seek
  123f:81 02              lag  
  1241:4a 06             send 6 

  1243:39 05            pushi 5 // $5 view
  1245:78               push1 
  1246:38 014f          pushi 14f // $14f seek
  1249:38 011c          pushi 11c // $11c posn
  124c:7a               push2 
  124d:38 00d5          pushi d5 // $d5 has
  1250:39 58            pushi 58 // $58 subtitleLang
  1252:38 0096          pushi 96 // $96 setCycle
  1255:78               push1 
  1256:76               push0 
  1257:72 0b4a          lofsa $0b4a // patti
  125a:4a 14             send 14 

  125c:39 2b            pushi 2b // $2b number
  125e:78               push1 
  125f:38 014b          pushi 14b // $14b readString
  1262:39 06            pushi 6 // $6 loop
  1264:78               push1 
  1265:39 ff            pushi ff // $ff syncNum
  1267:39 2a            pushi 2a // $2a play
  1269:76               push0 
  126a:81 67              lag  
  126c:4a 10             send 10 

  126e:35 0a              ldi a 
  1270:65 16             aTop ticks 
  1272:32 02e9            jmp code_155e 

        code_1275
  1275:3c                 dup 
  1276:35 02              ldi 2 
  1278:1a                 eq? 
  1279:30 000b            bnt code_1287 
  127c:35 01              ldi 1 
  127e:a3 01              sal local1 
  1280:35 08              ldi 8 
  1282:65 12             aTop seconds 
  1284:32 02d7            jmp code_155e 

        code_1287
  1287:3c                 dup 
  1288:35 03              ldi 3 
  128a:1a                 eq? 
  128b:30 0084            bnt code_1312 
  128e:35 00              ldi 0 
  1290:a3 01              sal local1 
  1292:38 018c          pushi 18c // $18c drawPic
  1295:78               push1 
  1296:38 0183          pushi 183 // $183 picture
  1299:76               push0 
  129a:81 02              lag  
  129c:4a 04             send 4 

  129e:36                push 
  129f:81 02              lag  
  12a1:4a 06             send 6 

  12a3:39 08            pushi 8 // $8 underBits
  12a5:39 0b            pushi b // $b nsBottom
  12a7:76               push0 
  12a8:76               push0 
  12a9:38 00c0          pushi c0 // $c0 highlightColor
  12ac:38 0140          pushi 140 // $140 mapKeyToDir
  12af:7a               push2 
  12b0:76               push0 
  12b1:76               push0 
  12b2:43 6c 10         callk Graph 10 

  12b5:39 6b            pushi 6b // $6b init
  12b7:76               push0 
  12b8:38 0122          pushi 122 // $122 addToPic
  12bb:76               push0 
  12bc:39 6c            pushi 6c // $6c dispose
  12be:76               push0 
  12bf:72 075c          lofsa $075c // larry
  12c2:4a 0c             send c 

  12c4:35 38              ldi 38 
  12c6:a3 02              sal local2 
  12c8:38 018d          pushi 18d // $18d overlay
  12cb:78               push1 
  12cc:38 0154          pushi 154 // $154 eraseOnly
  12cf:81 02              lag  
  12d1:4a 06             send 6 

  12d3:39 05            pushi 5 // $5 view
  12d5:78               push1 
  12d6:38 0155          pushi 155 // $155 setMapSet
  12d9:38 00a2          pushi a2 // $a2 setLoop
  12dc:78               push1 
  12dd:76               push0 
  12de:38 011c          pushi 11c // $11c posn
  12e1:7a               push2 
  12e2:38 00c5          pushi c5 // $c5 mask
  12e5:39 59            pushi 59 // $59 size
  12e7:38 0120          pushi 120 // $120 setCel
  12ea:78               push1 
  12eb:76               push0 
  12ec:38 0096          pushi 96 // $96 setCycle
  12ef:78               push1 
  12f0:51 1a            class End 
  12f2:36                push 
  12f3:72 0b4a          lofsa $0b4a // patti
  12f6:4a 20             send 20 

  12f8:39 6b            pushi 6b // $6b init
  12fa:76               push0 
  12fb:38 0096          pushi 96 // $96 setCycle
  12fe:7a               push2 
  12ff:51 1a            class End 
  1301:36                push 
  1302:72 0eda          lofsa $0eda // conf
  1305:36                push 
  1306:72 0eda          lofsa $0eda // conf
  1309:4a 0c             send c 

  130b:35 0a              ldi a 
  130d:65 16             aTop ticks 
  130f:32 024c            jmp code_155e 

        code_1312
  1312:3c                 dup 
  1313:35 04              ldi 4 
  1315:1a                 eq? 
  1316:30 002d            bnt code_1346 
  1319:35 01              ldi 1 
  131b:a3 01              sal local1 
  131d:39 6b            pushi 6b // $6b init
  131f:76               push0 
  1320:39 05            pushi 5 // $5 view
  1322:78               push1 
  1323:38 0155          pushi 155 // $155 setMapSet
  1326:38 00a2          pushi a2 // $a2 setLoop
  1329:78               push1 
  132a:39 03            pushi 3 // $3 y
  132c:38 0120          pushi 120 // $120 setCel
  132f:78               push1 
  1330:76               push0 
  1331:38 011c          pushi 11c // $11c posn
  1334:7a               push2 
  1335:38 00fc          pushi fc // $fc syncTime
  1338:39 43            pushi 43 // $43 at
  133a:72 0c16          lofsa $0c16 // dreamProp2
  133d:4a 1e             send 1e 

  133f:35 02              ldi 2 
  1341:65 16             aTop ticks 
  1343:32 0218            jmp code_155e 

        code_1346
  1346:3c                 dup 
  1347:35 05              ldi 5 
  1349:1a                 eq? 
  134a:30 001a            bnt code_1367 
  134d:38 0120          pushi 120 // $120 setCel
  1350:78               push1 
  1351:78               push1 
  1352:38 011c          pushi 11c // $11c posn
  1355:7a               push2 
  1356:38 00fc          pushi fc // $fc syncTime
  1359:39 43            pushi 43 // $43 at
  135b:72 0c16          lofsa $0c16 // dreamProp2
  135e:4a 0e             send e 

  1360:35 02              ldi 2 
  1362:65 16             aTop ticks 
  1364:32 01f7            jmp code_155e 

        code_1367
  1367:3c                 dup 
  1368:35 06              ldi 6 
  136a:1a                 eq? 
  136b:30 001a            bnt code_1388 
  136e:38 0120          pushi 120 // $120 setCel
  1371:78               push1 
  1372:7a               push2 
  1373:38 011c          pushi 11c // $11c posn
  1376:7a               push2 
  1377:38 00e0          pushi e0 // $e0 xLast
  137a:39 57            pushi 57 // $57 printLang
  137c:72 0c16          lofsa $0c16 // dreamProp2
  137f:4a 0e             send e 

  1381:35 02              ldi 2 
  1383:65 16             aTop ticks 
  1385:32 01d6            jmp code_155e 

        code_1388
  1388:3c                 dup 
  1389:35 07              ldi 7 
  138b:1a                 eq? 
  138c:30 0022            bnt code_13b1 
  138f:38 0120          pushi 120 // $120 setCel
  1392:78               push1 
  1393:39 03            pushi 3 // $3 y
  1395:38 011c          pushi 11c // $11c posn
  1398:7a               push2 
  1399:38 00d5          pushi d5 // $d5 has
  139c:39 66            pushi 66 // $66 flags
  139e:38 0122          pushi 122 // $122 addToPic
  13a1:76               push0 
  13a2:39 6c            pushi 6c // $6c dispose
  13a4:76               push0 
  13a5:72 0c16          lofsa $0c16 // dreamProp2
  13a8:4a 16             send 16 

  13aa:35 03              ldi 3 
  13ac:65 12             aTop seconds 
  13ae:32 01ad            jmp code_155e 

        code_13b1
  13b1:3c                 dup 
  13b2:35 08              ldi 8 
  13b4:1a                 eq? 
  13b5:30 0036            bnt code_13ee 
  13b8:38 0096          pushi 96 // $96 setCycle
  13bb:78               push1 
  13bc:51 1b            class Beg 
  13be:36                push 
  13bf:72 0b4a          lofsa $0b4a // patti
  13c2:4a 06             send 6 

  13c4:39 6b            pushi 6b // $6b init
  13c6:76               push0 
  13c7:39 05            pushi 5 // $5 view
  13c9:78               push1 
  13ca:38 0155          pushi 155 // $155 setMapSet
  13cd:38 00a2          pushi a2 // $a2 setLoop
  13d0:78               push1 
  13d1:39 04            pushi 4 // $4 x
  13d3:38 0120          pushi 120 // $120 setCel
  13d6:78               push1 
  13d7:39 03            pushi 3 // $3 y
  13d9:38 011c          pushi 11c // $11c posn
  13dc:7a               push2 
  13dd:38 00a3          pushi a3 // $a3 send
  13e0:39 3f            pushi 3f // $3f priority
  13e2:72 0c7c          lofsa $0c7c // dreamProp3
  13e5:4a 1e             send 1e 

  13e7:35 02              ldi 2 
  13e9:65 16             aTop ticks 
  13eb:32 0170            jmp code_155e 

        code_13ee
  13ee:3c                 dup 
  13ef:35 09              ldi 9 
  13f1:1a                 eq? 
  13f2:30 001b            bnt code_1410 
  13f5:38 0120          pushi 120 // $120 setCel
  13f8:78               push1 
  13f9:39 04            pushi 4 // $4 x
  13fb:38 011c          pushi 11c // $11c posn
  13fe:7a               push2 
  13ff:38 00a9          pushi a9 // $a9 track
  1402:39 46            pushi 46 // $46 width
  1404:72 0c7c          lofsa $0c7c // dreamProp3
  1407:4a 0e             send e 

  1409:35 02              ldi 2 
  140b:65 16             aTop ticks 
  140d:32 014e            jmp code_155e 

        code_1410
  1410:3c                 dup 
  1411:35 0a              ldi a 
  1413:1a                 eq? 
  1414:30 001b            bnt code_1432 
  1417:38 0120          pushi 120 // $120 setCel
  141a:78               push1 
  141b:39 05            pushi 5 // $5 view
  141d:38 011c          pushi 11c // $11c posn
  1420:7a               push2 
  1421:38 00b1          pushi b1 // $b1 advance
  1424:39 4e            pushi 4e // $4e save
  1426:72 0c7c          lofsa $0c7c // dreamProp3
  1429:4a 0e             send e 

  142b:35 02              ldi 2 
  142d:65 16             aTop ticks 
  142f:32 012c            jmp code_155e 

        code_1432
  1432:3c                 dup 
  1433:35 0b              ldi b 
  1435:1a                 eq? 
  1436:30 0022            bnt code_145b 
  1439:38 0120          pushi 120 // $120 setCel
  143c:78               push1 
  143d:39 06            pushi 6 // $6 loop
  143f:38 011c          pushi 11c // $11c posn
  1442:7a               push2 
  1443:38 00b8          pushi b8 // $b8 left
  1446:39 58            pushi 58 // $58 subtitleLang
  1448:38 0122          pushi 122 // $122 addToPic
  144b:76               push0 
  144c:39 6c            pushi 6c // $6c dispose
  144e:76               push0 
  144f:72 0c7c          lofsa $0c7c // dreamProp3
  1452:4a 16             send 16 

  1454:35 03              ldi 3 
  1456:65 12             aTop seconds 
  1458:32 0103            jmp code_155e 

        code_145b
  145b:3c                 dup 
  145c:35 0c              ldi c 
  145e:1a                 eq? 
  145f:30 0040            bnt code_14a2 
  1462:38 00a2          pushi a2 // $a2 setLoop
  1465:78               push1 
  1466:78               push1 
  1467:38 0120          pushi 120 // $120 setCel
  146a:78               push1 
  146b:76               push0 
  146c:38 0096          pushi 96 // $96 setCycle
  146f:78               push1 
  1470:51 1a            class End 
  1472:36                push 
  1473:72 0b4a          lofsa $0b4a // patti
  1476:4a 12             send 12 

  1478:39 6b            pushi 6b // $6b init
  147a:76               push0 
  147b:39 05            pushi 5 // $5 view
  147d:78               push1 
  147e:38 0155          pushi 155 // $155 setMapSet
  1481:38 00a2          pushi a2 // $a2 setLoop
  1484:78               push1 
  1485:39 05            pushi 5 // $5 view
  1487:38 0120          pushi 120 // $120 setCel
  148a:78               push1 
  148b:39 03            pushi 3 // $3 y
  148d:38 011c          pushi 11c // $11c posn
  1490:7a               push2 
  1491:38 00cd          pushi cd // $cd oldMouseY
  1494:39 45            pushi 45 // $45 done
  1496:72 0ce2          lofsa $0ce2 // dreamProp4
  1499:4a 1e             send 1e 

  149b:35 02              ldi 2 
  149d:65 16             aTop ticks 
  149f:32 00bc            jmp code_155e 

        code_14a2
  14a2:3c                 dup 
  14a3:35 0d              ldi d 
  14a5:1a                 eq? 
  14a6:30 001b            bnt code_14c4 
  14a9:38 0120          pushi 120 // $120 setCel
  14ac:78               push1 
  14ad:39 04            pushi 4 // $4 x
  14af:38 011c          pushi 11c // $11c posn
  14b2:7a               push2 
  14b3:38 00d7          pushi d7 // $d7 completed
  14b6:39 4e            pushi 4e // $4e save
  14b8:72 0ce2          lofsa $0ce2 // dreamProp4
  14bb:4a 0e             send e 

  14bd:35 02              ldi 2 
  14bf:65 16             aTop ticks 
  14c1:32 009a            jmp code_155e 

        code_14c4
  14c4:3c                 dup 
  14c5:35 0e              ldi e 
  14c7:1a                 eq? 
  14c8:30 001b            bnt code_14e6 
  14cb:38 0120          pushi 120 // $120 setCel
  14ce:78               push1 
  14cf:39 05            pushi 5 // $5 view
  14d1:38 011c          pushi 11c // $11c posn
  14d4:7a               push2 
  14d5:38 00e6          pushi e6 // $e6 distanceTo
  14d8:39 5b            pushi 5b // $5b palette
  14da:72 0ce2          lofsa $0ce2 // dreamProp4
  14dd:4a 0e             send e 

  14df:35 02              ldi 2 
  14e1:65 16             aTop ticks 
  14e3:32 0078            jmp code_155e 

        code_14e6
  14e6:3c                 dup 
  14e7:35 0f              ldi f 
  14e9:1a                 eq? 
  14ea:30 001b            bnt code_1508 
  14ed:38 0120          pushi 120 // $120 setCel
  14f0:78               push1 
  14f1:39 06            pushi 6 // $6 loop
  14f3:38 011c          pushi 11c // $11c posn
  14f6:7a               push2 
  14f7:38 00ec          pushi ec // $ec pickLoop
  14fa:39 67            pushi 67 // $67 quitGame
  14fc:72 0ce2          lofsa $0ce2 // dreamProp4
  14ff:4a 0e             send e 

  1501:35 02              ldi 2 
  1503:65 12             aTop seconds 
  1505:32 0056            jmp code_155e 

        code_1508
  1508:3c                 dup 
  1509:35 10              ldi 10 
  150b:1a                 eq? 
  150c:30 003d            bnt code_154c 
  150f:38 0096          pushi 96 // $96 setCycle
  1512:78               push1 
  1513:51 1b            class Beg 
  1515:36                push 
  1516:72 0b4a          lofsa $0b4a // patti
  1519:4a 06             send 6 

  151b:39 6c            pushi 6c // $6c dispose
  151d:76               push0 
  151e:72 0eda          lofsa $0eda // conf
  1521:4a 04             send 4 

  1523:35 00              ldi 0 
  1525:a3 01              sal local1 
  1527:38 009f          pushi 9f // $9f fade
  152a:39 04            pushi 4 // $4 x
  152c:76               push0 
  152d:39 0f            pushi f // $f lsBottom
  152f:39 0a            pushi a // $a nsLeft
  1531:78               push1 
  1532:81 66              lag  
  1534:4a 0c             send c 

  1536:38 009f          pushi 9f // $9f fade
  1539:39 04            pushi 4 // $4 x
  153b:76               push0 
  153c:39 0f            pushi f // $f lsBottom
  153e:39 0a            pushi a // $a nsLeft
  1540:78               push1 
  1541:81 67              lag  
  1543:4a 0c             send c 

  1545:35 02              ldi 2 
  1547:65 12             aTop seconds 
  1549:32 0012            jmp code_155e 

        code_154c
  154c:3c                 dup 
  154d:35 11              ldi 11 
  154f:1a                 eq? 
  1550:30 000b            bnt code_155e 
  1553:38 0179          pushi 179 // $179 newRoom
  1556:78               push1 
  1557:38 0190          pushi 190 // $190 roomToEdge
  155a:81 02              lag  
  155c:4a 06             send 6 


        code_155e
  155e:3a                toss 
  155f:48                 ret 
    )

)

// 1a86
(instance sWakeUpAthens of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_159e
  159e:87 01              lap param1 
  15a0:65 0a             aTop state 
  15a2:36                push 
  15a3:3c                 dup 
  15a4:35 00              ldi 0 
  15a6:1a                 eq? 
  15a7:30 010f            bnt code_16b9 
  15aa:78               push1 
  15ab:38 0136          pushi 136 // $136 horizon
  15ae:45 0d 02         callb procedure_000d 2 //  

  15b1:39 69            pushi 69 // $69 hide
  15b3:76               push0 
  15b4:72 0ac4          lofsa $0ac4 // cloud
  15b7:4a 04             send 4 

  15b9:38 018c          pushi 18c // $18c drawPic
  15bc:78               push1 
  15bd:38 0183          pushi 183 // $183 picture
  15c0:76               push0 
  15c1:81 02              lag  
  15c3:4a 04             send 4 

  15c5:36                push 
  15c6:81 02              lag  
  15c8:4a 06             send 6 

  15ca:39 08            pushi 8 // $8 underBits
  15cc:39 0b            pushi b // $b nsBottom
  15ce:76               push0 
  15cf:76               push0 
  15d0:38 00c0          pushi c0 // $c0 highlightColor
  15d3:38 0140          pushi 140 // $140 mapKeyToDir
  15d6:7a               push2 
  15d7:76               push0 
  15d8:76               push0 
  15d9:43 6c 10         callk Graph 10 

  15dc:35 38              ldi 38 
  15de:a3 02              sal local2 
  15e0:38 018d          pushi 18d // $18d overlay
  15e3:78               push1 
  15e4:38 0159          pushi 159 // $159 topBordColor
  15e7:81 02              lag  
  15e9:4a 06             send 6 

  15eb:39 2b            pushi 2b // $2b number
  15ed:78               push1 
  15ee:38 0159          pushi 159 // $159 topBordColor
  15f1:39 06            pushi 6 // $6 loop
  15f3:78               push1 
  15f4:78               push1 
  15f5:39 2a            pushi 2a // $2a play
  15f7:76               push0 
  15f8:81 67              lag  
  15fa:4a 10             send 10 

  15fc:39 6b            pushi 6b // $6b init
  15fe:76               push0 
  15ff:39 05            pushi 5 // $5 view
  1601:78               push1 
  1602:38 0159          pushi 159 // $159 topBordColor
  1605:38 011c          pushi 11c // $11c posn
  1608:7a               push2 
  1609:38 00a8          pushi a8 // $a8 select
  160c:39 76            pushi 76 // $76 allTrue
  160e:39 42            pushi 42 // $42 setPri
  1610:78               push1 
  1611:39 0d            pushi d // $d lsTop
  1613:38 00a2          pushi a2 // $a2 setLoop
  1616:78               push1 
  1617:76               push0 
  1618:39 11            pushi 11 // $11 signal
  161a:78               push1 
  161b:38 4810          pushi 4810 // $4810 sel_18448
  161e:72 0c16          lofsa $0c16 // dreamProp2
  1621:4a 24             send 24 

  1623:39 6b            pushi 6b // $6b init
  1625:76               push0 
  1626:39 05            pushi 5 // $5 view
  1628:78               push1 
  1629:38 0159          pushi 159 // $159 topBordColor
  162c:38 00a2          pushi a2 // $a2 setLoop
  162f:78               push1 
  1630:78               push1 
  1631:38 011c          pushi 11c // $11c posn
  1634:7a               push2 
  1635:38 00a8          pushi a8 // $a8 select
  1638:39 76            pushi 76 // $76 allTrue
  163a:38 00db          pushi db // $db cycleSpeed
  163d:78               push1 
  163e:39 0a            pushi a // $a nsLeft
  1640:39 42            pushi 42 // $42 setPri
  1642:78               push1 
  1643:39 0e            pushi e // $e lsLeft
  1645:38 0120          pushi 120 // $120 setCel
  1648:78               push1 
  1649:39 ff            pushi ff // $ff syncNum
  164b:39 11            pushi 11 // $11 signal
  164d:78               push1 
  164e:38 4810          pushi 4810 // $4810 sel_18448
  1651:72 0ce2          lofsa $0ce2 // dreamProp4
  1654:4a 30             send 30 

  1656:39 6b            pushi 6b // $6b init
  1658:76               push0 
  1659:39 05            pushi 5 // $5 view
  165b:78               push1 
  165c:38 015a          pushi 15a // $15a lftBordColor
  165f:38 011c          pushi 11c // $11c posn
  1662:7a               push2 
  1663:38 00d1          pushi d1 // $d1 curInvIcon
  1666:38 008c          pushi 8c // $8c changeState
  1669:38 00db          pushi db // $db cycleSpeed
  166c:78               push1 
  166d:39 08            pushi 8 // $8 underBits
  166f:39 42            pushi 42 // $42 setPri
  1671:78               push1 
  1672:39 0d            pushi d // $d lsTop
  1674:38 00a2          pushi a2 // $a2 setLoop
  1677:78               push1 
  1678:76               push0 
  1679:38 0120          pushi 120 // $120 setCel
  167c:78               push1 
  167d:39 ff            pushi ff // $ff syncNum
  167f:72 0b4a          lofsa $0b4a // patti
  1682:4a 2a             send 2a 

  1684:39 6b            pushi 6b // $6b init
  1686:76               push0 
  1687:39 05            pushi 5 // $5 view
  1689:78               push1 
  168a:38 015a          pushi 15a // $15a lftBordColor
  168d:38 00a2          pushi a2 // $a2 setLoop
  1690:78               push1 
  1691:7a               push2 
  1692:38 011c          pushi 11c // $11c posn
  1695:7a               push2 
  1696:38 00d1          pushi d1 // $d1 curInvIcon
  1699:38 008c          pushi 8c // $8c changeState
  169c:39 42            pushi 42 // $42 setPri
  169e:78               push1 
  169f:39 0d            pushi d // $d lsTop
  16a1:38 0120          pushi 120 // $120 setCel
  16a4:78               push1 
  16a5:39 ff            pushi ff // $ff syncNum
  16a7:39 11            pushi 11 // $11 signal
  16a9:78               push1 
  16aa:38 4810          pushi 4810 // $4810 sel_18448
  16ad:72 0bb0          lofsa $0bb0 // dreamProp1
  16b0:4a 2a             send 2a 

  16b2:35 3c              ldi 3c 
  16b4:65 16             aTop ticks 
  16b6:32 03c5            jmp code_1a7e 

        code_16b9
  16b9:3c                 dup 
  16ba:35 01              ldi 1 
  16bc:1a                 eq? 
  16bd:30 0034            bnt code_16f4 
  16c0:39 07            pushi 7 // $7 cel
  16c2:38 0140          pushi 140 // $140 mapKeyToDir
  16c5:39 12            pushi 12 // $12 illegalBits
  16c7:39 43            pushi 43 // $43 at
  16c9:39 ff            pushi ff // $ff syncNum
  16cb:38 00b9          pushi b9 // $b9 bottom
  16ce:39 46            pushi 46 // $46 width
  16d0:38 0118          pushi 118 // $118 isNotHidden
  16d3:45 0e 0e         callb procedure_000e e //  

  16d6:38 00a2          pushi a2 // $a2 setLoop
  16d9:78               push1 
  16da:78               push1 
  16db:38 00db          pushi db // $db cycleSpeed
  16de:78               push1 
  16df:39 0a            pushi a // $a nsLeft
  16e1:38 0096          pushi 96 // $96 setCycle
  16e4:78               push1 
  16e5:51 17            class Fwd 
  16e7:36                push 
  16e8:72 0ce2          lofsa $0ce2 // dreamProp4
  16eb:4a 12             send 12 

  16ed:35 02              ldi 2 
  16ef:65 12             aTop seconds 
  16f1:32 038a            jmp code_1a7e 

        code_16f4
  16f4:3c                 dup 
  16f5:35 02              ldi 2 
  16f7:1a                 eq? 
  16f8:30 0007            bnt code_1702 
  16fb:35 02              ldi 2 
  16fd:65 12             aTop seconds 
  16ff:32 037c            jmp code_1a7e 

        code_1702
  1702:3c                 dup 
  1703:35 03              ldi 3 
  1705:1a                 eq? 
  1706:30 0078            bnt code_1781 
  1709:38 00db          pushi db // $db cycleSpeed
  170c:78               push1 
  170d:39 0a            pushi a // $a nsLeft
  170f:38 0096          pushi 96 // $96 setCycle
  1712:78               push1 
  1713:51 1a            class End 
  1715:36                push 
  1716:72 0c16          lofsa $0c16 // dreamProp2
  1719:4a 0c             send c 

  171b:38 00a2          pushi a2 // $a2 setLoop
  171e:78               push1 
  171f:7a               push2 
  1720:38 00db          pushi db // $db cycleSpeed
  1723:78               push1 
  1724:39 0a            pushi a // $a nsLeft
  1726:38 0096          pushi 96 // $96 setCycle
  1729:78               push1 
  172a:51 1a            class End 
  172c:36                push 
  172d:72 0ce2          lofsa $0ce2 // dreamProp4
  1730:4a 12             send 12 

  1732:39 6b            pushi 6b // $6b init
  1734:76               push0 
  1735:39 05            pushi 5 // $5 view
  1737:78               push1 
  1738:38 015a          pushi 15a // $15a lftBordColor
  173b:38 00a2          pushi a2 // $a2 setLoop
  173e:78               push1 
  173f:78               push1 
  1740:38 011c          pushi 11c // $11c posn
  1743:7a               push2 
  1744:38 00d0          pushi d0 // $d0 prevIcon
  1747:39 68            pushi 68 // $68 restart
  1749:39 42            pushi 42 // $42 setPri
  174b:78               push1 
  174c:39 0e            pushi e // $e lsLeft
  174e:38 0120          pushi 120 // $120 setCel
  1751:78               push1 
  1752:76               push0 
  1753:39 11            pushi 11 // $11 signal
  1755:78               push1 
  1756:38 4810          pushi 4810 // $4810 sel_18448
  1759:72 0c7c          lofsa $0c7c // dreamProp3
  175c:4a 2a             send 2a 

  175e:38 00db          pushi db // $db cycleSpeed
  1761:78               push1 
  1762:39 0a            pushi a // $a nsLeft
  1764:39 42            pushi 42 // $42 setPri
  1766:78               push1 
  1767:39 0d            pushi d // $d lsTop
  1769:38 0096          pushi 96 // $96 setCycle
  176c:7a               push2 
  176d:51 1a            class End 
  176f:36                push 
  1770:7c            pushSelf 
  1771:72 0bb0          lofsa $0bb0 // dreamProp1
  1774:4a 14             send 14 

  1776:39 2a            pushi 2a // $2a play
  1778:76               push0 
  1779:72 2d66          lofsa $2d66 // zipperSound
  177c:4a 04             send 4 

  177e:32 02fd            jmp code_1a7e 

        code_1781
  1781:3c                 dup 
  1782:35 04              ldi 4 
  1784:1a                 eq? 
  1785:30 0047            bnt code_17cf 
  1788:38 00a2          pushi a2 // $a2 setLoop
  178b:78               push1 
  178c:39 03            pushi 3 // $3 y
  178e:38 00db          pushi db // $db cycleSpeed
  1791:78               push1 
  1792:39 0a            pushi a // $a nsLeft
  1794:38 0096          pushi 96 // $96 setCycle
  1797:78               push1 
  1798:51 1a            class End 
  179a:36                push 
  179b:72 0ce2          lofsa $0ce2 // dreamProp4
  179e:4a 12             send 12 

  17a0:38 0096          pushi 96 // $96 setCycle
  17a3:78               push1 
  17a4:51 1a            class End 
  17a6:36                push 
  17a7:72 0b4a          lofsa $0b4a // patti
  17aa:4a 06             send 6 

  17ac:39 69            pushi 69 // $69 hide
  17ae:76               push0 
  17af:72 0bb0          lofsa $0bb0 // dreamProp1
  17b2:4a 04             send 4 

  17b4:39 42            pushi 42 // $42 setPri
  17b6:78               push1 
  17b7:39 0e            pushi e // $e lsLeft
  17b9:38 00db          pushi db // $db cycleSpeed
  17bc:78               push1 
  17bd:39 0a            pushi a // $a nsLeft
  17bf:38 0096          pushi 96 // $96 setCycle
  17c2:7a               push2 
  17c3:51 1a            class End 
  17c5:36                push 
  17c6:7c            pushSelf 
  17c7:72 0c7c          lofsa $0c7c // dreamProp3
  17ca:4a 14             send 14 

  17cc:32 02af            jmp code_1a7e 

        code_17cf
  17cf:3c                 dup 
  17d0:35 05              ldi 5 
  17d2:1a                 eq? 
  17d3:30 0038            bnt code_180e 
  17d6:39 05            pushi 5 // $5 view
  17d8:78               push1 
  17d9:38 015a          pushi 15a // $15a lftBordColor
  17dc:38 00a2          pushi a2 // $a2 setLoop
  17df:78               push1 
  17e0:39 03            pushi 3 // $3 y
  17e2:38 011c          pushi 11c // $11c posn
  17e5:7a               push2 
  17e6:38 00d1          pushi d1 // $d1 curInvIcon
  17e9:38 008c          pushi 8c // $8c changeState
  17ec:38 0120          pushi 120 // $120 setCel
  17ef:78               push1 
  17f0:39 ff            pushi ff // $ff syncNum
  17f2:38 0096          pushi 96 // $96 setCycle
  17f5:78               push1 
  17f6:51 17            class Fwd 
  17f8:36                push 
  17f9:39 42            pushi 42 // $42 setPri
  17fb:78               push1 
  17fc:39 0e            pushi e // $e lsLeft
  17fe:38 00c2          pushi c2 // $c2 show
  1801:76               push0 
  1802:72 0bb0          lofsa $0bb0 // dreamProp1
  1805:4a 2a             send 2a 

  1807:35 1e              ldi 1e 
  1809:65 10             aTop cycles 
  180b:32 0270            jmp code_1a7e 

        code_180e
  180e:3c                 dup 
  180f:35 06              ldi 6 
  1811:1a                 eq? 
  1812:30 0141            bnt code_1956 
  1815:81 19              lag  
  1817:30 0005            bnt code_181f 
  181a:39 6c            pushi 6c // $6c dispose
  181c:76               push0 
  181d:4a 04             send 4 


        code_181f
  181f:35 00              ldi 0 
  1821:a3 01              sal local1 
  1823:38 018c          pushi 18c // $18c drawPic
  1826:78               push1 
  1827:38 0183          pushi 183 // $183 picture
  182a:76               push0 
  182b:81 02              lag  
  182d:4a 04             send 4 

  182f:36                push 
  1830:81 02              lag  
  1832:4a 06             send 6 

  1834:39 6b            pushi 6b // $6b init
  1836:76               push0 
  1837:38 011d          pushi 11d // $11d stopUpd
  183a:76               push0 
  183b:72 09cc          lofsa $09cc // body
  183e:4a 08             send 8 

  1840:39 6b            pushi 6b // $6b init
  1842:76               push0 
  1843:38 011d          pushi 11d // $11d stopUpd
  1846:76               push0 
  1847:72 0842          lofsa $0842 // tray
  184a:4a 08             send 8 

  184c:78               push1 
  184d:39 34            pushi 34 // $34 b-xAxis
  184f:45 06 02         callb procedure_0006 2 //  

  1852:18                 not 
  1853:30 0016            bnt code_186c 
  1856:38 00d5          pushi d5 // $d5 has
  1859:78               push1 
  185a:39 09            pushi 9 // $9 nsTop
  185c:81 00              lag  
  185e:4a 06             send 6 

  1860:18                 not 
  1861:30 0008            bnt code_186c 
  1864:39 6b            pushi 6b // $6b init
  1866:76               push0 
  1867:72 1048          lofsa $1048 // magazine
  186a:4a 04             send 4 


        code_186c
  186c:39 6c            pushi 6c // $6c dispose
  186e:76               push0 
  186f:72 0b4a          lofsa $0b4a // patti
  1872:4a 04             send 4 

  1874:39 6c            pushi 6c // $6c dispose
  1876:76               push0 
  1877:72 0bb0          lofsa $0bb0 // dreamProp1
  187a:4a 04             send 4 

  187c:39 6c            pushi 6c // $6c dispose
  187e:76               push0 
  187f:72 0c16          lofsa $0c16 // dreamProp2
  1882:4a 04             send 4 

  1884:39 6c            pushi 6c // $6c dispose
  1886:76               push0 
  1887:72 0c7c          lofsa $0c7c // dreamProp3
  188a:4a 04             send 4 

  188c:39 6c            pushi 6c // $6c dispose
  188e:76               push0 
  188f:72 0ce2          lofsa $0ce2 // dreamProp4
  1892:4a 04             send 4 

  1894:39 2b            pushi 2b // $2b number
  1896:78               push1 
  1897:38 0141          pushi 141 // $141 curEvent
  189a:39 06            pushi 6 // $6 loop
  189c:78               push1 
  189d:39 ff            pushi ff // $ff syncNum
  189f:39 2a            pushi 2a // $2a play
  18a1:76               push0 
  18a2:81 66              lag  
  18a4:4a 10             send 10 

  18a6:39 2b            pushi 2b // $2b number
  18a8:78               push1 
  18a9:38 015a          pushi 15a // $15a lftBordColor
  18ac:39 06            pushi 6 // $6 loop
  18ae:78               push1 
  18af:78               push1 
  18b0:39 2a            pushi 2a // $2a play
  18b2:78               push1 
  18b3:39 3c            pushi 3c // $3c doit
  18b5:38 009f          pushi 9f // $9f fade
  18b8:39 04            pushi 4 // $4 x
  18ba:39 7f            pushi 7f // $7f addAfter
  18bc:39 0f            pushi f // $f lsBottom
  18be:39 0a            pushi a // $a nsLeft
  18c0:76               push0 
  18c1:81 67              lag  
  18c3:4a 1e             send 1e 

  18c5:39 6b            pushi 6b // $6b init
  18c7:76               push0 
  18c8:39 05            pushi 5 // $5 view
  18ca:78               push1 
  18cb:38 0143          pushi 143 // $143 getInput
  18ce:38 00a2          pushi a2 // $a2 setLoop
  18d1:78               push1 
  18d2:78               push1 
  18d3:38 011c          pushi 11c // $11c posn
  18d6:7a               push2 
  18d7:39 7a            pushi 7a // $7a release
  18d9:39 56            pushi 56 // $56 parseLang
  18db:39 42            pushi 42 // $42 setPri
  18dd:78               push1 
  18de:39 0e            pushi e // $e lsLeft
  18e0:38 0121          pushi 121 // $121 ignoreActors
  18e3:78               push1 
  18e4:78               push1 
  18e5:38 00db          pushi db // $db cycleSpeed
  18e8:78               push1 
  18e9:39 0a            pushi a // $a nsLeft
  18eb:38 008e          pushi 8e // $8e setScript
  18ee:78               push1 
  18ef:72 0fb2          lofsa $0fb2 // sSqeezeNuts
  18f2:36                push 
  18f3:72 08b0          lofsa $08b0 // arm
  18f6:4a 30             send 30 

  18f8:39 6b            pushi 6b // $6b init
  18fa:76               push0 
  18fb:39 05            pushi 5 // $5 view
  18fd:78               push1 
  18fe:38 0143          pushi 143 // $143 getInput
  1901:38 00a2          pushi a2 // $a2 setLoop
  1904:78               push1 
  1905:76               push0 
  1906:38 011c          pushi 11c // $11c posn
  1909:7a               push2 
  190a:38 008a          pushi 8a // $8a script
  190d:39 4e            pushi 4e // $4e save
  190f:39 42            pushi 42 // $42 setPri
  1911:78               push1 
  1912:39 05            pushi 5 // $5 view
  1914:38 00db          pushi db // $db cycleSpeed
  1917:78               push1 
  1918:39 0a            pushi a // $a nsLeft
  191a:38 0121          pushi 121 // $121 ignoreActors
  191d:78               push1 
  191e:78               push1 
  191f:72 0916          lofsa $0916 // arm2
  1922:4a 2a             send 2a 

  1924:39 6b            pushi 6b // $6b init
  1926:76               push0 
  1927:39 05            pushi 5 // $5 view
  1929:78               push1 
  192a:38 0141          pushi 141 // $141 curEvent
  192d:39 06            pushi 6 // $6 loop
  192f:78               push1 
  1930:78               push1 
  1931:38 0120          pushi 120 // $120 setCel
  1934:78               push1 
  1935:78               push1 
  1936:38 011c          pushi 11c // $11c posn
  1939:7a               push2 
  193a:38 0087          pushi 87 // $87 ticks
  193d:39 48            pushi 48 // $48 syntaxFail
  193f:39 42            pushi 42 // $42 setPri
  1941:78               push1 
  1942:39 04            pushi 4 // $4 x
  1944:39 11            pushi 11 // $11 signal
  1946:78               push1 
  1947:38 4810          pushi 4810 // $4810 sel_18448
  194a:72 075c          lofsa $075c // larry
  194d:4a 2a             send 2a 

  194f:35 03              ldi 3 
  1951:65 12             aTop seconds 
  1953:32 0128            jmp code_1a7e 

        code_1956
  1956:3c                 dup 
  1957:35 07              ldi 7 
  1959:1a                 eq? 
  195a:30 004c            bnt code_19a9 
  195d:39 07            pushi 7 // $7 cel
  195f:38 0140          pushi 140 // $140 mapKeyToDir
  1962:39 13            pushi 13 // $13 brTop
  1964:39 43            pushi 43 // $43 at
  1966:39 ff            pushi ff // $ff syncNum
  1968:39 0f            pushi f // $f lsBottom
  196a:39 46            pushi 46 // $46 width
  196c:38 0118          pushi 118 // $118 isNotHidden
  196f:45 0e 0e         callb procedure_000e e //  

  1972:39 05            pushi 5 // $5 view
  1974:78               push1 
  1975:38 0145          pushi 145 // $145 theObj
  1978:38 00a2          pushi a2 // $a2 setLoop
  197b:78               push1 
  197c:78               push1 
  197d:72 075c          lofsa $075c // larry
  1980:4a 0c             send c 

  1982:39 09            pushi 9 // $9 nsTop
  1984:38 0140          pushi 140 // $140 mapKeyToDir
  1987:39 14            pushi 14 // $14 brLeft
  1989:39 43            pushi 43 // $43 at
  198b:39 ff            pushi ff // $ff syncNum
  198d:38 00b9          pushi b9 // $b9 bottom
  1990:39 50            pushi 50 // $50 title
  1992:72 3091          lofsa $3091 // The Stewardess
  1995:36                push 
  1996:39 6c            pushi 6c // $6c dispose
  1998:7c            pushSelf 
  1999:45 0e 12         callb procedure_000e 12 //  

  199c:38 008e          pushi 8e // $8e setScript
  199f:78               push1 
  19a0:76               push0 
  19a1:72 08b0          lofsa $08b0 // arm
  19a4:4a 06             send 6 

  19a6:32 00d5            jmp code_1a7e 

        code_19a9
  19a9:3c                 dup 
  19aa:35 08              ldi 8 
  19ac:1a                 eq? 
  19ad:30 001f            bnt code_19cf 
  19b0:38 0120          pushi 120 // $120 setCel
  19b3:78               push1 
  19b4:78               push1 
  19b5:38 00db          pushi db // $db cycleSpeed
  19b8:78               push1 
  19b9:39 0a            pushi a // $a nsLeft
  19bb:38 0096          pushi 96 // $96 setCycle
  19be:39 04            pushi 4 // $4 x
  19c0:51 19            class CT 
  19c2:36                push 
  19c3:39 07            pushi 7 // $7 cel
  19c5:78               push1 
  19c6:7c            pushSelf 
  19c7:72 075c          lofsa $075c // larry
  19ca:4a 18             send 18 

  19cc:32 00af            jmp code_1a7e 

        code_19cf
  19cf:3c                 dup 
  19d0:35 09              ldi 9 
  19d2:1a                 eq? 
  19d3:30 0007            bnt code_19dd 
  19d6:35 07              ldi 7 
  19d8:65 12             aTop seconds 
  19da:32 00a1            jmp code_1a7e 

        code_19dd
  19dd:3c                 dup 
  19de:35 0a              ldi a 
  19e0:1a                 eq? 
  19e1:30 0054            bnt code_1a38 
  19e4:39 05            pushi 5 // $5 view
  19e6:78               push1 
  19e7:38 0141          pushi 141 // $141 curEvent
  19ea:38 00a2          pushi a2 // $a2 setLoop
  19ed:78               push1 
  19ee:7a               push2 
  19ef:38 0120          pushi 120 // $120 setCel
  19f2:78               push1 
  19f3:76               push0 
  19f4:38 011c          pushi 11c // $11c posn
  19f7:7a               push2 
  19f8:39 7e            pushi 7e // $7e addToEnd
  19fa:39 4f            pushi 4f // $4f restore
  19fc:39 42            pushi 42 // $42 setPri
  19fe:78               push1 
  19ff:39 05            pushi 5 // $5 view
  1a01:72 08b0          lofsa $08b0 // arm
  1a04:4a 20             send 20 

  1a06:39 05            pushi 5 // $5 view
  1a08:78               push1 
  1a09:38 0141          pushi 141 // $141 curEvent
  1a0c:38 00a2          pushi a2 // $a2 setLoop
  1a0f:78               push1 
  1a10:7a               push2 
  1a11:38 0120          pushi 120 // $120 setCel
  1a14:78               push1 
  1a15:78               push1 
  1a16:38 011c          pushi 11c // $11c posn
  1a19:7a               push2 
  1a1a:38 00ad          pushi ad // $ad setMark
  1a1d:39 54            pushi 54 // $54 delete
  1a1f:39 42            pushi 42 // $42 setPri
  1a21:78               push1 
  1a22:39 05            pushi 5 // $5 view
  1a24:72 0916          lofsa $0916 // arm2
  1a27:4a 20             send 20 

  1a29:38 009c          pushi 9c // $9c stop
  1a2c:76               push0 
  1a2d:81 67              lag  
  1a2f:4a 04             send 4 

  1a31:35 02              ldi 2 
  1a33:65 12             aTop seconds 
  1a35:32 0046            jmp code_1a7e 

        code_1a38
  1a38:3c                 dup 
  1a39:35 0b              ldi b 
  1a3b:1a                 eq? 
  1a3c:30 003f            bnt code_1a7e 
  1a3f:39 07            pushi 7 // $7 cel
  1a41:38 0140          pushi 140 // $140 mapKeyToDir
  1a44:39 15            pushi 15 // $15 brBottom
  1a46:39 43            pushi 43 // $43 at
  1a48:39 ff            pushi ff // $ff syncNum
  1a4a:38 00b9          pushi b9 // $b9 bottom
  1a4d:39 46            pushi 46 // $46 width
  1a4f:38 0118          pushi 118 // $118 isNotHidden
  1a52:45 0e 0e         callb procedure_000e e //  

  1a55:38 009f          pushi 9f // $9f fade
  1a58:39 04            pushi 4 // $4 x
  1a5a:76               push0 
  1a5b:39 0f            pushi f // $f lsBottom
  1a5d:39 0a            pushi a // $a nsLeft
  1a5f:78               push1 
  1a60:81 66              lag  
  1a62:4a 0c             send c 

  1a64:38 009f          pushi 9f // $9f fade
  1a67:39 04            pushi 4 // $4 x
  1a69:76               push0 
  1a6a:39 0f            pushi f // $f lsBottom
  1a6c:39 0a            pushi a // $a nsLeft
  1a6e:78               push1 
  1a6f:81 67              lag  
  1a71:4a 0c             send c 

  1a73:38 0179          pushi 179 // $179 newRoom
  1a76:78               push1 
  1a77:38 0136          pushi 136 // $136 horizon
  1a7a:81 02              lag  
  1a7c:4a 06             send 6 


        code_1a7e
  1a7e:3a                toss 
  1a7f:48                 ret 
    )

)

// 1e46
(instance sWakeUpVenice of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_1aba
  1aba:87 01              lap param1 
  1abc:65 0a             aTop state 
  1abe:36                push 
  1abf:3c                 dup 
  1ac0:35 00              ldi 0 
  1ac2:1a                 eq? 
  1ac3:30 009e            bnt code_1b64 
  1ac6:78               push1 
  1ac7:38 0136          pushi 136 // $136 horizon
  1aca:45 0d 02         callb procedure_000d 2 //  

  1acd:39 69            pushi 69 // $69 hide
  1acf:76               push0 
  1ad0:72 0ac4          lofsa $0ac4 // cloud
  1ad3:4a 04             send 4 

  1ad5:38 018c          pushi 18c // $18c drawPic
  1ad8:78               push1 
  1ad9:38 0183          pushi 183 // $183 picture
  1adc:76               push0 
  1add:81 02              lag  
  1adf:4a 04             send 4 

  1ae1:36                push 
  1ae2:81 02              lag  
  1ae4:4a 06             send 6 

  1ae6:39 08            pushi 8 // $8 underBits
  1ae8:39 0b            pushi b // $b nsBottom
  1aea:76               push0 
  1aeb:76               push0 
  1aec:38 00c0          pushi c0 // $c0 highlightColor
  1aef:38 0140          pushi 140 // $140 mapKeyToDir
  1af2:7a               push2 
  1af3:76               push0 
  1af4:76               push0 
  1af5:43 6c 10         callk Graph 10 

  1af8:35 38              ldi 38 
  1afa:a3 02              sal local2 
  1afc:38 018d          pushi 18d // $18d overlay
  1aff:78               push1 
  1b00:38 0163          pushi 163 // $163 botBordColor2
  1b03:81 02              lag  
  1b05:4a 06             send 6 

  1b07:39 6b            pushi 6b // $6b init
  1b09:76               push0 
  1b0a:39 05            pushi 5 // $5 view
  1b0c:78               push1 
  1b0d:38 0164          pushi 164 // $164 rgtBordColor2
  1b10:38 00a2          pushi a2 // $a2 setLoop
  1b13:78               push1 
  1b14:76               push0 
  1b15:38 011c          pushi 11c // $11c posn
  1b18:7a               push2 
  1b19:38 00bb          pushi bb // $bb setCursor
  1b1c:39 7e            pushi 7e // $7e addToEnd
  1b1e:38 00db          pushi db // $db cycleSpeed
  1b21:78               push1 
  1b22:39 0a            pushi a // $a nsLeft
  1b24:38 0120          pushi 120 // $120 setCel
  1b27:78               push1 
  1b28:38 00ff          pushi ff // $ff syncNum
  1b2b:39 42            pushi 42 // $42 setPri
  1b2d:78               push1 
  1b2e:39 0e            pushi e // $e lsLeft
  1b30:38 0096          pushi 96 // $96 setCycle
  1b33:7a               push2 
  1b34:51 1b            class Beg 
  1b36:36                push 
  1b37:7c            pushSelf 
  1b38:72 0c16          lofsa $0c16 // dreamProp2
  1b3b:4a 32             send 32 

  1b3d:39 2b            pushi 2b // $2b number
  1b3f:78               push1 
  1b40:38 015e          pushi 15e // $15e shadowWid
  1b43:39 06            pushi 6 // $6 loop
  1b45:78               push1 
  1b46:39 ff            pushi ff // $ff syncNum
  1b48:39 2a            pushi 2a // $2a play
  1b4a:78               push1 
  1b4b:39 3c            pushi 3c // $3c doit
  1b4d:38 009f          pushi 9f // $9f fade
  1b50:39 04            pushi 4 // $4 x
  1b52:39 7f            pushi 7f // $7f addAfter
  1b54:39 0f            pushi f // $f lsBottom
  1b56:39 0a            pushi a // $a nsLeft
  1b58:76               push0 
  1b59:81 66              lag  
  1b5b:4a 1e             send 1e 

  1b5d:76               push0 
  1b5e:45 02 00         callb procedure_0002 0 //  

  1b61:32 02d9            jmp code_1e3d 

        code_1b64
  1b64:3c                 dup 
  1b65:35 01              ldi 1 
  1b67:1a                 eq? 
  1b68:30 0007            bnt code_1b72 
  1b6b:35 3c              ldi 3c 
  1b6d:65 16             aTop ticks 
  1b6f:32 02cb            jmp code_1e3d 

        code_1b72
  1b72:3c                 dup 
  1b73:35 02              ldi 2 
  1b75:1a                 eq? 
  1b76:30 001b            bnt code_1b94 
  1b79:39 09            pushi 9 // $9 nsTop
  1b7b:38 0140          pushi 140 // $140 mapKeyToDir
  1b7e:39 16            pushi 16 // $16 brRight
  1b80:39 43            pushi 43 // $43 at
  1b82:39 ff            pushi ff // $ff syncNum
  1b84:39 0f            pushi f // $f lsBottom
  1b86:39 46            pushi 46 // $46 width
  1b88:38 0118          pushi 118 // $118 isNotHidden
  1b8b:39 6c            pushi 6c // $6c dispose
  1b8d:7c            pushSelf 
  1b8e:45 0e 12         callb procedure_000e 12 //  

  1b91:32 02a9            jmp code_1e3d 

        code_1b94
  1b94:3c                 dup 
  1b95:35 03              ldi 3 
  1b97:1a                 eq? 
  1b98:30 0026            bnt code_1bc1 
  1b9b:39 2b            pushi 2b // $2b number
  1b9d:78               push1 
  1b9e:38 0160          pushi 160 // $160 insideColor
  1ba1:39 06            pushi 6 // $6 loop
  1ba3:78               push1 
  1ba4:39 ff            pushi ff // $ff syncNum
  1ba6:39 2a            pushi 2a // $2a play
  1ba8:78               push1 
  1ba9:39 3c            pushi 3c // $3c doit
  1bab:38 009f          pushi 9f // $9f fade
  1bae:39 04            pushi 4 // $4 x
  1bb0:39 7f            pushi 7f // $7f addAfter
  1bb2:39 0f            pushi f // $f lsBottom
  1bb4:3c                 dup 
  1bb5:76               push0 
  1bb6:81 67              lag  
  1bb8:4a 1e             send 1e 

  1bba:35 0a              ldi a 
  1bbc:65 16             aTop ticks 
  1bbe:32 027c            jmp code_1e3d 

        code_1bc1
  1bc1:3c                 dup 
  1bc2:35 04              ldi 4 
  1bc4:1a                 eq? 
  1bc5:30 0036            bnt code_1bfe 
  1bc8:39 6b            pushi 6b // $6b init
  1bca:76               push0 
  1bcb:39 05            pushi 5 // $5 view
  1bcd:78               push1 
  1bce:38 0163          pushi 163 // $163 botBordColor2
  1bd1:38 00a2          pushi a2 // $a2 setLoop
  1bd4:78               push1 
  1bd5:76               push0 
  1bd6:38 0096          pushi 96 // $96 setCycle
  1bd9:78               push1 
  1bda:51 17            class Fwd 
  1bdc:36                push 
  1bdd:39 42            pushi 42 // $42 setPri
  1bdf:78               push1 
  1be0:39 0e            pushi e // $e lsLeft
  1be2:38 011c          pushi 11c // $11c posn
  1be5:7a               push2 
  1be6:38 00cd          pushi cd // $cd oldMouseY
  1be9:38 0089          pushi 89 // $89 register
  1bec:39 11            pushi 11 // $11 signal
  1bee:78               push1 
  1bef:38 4810          pushi 4810 // $4810 sel_18448
  1bf2:72 0bb0          lofsa $0bb0 // dreamProp1
  1bf5:4a 2a             send 2a 

  1bf7:35 7b              ldi 7b 
  1bf9:65 16             aTop ticks 
  1bfb:32 023f            jmp code_1e3d 

        code_1bfe
  1bfe:3c                 dup 
  1bff:35 05              ldi 5 
  1c01:1a                 eq? 
  1c02:30 0013            bnt code_1c18 
  1c05:38 009f          pushi 9f // $9f fade
  1c08:39 05            pushi 5 // $5 view
  1c0a:76               push0 
  1c0b:39 0f            pushi f // $f lsBottom
  1c0d:39 05            pushi 5 // $5 view
  1c0f:78               push1 
  1c10:7c            pushSelf 
  1c11:81 67              lag  
  1c13:4a 0e             send e 

  1c15:32 0225            jmp code_1e3d 

        code_1c18
  1c18:3c                 dup 
  1c19:35 06              ldi 6 
  1c1b:1a                 eq? 
  1c1c:30 0109            bnt code_1d28 
  1c1f:35 00              ldi 0 
  1c21:a3 01              sal local1 
  1c23:38 018c          pushi 18c // $18c drawPic
  1c26:78               push1 
  1c27:38 0183          pushi 183 // $183 picture
  1c2a:76               push0 
  1c2b:81 02              lag  
  1c2d:4a 04             send 4 

  1c2f:36                push 
  1c30:81 02              lag  
  1c32:4a 06             send 6 

  1c34:78               push1 
  1c35:39 34            pushi 34 // $34 b-xAxis
  1c37:45 06 02         callb procedure_0006 2 //  

  1c3a:18                 not 
  1c3b:30 0016            bnt code_1c54 
  1c3e:38 00d5          pushi d5 // $d5 has
  1c41:78               push1 
  1c42:39 09            pushi 9 // $9 nsTop
  1c44:81 00              lag  
  1c46:4a 06             send 6 

  1c48:18                 not 
  1c49:30 0008            bnt code_1c54 
  1c4c:39 6b            pushi 6b // $6b init
  1c4e:76               push0 
  1c4f:72 1048          lofsa $1048 // magazine
  1c52:4a 04             send 4 


        code_1c54
  1c54:38 00c2          pushi c2 // $c2 show
  1c57:76               push0 
  1c58:72 0ac4          lofsa $0ac4 // cloud
  1c5b:4a 04             send 4 

  1c5d:39 6c            pushi 6c // $6c dispose
  1c5f:76               push0 
  1c60:72 0bb0          lofsa $0bb0 // dreamProp1
  1c63:4a 04             send 4 

  1c65:39 6c            pushi 6c // $6c dispose
  1c67:76               push0 
  1c68:72 0c16          lofsa $0c16 // dreamProp2
  1c6b:4a 04             send 4 

  1c6d:39 2b            pushi 2b // $2b number
  1c6f:78               push1 
  1c70:38 0141          pushi 141 // $141 curEvent
  1c73:39 06            pushi 6 // $6 loop
  1c75:78               push1 
  1c76:39 ff            pushi ff // $ff syncNum
  1c78:39 2a            pushi 2a // $2a play
  1c7a:76               push0 
  1c7b:81 66              lag  
  1c7d:4a 10             send 10 

  1c7f:39 2b            pushi 2b // $2b number
  1c81:78               push1 
  1c82:38 015a          pushi 15a // $15a lftBordColor
  1c85:39 06            pushi 6 // $6 loop
  1c87:78               push1 
  1c88:78               push1 
  1c89:39 2a            pushi 2a // $2a play
  1c8b:78               push1 
  1c8c:39 3c            pushi 3c // $3c doit
  1c8e:38 009f          pushi 9f // $9f fade
  1c91:39 04            pushi 4 // $4 x
  1c93:39 7f            pushi 7f // $7f addAfter
  1c95:39 0f            pushi f // $f lsBottom
  1c97:39 0a            pushi a // $a nsLeft
  1c99:76               push0 
  1c9a:81 67              lag  
  1c9c:4a 1e             send 1e 

  1c9e:39 6b            pushi 6b // $6b init
  1ca0:76               push0 
  1ca1:39 05            pushi 5 // $5 view
  1ca3:78               push1 
  1ca4:38 0145          pushi 145 // $145 theObj
  1ca7:39 06            pushi 6 // $6 loop
  1ca9:78               push1 
  1caa:76               push0 
  1cab:38 0120          pushi 120 // $120 setCel
  1cae:78               push1 
  1caf:76               push0 
  1cb0:38 011c          pushi 11c // $11c posn
  1cb3:7a               push2 
  1cb4:38 00a5          pushi a5 // $a5 clean
  1cb7:39 7c            pushi 7c // $7c prev
  1cb9:39 42            pushi 42 // $42 setPri
  1cbb:78               push1 
  1cbc:39 04            pushi 4 // $4 x
  1cbe:38 011d          pushi 11d // $11d stopUpd
  1cc1:76               push0 
  1cc2:72 09cc          lofsa $09cc // body
  1cc5:4a 28             send 28 

  1cc7:39 6b            pushi 6b // $6b init
  1cc9:76               push0 
  1cca:39 05            pushi 5 // $5 view
  1ccc:78               push1 
  1ccd:38 0144          pushi 144 // $144 canInput
  1cd0:38 00a2          pushi a2 // $a2 setLoop
  1cd3:78               push1 
  1cd4:76               push0 
  1cd5:38 0120          pushi 120 // $120 setCel
  1cd8:78               push1 
  1cd9:7a               push2 
  1cda:38 011c          pushi 11c // $11c posn
  1cdd:7a               push2 
  1cde:38 0093          pushi 93 // $93 ticksToDo
  1ce1:39 69            pushi 69 // $69 hide
  1ce3:39 42            pushi 42 // $42 setPri
  1ce5:78               push1 
  1ce6:39 08            pushi 8 // $8 underBits
  1ce8:72 08b0          lofsa $08b0 // arm
  1ceb:4a 24             send 24 

  1ced:39 6b            pushi 6b // $6b init
  1cef:76               push0 
  1cf0:39 05            pushi 5 // $5 view
  1cf2:78               push1 
  1cf3:38 0144          pushi 144 // $144 canInput
  1cf6:38 00a2          pushi a2 // $a2 setLoop
  1cf9:78               push1 
  1cfa:78               push1 
  1cfb:38 0120          pushi 120 // $120 setCel
  1cfe:78               push1 
  1cff:76               push0 
  1d00:38 011c          pushi 11c // $11c posn
  1d03:7a               push2 
  1d04:38 00a9          pushi a9 // $a9 track
  1d07:39 52            pushi 52 // $52 icon
  1d09:39 42            pushi 42 // $42 setPri
  1d0b:78               push1 
  1d0c:39 06            pushi 6 // $6 loop
  1d0e:72 0916          lofsa $0916 // arm2
  1d11:4a 24             send 24 

  1d13:39 42            pushi 42 // $42 setPri
  1d15:78               push1 
  1d16:39 05            pushi 5 // $5 view
  1d18:38 011f          pushi 11f // $11f startUpd
  1d1b:76               push0 
  1d1c:72 075c          lofsa $075c // larry
  1d1f:4a 0a             send a 

  1d21:35 0a              ldi a 
  1d23:65 16             aTop ticks 
  1d25:32 0115            jmp code_1e3d 

        code_1d28
  1d28:3c                 dup 
  1d29:35 07              ldi 7 
  1d2b:1a                 eq? 
  1d2c:30 0016            bnt code_1d45 
  1d2f:38 00db          pushi db // $db cycleSpeed
  1d32:78               push1 
  1d33:39 0a            pushi a // $a nsLeft
  1d35:38 0096          pushi 96 // $96 setCycle
  1d38:7a               push2 
  1d39:51 1a            class End 
  1d3b:36                push 
  1d3c:7c            pushSelf 
  1d3d:72 0916          lofsa $0916 // arm2
  1d40:4a 0e             send e 

  1d42:32 00f8            jmp code_1e3d 

        code_1d45
  1d45:3c                 dup 
  1d46:35 08              ldi 8 
  1d48:1a                 eq? 
  1d49:30 0025            bnt code_1d71 
  1d4c:39 05            pushi 5 // $5 view
  1d4e:78               push1 
  1d4f:38 0144          pushi 144 // $144 canInput
  1d52:38 00a2          pushi a2 // $a2 setLoop
  1d55:78               push1 
  1d56:76               push0 
  1d57:38 0120          pushi 120 // $120 setCel
  1d5a:78               push1 
  1d5b:76               push0 
  1d5c:38 011c          pushi 11c // $11c posn
  1d5f:7a               push2 
  1d60:38 008b          pushi 8b // $8b caller
  1d63:39 48            pushi 48 // $48 syntaxFail
  1d65:72 075c          lofsa $075c // larry
  1d68:4a 1a             send 1a 

  1d6a:35 03              ldi 3 
  1d6c:65 12             aTop seconds 
  1d6e:32 00cc            jmp code_1e3d 

        code_1d71
  1d71:3c                 dup 
  1d72:35 09              ldi 9 
  1d74:1a                 eq? 
  1d75:30 0033            bnt code_1dab 
  1d78:39 05            pushi 5 // $5 view
  1d7a:78               push1 
  1d7b:38 0145          pushi 145 // $145 theObj
  1d7e:39 06            pushi 6 // $6 loop
  1d80:78               push1 
  1d81:78               push1 
  1d82:38 0120          pushi 120 // $120 setCel
  1d85:78               push1 
  1d86:39 05            pushi 5 // $5 view
  1d88:38 011c          pushi 11c // $11c posn
  1d8b:7a               push2 
  1d8c:38 0086          pushi 86 // $86 lastSeconds
  1d8f:39 46            pushi 46 // $46 width
  1d91:38 00db          pushi db // $db cycleSpeed
  1d94:78               push1 
  1d95:39 11            pushi 11 // $11 signal
  1d97:38 0096          pushi 96 // $96 setCycle
  1d9a:39 04            pushi 4 // $4 x
  1d9c:51 19            class CT 
  1d9e:36                push 
  1d9f:39 07            pushi 7 // $7 cel
  1da1:78               push1 
  1da2:7c            pushSelf 
  1da3:72 075c          lofsa $075c // larry
  1da6:4a 2c             send 2c 

  1da8:32 0092            jmp code_1e3d 

        code_1dab
  1dab:3c                 dup 
  1dac:35 0a              ldi a 
  1dae:1a                 eq? 
  1daf:30 0007            bnt code_1db9 
  1db2:35 03              ldi 3 
  1db4:65 12             aTop seconds 
  1db6:32 0084            jmp code_1e3d 

        code_1db9
  1db9:3c                 dup 
  1dba:35 0b              ldi b 
  1dbc:1a                 eq? 
  1dbd:30 001b            bnt code_1ddb 
  1dc0:39 09            pushi 9 // $9 nsTop
  1dc2:38 0140          pushi 140 // $140 mapKeyToDir
  1dc5:39 17            pushi 17 // $17 name
  1dc7:39 43            pushi 43 // $43 at
  1dc9:39 ff            pushi ff // $ff syncNum
  1dcb:39 0f            pushi f // $f lsBottom
  1dcd:39 46            pushi 46 // $46 width
  1dcf:38 0118          pushi 118 // $118 isNotHidden
  1dd2:39 6c            pushi 6c // $6c dispose
  1dd4:7c            pushSelf 
  1dd5:45 0e 12         callb procedure_000e 12 //  

  1dd8:32 0062            jmp code_1e3d 

        code_1ddb
  1ddb:3c                 dup 
  1ddc:35 0c              ldi c 
  1dde:1a                 eq? 
  1ddf:30 0007            bnt code_1de9 
  1de2:35 1e              ldi 1e 
  1de4:65 16             aTop ticks 
  1de6:32 0054            jmp code_1e3d 

        code_1de9
  1de9:3c                 dup 
  1dea:35 0d              ldi d 
  1dec:1a                 eq? 
  1ded:30 003b            bnt code_1e2b 
  1df0:39 07            pushi 7 // $7 cel
  1df2:38 0140          pushi 140 // $140 mapKeyToDir
  1df5:39 15            pushi 15 // $15 brBottom
  1df7:39 43            pushi 43 // $43 at
  1df9:39 ff            pushi ff // $ff syncNum
  1dfb:38 00b9          pushi b9 // $b9 bottom
  1dfe:39 46            pushi 46 // $46 width
  1e00:38 0118          pushi 118 // $118 isNotHidden
  1e03:45 0e 0e         callb procedure_000e e //  

  1e06:38 009f          pushi 9f // $9f fade
  1e09:39 04            pushi 4 // $4 x
  1e0b:76               push0 
  1e0c:39 0f            pushi f // $f lsBottom
  1e0e:39 0a            pushi a // $a nsLeft
  1e10:78               push1 
  1e11:81 66              lag  
  1e13:4a 0c             send c 

  1e15:38 009f          pushi 9f // $9f fade
  1e18:39 04            pushi 4 // $4 x
  1e1a:76               push0 
  1e1b:39 0f            pushi f // $f lsBottom
  1e1d:39 0a            pushi a // $a nsLeft
  1e1f:78               push1 
  1e20:81 67              lag  
  1e22:4a 0c             send c 

  1e24:35 02              ldi 2 
  1e26:65 12             aTop seconds 
  1e28:32 0012            jmp code_1e3d 

        code_1e2b
  1e2b:3c                 dup 
  1e2c:35 0e              ldi e 
  1e2e:1a                 eq? 
  1e2f:30 000b            bnt code_1e3d 
  1e32:38 0179          pushi 179 // $179 newRoom
  1e35:78               push1 
  1e36:38 0136          pushi 136 // $136 horizon
  1e39:81 02              lag  
  1e3b:4a 06             send 6 


        code_1e3d
  1e3d:3a                toss 
  1e3e:48                 ret 
  1e3f:00                bnot 
    )

)

// 2082
(instance sDreamTaj of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_1e7a
  1e7a:3f 02             link 2 // (var $2)
  1e7c:87 01              lap param1 
  1e7e:65 0a             aTop state 
  1e80:36                push 
  1e81:3c                 dup 
  1e82:35 00              ldi 0 
  1e84:1a                 eq? 
  1e85:30 0172            bnt code_1ffa 
  1e88:78               push1 
  1e89:39 34            pushi 34 // $34 b-xAxis
  1e8b:45 06 02         callb procedure_0006 2 //  

  1e8e:18                 not 
  1e8f:30 0016            bnt code_1ea8 
  1e92:38 00d5          pushi d5 // $d5 has
  1e95:78               push1 
  1e96:39 09            pushi 9 // $9 nsTop
  1e98:81 00              lag  
  1e9a:4a 06             send 6 

  1e9c:18                 not 
  1e9d:30 0008            bnt code_1ea8 
  1ea0:39 6c            pushi 6c // $6c dispose
  1ea2:76               push0 
  1ea3:72 1048          lofsa $1048 // magazine
  1ea6:4a 04             send 4 


        code_1ea8
  1ea8:39 6c            pushi 6c // $6c dispose
  1eaa:76               push0 
  1eab:72 09cc          lofsa $09cc // body
  1eae:4a 04             send 4 

  1eb0:39 6c            pushi 6c // $6c dispose
  1eb2:76               push0 
  1eb3:72 08b0          lofsa $08b0 // arm
  1eb6:4a 04             send 4 

  1eb8:39 6c            pushi 6c // $6c dispose
  1eba:76               push0 
  1ebb:72 0842          lofsa $0842 // tray
  1ebe:4a 04             send 4 

  1ec0:39 6c            pushi 6c // $6c dispose
  1ec2:76               push0 
  1ec3:72 0ac4          lofsa $0ac4 // cloud
  1ec6:4a 04             send 4 

  1ec8:39 6c            pushi 6c // $6c dispose
  1eca:76               push0 
  1ecb:72 0916          lofsa $0916 // arm2
  1ece:4a 04             send 4 

  1ed0:39 05            pushi 5 // $5 view
  1ed2:78               push1 
  1ed3:38 0172          pushi 172 // $172 showScore
  1ed6:38 00a2          pushi a2 // $a2 setLoop
  1ed9:78               push1 
  1eda:76               push0 
  1edb:38 0096          pushi 96 // $96 setCycle
  1ede:78               push1 
  1edf:51 5e            class RandCycle 
  1ee1:36                push 
  1ee2:38 011c          pushi 11c // $11c posn
  1ee5:7a               push2 
  1ee6:39 48            pushi 48 // $48 syntaxFail
  1ee8:39 7a            pushi 7a // $7a release
  1eea:38 00db          pushi db // $db cycleSpeed
  1eed:78               push1 
  1eee:39 08            pushi 8 // $8 underBits
  1ef0:39 11            pushi 11 // $11 signal
  1ef2:78               push1 
  1ef3:38 4810          pushi 4810 // $4810 sel_18448
  1ef6:72 0bb0          lofsa $0bb0 // dreamProp1
  1ef9:4a 26             send 26 

  1efb:39 6b            pushi 6b // $6b init
  1efd:76               push0 
  1efe:39 05            pushi 5 // $5 view
  1f00:78               push1 
  1f01:38 0172          pushi 172 // $172 showScore
  1f04:38 00a2          pushi a2 // $a2 setLoop
  1f07:78               push1 
  1f08:7a               push2 
  1f09:38 011c          pushi 11c // $11c posn
  1f0c:7a               push2 
  1f0d:38 009b          pushi 9b // $9b owner
  1f10:39 50            pushi 50 // $50 title
  1f12:38 00db          pushi db // $db cycleSpeed
  1f15:78               push1 
  1f16:39 03            pushi 3 // $3 y
  1f18:38 0096          pushi 96 // $96 setCycle
  1f1b:78               push1 
  1f1c:51 5e            class RandCycle 
  1f1e:36                push 
  1f1f:72 0c16          lofsa $0c16 // dreamProp2
  1f22:4a 24             send 24 

  1f24:39 6b            pushi 6b // $6b init
  1f26:76               push0 
  1f27:39 05            pushi 5 // $5 view
  1f29:78               push1 
  1f2a:38 0172          pushi 172 // $172 showScore
  1f2d:38 00a2          pushi a2 // $a2 setLoop
  1f30:78               push1 
  1f31:78               push1 
  1f32:38 0096          pushi 96 // $96 setCycle
  1f35:78               push1 
  1f36:51 5e            class RandCycle 
  1f38:36                push 
  1f39:38 00db          pushi db // $db cycleSpeed
  1f3c:78               push1 
  1f3d:39 08            pushi 8 // $8 underBits
  1f3f:38 011c          pushi 11c // $11c posn
  1f42:7a               push2 
  1f43:38 00ec          pushi ec // $ec pickLoop
  1f46:39 70            pushi 70 // $70 isMemberOf
  1f48:72 0c7c          lofsa $0c7c // dreamProp3
  1f4b:4a 24             send 24 

  1f4d:39 6b            pushi 6b // $6b init
  1f4f:76               push0 
  1f50:39 05            pushi 5 // $5 view
  1f52:78               push1 
  1f53:38 0172          pushi 172 // $172 showScore
  1f56:38 00a2          pushi a2 // $a2 setLoop
  1f59:78               push1 
  1f5a:39 03            pushi 3 // $3 y
  1f5c:38 0096          pushi 96 // $96 setCycle
  1f5f:78               push1 
  1f60:51 5e            class RandCycle 
  1f62:36                push 
  1f63:38 00db          pushi db // $db cycleSpeed
  1f66:78               push1 
  1f67:39 06            pushi 6 // $6 loop
  1f69:38 011c          pushi 11c // $11c posn
  1f6c:7a               push2 
  1f6d:39 7e            pushi 7e // $7e addToEnd
  1f6f:39 58            pushi 58 // $58 subtitleLang
  1f71:72 0ce2          lofsa $0ce2 // dreamProp4
  1f74:4a 24             send 24 

  1f76:39 6b            pushi 6b // $6b init
  1f78:76               push0 
  1f79:39 05            pushi 5 // $5 view
  1f7b:78               push1 
  1f7c:38 0172          pushi 172 // $172 showScore
  1f7f:38 00a2          pushi a2 // $a2 setLoop
  1f82:78               push1 
  1f83:39 04            pushi 4 // $4 x
  1f85:38 0096          pushi 96 // $96 setCycle
  1f88:78               push1 
  1f89:51 5e            class RandCycle 
  1f8b:36                push 
  1f8c:38 00db          pushi db // $db cycleSpeed
  1f8f:78               push1 
  1f90:39 06            pushi 6 // $6 loop
  1f92:38 011c          pushi 11c // $11c posn
  1f95:7a               push2 
  1f96:38 00c1          pushi c1 // $c1 lowlightColor
  1f99:39 5e            pushi 5e // $5e min
  1f9b:72 0d48          lofsa $0d48 // dreamProp5
  1f9e:4a 24             send 24 

  1fa0:39 6b            pushi 6b // $6b init
  1fa2:76               push0 
  1fa3:39 05            pushi 5 // $5 view
  1fa5:78               push1 
  1fa6:38 0173          pushi 173 // $173 iconBarInvItem
  1fa9:38 011c          pushi 11c // $11c posn
  1fac:7a               push2 
  1fad:38 00a6          pushi a6 // $a6 playBed
  1fb0:38 0097          pushi 97 // $97 setReal
  1fb3:38 00a2          pushi a2 // $a2 setLoop
  1fb6:78               push1 
  1fb7:76               push0 
  1fb8:38 0096          pushi 96 // $96 setCycle
  1fbb:78               push1 
  1fbc:51 17            class Fwd 
  1fbe:36                push 
  1fbf:38 00db          pushi db // $db cycleSpeed
  1fc2:78               push1 
  1fc3:39 08            pushi 8 // $8 underBits
  1fc5:38 008e          pushi 8e // $8e setScript
  1fc8:78               push1 
  1fc9:72 2ec4          lofsa $2ec4 // sPlayGuitar
  1fcc:36                push 
  1fcd:72 0b4a          lofsa $0b4a // patti
  1fd0:4a 2a             send 2a 

  1fd2:39 08            pushi 8 // $8 underBits
  1fd4:39 0b            pushi b // $b nsBottom
  1fd6:76               push0 
  1fd7:76               push0 
  1fd8:38 00c0          pushi c0 // $c0 highlightColor
  1fdb:38 0140          pushi 140 // $140 mapKeyToDir
  1fde:7a               push2 
  1fdf:76               push0 
  1fe0:76               push0 
  1fe1:43 6c 10         callk Graph 10 

  1fe4:35 38              ldi 38 
  1fe6:a3 02              sal local2 
  1fe8:38 018d          pushi 18d // $18d overlay
  1feb:78               push1 
  1fec:38 0172          pushi 172 // $172 showScore
  1fef:81 02              lag  
  1ff1:4a 06             send 6 

  1ff3:35 03              ldi 3 
  1ff5:65 12             aTop seconds 
  1ff7:32 0080            jmp code_207a 

        code_1ffa
  1ffa:3c                 dup 
  1ffb:35 01              ldi 1 
  1ffd:1a                 eq? 
  1ffe:30 001b            bnt code_201c 
  2001:39 09            pushi 9 // $9 nsTop
  2003:38 0140          pushi 140 // $140 mapKeyToDir
  2006:39 18            pushi 18 // $18 key
  2008:39 6c            pushi 6c // $6c dispose
  200a:7c            pushSelf 
  200b:39 43            pushi 43 // $43 at
  200d:39 ff            pushi ff // $ff syncNum
  200f:39 0f            pushi f // $f lsBottom
  2011:39 46            pushi 46 // $46 width
  2013:38 0118          pushi 118 // $118 isNotHidden
  2016:45 0e 12         callb procedure_000e 12 //  

  2019:32 005e            jmp code_207a 

        code_201c
  201c:3c                 dup 
  201d:35 02              ldi 2 
  201f:1a                 eq? 
  2020:30 0007            bnt code_202a 
  2023:35 5a              ldi 5a 
  2025:65 16             aTop ticks 
  2027:32 0050            jmp code_207a 

        code_202a
  202a:3c                 dup 
  202b:35 03              ldi 3 
  202d:1a                 eq? 
  202e:30 0025            bnt code_2056 
  2031:38 009f          pushi 9f // $9f fade
  2034:39 04            pushi 4 // $4 x
  2036:76               push0 
  2037:39 0f            pushi f // $f lsBottom
  2039:39 0a            pushi a // $a nsLeft
  203b:78               push1 
  203c:81 66              lag  
  203e:4a 0c             send c 

  2040:38 009f          pushi 9f // $9f fade
  2043:39 04            pushi 4 // $4 x
  2045:76               push0 
  2046:39 0f            pushi f // $f lsBottom
  2048:39 0a            pushi a // $a nsLeft
  204a:78               push1 
  204b:81 67              lag  
  204d:4a 0c             send c 

  204f:35 03              ldi 3 
  2051:65 12             aTop seconds 
  2053:32 0024            jmp code_207a 

        code_2056
  2056:3c                 dup 
  2057:35 04              ldi 4 
  2059:1a                 eq? 
  205a:30 000b            bnt code_2068 
  205d:35 00              ldi 0 
  205f:a3 01              sal local1 
  2061:35 02              ldi 2 
  2063:65 10             aTop cycles 
  2065:32 0012            jmp code_207a 

        code_2068
  2068:3c                 dup 
  2069:35 05              ldi 5 
  206b:1a                 eq? 
  206c:30 000b            bnt code_207a 
  206f:38 0179          pushi 179 // $179 newRoom
  2072:78               push1 
  2073:38 0320          pushi 320 // $320 sel_800
  2076:81 02              lag  
  2078:4a 06             send 6 


        code_207a
  207a:3a                toss 
  207b:48                 ret 
    )

)

// 2514
(instance sWakeUpTaj of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_20b6
  20b6:3f 02             link 2 // (var $2)
  20b8:87 01              lap param1 
  20ba:65 0a             aTop state 
  20bc:36                push 
  20bd:3c                 dup 
  20be:35 00              ldi 0 
  20c0:1a                 eq? 
  20c1:30 00eb            bnt code_21af 
  20c4:78               push1 
  20c5:38 0136          pushi 136 // $136 horizon
  20c8:45 0d 02         callb procedure_000d 2 //  

  20cb:39 69            pushi 69 // $69 hide
  20cd:76               push0 
  20ce:72 0ac4          lofsa $0ac4 // cloud
  20d1:4a 04             send 4 

  20d3:38 018c          pushi 18c // $18c drawPic
  20d6:78               push1 
  20d7:38 0183          pushi 183 // $183 picture
  20da:76               push0 
  20db:81 02              lag  
  20dd:4a 04             send 4 

  20df:36                push 
  20e0:81 02              lag  
  20e2:4a 06             send 6 

  20e4:39 08            pushi 8 // $8 underBits
  20e6:39 0b            pushi b // $b nsBottom
  20e8:76               push0 
  20e9:76               push0 
  20ea:38 00c0          pushi c0 // $c0 highlightColor
  20ed:38 0140          pushi 140 // $140 mapKeyToDir
  20f0:7a               push2 
  20f1:76               push0 
  20f2:76               push0 
  20f3:43 6c 10         callk Graph 10 

  20f6:35 38              ldi 38 
  20f8:a3 02              sal local2 
  20fa:38 018d          pushi 18d // $18d overlay
  20fd:78               push1 
  20fe:38 0177          pushi 177 // $177 _detailLevel
  2101:81 02              lag  
  2103:4a 06             send 6 

  2105:39 6b            pushi 6b // $6b init
  2107:76               push0 
  2108:39 05            pushi 5 // $5 view
  210a:78               push1 
  210b:38 0178          pushi 178 // $178 egoMoveSpeed
  210e:38 00a2          pushi a2 // $a2 setLoop
  2111:78               push1 
  2112:76               push0 
  2113:38 0120          pushi 120 // $120 setCel
  2116:78               push1 
  2117:76               push0 
  2118:38 011c          pushi 11c // $11c posn
  211b:7a               push2 
  211c:38 00aa          pushi aa // $aa setSize
  211f:38 0089          pushi 89 // $89 register
  2122:39 42            pushi 42 // $42 setPri
  2124:78               push1 
  2125:39 0e            pushi e // $e lsLeft
  2127:38 00db          pushi db // $db cycleSpeed
  212a:78               push1 
  212b:39 0a            pushi a // $a nsLeft
  212d:72 0bb0          lofsa $0bb0 // dreamProp1
  2130:4a 2a             send 2a 

  2132:39 6b            pushi 6b // $6b init
  2134:76               push0 
  2135:39 05            pushi 5 // $5 view
  2137:78               push1 
  2138:38 0178          pushi 178 // $178 egoMoveSpeed
  213b:38 00a2          pushi a2 // $a2 setLoop
  213e:78               push1 
  213f:7a               push2 
  2140:38 011c          pushi 11c // $11c posn
  2143:7a               push2 
  2144:38 00aa          pushi aa // $aa setSize
  2147:38 0089          pushi 89 // $89 register
  214a:38 00db          pushi db // $db cycleSpeed
  214d:78               push1 
  214e:39 0a            pushi a // $a nsLeft
  2150:39 42            pushi 42 // $42 setPri
  2152:78               push1 
  2153:39 0d            pushi d // $d lsTop
  2155:38 011d          pushi 11d // $11d stopUpd
  2158:76               push0 
  2159:72 075c          lofsa $075c // larry
  215c:4a 28             send 28 

  215e:39 6b            pushi 6b // $6b init
  2160:76               push0 
  2161:39 05            pushi 5 // $5 view
  2163:78               push1 
  2164:38 0177          pushi 177 // $177 _detailLevel
  2167:38 00a2          pushi a2 // $a2 setLoop
  216a:78               push1 
  216b:76               push0 
  216c:38 011c          pushi 11c // $11c posn
  216f:7a               push2 
  2170:38 00c5          pushi c5 // $c5 mask
  2173:38 008d          pushi 8d // $8d cue
  2176:39 42            pushi 42 // $42 setPri
  2178:78               push1 
  2179:39 0f            pushi f // $f lsBottom
  217b:72 0c16          lofsa $0c16 // dreamProp2
  217e:4a 1e             send 1e 

  2180:39 6b            pushi 6b // $6b init
  2182:76               push0 
  2183:39 05            pushi 5 // $5 view
  2185:78               push1 
  2186:38 0179          pushi 179 // $179 newRoom
  2189:38 00a2          pushi a2 // $a2 setLoop
  218c:78               push1 
  218d:76               push0 
  218e:38 011c          pushi 11c // $11c posn
  2191:7a               push2 
  2192:38 00e2          pushi e2 // $e2 setTarget
  2195:38 0087          pushi 87 // $87 ticks
  2198:39 42            pushi 42 // $42 setPri
  219a:78               push1 
  219b:39 0e            pushi e // $e lsLeft
  219d:38 00db          pushi db // $db cycleSpeed
  21a0:78               push1 
  21a1:39 0a            pushi a // $a nsLeft
  21a3:72 0b4a          lofsa $0b4a // patti
  21a6:4a 24             send 24 

  21a8:35 0a              ldi a 
  21aa:65 16             aTop ticks 
  21ac:32 035d            jmp code_250c 

        code_21af
  21af:3c                 dup 
  21b0:35 01              ldi 1 
  21b2:1a                 eq? 
  21b3:30 0058            bnt code_220e 
  21b6:76               push0 
  21b7:45 02 00         callb procedure_0002 0 //  

  21ba:39 07            pushi 7 // $7 cel
  21bc:38 0140          pushi 140 // $140 mapKeyToDir
  21bf:39 19            pushi 19 // $19 time
  21c1:39 43            pushi 43 // $43 at
  21c3:39 ff            pushi ff // $ff syncNum
  21c5:39 0f            pushi f // $f lsBottom
  21c7:39 46            pushi 46 // $46 width
  21c9:38 0118          pushi 118 // $118 isNotHidden
  21cc:45 0e 0e         callb procedure_000e e //  

  21cf:39 2b            pushi 2b // $2b number
  21d1:78               push1 
  21d2:38 0177          pushi 177 // $177 _detailLevel
  21d5:39 06            pushi 6 // $6 loop
  21d7:78               push1 
  21d8:39 ff            pushi ff // $ff syncNum
  21da:39 2a            pushi 2a // $2a play
  21dc:76               push0 
  21dd:81 67              lag  
  21df:4a 10             send 10 

  21e1:38 00db          pushi db // $db cycleSpeed
  21e4:78               push1 
  21e5:39 0a            pushi a // $a nsLeft
  21e7:38 0096          pushi 96 // $96 setCycle
  21ea:78               push1 
  21eb:51 17            class Fwd 
  21ed:36                push 
  21ee:72 0b4a          lofsa $0b4a // patti
  21f1:4a 0c             send c 

  21f3:38 00db          pushi db // $db cycleSpeed
  21f6:78               push1 
  21f7:39 0a            pushi a // $a nsLeft
  21f9:38 0120          pushi 120 // $120 setCel
  21fc:78               push1 
  21fd:76               push0 
  21fe:38 0096          pushi 96 // $96 setCycle
  2201:7a               push2 
  2202:51 1a            class End 
  2204:36                push 
  2205:7c            pushSelf 
  2206:72 0c16          lofsa $0c16 // dreamProp2
  2209:4a 14             send 14 

  220b:32 02fe            jmp code_250c 

        code_220e
  220e:3c                 dup 
  220f:35 02              ldi 2 
  2211:1a                 eq? 
  2212:30 0019            bnt code_222e 
  2215:38 00a2          pushi a2 // $a2 setLoop
  2218:78               push1 
  2219:78               push1 
  221a:38 0096          pushi 96 // $96 setCycle
  221d:78               push1 
  221e:72 10c8          lofsa $10c8 // MyForward
  2221:36                push 
  2222:72 0c16          lofsa $0c16 // dreamProp2
  2225:4a 0c             send c 

  2227:35 03              ldi 3 
  2229:65 12             aTop seconds 
  222b:32 02de            jmp code_250c 

        code_222e
  222e:3c                 dup 
  222f:35 03              ldi 3 
  2231:1a                 eq? 
  2232:30 0015            bnt code_224a 
  2235:38 0120          pushi 120 // $120 setCel
  2238:78               push1 
  2239:76               push0 
  223a:38 0096          pushi 96 // $96 setCycle
  223d:7a               push2 
  223e:51 1a            class End 
  2240:36                push 
  2241:7c            pushSelf 
  2242:72 0bb0          lofsa $0bb0 // dreamProp1
  2245:4a 0e             send e 

  2247:32 02c2            jmp code_250c 

        code_224a
  224a:3c                 dup 
  224b:35 04              ldi 4 
  224d:1a                 eq? 
  224e:30 0018            bnt code_2269 
  2251:38 00a2          pushi a2 // $a2 setLoop
  2254:78               push1 
  2255:78               push1 
  2256:38 0096          pushi 96 // $96 setCycle
  2259:78               push1 
  225a:51 17            class Fwd 
  225c:36                push 
  225d:72 0bb0          lofsa $0bb0 // dreamProp1
  2260:4a 0c             send c 

  2262:35 03              ldi 3 
  2264:65 12             aTop seconds 
  2266:32 02a3            jmp code_250c 

        code_2269
  2269:3c                 dup 
  226a:35 05              ldi 5 
  226c:1a                 eq? 
  226d:30 002d            bnt code_229d 
  2270:39 08            pushi 8 // $8 underBits
  2272:38 0140          pushi 140 // $140 mapKeyToDir
  2275:39 1a            pushi 1a // $1a text
  2277:39 43            pushi 43 // $43 at
  2279:39 ff            pushi ff // $ff syncNum
  227b:39 0f            pushi f // $f lsBottom
  227d:39 46            pushi 46 // $46 width
  227f:38 0118          pushi 118 // $118 isNotHidden
  2282:39 6c            pushi 6c // $6c dispose
  2284:45 0e 10         callb procedure_000e 10 //  

  2287:38 009f          pushi 9f // $9f fade
  228a:39 04            pushi 4 // $4 x
  228c:76               push0 
  228d:39 0f            pushi f // $f lsBottom
  228f:39 0c            pushi c // $c nsRight
  2291:78               push1 
  2292:81 67              lag  
  2294:4a 0c             send c 

  2296:35 04              ldi 4 
  2298:65 12             aTop seconds 
  229a:32 026f            jmp code_250c 

        code_229d
  229d:3c                 dup 
  229e:35 06              ldi 6 
  22a0:1a                 eq? 
  22a1:30 0146            bnt code_23ea 
  22a4:35 00              ldi 0 
  22a6:a3 01              sal local1 
  22a8:38 018c          pushi 18c // $18c drawPic
  22ab:78               push1 
  22ac:38 0183          pushi 183 // $183 picture
  22af:76               push0 
  22b0:81 02              lag  
  22b2:4a 04             send 4 

  22b4:36                push 
  22b5:81 02              lag  
  22b7:4a 06             send 6 

  22b9:39 6b            pushi 6b // $6b init
  22bb:76               push0 
  22bc:38 011d          pushi 11d // $11d stopUpd
  22bf:76               push0 
  22c0:72 09cc          lofsa $09cc // body
  22c3:4a 08             send 8 

  22c5:39 6b            pushi 6b // $6b init
  22c7:76               push0 
  22c8:72 08b0          lofsa $08b0 // arm
  22cb:4a 04             send 4 

  22cd:39 6b            pushi 6b // $6b init
  22cf:76               push0 
  22d0:72 0842          lofsa $0842 // tray
  22d3:4a 04             send 4 

  22d5:78               push1 
  22d6:39 34            pushi 34 // $34 b-xAxis
  22d8:45 06 02         callb procedure_0006 2 //  

  22db:18                 not 
  22dc:30 0016            bnt code_22f5 
  22df:38 00d5          pushi d5 // $d5 has
  22e2:78               push1 
  22e3:39 09            pushi 9 // $9 nsTop
  22e5:81 00              lag  
  22e7:4a 06             send 6 

  22e9:18                 not 
  22ea:30 0008            bnt code_22f5 
  22ed:39 6b            pushi 6b // $6b init
  22ef:76               push0 
  22f0:72 1048          lofsa $1048 // magazine
  22f3:4a 04             send 4 


        code_22f5
  22f5:39 6c            pushi 6c // $6c dispose
  22f7:76               push0 
  22f8:72 0bb0          lofsa $0bb0 // dreamProp1
  22fb:4a 04             send 4 

  22fd:39 6c            pushi 6c // $6c dispose
  22ff:76               push0 
  2300:72 0c16          lofsa $0c16 // dreamProp2
  2303:4a 04             send 4 

  2305:39 6c            pushi 6c // $6c dispose
  2307:76               push0 
  2308:72 0b4a          lofsa $0b4a // patti
  230b:4a 04             send 4 

  230d:39 2b            pushi 2b // $2b number
  230f:78               push1 
  2310:38 0141          pushi 141 // $141 curEvent
  2313:39 06            pushi 6 // $6 loop
  2315:78               push1 
  2316:39 ff            pushi ff // $ff syncNum
  2318:39 2a            pushi 2a // $2a play
  231a:76               push0 
  231b:81 66              lag  
  231d:4a 10             send 10 

  231f:39 2b            pushi 2b // $2b number
  2321:78               push1 
  2322:38 015a          pushi 15a // $15a lftBordColor
  2325:39 06            pushi 6 // $6 loop
  2327:78               push1 
  2328:78               push1 
  2329:39 2a            pushi 2a // $2a play
  232b:78               push1 
  232c:39 3c            pushi 3c // $3c doit
  232e:38 009f          pushi 9f // $9f fade
  2331:39 04            pushi 4 // $4 x
  2333:39 7f            pushi 7f // $7f addAfter
  2335:39 0f            pushi f // $f lsBottom
  2337:39 0a            pushi a // $a nsLeft
  2339:76               push0 
  233a:81 67              lag  
  233c:4a 1e             send 1e 

  233e:38 00c2          pushi c2 // $c2 show
  2341:76               push0 
  2342:72 0ac4          lofsa $0ac4 // cloud
  2345:4a 04             send 4 

  2347:39 6b            pushi 6b // $6b init
  2349:76               push0 
  234a:38 00db          pushi db // $db cycleSpeed
  234d:78               push1 
  234e:39 0a            pushi a // $a nsLeft
  2350:38 0096          pushi 96 // $96 setCycle
  2353:7a               push2 
  2354:51 1a            class End 
  2356:36                push 
  2357:7c            pushSelf 
  2358:72 0842          lofsa $0842 // tray
  235b:4a 12             send 12 

  235d:39 6b            pushi 6b // $6b init
  235f:76               push0 
  2360:39 05            pushi 5 // $5 view
  2362:78               push1 
  2363:38 0145          pushi 145 // $145 theObj
  2366:38 011c          pushi 11c // $11c posn
  2369:7a               push2 
  236a:38 0088          pushi 88 // $88 lastTicks
  236d:39 44            pushi 44 // $44 next
  236f:38 00a2          pushi a2 // $a2 setLoop
  2372:78               push1 
  2373:78               push1 
  2374:38 0120          pushi 120 // $120 setCel
  2377:78               push1 
  2378:76               push0 
  2379:72 075c          lofsa $075c // larry
  237c:4a 1e             send 1e 

  237e:39 6b            pushi 6b // $6b init
  2380:76               push0 
  2381:39 05            pushi 5 // $5 view
  2383:78               push1 
  2384:38 0145          pushi 145 // $145 theObj
  2387:38 00a2          pushi a2 // $a2 setLoop
  238a:78               push1 
  238b:76               push0 
  238c:38 0120          pushi 120 // $120 setCel
  238f:78               push1 
  2390:76               push0 
  2391:38 011d          pushi 11d // $11d stopUpd
  2394:76               push0 
  2395:72 09cc          lofsa $09cc // body
  2398:4a 1a             send 1a 

  239a:39 6b            pushi 6b // $6b init
  239c:76               push0 
  239d:39 05            pushi 5 // $5 view
  239f:78               push1 
  23a0:38 0145          pushi 145 // $145 theObj
  23a3:38 00a2          pushi a2 // $a2 setLoop
  23a6:78               push1 
  23a7:7a               push2 
  23a8:38 0120          pushi 120 // $120 setCel
  23ab:78               push1 
  23ac:78               push1 
  23ad:38 011c          pushi 11c // $11c posn
  23b0:7a               push2 
  23b1:38 0084          pushi 84 // $84 cycles
  23b4:39 4c            pushi 4c // $4c claimed
  23b6:39 42            pushi 42 // $42 setPri
  23b8:78               push1 
  23b9:39 06            pushi 6 // $6 loop
  23bb:72 08b0          lofsa $08b0 // arm
  23be:4a 24             send 24 

  23c0:39 6b            pushi 6b // $6b init
  23c2:76               push0 
  23c3:39 05            pushi 5 // $5 view
  23c5:78               push1 
  23c6:38 0145          pushi 145 // $145 theObj
  23c9:38 00a2          pushi a2 // $a2 setLoop
  23cc:78               push1 
  23cd:39 03            pushi 3 // $3 y
  23cf:38 0120          pushi 120 // $120 setCel
  23d2:78               push1 
  23d3:78               push1 
  23d4:39 42            pushi 42 // $42 setPri
  23d6:78               push1 
  23d7:39 06            pushi 6 // $6 loop
  23d9:38 011c          pushi 11c // $11c posn
  23dc:7a               push2 
  23dd:38 00b7          pushi b7 // $b7 top
  23e0:39 38            pushi 38 // $38 moveSpeed
  23e2:72 0916          lofsa $0916 // arm2
  23e5:4a 24             send 24 

  23e7:32 0122            jmp code_250c 

        code_23ea
  23ea:3c                 dup 
  23eb:35 07              ldi 7 
  23ed:1a                 eq? 
  23ee:30 001f            bnt code_2410 
  23f1:38 0120          pushi 120 // $120 setCel
  23f4:78               push1 
  23f5:78               push1 
  23f6:38 00db          pushi db // $db cycleSpeed
  23f9:78               push1 
  23fa:39 0a            pushi a // $a nsLeft
  23fc:38 0096          pushi 96 // $96 setCycle
  23ff:39 04            pushi 4 // $4 x
  2401:51 19            class CT 
  2403:36                push 
  2404:39 05            pushi 5 // $5 view
  2406:78               push1 
  2407:7c            pushSelf 
  2408:72 075c          lofsa $075c // larry
  240b:4a 18             send 18 

  240d:32 00fc            jmp code_250c 

        code_2410
  2410:3c                 dup 
  2411:35 08              ldi 8 
  2413:1a                 eq? 
  2414:30 004b            bnt code_2462 
  2417:38 0120          pushi 120 // $120 setCel
  241a:78               push1 
  241b:39 06            pushi 6 // $6 loop
  241d:38 011c          pushi 11c // $11c posn
  2420:7a               push2 
  2421:38 0090          pushi 90 // $90 localize
  2424:39 42            pushi 42 // $42 setPri
  2426:72 075c          lofsa $075c // larry
  2429:4a 0e             send e 

  242b:38 0120          pushi 120 // $120 setCel
  242e:78               push1 
  242f:78               push1 
  2430:72 09cc          lofsa $09cc // body
  2433:4a 06             send 6 

  2435:38 0120          pushi 120 // $120 setCel
  2438:78               push1 
  2439:7a               push2 
  243a:38 011c          pushi 11c // $11c posn
  243d:7a               push2 
  243e:38 0081          pushi 81 // $81 handleEvent
  2441:39 4e            pushi 4e // $4e save
  2443:72 08b0          lofsa $08b0 // arm
  2446:4a 0e             send e 

  2448:38 0120          pushi 120 // $120 setCel
  244b:78               push1 
  244c:7a               push2 
  244d:38 011c          pushi 11c // $11c posn
  2450:7a               push2 
  2451:38 00aa          pushi aa // $aa setSize
  2454:39 3c            pushi 3c // $3c doit
  2456:72 0916          lofsa $0916 // arm2
  2459:4a 0e             send e 

  245b:35 1e              ldi 1e 
  245d:65 16             aTop ticks 
  245f:32 00aa            jmp code_250c 

        code_2462
  2462:3c                 dup 
  2463:35 09              ldi 9 
  2465:1a                 eq? 
  2466:30 0039            bnt code_24a2 
  2469:38 0120          pushi 120 // $120 setCel
  246c:78               push1 
  246d:39 03            pushi 3 // $3 y
  246f:38 011c          pushi 11c // $11c posn
  2472:7a               push2 
  2473:38 0081          pushi 81 // $81 handleEvent
  2476:39 4b            pushi 4b // $4b said
  2478:72 08b0          lofsa $08b0 // arm
  247b:4a 0e             send e 

  247d:38 0120          pushi 120 // $120 setCel
  2480:78               push1 
  2481:39 07            pushi 7 // $7 cel
  2483:38 011c          pushi 11c // $11c posn
  2486:7a               push2 
  2487:38 0098          pushi 98 // $98 set60ths
  248a:39 3d            pushi 3d // $3d isBlocked
  248c:72 075c          lofsa $075c // larry
  248f:4a 0e             send e 

  2491:38 0120          pushi 120 // $120 setCel
  2494:78               push1 
  2495:7a               push2 
  2496:72 09cc          lofsa $09cc // body
  2499:4a 06             send 6 

  249b:35 03              ldi 3 
  249d:65 12             aTop seconds 
  249f:32 006a            jmp code_250c 

        code_24a2
  24a2:3c                 dup 
  24a3:35 0a              ldi a 
  24a5:1a                 eq? 
  24a6:30 0051            bnt code_24fa 
  24a9:39 07            pushi 7 // $7 cel
  24ab:38 0140          pushi 140 // $140 mapKeyToDir
  24ae:39 15            pushi 15 // $15 brBottom
  24b0:39 43            pushi 43 // $43 at
  24b2:39 ff            pushi ff // $ff syncNum
  24b4:38 00b9          pushi b9 // $b9 bottom
  24b7:39 46            pushi 46 // $46 width
  24b9:38 0118          pushi 118 // $118 isNotHidden
  24bc:45 0e 0e         callb procedure_000e e //  

  24bf:39 07            pushi 7 // $7 cel
  24c1:38 0140          pushi 140 // $140 mapKeyToDir
  24c4:39 1b            pushi 1b // $1b elements
  24c6:39 43            pushi 43 // $43 at
  24c8:39 ff            pushi ff // $ff syncNum
  24ca:38 00b9          pushi b9 // $b9 bottom
  24cd:39 46            pushi 46 // $46 width
  24cf:38 0118          pushi 118 // $118 isNotHidden
  24d2:45 0e 0e         callb procedure_000e e //  

  24d5:38 009f          pushi 9f // $9f fade
  24d8:39 04            pushi 4 // $4 x
  24da:76               push0 
  24db:39 0f            pushi f // $f lsBottom
  24dd:39 0a            pushi a // $a nsLeft
  24df:78               push1 
  24e0:81 66              lag  
  24e2:4a 0c             send c 

  24e4:38 009f          pushi 9f // $9f fade
  24e7:39 04            pushi 4 // $4 x
  24e9:76               push0 
  24ea:39 0f            pushi f // $f lsBottom
  24ec:39 0a            pushi a // $a nsLeft
  24ee:78               push1 
  24ef:81 67              lag  
  24f1:4a 0c             send c 

  24f3:35 03              ldi 3 
  24f5:65 12             aTop seconds 
  24f7:32 0012            jmp code_250c 

        code_24fa
  24fa:3c                 dup 
  24fb:35 0b              ldi b 
  24fd:1a                 eq? 
  24fe:30 000b            bnt code_250c 
  2501:38 0179          pushi 179 // $179 newRoom
  2504:78               push1 
  2505:38 0136          pushi 136 // $136 horizon
  2508:81 02              lag  
  250a:4a 06             send 6 


        code_250c
  250c:3a                toss 
  250d:48                 ret 
    )

)

// 28cc
(instance sDreamVenice of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2548
  2548:3f 02             link 2 // (var $2)
  254a:87 01              lap param1 
  254c:65 0a             aTop state 
  254e:36                push 
  254f:3c                 dup 
  2550:35 00              ldi 0 
  2552:1a                 eq? 
  2553:30 0102            bnt code_2658 
  2556:78               push1 
  2557:39 34            pushi 34 // $34 b-xAxis
  2559:45 06 02         callb procedure_0006 2 //  

  255c:18                 not 
  255d:30 0016            bnt code_2576 
  2560:38 00d5          pushi d5 // $d5 has
  2563:78               push1 
  2564:39 09            pushi 9 // $9 nsTop
  2566:81 00              lag  
  2568:4a 06             send 6 

  256a:18                 not 
  256b:30 0008            bnt code_2576 
  256e:39 6c            pushi 6c // $6c dispose
  2570:76               push0 
  2571:72 1048          lofsa $1048 // magazine
  2574:4a 04             send 4 


        code_2576
  2576:39 6c            pushi 6c // $6c dispose
  2578:76               push0 
  2579:72 09cc          lofsa $09cc // body
  257c:4a 04             send 4 

  257e:39 6c            pushi 6c // $6c dispose
  2580:76               push0 
  2581:72 08b0          lofsa $08b0 // arm
  2584:4a 04             send 4 

  2586:39 6c            pushi 6c // $6c dispose
  2588:76               push0 
  2589:72 0842          lofsa $0842 // tray
  258c:4a 04             send 4 

  258e:39 6c            pushi 6c // $6c dispose
  2590:76               push0 
  2591:72 0ac4          lofsa $0ac4 // cloud
  2594:4a 04             send 4 

  2596:39 6c            pushi 6c // $6c dispose
  2598:76               push0 
  2599:72 0916          lofsa $0916 // arm2
  259c:4a 04             send 4 

  259e:39 05            pushi 5 // $5 view
  25a0:78               push1 
  25a1:38 015e          pushi 15e // $15e shadowWid
  25a4:38 00a2          pushi a2 // $a2 setLoop
  25a7:78               push1 
  25a8:76               push0 
  25a9:38 011c          pushi 11c // $11c posn
  25ac:7a               push2 
  25ad:38 00d8          pushi d8 // $d8 nextCel
  25b0:39 5d            pushi 5d // $5d handle
  25b2:39 42            pushi 42 // $42 setPri
  25b4:78               push1 
  25b5:39 0c            pushi c // $c nsRight
  25b7:38 0096          pushi 96 // $96 setCycle
  25ba:78               push1 
  25bb:51 17            class Fwd 
  25bd:36                push 
  25be:38 00db          pushi db // $db cycleSpeed
  25c1:78               push1 
  25c2:39 0a            pushi a // $a nsLeft
  25c4:39 11            pushi 11 // $11 signal
  25c6:78               push1 
  25c7:38 4810          pushi 4810 // $4810 sel_18448
  25ca:72 0bb0          lofsa $0bb0 // dreamProp1
  25cd:4a 2c             send 2c 

  25cf:39 6b            pushi 6b // $6b init
  25d1:76               push0 
  25d2:39 05            pushi 5 // $5 view
  25d4:78               push1 
  25d5:38 015e          pushi 15e // $15e shadowWid
  25d8:38 00a2          pushi a2 // $a2 setLoop
  25db:78               push1 
  25dc:78               push1 
  25dd:38 011c          pushi 11c // $11c posn
  25e0:7a               push2 
  25e1:38 00d1          pushi d1 // $d1 curInvIcon
  25e4:38 0087          pushi 87 // $87 ticks
  25e7:38 0096          pushi 96 // $96 setCycle
  25ea:78               push1 
  25eb:51 17            class Fwd 
  25ed:36                push 
  25ee:38 00db          pushi db // $db cycleSpeed
  25f1:78               push1 
  25f2:39 0a            pushi a // $a nsLeft
  25f4:39 42            pushi 42 // $42 setPri
  25f6:78               push1 
  25f7:39 0c            pushi c // $c nsRight
  25f9:39 11            pushi 11 // $11 signal
  25fb:78               push1 
  25fc:38 4810          pushi 4810 // $4810 sel_18448
  25ff:72 0c16          lofsa $0c16 // dreamProp2
  2602:4a 30             send 30 

  2604:39 6b            pushi 6b // $6b init
  2606:76               push0 
  2607:39 05            pushi 5 // $5 view
  2609:78               push1 
  260a:38 015f          pushi 15f // $15f ck
  260d:38 00a2          pushi a2 // $a2 setLoop
  2610:78               push1 
  2611:76               push0 
  2612:38 0120          pushi 120 // $120 setCel
  2615:78               push1 
  2616:76               push0 
  2617:38 011c          pushi 11c // $11c posn
  261a:7a               push2 
  261b:38 0129          pushi 129 // $129 avoider
  261e:39 4d            pushi 4d // $4d value
  2620:39 42            pushi 42 // $42 setPri
  2622:78               push1 
  2623:39 0d            pushi d // $d lsTop
  2625:39 11            pushi 11 // $11 signal
  2627:78               push1 
  2628:38 4810          pushi 4810 // $4810 sel_18448
  262b:72 075c          lofsa $075c // larry
  262e:4a 2a             send 2a 

  2630:39 08            pushi 8 // $8 underBits
  2632:39 0b            pushi b // $b nsBottom
  2634:76               push0 
  2635:76               push0 
  2636:38 00c0          pushi c0 // $c0 highlightColor
  2639:38 0140          pushi 140 // $140 mapKeyToDir
  263c:7a               push2 
  263d:76               push0 
  263e:76               push0 
  263f:43 6c 10         callk Graph 10 

  2642:35 38              ldi 38 
  2644:a3 02              sal local2 
  2646:38 018d          pushi 18d // $18d overlay
  2649:78               push1 
  264a:38 015e          pushi 15e // $15e shadowWid
  264d:81 02              lag  
  264f:4a 06             send 6 

  2651:35 1e              ldi 1e 
  2653:65 16             aTop ticks 
  2655:32 026b            jmp code_28c3 

        code_2658
  2658:3c                 dup 
  2659:35 01              ldi 1 
  265b:1a                 eq? 
  265c:30 003e            bnt code_269d 
  265f:39 07            pushi 7 // $7 cel
  2661:38 0140          pushi 140 // $140 mapKeyToDir
  2664:39 1c            pushi 1c // $1c color
  2666:39 43            pushi 43 // $43 at
  2668:39 ff            pushi ff // $ff syncNum
  266a:38 00b9          pushi b9 // $b9 bottom
  266d:39 46            pushi 46 // $46 width
  266f:38 0118          pushi 118 // $118 isNotHidden
  2672:45 0e 0e         callb procedure_000e e //  

  2675:38 00db          pushi db // $db cycleSpeed
  2678:78               push1 
  2679:39 08            pushi 8 // $8 underBits
  267b:39 38            pushi 38 // $38 moveSpeed
  267d:78               push1 
  267e:39 0c            pushi c // $c nsRight
  2680:38 0096          pushi 96 // $96 setCycle
  2683:78               push1 
  2684:51 17            class Fwd 
  2686:36                push 
  2687:38 011b          pushi 11b // $11b setMotion
  268a:39 04            pushi 4 // $4 x
  268c:51 1e            class MoveTo 
  268e:36                push 
  268f:38 011d          pushi 11d // $11d stopUpd
  2692:39 53            pushi 53 // $53 draw
  2694:7c            pushSelf 
  2695:72 075c          lofsa $075c // larry
  2698:4a 1e             send 1e 

  269a:32 0226            jmp code_28c3 

        code_269d
  269d:3c                 dup 
  269e:35 02              ldi 2 
  26a0:1a                 eq? 
  26a1:30 0016            bnt code_26ba 
  26a4:38 011b          pushi 11b // $11b setMotion
  26a7:39 04            pushi 4 // $4 x
  26a9:51 1e            class MoveTo 
  26ab:36                push 
  26ac:38 010a          pushi 10a // $10a theInvItem
  26af:39 5a            pushi 5a // $5a points
  26b1:7c            pushSelf 
  26b2:72 075c          lofsa $075c // larry
  26b5:4a 0c             send c 

  26b7:32 0209            jmp code_28c3 

        code_26ba
  26ba:3c                 dup 
  26bb:35 03              ldi 3 
  26bd:1a                 eq? 
  26be:30 0016            bnt code_26d7 
  26c1:38 011b          pushi 11b // $11b setMotion
  26c4:39 04            pushi 4 // $4 x
  26c6:51 1e            class MoveTo 
  26c8:36                push 
  26c9:38 00ff          pushi ff // $ff syncNum
  26cc:39 60            pushi 60 // $60 frame
  26ce:7c            pushSelf 
  26cf:72 075c          lofsa $075c // larry
  26d2:4a 0c             send c 

  26d4:32 01ec            jmp code_28c3 

        code_26d7
  26d7:3c                 dup 
  26d8:35 04              ldi 4 
  26da:1a                 eq? 
  26db:30 0011            bnt code_26ef 
  26de:38 0120          pushi 120 // $120 setCel
  26e1:78               push1 
  26e2:76               push0 
  26e3:72 075c          lofsa $075c // larry
  26e6:4a 06             send 6 

  26e8:35 02              ldi 2 
  26ea:65 10             aTop cycles 
  26ec:32 01d4            jmp code_28c3 

        code_26ef
  26ef:3c                 dup 
  26f0:35 05              ldi 5 
  26f2:1a                 eq? 
  26f3:30 0037            bnt code_272d 
  26f6:39 05            pushi 5 // $5 view
  26f8:38 0140          pushi 140 // $140 mapKeyToDir
  26fb:39 1d            pushi 1d // $1d back
  26fd:39 43            pushi 43 // $43 at
  26ff:39 ff            pushi ff // $ff syncNum
  2701:39 14            pushi 14 // $14 brLeft
  2703:45 0e 0a         callb procedure_000e a //  

  2706:39 05            pushi 5 // $5 view
  2708:38 0140          pushi 140 // $140 mapKeyToDir
  270b:39 1e            pushi 1e // $1e mode
  270d:39 43            pushi 43 // $43 at
  270f:39 ff            pushi ff // $ff syncNum
  2711:38 00b9          pushi b9 // $b9 bottom
  2714:45 0e 0a         callb procedure_000e a //  

  2717:38 00a2          pushi a2 // $a2 setLoop
  271a:78               push1 
  271b:78               push1 
  271c:38 0120          pushi 120 // $120 setCel
  271f:78               push1 
  2720:76               push0 
  2721:72 075c          lofsa $075c // larry
  2724:4a 0c             send c 

  2726:35 1e              ldi 1e 
  2728:65 16             aTop ticks 
  272a:32 0196            jmp code_28c3 

        code_272d
  272d:3c                 dup 
  272e:35 06              ldi 6 
  2730:1a                 eq? 
  2731:30 0043            bnt code_2777 
  2734:39 2b            pushi 2b // $2b number
  2736:78               push1 
  2737:38 015f          pushi 15f // $15f ck
  273a:39 06            pushi 6 // $6 loop
  273c:78               push1 
  273d:78               push1 
  273e:39 2a            pushi 2a // $2a play
  2740:76               push0 
  2741:81 67              lag  
  2743:4a 10             send 10 

  2745:38 0120          pushi 120 // $120 setCel
  2748:78               push1 
  2749:78               push1 
  274a:72 075c          lofsa $075c // larry
  274d:4a 06             send 6 

  274f:39 6b            pushi 6b // $6b init
  2751:76               push0 
  2752:39 05            pushi 5 // $5 view
  2754:78               push1 
  2755:38 015f          pushi 15f // $15f ck
  2758:39 42            pushi 42 // $42 setPri
  275a:78               push1 
  275b:39 0e            pushi e // $e lsLeft
  275d:38 00a2          pushi a2 // $a2 setLoop
  2760:78               push1 
  2761:7a               push2 
  2762:38 011c          pushi 11c // $11c posn
  2765:7a               push2 
  2766:38 00f1          pushi f1 // $f1 escaping
  2769:39 62            pushi 62 // $62 pri
  276b:72 0c7c          lofsa $0c7c // dreamProp3
  276e:4a 1e             send 1e 

  2770:35 02              ldi 2 
  2772:65 10             aTop cycles 
  2774:32 014c            jmp code_28c3 

        code_2777
  2777:3c                 dup 
  2778:35 07              ldi 7 
  277a:1a                 eq? 
  277b:30 0024            bnt code_27a2 
  277e:38 00db          pushi db // $db cycleSpeed
  2781:78               push1 
  2782:39 14            pushi 14 // $14 brLeft
  2784:38 0096          pushi 96 // $96 setCycle
  2787:78               push1 
  2788:51 1a            class End 
  278a:36                push 
  278b:38 011b          pushi 11b // $11b setMotion
  278e:39 04            pushi 4 // $4 x
  2790:51 1e            class MoveTo 
  2792:36                push 
  2793:38 0091          pushi 91 // $91 globalize
  2796:38 008f          pushi 8f // $8f port
  2799:7c            pushSelf 
  279a:72 075c          lofsa $075c // larry
  279d:4a 18             send 18 

  279f:32 0121            jmp code_28c3 

        code_27a2
  27a2:3c                 dup 
  27a3:35 08              ldi 8 
  27a5:1a                 eq? 
  27a6:30 00b5            bnt code_285e 
  27a9:81 19              lag  
  27ab:30 0005            bnt code_27b3 
  27ae:39 6c            pushi 6c // $6c dispose
  27b0:76               push0 
  27b1:4a 04             send 4 


        code_27b3
  27b3:39 6c            pushi 6c // $6c dispose
  27b5:76               push0 
  27b6:72 0bb0          lofsa $0bb0 // dreamProp1
  27b9:4a 04             send 4 

  27bb:39 6c            pushi 6c // $6c dispose
  27bd:76               push0 
  27be:72 0c16          lofsa $0c16 // dreamProp2
  27c1:4a 04             send 4 

  27c3:39 6c            pushi 6c // $6c dispose
  27c5:76               push0 
  27c6:72 0b4a          lofsa $0b4a // patti
  27c9:4a 04             send 4 

  27cb:38 018c          pushi 18c // $18c drawPic
  27ce:78               push1 
  27cf:38 0183          pushi 183 // $183 picture
  27d2:76               push0 
  27d3:81 02              lag  
  27d5:4a 04             send 4 

  27d7:36                push 
  27d8:81 02              lag  
  27da:4a 06             send 6 

  27dc:39 08            pushi 8 // $8 underBits
  27de:39 0b            pushi b // $b nsBottom
  27e0:76               push0 
  27e1:76               push0 
  27e2:38 00c0          pushi c0 // $c0 highlightColor
  27e5:38 0140          pushi 140 // $140 mapKeyToDir
  27e8:7a               push2 
  27e9:76               push0 
  27ea:76               push0 
  27eb:43 6c 10         callk Graph 10 

  27ee:35 38              ldi 38 
  27f0:a3 02              sal local2 
  27f2:38 011b          pushi 11b // $11b setMotion
  27f5:78               push1 
  27f6:76               push0 
  27f7:39 05            pushi 5 // $5 view
  27f9:78               push1 
  27fa:38 0141          pushi 141 // $141 curEvent
  27fd:38 00a2          pushi a2 // $a2 setLoop
  2800:78               push1 
  2801:78               push1 
  2802:38 0120          pushi 120 // $120 setCel
  2805:78               push1 
  2806:78               push1 
  2807:38 011c          pushi 11c // $11c posn
  280a:7a               push2 
  280b:38 0086          pushi 86 // $86 lastSeconds
  280e:39 46            pushi 46 // $46 width
  2810:39 42            pushi 42 // $42 setPri
  2812:78               push1 
  2813:39 04            pushi 4 // $4 x
  2815:38 0122          pushi 122 // $122 addToPic
  2818:76               push0 
  2819:39 6c            pushi 6c // $6c dispose
  281b:76               push0 
  281c:72 075c          lofsa $075c // larry
  281f:4a 2e             send 2e 

  2821:38 018d          pushi 18d // $18d overlay
  2824:78               push1 
  2825:38 0163          pushi 163 // $163 botBordColor2
  2828:81 02              lag  
  282a:4a 06             send 6 

  282c:39 6b            pushi 6b // $6b init
  282e:76               push0 
  282f:39 05            pushi 5 // $5 view
  2831:78               push1 
  2832:38 0164          pushi 164 // $164 rgtBordColor2
  2835:38 00a2          pushi a2 // $a2 setLoop
  2838:78               push1 
  2839:76               push0 
  283a:38 011c          pushi 11c // $11c posn
  283d:7a               push2 
  283e:38 00bb          pushi bb // $bb setCursor
  2841:39 7e            pushi 7e // $7e addToEnd
  2843:38 00db          pushi db // $db cycleSpeed
  2846:78               push1 
  2847:39 0a            pushi a // $a nsLeft
  2849:38 0120          pushi 120 // $120 setCel
  284c:78               push1 
  284d:76               push0 
  284e:38 0096          pushi 96 // $96 setCycle
  2851:7a               push2 
  2852:51 1a            class End 
  2854:36                push 
  2855:7c            pushSelf 
  2856:72 0c7c          lofsa $0c7c // dreamProp3
  2859:4a 2c             send 2c 

  285b:32 0065            jmp code_28c3 

        code_285e
  285e:3c                 dup 
  285f:35 09              ldi 9 
  2861:1a                 eq? 
  2862:30 001c            bnt code_2881 
  2865:39 07            pushi 7 // $7 cel
  2867:38 0140          pushi 140 // $140 mapKeyToDir
  286a:39 1f            pushi 1f // $1f style
  286c:39 43            pushi 43 // $43 at
  286e:39 ff            pushi ff // $ff syncNum
  2870:39 0f            pushi f // $f lsBottom
  2872:39 46            pushi 46 // $46 width
  2874:38 0118          pushi 118 // $118 isNotHidden
  2877:45 0e 0e         callb procedure_000e e //  

  287a:35 1e              ldi 1e 
  287c:65 16             aTop ticks 
  287e:32 0042            jmp code_28c3 

        code_2881
  2881:3c                 dup 
  2882:35 0a              ldi a 
  2884:1a                 eq? 
  2885:30 0029            bnt code_28b1 
  2888:35 00              ldi 0 
  288a:a3 01              sal local1 
  288c:38 009f          pushi 9f // $9f fade
  288f:39 04            pushi 4 // $4 x
  2891:76               push0 
  2892:39 0f            pushi f // $f lsBottom
  2894:39 0a            pushi a // $a nsLeft
  2896:78               push1 
  2897:81 66              lag  
  2899:4a 0c             send c 

  289b:38 009f          pushi 9f // $9f fade
  289e:39 04            pushi 4 // $4 x
  28a0:76               push0 
  28a1:39 0f            pushi f // $f lsBottom
  28a3:39 0a            pushi a // $a nsLeft
  28a5:78               push1 
  28a6:81 67              lag  
  28a8:4a 0c             send c 

  28aa:35 02              ldi 2 
  28ac:65 12             aTop seconds 
  28ae:32 0012            jmp code_28c3 

        code_28b1
  28b1:3c                 dup 
  28b2:35 0b              ldi b 
  28b4:1a                 eq? 
  28b5:30 000b            bnt code_28c3 
  28b8:38 0179          pushi 179 // $179 newRoom
  28bb:78               push1 
  28bc:38 0258          pushi 258 // $258 sel_600
  28bf:81 02              lag  
  28c1:4a 06             send 6 


        code_28c3
  28c3:3a                toss 
  28c4:48                 ret 
  28c5:00                bnot 
    )

)

// 2912
(instance theMagazine of Feature
    (properties
        x $ce
        y $ca
        z $64
        heading $0
        noun $0
        nsTop $5c
        nsLeft $c4
        nsBottom $70
        nsRight $d8
        description $30de
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_2900
  2900:38 010c          pushi 10c // $10c doVerb
  2903:76               push0 
  2904:59 01            &rest 1 
  2906:72 1048          lofsa $1048 // magazine
  2909:4a 04             send 4 

  290b:48                 ret 
    )

)

// 2b10
(instance sDreamCasa of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2950
  2950:3f 02             link 2 // (var $2)
  2952:87 01              lap param1 
  2954:65 0a             aTop state 
  2956:36                push 
  2957:3c                 dup 
  2958:35 00              ldi 0 
  295a:1a                 eq? 
  295b:30 00d4            bnt code_2a32 
  295e:78               push1 
  295f:39 34            pushi 34 // $34 b-xAxis
  2961:45 06 02         callb procedure_0006 2 //  

  2964:18                 not 
  2965:30 0016            bnt code_297e 
  2968:38 00d5          pushi d5 // $d5 has
  296b:78               push1 
  296c:39 09            pushi 9 // $9 nsTop
  296e:81 00              lag  
  2970:4a 06             send 6 

  2972:18                 not 
  2973:30 0008            bnt code_297e 
  2976:39 6c            pushi 6c // $6c dispose
  2978:76               push0 
  2979:72 1048          lofsa $1048 // magazine
  297c:4a 04             send 4 


        code_297e
  297e:39 6c            pushi 6c // $6c dispose
  2980:76               push0 
  2981:72 09cc          lofsa $09cc // body
  2984:4a 04             send 4 

  2986:39 6c            pushi 6c // $6c dispose
  2988:76               push0 
  2989:72 08b0          lofsa $08b0 // arm
  298c:4a 04             send 4 

  298e:39 6c            pushi 6c // $6c dispose
  2990:76               push0 
  2991:72 0842          lofsa $0842 // tray
  2994:4a 04             send 4 

  2996:39 6c            pushi 6c // $6c dispose
  2998:76               push0 
  2999:72 0ac4          lofsa $0ac4 // cloud
  299c:4a 04             send 4 

  299e:39 6c            pushi 6c // $6c dispose
  29a0:76               push0 
  29a1:72 0916          lofsa $0916 // arm2
  29a4:4a 04             send 4 

  29a6:39 2b            pushi 2b // $2b number
  29a8:78               push1 
  29a9:38 017c          pushi 17c // $17c setSpeed
  29ac:39 06            pushi 6 // $6 loop
  29ae:78               push1 
  29af:39 ff            pushi ff // $ff syncNum
  29b1:39 2a            pushi 2a // $2a play
  29b3:76               push0 
  29b4:81 67              lag  
  29b6:4a 10             send 10 

  29b8:39 6b            pushi 6b // $6b init
  29ba:76               push0 
  29bb:39 05            pushi 5 // $5 view
  29bd:78               push1 
  29be:38 017c          pushi 17c // $17c setSpeed
  29c1:38 00a2          pushi a2 // $a2 setLoop
  29c4:78               push1 
  29c5:76               push0 
  29c6:38 011c          pushi 11c // $11c posn
  29c9:7a               push2 
  29ca:38 00e4          pushi e4 // $e4 setHeading
  29cd:39 2f            pushi 2f // $2f dy
  29cf:39 42            pushi 42 // $42 setPri
  29d1:78               push1 
  29d2:39 0e            pushi e // $e lsLeft
  29d4:38 00c2          pushi c2 // $c2 show
  29d7:76               push0 
  29d8:38 0122          pushi 122 // $122 addToPic
  29db:76               push0 
  29dc:72 0bb0          lofsa $0bb0 // dreamProp1
  29df:4a 26             send 26 

  29e1:39 6b            pushi 6b // $6b init
  29e3:76               push0 
  29e4:39 05            pushi 5 // $5 view
  29e6:78               push1 
  29e7:38 017c          pushi 17c // $17c setSpeed
  29ea:38 00a2          pushi a2 // $a2 setLoop
  29ed:78               push1 
  29ee:78               push1 
  29ef:38 011c          pushi 11c // $11c posn
  29f2:7a               push2 
  29f3:38 010b          pushi 10b // $10b actions
  29f6:39 31            pushi 31 // $31 b-i1
  29f8:39 42            pushi 42 // $42 setPri
  29fa:78               push1 
  29fb:39 0e            pushi e // $e lsLeft
  29fd:38 00c2          pushi c2 // $c2 show
  2a00:76               push0 
  2a01:38 0122          pushi 122 // $122 addToPic
  2a04:76               push0 
  2a05:72 0c16          lofsa $0c16 // dreamProp2
  2a08:4a 26             send 26 

  2a0a:39 08            pushi 8 // $8 underBits
  2a0c:39 0b            pushi b // $b nsBottom
  2a0e:76               push0 
  2a0f:76               push0 
  2a10:38 00c0          pushi c0 // $c0 highlightColor
  2a13:38 0140          pushi 140 // $140 mapKeyToDir
  2a16:7a               push2 
  2a17:76               push0 
  2a18:76               push0 
  2a19:43 6c 10         callk Graph 10 

  2a1c:35 38              ldi 38 
  2a1e:a3 02              sal local2 
  2a20:38 018d          pushi 18d // $18d overlay
  2a23:78               push1 
  2a24:38 017c          pushi 17c // $17c setSpeed
  2a27:81 02              lag  
  2a29:4a 06             send 6 

  2a2b:35 04              ldi 4 
  2a2d:65 12             aTop seconds 
  2a2f:32 00d5            jmp code_2b07 

        code_2a32
  2a32:3c                 dup 
  2a33:35 01              ldi 1 
  2a35:1a                 eq? 
  2a36:30 0017            bnt code_2a50 
  2a39:39 06            pushi 6 // $6 loop
  2a3b:72 2b5c          lofsa $2b5c // Leisure Suit Bogie
  2a3e:36                push 
  2a3f:38 0140          pushi 140 // $140 mapKeyToDir
  2a42:39 20            pushi 20 // $20 state
  2a44:39 6c            pushi 6c // $6c dispose
  2a46:38 008b          pushi 8b // $8b caller
  2a49:7c            pushSelf 
  2a4a:45 12 0c         callb procedure_0012 c //  

  2a4d:32 00b7            jmp code_2b07 

        code_2a50
  2a50:3c                 dup 
  2a51:35 02              ldi 2 
  2a53:1a                 eq? 
  2a54:30 0007            bnt code_2a5e 
  2a57:35 03              ldi 3 
  2a59:65 12             aTop seconds 
  2a5b:32 00a9            jmp code_2b07 

        code_2a5e
  2a5e:3c                 dup 
  2a5f:35 03              ldi 3 
  2a61:1a                 eq? 
  2a62:30 0017            bnt code_2a7c 
  2a65:39 06            pushi 6 // $6 loop
  2a67:72 2c4e          lofsa $2c4e // Ingrid Patti
  2a6a:36                push 
  2a6b:38 0140          pushi 140 // $140 mapKeyToDir
  2a6e:39 21            pushi 21 // $21 font
  2a70:39 6c            pushi 6c // $6c dispose
  2a72:38 008b          pushi 8b // $8b caller
  2a75:7c            pushSelf 
  2a76:45 12 0c         callb procedure_0012 c //  

  2a79:32 008b            jmp code_2b07 

        code_2a7c
  2a7c:3c                 dup 
  2a7d:35 04              ldi 4 
  2a7f:1a                 eq? 
  2a80:30 0007            bnt code_2a8a 
  2a83:35 03              ldi 3 
  2a85:65 12             aTop seconds 
  2a87:32 007d            jmp code_2b07 

        code_2a8a
  2a8a:3c                 dup 
  2a8b:35 05              ldi 5 
  2a8d:1a                 eq? 
  2a8e:30 0017            bnt code_2aa8 
  2a91:39 06            pushi 6 // $6 loop
  2a93:72 2c4e          lofsa $2c4e // Ingrid Patti
  2a96:36                push 
  2a97:38 0140          pushi 140 // $140 mapKeyToDir
  2a9a:39 22            pushi 22 // $22 type
  2a9c:39 6c            pushi 6c // $6c dispose
  2a9e:38 008b          pushi 8b // $8b caller
  2aa1:7c            pushSelf 
  2aa2:45 12 0c         callb procedure_0012 c //  

  2aa5:32 005f            jmp code_2b07 

        code_2aa8
  2aa8:3c                 dup 
  2aa9:35 06              ldi 6 
  2aab:1a                 eq? 
  2aac:30 0007            bnt code_2ab6 
  2aaf:35 03              ldi 3 
  2ab1:65 12             aTop seconds 
  2ab3:32 0051            jmp code_2b07 

        code_2ab6
  2ab6:3c                 dup 
  2ab7:35 07              ldi 7 
  2ab9:1a                 eq? 
  2aba:30 0017            bnt code_2ad4 
  2abd:39 06            pushi 6 // $6 loop
  2abf:72 2b5c          lofsa $2b5c // Leisure Suit Bogie
  2ac2:36                push 
  2ac3:38 0140          pushi 140 // $140 mapKeyToDir
  2ac6:39 23            pushi 23 // $23 window
  2ac8:39 6c            pushi 6c // $6c dispose
  2aca:38 008b          pushi 8b // $8b caller
  2acd:7c            pushSelf 
  2ace:45 12 0c         callb procedure_0012 c //  

  2ad1:32 0033            jmp code_2b07 

        code_2ad4
  2ad4:3c                 dup 
  2ad5:35 08              ldi 8 
  2ad7:1a                 eq? 
  2ad8:30 001a            bnt code_2af5 
  2adb:38 009f          pushi 9f // $9f fade
  2ade:39 04            pushi 4 // $4 x
  2ae0:76               push0 
  2ae1:39 0f            pushi f // $f lsBottom
  2ae3:39 0a            pushi a // $a nsLeft
  2ae5:78               push1 
  2ae6:81 66              lag  
  2ae8:4a 0c             send c 

  2aea:35 00              ldi 0 
  2aec:a3 01              sal local1 
  2aee:35 0a              ldi a 
  2af0:65 16             aTop ticks 
  2af2:32 0012            jmp code_2b07 

        code_2af5
  2af5:3c                 dup 
  2af6:35 09              ldi 9 
  2af8:1a                 eq? 
  2af9:30 000b            bnt code_2b07 
  2afc:38 0179          pushi 179 // $179 newRoom
  2aff:78               push1 
  2b00:38 017c          pushi 17c // $17c setSpeed
  2b03:81 02              lag  
  2b05:4a 06             send 6 


        code_2b07
  2b07:3a                toss 
  2b08:48                 ret 
  2b09:00                bnot 
    )

)

// 2b56
(instance Leisure Suit Bogie of Talker
    (properties
        x $1
        y $b4
        z $0
        heading $0
        noun $0
        nsTop $53
        nsLeft $7d
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $565
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $b4
    )
    (method (init) // method_2b44
  2b44:72 2bd8          lofsa $2bd8 // hisMouth
  2b47:65 5a             aTop mouth 
  2b49:39 6b            pushi 6b // $6b init
  2b4b:76               push0 
  2b4c:57 6f 04         super Talker 4 

  2b4f:48                 ret 
    )

)

// 2bd2
(instance hisMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $565
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 2c48
(instance Ingrid Patti of Talker
    (properties
        x $8c
        y $b4
        z $0
        heading $0
        noun $0
        nsTop $52
        nsLeft $a9
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $566
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $b4
    )
    (method (init) // method_2c36
  2c36:72 2cca          lofsa $2cca // herMouth
  2c39:65 5a             aTop mouth 
  2c3b:39 6b            pushi 6b // $6b init
  2c3d:76               push0 
  2c3e:57 6f 04         super Talker 4 

  2c41:48                 ret 
    )

)

// 2cc4
(instance herMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $566
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 2d2a
(instance theMusic3 of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $142
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 2d60
(instance zipperSound of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $15b
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 2ebe
(instance sPlayGuitar of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2d94
  2d94:87 01              lap param1 
  2d96:65 0a             aTop state 
  2d98:36                push 
  2d99:3c                 dup 
  2d9a:35 00              ldi 0 
  2d9c:1a                 eq? 
  2d9d:30 0085            bnt code_2e25 
  2da0:38 00db          pushi db // $db cycleSpeed
  2da3:78               push1 
  2da4:7a               push2 
  2da5:39 03            pushi 3 // $3 y
  2da7:39 08            pushi 8 // $8 underBits
  2da9:43 3c 04         callk Random 4 

  2dac:36                push 
  2dad:72 0bb0          lofsa $0bb0 // dreamProp1
  2db0:4a 06             send 6 

  2db2:38 00db          pushi db // $db cycleSpeed
  2db5:78               push1 
  2db6:7a               push2 
  2db7:39 03            pushi 3 // $3 y
  2db9:39 08            pushi 8 // $8 underBits
  2dbb:43 3c 04         callk Random 4 

  2dbe:36                push 
  2dbf:72 0c16          lofsa $0c16 // dreamProp2
  2dc2:4a 06             send 6 

  2dc4:38 00db          pushi db // $db cycleSpeed
  2dc7:78               push1 
  2dc8:7a               push2 
  2dc9:39 03            pushi 3 // $3 y
  2dcb:39 08            pushi 8 // $8 underBits
  2dcd:43 3c 04         callk Random 4 

  2dd0:36                push 
  2dd1:72 0c7c          lofsa $0c7c // dreamProp3
  2dd4:4a 06             send 6 

  2dd6:38 00db          pushi db // $db cycleSpeed
  2dd9:78               push1 
  2dda:7a               push2 
  2ddb:39 03            pushi 3 // $3 y
  2ddd:39 08            pushi 8 // $8 underBits
  2ddf:43 3c 04         callk Random 4 

  2de2:36                push 
  2de3:72 0ce2          lofsa $0ce2 // dreamProp4
  2de6:4a 06             send 6 

  2de8:38 00db          pushi db // $db cycleSpeed
  2deb:78               push1 
  2dec:7a               push2 
  2ded:39 03            pushi 3 // $3 y
  2def:39 08            pushi 8 // $8 underBits
  2df1:43 3c 04         callk Random 4 

  2df4:36                push 
  2df5:72 0d48          lofsa $0d48 // dreamProp5
  2df8:4a 06             send 6 

  2dfa:38 00a2          pushi a2 // $a2 setLoop
  2dfd:78               push1 
  2dfe:76               push0 
  2dff:38 00db          pushi db // $db cycleSpeed
  2e02:78               push1 
  2e03:7a               push2 
  2e04:39 03            pushi 3 // $3 y
  2e06:39 08            pushi 8 // $8 underBits
  2e08:43 3c 04         callk Random 4 

  2e0b:36                push 
  2e0c:38 0096          pushi 96 // $96 setCycle
  2e0f:78               push1 
  2e10:51 17            class Fwd 
  2e12:36                push 
  2e13:72 0b4a          lofsa $0b4a // patti
  2e16:4a 12             send 12 

  2e18:7a               push2 
  2e19:39 14            pushi 14 // $14 brLeft
  2e1b:39 28            pushi 28 // $28 message
  2e1d:43 3c 04         callk Random 4 

  2e20:65 16             aTop ticks 
  2e22:32 0090            jmp code_2eb5 

        code_2e25
  2e25:3c                 dup 
  2e26:35 01              ldi 1 
  2e28:1a                 eq? 
  2e29:30 0022            bnt code_2e4e 
  2e2c:38 00a2          pushi a2 // $a2 setLoop
  2e2f:78               push1 
  2e30:78               push1 
  2e31:38 00db          pushi db // $db cycleSpeed
  2e34:78               push1 
  2e35:7a               push2 
  2e36:39 03            pushi 3 // $3 y
  2e38:39 08            pushi 8 // $8 underBits
  2e3a:43 3c 04         callk Random 4 

  2e3d:36                push 
  2e3e:38 0096          pushi 96 // $96 setCycle
  2e41:7a               push2 
  2e42:51 1a            class End 
  2e44:36                push 
  2e45:7c            pushSelf 
  2e46:72 0b4a          lofsa $0b4a // patti
  2e49:4a 14             send 14 

  2e4b:32 0067            jmp code_2eb5 

        code_2e4e
  2e4e:3c                 dup 
  2e4f:35 02              ldi 2 
  2e51:1a                 eq? 
  2e52:30 002b            bnt code_2e80 
  2e55:38 00a2          pushi a2 // $a2 setLoop
  2e58:78               push1 
  2e59:7a               push2 
  2e5a:38 00db          pushi db // $db cycleSpeed
  2e5d:78               push1 
  2e5e:7a               push2 
  2e5f:39 03            pushi 3 // $3 y
  2e61:39 08            pushi 8 // $8 underBits
  2e63:43 3c 04         callk Random 4 

  2e66:36                push 
  2e67:38 0096          pushi 96 // $96 setCycle
  2e6a:78               push1 
  2e6b:51 17            class Fwd 
  2e6d:36                push 
  2e6e:72 0b4a          lofsa $0b4a // patti
  2e71:4a 12             send 12 

  2e73:7a               push2 
  2e74:39 14            pushi 14 // $14 brLeft
  2e76:39 28            pushi 28 // $28 message
  2e78:43 3c 04         callk Random 4 

  2e7b:65 16             aTop ticks 
  2e7d:32 0035            jmp code_2eb5 

        code_2e80
  2e80:3c                 dup 
  2e81:35 03              ldi 3 
  2e83:1a                 eq? 
  2e84:30 0022            bnt code_2ea9 
  2e87:38 00a2          pushi a2 // $a2 setLoop
  2e8a:78               push1 
  2e8b:78               push1 
  2e8c:38 00db          pushi db // $db cycleSpeed
  2e8f:78               push1 
  2e90:7a               push2 
  2e91:39 03            pushi 3 // $3 y
  2e93:39 08            pushi 8 // $8 underBits
  2e95:43 3c 04         callk Random 4 

  2e98:36                push 
  2e99:38 0096          pushi 96 // $96 setCycle
  2e9c:7a               push2 
  2e9d:51 1b            class Beg 
  2e9f:36                push 
  2ea0:7c            pushSelf 
  2ea1:72 0b4a          lofsa $0b4a // patti
  2ea4:4a 14             send 14 

  2ea6:32 000c            jmp code_2eb5 

        code_2ea9
  2ea9:3c                 dup 
  2eaa:35 04              ldi 4 
  2eac:1a                 eq? 
  2ead:30 0005            bnt code_2eb5 
  2eb0:39 6b            pushi 6b // $6b init
  2eb2:76               push0 
  2eb3:54 04             self 4 


        code_2eb5
  2eb5:3a                toss 
  2eb6:48                 ret 
  2eb7:00                bnot 
    )

)



(procedure proc_10e6
  10e6:81 19              lag  
  10e8:30 0005            bnt code_10f0 
  10eb:39 6c            pushi 6c // $6c dispose
  10ed:76               push0 
  10ee:4a 04             send 4 


        code_10f0
  10f0:76               push0 
  10f1:45 03 00         callb procedure_0003 0 //  

  10f4:38 011a          pushi 11a // $11a canControl
  10f7:78               push1 
  10f8:76               push0 
  10f9:51 31            class User 
  10fb:4a 06             send 6 

  10fd:38 00c9          pushi c9 // $c9 disable
  1100:78               push1 
  1101:76               push0 
  1102:81 45              lag  
  1104:4a 06             send 6 

  1106:48                 ret 
)

