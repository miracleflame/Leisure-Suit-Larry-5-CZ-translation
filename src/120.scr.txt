(script 120)

(string
    string_0998 "rm120"
    string_099e "slide"
    string_09a4 "Vinnie"
    string_09ab "goon1Mouth"
    string_09b6 "Bruno"
    string_09bc "goon2Mouth"
    string_09c7 "bossHand"
    string_09d0 "bossSmoke"
    string_09da "bossRtBrow"
    string_09e5 "bossLtBrow"
    string_09f0 "sCartoon"
    string_09f9 ""
)

(said
)

(local
    local0 = $0000
)

// 00e6
(instance publicrm120 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $78
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 05            pushi 5 // $5 view
  0010:38 0080          pushi 80 // $80 indexOf
  0013:39 78            pushi 78 // $78 isEmpty
  0015:38 0462          pushi 462 // $462 sel_1122
  0018:38 0463          pushi 463 // $463 sel_1123
  001b:39 7c            pushi 7c // $7c prev
  001d:46 03be 0000 0a  calle 3be procedure_0000 a //  

  0023:7a               push2 
  0024:38 0084          pushi 84 // $84 cycles
  0027:39 78            pushi 78 // $78 isEmpty
  0029:46 03be 0000 04  calle 3be procedure_0000 4 //  

  002f:76               push0 
  0030:45 02 00         callb procedure_0002 0 //  

  0033:39 6b            pushi 6b // $6b init
  0035:76               push0 
  0036:57 72 04         super LLRoom 4 

  0039:39 6b            pushi 6b // $6b init
  003b:76               push0 
  003c:39 42            pushi 42 // $42 setPri
  003e:78               push1 
  003f:39 0a            pushi a // $a nsLeft
  0041:38 0122          pushi 122 // $122 addToPic
  0044:76               push0 
  0045:72 0198          lofsa $0198 // Vinnie
  0048:4a 0e             send e 

  004a:39 6b            pushi 6b // $6b init
  004c:76               push0 
  004d:38 00db          pushi db // $db cycleSpeed
  0050:78               push1 
  0051:39 06            pushi 6 // $6 loop
  0053:38 0120          pushi 120 // $120 setCel
  0056:78               push1 
  0057:38 00dd          pushi dd // $dd lastCel
  005a:76               push0 
  005b:72 0442          lofsa $0442 // bossHand
  005e:4a 04             send 4 

  0060:36                push 
  0061:38 011d          pushi 11d // $11d stopUpd
  0064:76               push0 
  0065:72 0442          lofsa $0442 // bossHand
  0068:4a 14             send 14 

  006a:39 6b            pushi 6b // $6b init
  006c:76               push0 
  006d:38 00db          pushi db // $db cycleSpeed
  0070:78               push1 
  0071:39 18            pushi 18 // $18 key
  0073:38 011d          pushi 11d // $11d stopUpd
  0076:76               push0 
  0077:72 04a8          lofsa $04a8 // bossSmoke
  007a:4a 0e             send e 

  007c:39 6b            pushi 6b // $6b init
  007e:76               push0 
  007f:38 00db          pushi db // $db cycleSpeed
  0082:78               push1 
  0083:39 18            pushi 18 // $18 key
  0085:38 011d          pushi 11d // $11d stopUpd
  0088:76               push0 
  0089:72 050e          lofsa $050e // bossRtBrow
  008c:4a 0e             send e 

  008e:39 6b            pushi 6b // $6b init
  0090:76               push0 
  0091:38 00db          pushi db // $db cycleSpeed
  0094:78               push1 
  0095:39 18            pushi 18 // $18 key
  0097:38 011d          pushi 11d // $11d stopUpd
  009a:76               push0 
  009b:72 0574          lofsa $0574 // bossLtBrow
  009e:4a 0e             send e 

  00a0:39 3c            pushi 3c // $3c doit
  00a2:76               push0 
  00a3:81 0a              lag  
  00a5:4a 04             send 4 

  00a7:78               push1 
  00a8:38 009b          pushi 9b // $9b owner
  00ab:45 0d 02         callb procedure_000d 2 //  

  00ae:39 2b            pushi 2b // $2b number
  00b0:78               push1 
  00b1:39 78            pushi 78 // $78 isEmpty
  00b3:39 66            pushi 66 // $66 flags
  00b5:78               push1 
  00b6:78               push1 
  00b7:38 00a2          pushi a2 // $a2 setLoop
  00ba:78               push1 
  00bb:39 ff            pushi ff // $ff syncNum
  00bd:39 2a            pushi 2a // $2a play
  00bf:76               push0 
  00c0:81 66              lag  
  00c2:4a 16             send 16 

  00c4:38 008e          pushi 8e // $8e setScript
  00c7:78               push1 
  00c8:72 096a          lofsa $096a // sCartoon
  00cb:36                push 
  00cc:54 06             self 6 

  00ce:48                 ret 
    )

    (method (dispose) // method_00cf
  00cf:39 6c            pushi 6c // $6c dispose
  00d1:76               push0 
  00d2:59 01            &rest 1 
  00d4:57 72 04         super LLRoom 4 

  00d7:38 009c          pushi 9c // $9c stop
  00da:76               push0 
  00db:81 66              lag  
  00dd:4a 04             send 4 

  00df:48                 ret 
    )

)

// 012c
(instance slide of Prop
    (properties
        x $82
        y $50
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $78
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0192
(instance Vinnie of View
    (properties
        x $44
        y $41
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $462
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $101
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 0200
(instance Vinnie of Talker
    (properties
        x $1
        y $b4
        z $0
        heading $0
        noun $0
        nsTop $42
        nsLeft $43
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $462
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $118
    )
    (method (init) // method_01ec
  01ec:72 0282          lofsa $0282 // goon1Mouth
  01ef:65 5a             aTop mouth 
  01f1:39 6b            pushi 6b // $6b init
  01f3:76               push0 
  01f4:59 01            &rest 1 
  01f6:57 6f 04         super Talker 4 

  01f9:48                 ret 
    )

)

// 027c
(instance goon1Mouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $1e
        nsLeft $18
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $462
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $5
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 02e2
(instance Bruno of Prop
    (properties
        x $11b
        y $73
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $463
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 035a
(instance Bruno of Talker
    (properties
        x $73
        y $b4
        z $0
        heading $0
        noun $0
        nsTop $5f
        nsLeft $10b
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $463
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $c8
    )
    (method (init) // method_0346
  0346:72 03dc          lofsa $03dc // goon2Mouth
  0349:65 5a             aTop mouth 
  034b:39 6b            pushi 6b // $6b init
  034d:76               push0 
  034e:59 01            &rest 1 
  0350:57 6f 04         super Talker 4 

  0353:48                 ret 
    )

)

// 03d6
(instance goon2Mouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $463
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $5
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 043c
(instance bossHand of Prop
    (properties
        x $9c
        y $96
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $7c
        loop $4
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 04a2
(instance bossSmoke of Prop
    (properties
        x $a7
        y $5b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $7c
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0508
(instance bossRtBrow of Prop
    (properties
        x $e3
        y $39
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $7c
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 056e
(instance bossLtBrow of Prop
    (properties
        x $d5
        y $39
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $7c
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0964
(instance sCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_05d2
  05d2:87 01              lap param1 
  05d4:65 0a             aTop state 
  05d6:36                push 
  05d7:3c                 dup 
  05d8:35 00              ldi 0 
  05da:1a                 eq? 
  05db:30 0007            bnt code_05e5 
  05de:35 02              ldi 2 
  05e0:65 10             aTop cycles 
  05e2:32 0376            jmp code_095b 

        code_05e5
  05e5:3c                 dup 
  05e6:35 01              ldi 1 
  05e8:1a                 eq? 
  05e9:30 0015            bnt code_0601 
  05ec:39 06            pushi 6 // $6 loop
  05ee:72 0206          lofsa $0206 // Vinnie
  05f1:36                push 
  05f2:39 78            pushi 78 // $78 isEmpty
  05f4:76               push0 
  05f5:39 6c            pushi 6c // $6c dispose
  05f7:38 008b          pushi 8b // $8b caller
  05fa:7c            pushSelf 
  05fb:45 12 0c         callb procedure_0012 c //  

  05fe:32 035a            jmp code_095b 

        code_0601
  0601:3c                 dup 
  0602:35 02              ldi 2 
  0604:1a                 eq? 
  0605:30 0007            bnt code_060f 
  0608:35 7b              ldi 7b 
  060a:65 16             aTop ticks 
  060c:32 034c            jmp code_095b 

        code_060f
  060f:3c                 dup 
  0610:35 03              ldi 3 
  0612:1a                 eq? 
  0613:30 0013            bnt code_0629 
  0616:39 6b            pushi 6b // $6b init
  0618:76               push0 
  0619:38 011d          pushi 11d // $11d stopUpd
  061c:76               push0 
  061d:72 0132          lofsa $0132 // slide
  0620:4a 08             send 8 

  0622:35 02              ldi 2 
  0624:65 10             aTop cycles 
  0626:32 0332            jmp code_095b 

        code_0629
  0629:3c                 dup 
  062a:35 04              ldi 4 
  062c:1a                 eq? 
  062d:30 0015            bnt code_0645 
  0630:39 06            pushi 6 // $6 loop
  0632:72 0206          lofsa $0206 // Vinnie
  0635:36                push 
  0636:39 78            pushi 78 // $78 isEmpty
  0638:78               push1 
  0639:39 6c            pushi 6c // $6c dispose
  063b:38 008b          pushi 8b // $8b caller
  063e:7c            pushSelf 
  063f:45 12 0c         callb procedure_0012 c //  

  0642:32 0316            jmp code_095b 

        code_0645
  0645:3c                 dup 
  0646:35 05              ldi 5 
  0648:1a                 eq? 
  0649:30 0007            bnt code_0653 
  064c:35 3c              ldi 3c 
  064e:65 16             aTop ticks 
  0650:32 0308            jmp code_095b 

        code_0653
  0653:3c                 dup 
  0654:35 06              ldi 6 
  0656:1a                 eq? 
  0657:30 0015            bnt code_066f 
  065a:39 06            pushi 6 // $6 loop
  065c:72 0206          lofsa $0206 // Vinnie
  065f:36                push 
  0660:39 78            pushi 78 // $78 isEmpty
  0662:7a               push2 
  0663:39 6c            pushi 6c // $6c dispose
  0665:38 008b          pushi 8b // $8b caller
  0668:7c            pushSelf 
  0669:45 12 0c         callb procedure_0012 c //  

  066c:32 02ec            jmp code_095b 

        code_066f
  066f:3c                 dup 
  0670:35 07              ldi 7 
  0672:1a                 eq? 
  0673:30 0007            bnt code_067d 
  0676:35 3c              ldi 3c 
  0678:65 16             aTop ticks 
  067a:32 02de            jmp code_095b 

        code_067d
  067d:3c                 dup 
  067e:35 08              ldi 8 
  0680:1a                 eq? 
  0681:30 0021            bnt code_06a5 
  0684:38 0204          pushi 204 // $204 talkWidth
  0687:78               push1 
  0688:39 78            pushi 78 // $78 isEmpty
  068a:72 0206          lofsa $0206 // Vinnie
  068d:4a 06             send 6 

  068f:39 06            pushi 6 // $6 loop
  0691:72 0206          lofsa $0206 // Vinnie
  0694:36                push 
  0695:39 78            pushi 78 // $78 isEmpty
  0697:39 03            pushi 3 // $3 y
  0699:39 6c            pushi 6c // $6c dispose
  069b:38 008b          pushi 8b // $8b caller
  069e:7c            pushSelf 
  069f:45 12 0c         callb procedure_0012 c //  

  06a2:32 02b6            jmp code_095b 

        code_06a5
  06a5:3c                 dup 
  06a6:35 09              ldi 9 
  06a8:1a                 eq? 
  06a9:30 003c            bnt code_06e8 
  06ac:38 0120          pushi 120 // $120 setCel
  06af:78               push1 
  06b0:38 00dd          pushi dd // $dd lastCel
  06b3:76               push0 
  06b4:72 0442          lofsa $0442 // bossHand
  06b7:4a 04             send 4 

  06b9:36                push 
  06ba:38 011f          pushi 11f // $11f startUpd
  06bd:76               push0 
  06be:38 00db          pushi db // $db cycleSpeed
  06c1:78               push1 
  06c2:39 12            pushi 12 // $12 illegalBits
  06c4:38 0096          pushi 96 // $96 setCycle
  06c7:78               push1 
  06c8:51 1f            class Rev 
  06ca:36                push 
  06cb:72 0442          lofsa $0442 // bossHand
  06ce:4a 16             send 16 

  06d0:38 011f          pushi 11f // $11f startUpd
  06d3:76               push0 
  06d4:38 0096          pushi 96 // $96 setCycle
  06d7:78               push1 
  06d8:51 1f            class Rev 
  06da:36                push 
  06db:72 04a8          lofsa $04a8 // bossSmoke
  06de:4a 0a             send a 

  06e0:34 00f0            ldi f0 
  06e3:65 16             aTop ticks 
  06e5:32 0273            jmp code_095b 

        code_06e8
  06e8:3c                 dup 
  06e9:35 0a              ldi a 
  06eb:1a                 eq? 
  06ec:30 004d            bnt code_073c 
  06ef:38 0120          pushi 120 // $120 setCel
  06f2:78               push1 
  06f3:38 00dd          pushi dd // $dd lastCel
  06f6:76               push0 
  06f7:72 0442          lofsa $0442 // bossHand
  06fa:4a 04             send 4 

  06fc:36                push 
  06fd:38 011d          pushi 11d // $11d stopUpd
  0700:76               push0 
  0701:38 0096          pushi 96 // $96 setCycle
  0704:78               push1 
  0705:76               push0 
  0706:72 0442          lofsa $0442 // bossHand
  0709:4a 10             send 10 

  070b:38 011d          pushi 11d // $11d stopUpd
  070e:76               push0 
  070f:38 0096          pushi 96 // $96 setCycle
  0712:78               push1 
  0713:76               push0 
  0714:72 04a8          lofsa $04a8 // bossSmoke
  0717:4a 0a             send a 

  0719:38 011d          pushi 11d // $11d stopUpd
  071c:76               push0 
  071d:38 0096          pushi 96 // $96 setCycle
  0720:78               push1 
  0721:76               push0 
  0722:72 050e          lofsa $050e // bossRtBrow
  0725:4a 0a             send a 

  0727:38 011d          pushi 11d // $11d stopUpd
  072a:76               push0 
  072b:38 0096          pushi 96 // $96 setCycle
  072e:78               push1 
  072f:76               push0 
  0730:72 0574          lofsa $0574 // bossLtBrow
  0733:4a 0a             send a 

  0735:35 05              ldi 5 
  0737:65 10             aTop cycles 
  0739:32 021f            jmp code_095b 

        code_073c
  073c:3c                 dup 
  073d:35 0b              ldi b 
  073f:1a                 eq? 
  0740:30 0016            bnt code_0759 
  0743:39 06            pushi 6 // $6 loop
  0745:72 0360          lofsa $0360 // Bruno
  0748:36                push 
  0749:39 78            pushi 78 // $78 isEmpty
  074b:39 04            pushi 4 // $4 x
  074d:39 6c            pushi 6c // $6c dispose
  074f:38 008b          pushi 8b // $8b caller
  0752:7c            pushSelf 
  0753:45 12 0c         callb procedure_0012 c //  

  0756:32 0202            jmp code_095b 

        code_0759
  0759:3c                 dup 
  075a:35 0c              ldi c 
  075c:1a                 eq? 
  075d:30 0007            bnt code_0767 
  0760:35 3c              ldi 3c 
  0762:65 16             aTop ticks 
  0764:32 01f4            jmp code_095b 

        code_0767
  0767:3c                 dup 
  0768:35 0d              ldi d 
  076a:1a                 eq? 
  076b:30 0014            bnt code_0782 
  076e:38 011f          pushi 11f // $11f startUpd
  0771:76               push0 
  0772:39 07            pushi 7 // $7 cel
  0774:78               push1 
  0775:78               push1 
  0776:72 0132          lofsa $0132 // slide
  0779:4a 0a             send a 

  077b:35 02              ldi 2 
  077d:65 10             aTop cycles 
  077f:32 01d9            jmp code_095b 

        code_0782
  0782:3c                 dup 
  0783:35 0e              ldi e 
  0785:1a                 eq? 
  0786:30 0016            bnt code_079f 
  0789:39 06            pushi 6 // $6 loop
  078b:72 0360          lofsa $0360 // Bruno
  078e:36                push 
  078f:39 78            pushi 78 // $78 isEmpty
  0791:39 05            pushi 5 // $5 view
  0793:39 6c            pushi 6c // $6c dispose
  0795:38 008b          pushi 8b // $8b caller
  0798:7c            pushSelf 
  0799:45 12 0c         callb procedure_0012 c //  

  079c:32 01bc            jmp code_095b 

        code_079f
  079f:3c                 dup 
  07a0:35 0f              ldi f 
  07a2:1a                 eq? 
  07a3:30 0007            bnt code_07ad 
  07a6:35 3c              ldi 3c 
  07a8:65 16             aTop ticks 
  07aa:32 01ae            jmp code_095b 

        code_07ad
  07ad:3c                 dup 
  07ae:35 10              ldi 10 
  07b0:1a                 eq? 
  07b1:30 0016            bnt code_07ca 
  07b4:39 06            pushi 6 // $6 loop
  07b6:72 0360          lofsa $0360 // Bruno
  07b9:36                push 
  07ba:39 78            pushi 78 // $78 isEmpty
  07bc:39 06            pushi 6 // $6 loop
  07be:39 6c            pushi 6c // $6c dispose
  07c0:38 008b          pushi 8b // $8b caller
  07c3:7c            pushSelf 
  07c4:45 12 0c         callb procedure_0012 c //  

  07c7:32 0191            jmp code_095b 

        code_07ca
  07ca:3c                 dup 
  07cb:35 11              ldi 11 
  07cd:1a                 eq? 
  07ce:30 0007            bnt code_07d8 
  07d1:35 3c              ldi 3c 
  07d3:65 16             aTop ticks 
  07d5:32 0183            jmp code_095b 

        code_07d8
  07d8:3c                 dup 
  07d9:35 12              ldi 12 
  07db:1a                 eq? 
  07dc:30 0016            bnt code_07f5 
  07df:39 06            pushi 6 // $6 loop
  07e1:72 0360          lofsa $0360 // Bruno
  07e4:36                push 
  07e5:39 78            pushi 78 // $78 isEmpty
  07e7:39 07            pushi 7 // $7 cel
  07e9:39 6c            pushi 6c // $6c dispose
  07eb:38 008b          pushi 8b // $8b caller
  07ee:7c            pushSelf 
  07ef:45 12 0c         callb procedure_0012 c //  

  07f2:32 0166            jmp code_095b 

        code_07f5
  07f5:3c                 dup 
  07f6:35 13              ldi 13 
  07f8:1a                 eq? 
  07f9:30 0007            bnt code_0803 
  07fc:35 3c              ldi 3c 
  07fe:65 16             aTop ticks 
  0800:32 0158            jmp code_095b 

        code_0803
  0803:3c                 dup 
  0804:35 14              ldi 14 
  0806:1a                 eq? 
  0807:30 003f            bnt code_0849 
  080a:39 07            pushi 7 // $7 cel
  080c:78               push1 
  080d:7a               push2 
  080e:72 0132          lofsa $0132 // slide
  0811:4a 06             send 6 

  0813:38 011f          pushi 11f // $11f startUpd
  0816:76               push0 
  0817:38 0120          pushi 120 // $120 setCel
  081a:78               push1 
  081b:38 00dd          pushi dd // $dd lastCel
  081e:76               push0 
  081f:72 0442          lofsa $0442 // bossHand
  0822:4a 04             send 4 

  0824:36                push 
  0825:38 0096          pushi 96 // $96 setCycle
  0828:78               push1 
  0829:51 1f            class Rev 
  082b:36                push 
  082c:72 0442          lofsa $0442 // bossHand
  082f:4a 10             send 10 

  0831:38 011f          pushi 11f // $11f startUpd
  0834:76               push0 
  0835:38 0096          pushi 96 // $96 setCycle
  0838:78               push1 
  0839:51 1f            class Rev 
  083b:36                push 
  083c:72 04a8          lofsa $04a8 // bossSmoke
  083f:4a 0a             send a 

  0841:34 00f0            ldi f0 
  0844:65 16             aTop ticks 
  0846:32 0112            jmp code_095b 

        code_0849
  0849:3c                 dup 
  084a:35 15              ldi 15 
  084c:1a                 eq? 
  084d:30 004d            bnt code_089d 
  0850:38 0120          pushi 120 // $120 setCel
  0853:78               push1 
  0854:38 00dd          pushi dd // $dd lastCel
  0857:76               push0 
  0858:72 0442          lofsa $0442 // bossHand
  085b:4a 04             send 4 

  085d:36                push 
  085e:38 011d          pushi 11d // $11d stopUpd
  0861:76               push0 
  0862:38 0096          pushi 96 // $96 setCycle
  0865:78               push1 
  0866:76               push0 
  0867:72 0442          lofsa $0442 // bossHand
  086a:4a 10             send 10 

  086c:38 011d          pushi 11d // $11d stopUpd
  086f:76               push0 
  0870:38 0096          pushi 96 // $96 setCycle
  0873:78               push1 
  0874:76               push0 
  0875:72 04a8          lofsa $04a8 // bossSmoke
  0878:4a 0a             send a 

  087a:38 011d          pushi 11d // $11d stopUpd
  087d:76               push0 
  087e:38 0096          pushi 96 // $96 setCycle
  0881:78               push1 
  0882:76               push0 
  0883:72 050e          lofsa $050e // bossRtBrow
  0886:4a 0a             send a 

  0888:38 011d          pushi 11d // $11d stopUpd
  088b:76               push0 
  088c:38 0096          pushi 96 // $96 setCycle
  088f:78               push1 
  0890:76               push0 
  0891:72 0574          lofsa $0574 // bossLtBrow
  0894:4a 0a             send a 

  0896:35 05              ldi 5 
  0898:65 10             aTop cycles 
  089a:32 00be            jmp code_095b 

        code_089d
  089d:3c                 dup 
  089e:35 16              ldi 16 
  08a0:1a                 eq? 
  08a1:30 0016            bnt code_08ba 
  08a4:39 06            pushi 6 // $6 loop
  08a6:72 0360          lofsa $0360 // Bruno
  08a9:36                push 
  08aa:39 78            pushi 78 // $78 isEmpty
  08ac:39 08            pushi 8 // $8 underBits
  08ae:39 6c            pushi 6c // $6c dispose
  08b0:38 008b          pushi 8b // $8b caller
  08b3:7c            pushSelf 
  08b4:45 12 0c         callb procedure_0012 c //  

  08b7:32 00a1            jmp code_095b 

        code_08ba
  08ba:3c                 dup 
  08bb:35 17              ldi 17 
  08bd:1a                 eq? 
  08be:30 0007            bnt code_08c8 
  08c1:35 3c              ldi 3c 
  08c3:65 16             aTop ticks 
  08c5:32 0093            jmp code_095b 

        code_08c8
  08c8:3c                 dup 
  08c9:35 18              ldi 18 
  08cb:1a                 eq? 
  08cc:30 0016            bnt code_08e5 
  08cf:39 06            pushi 6 // $6 loop
  08d1:72 0360          lofsa $0360 // Bruno
  08d4:36                push 
  08d5:39 78            pushi 78 // $78 isEmpty
  08d7:39 09            pushi 9 // $9 nsTop
  08d9:39 6c            pushi 6c // $6c dispose
  08db:38 008b          pushi 8b // $8b caller
  08de:7c            pushSelf 
  08df:45 12 0c         callb procedure_0012 c //  

  08e2:32 0076            jmp code_095b 

        code_08e5
  08e5:3c                 dup 
  08e6:35 19              ldi 19 
  08e8:1a                 eq? 
  08e9:30 0007            bnt code_08f3 
  08ec:35 3c              ldi 3c 
  08ee:65 16             aTop ticks 
  08f0:32 0068            jmp code_095b 

        code_08f3
  08f3:3c                 dup 
  08f4:35 1a              ldi 1a 
  08f6:1a                 eq? 
  08f7:30 0016            bnt code_0910 
  08fa:39 06            pushi 6 // $6 loop
  08fc:72 0360          lofsa $0360 // Bruno
  08ff:36                push 
  0900:39 78            pushi 78 // $78 isEmpty
  0902:39 0a            pushi a // $a nsLeft
  0904:39 6c            pushi 6c // $6c dispose
  0906:38 008b          pushi 8b // $8b caller
  0909:7c            pushSelf 
  090a:45 12 0c         callb procedure_0012 c //  

  090d:32 004b            jmp code_095b 

        code_0910
  0910:3c                 dup 
  0911:35 1b              ldi 1b 
  0913:1a                 eq? 
  0914:30 0007            bnt code_091e 
  0917:35 3c              ldi 3c 
  0919:65 16             aTop ticks 
  091b:32 003d            jmp code_095b 

        code_091e
  091e:3c                 dup 
  091f:35 1c              ldi 1c 
  0921:1a                 eq? 
  0922:30 0016            bnt code_093b 
  0925:39 06            pushi 6 // $6 loop
  0927:72 0360          lofsa $0360 // Bruno
  092a:36                push 
  092b:39 78            pushi 78 // $78 isEmpty
  092d:39 0b            pushi b // $b nsBottom
  092f:39 6c            pushi 6c // $6c dispose
  0931:38 008b          pushi 8b // $8b caller
  0934:7c            pushSelf 
  0935:45 12 0c         callb procedure_0012 c //  

  0938:32 0020            jmp code_095b 

        code_093b
  093b:3c                 dup 
  093c:35 1d              ldi 1d 
  093e:1a                 eq? 
  093f:30 0007            bnt code_0949 
  0942:35 3c              ldi 3c 
  0944:65 16             aTop ticks 
  0946:32 0012            jmp code_095b 

        code_0949
  0949:3c                 dup 
  094a:35 1e              ldi 1e 
  094c:1a                 eq? 
  094d:30 000b            bnt code_095b 
  0950:38 0179          pushi 179 // $179 newRoom
  0953:78               push1 
  0954:38 0082          pushi 82 // $82 start
  0957:81 02              lag  
  0959:4a 06             send 6 


        code_095b
  095b:3a                toss 
  095c:48                 ret 
  095d:00                bnot 
    )

)



