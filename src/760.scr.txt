(script 760)

(string
    string_2ff2 "The commercialization of the lovely Tramp Boardwalk seems complete. Businesses line every inch of the far side of the boardwalk. At least the near side has been kept open for fishermen and skaters."
    string_30b8 "rm760"
    string_30be "Skater"
    string_30c5 "Lana Luscious"
    string_30d3 "lana"
    string_30d8 "Mister Z"
    string_30e1 "Isn't he the cute one?"
    string_30f8 "skater1"
    string_3100 "the old man"
    string_310c "He's a little old for a rollerskater, eh?"
    string_3136 "skater2"
    string_313e "Hot Wheels"
    string_3149 "This kid's a real showoff!"
    string_3164 "skater3"
    string_316c "Rockin' Roller"
    string_317b "What's he listening to, anyway?"
    string_319b "skater4"
    string_31a3 "Roller Pig"
    string_31ae "What talent! He can eat AND skate at the same time!"
    string_31e2 "skater5"
    string_31ea "Bill the Suit"
    string_31f8 "He's way overdressed for THIS boardwalk!"
    string_3221 "skater6"
    string_3229 "Kid Dork"
    string_3232 "What a dorky lookin' little guy! You immediately take a liking to him!"
    string_3279 "skater7"
    string_3281 "the skater"
    string_328c "You had no idea the boardwalk would have so many skaters!"
    string_32c6 "skater8"
    string_32ce "Never straying far from the shops on the other side of the Boardwalk, a skater finds true happiness, blading his little heart out!"
    string_3351 "skater9"
    string_3359 "zCode"
    string_335f "showSkaterCode"
    string_336e "the building"
    string_337b "theBuilding"
    string_3387 "sSplash"
    string_338f "splash"
    string_3396 "Lana's right eye"
    string_33a7 "rightEye"
    string_33b0 "Lana's left eye"
    string_33c0 "leftEye"
    string_33c8 "Lana's nose"
    string_33d4 "nose"
    string_33d9 "Lana's mouth"
    string_33e6 "lanaMouth"
    string_33f0 "lanaCMouth"
    string_33fb "lanaFBust"
    string_3405 "lanaFMouth"
    string_3410 "lanaFEyes"
    string_341a "sFromWest"
    string_3424 "sFall"
    string_342a "sScroll"
    string_3432 "sMeetLana"
    string_343c "sLanaSits"
    string_3446 "sSitDown"
    string_344f "sDoSkates"
    string_3459 "sStandUp"
    string_3462 "sMoveLarry"
    string_346d "sLanaTalks"
    string_3478 "lanaFtr"
    string_3480 "the boardwalk buildings"
    string_3498 "The far side of the Tramp Boardwalk is lined with tawdry, tacky tourist traps. A bit of blue sky peeks through the buildings."
    string_3516 "buildings"
    string_3520 "the bench"
    string_352a "A long row of park benches await your sitting pleasure along the ocean side of the boardwalk."
    string_3588 "bench"
    string_358e "the post"
    string_3597 "These posts hold up the boardwalk."
    string_35ba "post1"
    string_35c0 "post2"
    string_35c6 "post3"
    string_35cc "post4"
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0000
    local6 = $0000
    local7 = $0000
    local8 = $0000
    local9 = $0000
    local10 = $0000
    local11 = $0000
    local12 = $0000
    local13 = $0052
    local14 = $0067
    local15 = $007c
    local16 = $0067
    local17 = $007c
    local18 = $0091
    local19 = $0000
    local20 = $0000
    local21 = $0000
    local22 = $0000
    local23 = $0000
    local24 = $0000
    local25 = $0000
    local26 = $0000
    local27 = $0035
    local28 = $0035
    local29 = $0035
    local30 = $0035
    local31 = $0035
    local32 = $0035
    local33 = $0035
    local34 = $0035
    local35 = $0035
    local36 = $0035
    local37 = $0035
    local38 = $0035
    local39 = $0035
    local40 = $006a
    local41 = $006a
    local42 = $0035
    local43 = $009f
    local44 = $0000
)

// 076a
(instance publicrm760 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $2ff2
        picture $2f8
        style $ffff
        horizon $0
        controls $0
        north $316
        east $2f8
        south $30c
        west $2bc
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_0012
  0012:3f 01             link 1 // (var $1)
  0014:39 13            pushi 13 // $13 brTop
  0016:38 0080          pushi 80 // $80 indexOf
  0019:38 02fb          pushi 2fb // $2fb sel_763
  001c:38 02fa          pushi 2fa // $2fa sel_762
  001f:38 02f9          pushi 2f9 // $2f9 sel_761
  0022:38 02fc          pushi 2fc // $2fc sel_764
  0025:38 0303          pushi 303 // $303 sel_771
  0028:38 0304          pushi 304 // $304 sel_772
  002b:38 0305          pushi 305 // $305 sel_773
  002e:38 0306          pushi 306 // $306 sel_774
  0031:38 0307          pushi 307 // $307 sel_775
  0034:38 0308          pushi 308 // $308 sel_776
  0037:38 0309          pushi 309 // $309 sel_777
  003a:38 030a          pushi 30a // $30a sel_778
  003d:38 030b          pushi 30b // $30b sel_779
  0040:38 0301          pushi 301 // $301 sel_769
  0043:38 0302          pushi 302 // $302 sel_770
  0046:38 0317          pushi 317 // $317 sel_791
  0049:38 06c3          pushi 6c3 // $6c3 sel_1731
  004c:38 0703          pushi 703 // $703 sel_1795
  004f:46 03be 0000 26  calle 3be procedure_0000 26 //  

  0055:39 2b            pushi 2b // $2b number
  0057:78               push1 
  0058:38 02bc          pushi 2bc // $2bc sel_700
  005b:39 06            pushi 6 // $6 loop
  005d:78               push1 
  005e:39 ff            pushi ff // $ff syncNum
  0060:39 2a            pushi 2a // $2a play
  0062:76               push0 
  0063:81 66              lag  
  0065:4a 10             send 10 

  0067:38 0208          pushi 208 // $208 skating
  006a:76               push0 
  006b:81 00              lag  
  006d:4a 04             send 4 

  006f:30 000d            bnt code_007f 
  0072:34 02fd            ldi 2fd 
  0075:a3 05              sal local5 
  0077:34 0300            ldi 300 
  007a:a3 06              sal local6 
  007c:32 000a            jmp code_0089 

        code_007f
  007f:34 02f9            ldi 2f9 
  0082:a3 05              sal local5 
  0084:34 02fc            ldi 2fc 
  0087:a3 06              sal local6 

        code_0089
  0089:39 6b            pushi 6b // $6b init
  008b:76               push0 
  008c:38 020a          pushi 20a // $20a normalize
  008f:78               push1 
  0090:8b 06              lsl local6 
  0092:38 0134          pushi 134 // $134 setStep
  0095:7a               push2 
  0096:39 03            pushi 3 // $3 y
  0098:3c                 dup 
  0099:81 00              lag  
  009b:4a 12             send 12 

  009d:89 0c              lsg  
  009f:3c                 dup 
  00a0:63 1c             pToa north 
  00a2:1a                 eq? 
  00a3:30 0025            bnt code_00cb 
  00a6:76               push0 
  00a7:45 03 00         callb procedure_0003 0 //  

  00aa:39 05            pushi 5 // $5 view
  00ac:78               push1 
  00ad:8b 05              lsl local5 
  00af:38 011c          pushi 11c // $11c posn
  00b2:7a               push2 
  00b3:38 00cc          pushi cc // $cc oldMouseX
  00b6:39 55            pushi 55 // $55 z
  00b8:38 00e4          pushi e4 // $e4 setHeading
  00bb:78               push1 
  00bc:38 00b4          pushi b4 // $b4 busy
  00bf:38 0146          pushi 146 // $146 edgeHit
  00c2:78               push1 
  00c3:76               push0 
  00c4:81 00              lag  
  00c6:4a 1a             send 1a 

  00c8:32 0047            jmp code_0112 

        code_00cb
  00cb:3c                 dup 
  00cc:63 22             pToa west 
  00ce:1a                 eq? 
  00cf:30 000d            bnt code_00df 
  00d2:38 008e          pushi 8e // $8e setScript
  00d5:78               push1 
  00d6:72 1e10          lofsa $1e10 // sFromWest
  00d9:36                push 
  00da:54 06             self 6 

  00dc:32 0033            jmp code_0112 

        code_00df
  00df:76               push0 
  00e0:45 03 00         callb procedure_0003 0 //  

  00e3:34 02fd            ldi 2fd 
  00e6:a3 05              sal local5 
  00e8:34 0300            ldi 300 
  00eb:a3 06              sal local6 
  00ed:38 011c          pushi 11c // $11c posn
  00f0:7a               push2 
  00f1:38 00a0          pushi a0 // $a0 mute
  00f4:38 0091          pushi 91 // $91 globalize
  00f7:38 0146          pushi 146 // $146 edgeHit
  00fa:78               push1 
  00fb:76               push0 
  00fc:38 0208          pushi 208 // $208 skating
  00ff:78               push1 
  0100:78               push1 
  0101:38 020a          pushi 20a // $20a normalize
  0104:78               push1 
  0105:36                push 
  0106:81 00              lag  
  0108:4a 1a             send 1a 

  010a:35 02              ldi 2 
  010c:a1 6c              sag  
  010e:35 63              ldi 63 
  0110:a3 2c              sal local44 

        code_0112
  0112:3a                toss 
  0113:39 6b            pushi 6b // $6b init
  0115:76               push0 
  0116:57 72 04         super LLRoom 4 

  0119:39 6b            pushi 6b // $6b init
  011b:76               push0 
  011c:72 0dda          lofsa $0dda // skater1
  011f:4a 04             send 4 

  0121:39 6b            pushi 6b // $6b init
  0123:76               push0 
  0124:72 0eb8          lofsa $0eb8 // skater2
  0127:4a 04             send 4 

  0129:39 6b            pushi 6b // $6b init
  012b:76               push0 
  012c:72 0f96          lofsa $0f96 // skater3
  012f:4a 04             send 4 

  0131:39 6b            pushi 6b // $6b init
  0133:76               push0 
  0134:72 1074          lofsa $1074 // skater4
  0137:4a 04             send 4 

  0139:39 6b            pushi 6b // $6b init
  013b:76               push0 
  013c:72 1152          lofsa $1152 // skater5
  013f:4a 04             send 4 

  0141:39 6b            pushi 6b // $6b init
  0143:76               push0 
  0144:72 1230          lofsa $1230 // skater6
  0147:4a 04             send 4 

  0149:39 6b            pushi 6b // $6b init
  014b:76               push0 
  014c:72 130e          lofsa $130e // skater7
  014f:4a 04             send 4 

  0151:39 6b            pushi 6b // $6b init
  0153:76               push0 
  0154:72 13ec          lofsa $13ec // skater8
  0157:4a 04             send 4 

  0159:39 6b            pushi 6b // $6b init
  015b:76               push0 
  015c:72 14ca          lofsa $14ca // skater9
  015f:4a 04             send 4 

  0161:39 6b            pushi 6b // $6b init
  0163:76               push0 
  0164:72 2eca          lofsa $2eca // bench
  0167:4a 04             send 4 

  0169:39 6b            pushi 6b // $6b init
  016b:76               push0 
  016c:72 2f0a          lofsa $2f0a // post1
  016f:4a 04             send 4 

  0171:39 6b            pushi 6b // $6b init
  0173:76               push0 
  0174:72 2f46          lofsa $2f46 // post2
  0177:4a 04             send 4 

  0179:39 6b            pushi 6b // $6b init
  017b:76               push0 
  017c:72 2f82          lofsa $2f82 // post3
  017f:4a 04             send 4 

  0181:39 6b            pushi 6b // $6b init
  0183:76               push0 
  0184:72 2fbe          lofsa $2fbe // post4
  0187:4a 04             send 4 

  0189:38 0176          pushi 176 // $176 addObstacle
  018c:78               push1 
  018d:39 22            pushi 22 // $22 type
  018f:78               push1 
  0190:7a               push2 
  0191:39 6b            pushi 6b // $6b init
  0193:39 08            pushi 8 // $8 underBits
  0195:39 5a            pushi 5a // $5a points
  0197:38 0091          pushi 91 // $91 globalize
  019a:38 009a          pushi 9a // $9a prevSignal
  019d:38 0091          pushi 91 // $91 globalize
  01a0:38 009a          pushi 9a // $9a prevSignal
  01a3:38 00a0          pushi a0 // $a0 mute
  01a6:39 5a            pushi 5a // $5a points
  01a8:38 00a0          pushi a0 // $a0 mute
  01ab:39 72            pushi 72 // $72 yourself
  01ad:76               push0 
  01ae:39 6a            pushi 6a // $6a new
  01b0:76               push0 
  01b1:51 23            class Polygon 
  01b3:4a 04             send 4 

  01b5:4a 1e             send 1e 

  01b7:36                push 
  01b8:81 02              lag  
  01ba:4a 06             send 6 

  01bc:39 7d            pushi 7d // $7d addToFront
  01be:78               push1 
  01bf:7c            pushSelf 
  01c0:81 4a              lag  
  01c2:4a 06             send 6 

  01c4:39 7d            pushi 7d // $7d addToFront
  01c6:78               push1 
  01c7:7c            pushSelf 
  01c8:81 49              lag  
  01ca:4a 06             send 6 

  01cc:39 7d            pushi 7d // $7d addToFront
  01ce:78               push1 
  01cf:7c            pushSelf 
  01d0:81 48              lag  
  01d2:4a 06             send 6 

  01d4:48                 ret 
    )

    (method (doit) // method_01fc
  01fc:3f 50             link 50 // (var $50)
  01fe:39 3c            pushi 3c // $3c doit
  0200:76               push0 
  0201:57 72 04         super LLRoom 4 

  0204:39 03            pushi 3 // $3 y
  0206:67 08             pTos script 
  0208:76               push0 
  0209:72 2a90          lofsa $2a90 // sMoveLarry
  020c:36                push 
  020d:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  0213:18                 not 
  0214:30 0003            bnt code_021a 
  0217:32 0088            jmp code_02a2 

        code_021a
  021a:7a               push2 
  021b:89 00              lsg  
  021d:39 04            pushi 4 // $4 x
  021f:45 05 04         callb procedure_0005 4 //  

  0222:30 0010            bnt code_0235 
  0225:38 008e          pushi 8e // $8e setScript
  0228:39 03            pushi 3 // $3 y
  022a:72 206c          lofsa $206c // sScroll
  022d:36                push 
  022e:76               push0 
  022f:7a               push2 
  0230:54 0a             self a 

  0232:32 006d            jmp code_02a2 

        code_0235
  0235:7a               push2 
  0236:89 00              lsg  
  0238:39 08            pushi 8 // $8 underBits
  023a:45 05 04         callb procedure_0005 4 //  

  023d:30 0062            bnt code_02a2 
  0240:81 9f              lag  
  0242:30 0011            bnt code_0256 
  0245:38 008e          pushi 8e // $8e setScript
  0248:39 03            pushi 3 // $3 y
  024a:72 206c          lofsa $206c // sScroll
  024d:36                push 
  024e:76               push0 
  024f:39 04            pushi 4 // $4 x
  0251:54 0a             self a 

  0253:32 004c            jmp code_02a2 

        code_0256
  0256:38 0208          pushi 208 // $208 skating
  0259:76               push0 
  025a:81 00              lag  
  025c:4a 04             send 4 

  025e:30 0041            bnt code_02a2 
  0261:83 02              lal local2 
  0263:18                 not 
  0264:30 003b            bnt code_02a2 
  0267:83 01              lal local1 
  0269:18                 not 
  026a:30 000c            bnt code_0279 
  026d:7a               push2 
  026e:38 02f8          pushi 2f8 // $2f8 sel_760
  0271:76               push0 
  0272:45 0e 04         callb procedure_000e 4 //  

  0275:35 01              ldi 1 
  0277:a3 01              sal local1 

        code_0279
  0279:76               push0 
  027a:45 02 00         callb procedure_0002 0 //  

  027d:38 011b          pushi 11b // $11b setMotion
  0280:39 04            pushi 4 // $4 x
  0282:51 1e            class MoveTo 
  0284:36                push 
  0285:39 04            pushi 4 // $4 x
  0287:76               push0 
  0288:81 00              lag  
  028a:4a 04             send 4 

  028c:36                push 
  028d:35 0a              ldi a 
  028f:02                 add 
  0290:36                push 
  0291:39 03            pushi 3 // $3 y
  0293:76               push0 
  0294:81 00              lag  
  0296:4a 04             send 4 

  0298:36                push 
  0299:7c            pushSelf 
  029a:81 00              lag  
  029c:4a 0c             send c 

  029e:35 01              ldi 1 
  02a0:a3 02              sal local2 

        code_02a2
  02a2:38 0208          pushi 208 // $208 skating
  02a5:76               push0 
  02a6:81 00              lag  
  02a8:4a 04             send 4 

  02aa:30 003a            bnt code_02e7 
  02ad:39 3b            pushi 3b // $3b mover
  02af:76               push0 
  02b0:81 00              lag  
  02b2:4a 04             send 4 

  02b4:30 0030            bnt code_02e7 
  02b7:89 6c              lsg  
  02b9:35 03              ldi 3 
  02bb:22                 lt? 
  02bc:30 0028            bnt code_02e7 
  02bf:c3 2c              +al local44 
  02c1:36                push 
  02c2:35 64              ldi 64 
  02c4:1a                 eq? 
  02c5:30 001f            bnt code_02e7 
  02c8:35 00              ldi 0 
  02ca:a3 2c              sal local44 
  02cc:c1 6c              +ag  
  02ce:36                push 
  02cf:35 03              ldi 3 
  02d1:1a                 eq? 
  02d2:30 0012            bnt code_02e7 
  02d5:78               push1 
  02d6:39 03            pushi 3 // $3 y
  02d8:45 06 02         callb procedure_0006 2 //  

  02db:18                 not 
  02dc:30 0008            bnt code_02e7 
  02df:39 6b            pushi 6b // $6b init
  02e1:76               push0 
  02e2:72 0cec          lofsa $0cec // lana
  02e5:4a 04             send 4 


        code_02e7
  02e7:48                 ret 
    )

    (method (dispose) // method_01d5
  01d5:39 54            pushi 54 // $54 delete
  01d7:78               push1 
  01d8:7c            pushSelf 
  01d9:81 4a              lag  
  01db:4a 06             send 6 

  01dd:39 54            pushi 54 // $54 delete
  01df:78               push1 
  01e0:7c            pushSelf 
  01e1:81 49              lag  
  01e3:4a 06             send 6 

  01e5:39 54            pushi 54 // $54 delete
  01e7:78               push1 
  01e8:7c            pushSelf 
  01e9:81 48              lag  
  01eb:4a 06             send 6 

  01ed:38 009f          pushi 9f // $9f fade
  01f0:76               push0 
  01f1:81 66              lag  
  01f3:4a 04             send 4 

  01f5:39 6c            pushi 6c // $6c dispose
  01f7:76               push0 
  01f8:57 72 04         super LLRoom 4 

  01fb:48                 ret 
    )

    (method (handleEvent) // method_0313
  0313:3f 02             link 2 // (var $2)
  0315:39 22            pushi 22 // $22 type
  0317:76               push0 
  0318:87 01              lap param1 
  031a:4a 04             send 4 

  031c:a5 00              sat temp0 
  031e:39 28            pushi 28 // $28 message
  0320:76               push0 
  0321:87 01              lap param1 
  0323:4a 04             send 4 

  0325:a5 01              sat temp1 
  0327:8d 00              lst temp0 
  0329:35 40              ldi 40 
  032b:12                 and 
  032c:30 0013            bnt code_0342 
  032f:8d 01              lst temp1 
  0331:35 00              ldi 0 
  0333:1a                 eq? 
  0334:30 000b            bnt code_0342 
  0337:39 4c            pushi 4c // $4c claimed
  0339:78               push1 
  033a:76               push0 
  033b:87 01              lap param1 
  033d:4a 06             send 6 

  033f:32 0339            jmp code_067b 

        code_0342
  0342:39 03            pushi 3 // $3 y
  0344:8d 00              lst temp0 
  0346:78               push1 
  0347:39 04            pushi 4 // $4 x
  0349:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  034f:30 0010            bnt code_0362 
  0352:39 40            pushi 40 // $40 modifiers
  0354:76               push0 
  0355:87 01              lap param1 
  0357:4a 04             send 4 

  0359:18                 not 
  035a:30 0005            bnt code_0362 
  035d:89 13              lsg  
  035f:35 06              ldi 6 
  0361:1a                 eq? 

        code_0362
  0362:2e 000e             bt code_0373 
  0365:8d 00              lst temp0 
  0367:34 4000            ldi 4000 
  036a:1a                 eq? 
  036b:30 0014            bnt code_0382 
  036e:8d 01              lst temp1 
  0370:35 01              ldi 1 
  0372:1a                 eq? 

        code_0373
  0373:30 000c            bnt code_0382 
  0376:38 008d          pushi 8d // $8d cue
  0379:76               push0 
  037a:72 23da          lofsa $23da // sMeetLana
  037d:4a 04             send 4 

  037f:32 02f9            jmp code_067b 

        code_0382
  0382:38 008a          pushi 8a // $8a script
  0385:76               push0 
  0386:81 00              lag  
  0388:4a 04             send 4 

  038a:36                push 
  038b:72 23da          lofsa $23da // sMeetLana
  038e:1a                 eq? 
  038f:30 0005            bnt code_0397 
  0392:35 00              ldi 0 
  0394:32 02e4            jmp code_067b 

        code_0397
  0397:38 011a          pushi 11a // $11a canControl
  039a:76               push0 
  039b:51 31            class User 
  039d:4a 04             send 4 

  039f:18                 not 
  03a0:30 000b            bnt code_03ae 
  03a3:39 4c            pushi 4c // $4c claimed
  03a5:78               push1 
  03a6:78               push1 
  03a7:87 01              lap param1 
  03a9:4a 06             send 6 

  03ab:32 02cd            jmp code_067b 

        code_03ae
  03ae:8d 00              lst temp0 
  03b0:35 40              ldi 40 
  03b2:12                 and 
  03b3:30 01e4            bnt code_059a 
  03b6:38 0209          pushi 209 // $209 sitting
  03b9:76               push0 
  03ba:81 00              lag  
  03bc:4a 04             send 4 

  03be:18                 not 
  03bf:30 01be            bnt code_0580 
  03c2:39 3b            pushi 3b // $3b mover
  03c4:76               push0 
  03c5:81 00              lag  
  03c7:4a 04             send 4 

  03c9:30 0018            bnt code_03e4 
  03cc:8d 01              lst temp1 
  03ce:83 03              lal local3 
  03d0:1a                 eq? 
  03d1:30 0010            bnt code_03e4 
  03d4:38 011b          pushi 11b // $11b setMotion
  03d7:78               push1 
  03d8:76               push0 
  03d9:81 00              lag  
  03db:4a 06             send 6 

  03dd:35 00              ldi 0 
  03df:a3 03              sal local3 
  03e1:32 0195            jmp code_0579 

        code_03e4
  03e4:8d 01              lst temp1 
  03e6:3c                 dup 
  03e7:35 01              ldi 1 
  03e9:1a                 eq? 
  03ea:30 0021            bnt code_040e 
  03ed:39 04            pushi 4 // $4 x
  03ef:78               push1 
  03f0:39 04            pushi 4 // $4 x
  03f2:76               push0 
  03f3:81 00              lag  
  03f5:4a 04             send 4 

  03f7:36                push 
  03f8:39 03            pushi 3 // $3 y
  03fa:78               push1 
  03fb:39 03            pushi 3 // $3 y
  03fd:76               push0 
  03fe:81 00              lag  
  0400:4a 04             send 4 

  0402:36                push 
  0403:35 14              ldi 14 
  0405:04                 sub 
  0406:36                push 
  0407:87 01              lap param1 
  0409:4a 0c             send c 

  040b:32 012b            jmp code_0539 

        code_040e
  040e:3c                 dup 
  040f:35 02              ldi 2 
  0411:1a                 eq? 
  0412:30 0025            bnt code_043a 
  0415:39 04            pushi 4 // $4 x
  0417:78               push1 
  0418:39 04            pushi 4 // $4 x
  041a:76               push0 
  041b:81 00              lag  
  041d:4a 04             send 4 

  041f:36                push 
  0420:35 64              ldi 64 
  0422:02                 add 
  0423:36                push 
  0424:39 03            pushi 3 // $3 y
  0426:78               push1 
  0427:39 03            pushi 3 // $3 y
  0429:76               push0 
  042a:81 00              lag  
  042c:4a 04             send 4 

  042e:36                push 
  042f:35 14              ldi 14 
  0431:04                 sub 
  0432:36                push 
  0433:87 01              lap param1 
  0435:4a 0c             send c 

  0437:32 00ff            jmp code_0539 

        code_043a
  043a:3c                 dup 
  043b:35 03              ldi 3 
  043d:1a                 eq? 
  043e:30 0018            bnt code_0459 
  0441:39 04            pushi 4 // $4 x
  0443:78               push1 
  0444:38 03e8          pushi 3e8 // $3e8 sel_1000
  0447:39 03            pushi 3 // $3 y
  0449:78               push1 
  044a:39 03            pushi 3 // $3 y
  044c:76               push0 
  044d:81 00              lag  
  044f:4a 04             send 4 

  0451:36                push 
  0452:87 01              lap param1 
  0454:4a 0c             send c 

  0456:32 00e0            jmp code_0539 

        code_0459
  0459:3c                 dup 
  045a:35 04              ldi 4 
  045c:1a                 eq? 
  045d:30 0025            bnt code_0485 
  0460:39 04            pushi 4 // $4 x
  0462:78               push1 
  0463:39 04            pushi 4 // $4 x
  0465:76               push0 
  0466:81 00              lag  
  0468:4a 04             send 4 

  046a:36                push 
  046b:35 14              ldi 14 
  046d:02                 add 
  046e:36                push 
  046f:39 03            pushi 3 // $3 y
  0471:78               push1 
  0472:39 03            pushi 3 // $3 y
  0474:76               push0 
  0475:81 00              lag  
  0477:4a 04             send 4 

  0479:36                push 
  047a:35 14              ldi 14 
  047c:02                 add 
  047d:36                push 
  047e:87 01              lap param1 
  0480:4a 0c             send c 

  0482:32 00b4            jmp code_0539 

        code_0485
  0485:3c                 dup 
  0486:35 05              ldi 5 
  0488:1a                 eq? 
  0489:30 0021            bnt code_04ad 
  048c:39 04            pushi 4 // $4 x
  048e:78               push1 
  048f:39 04            pushi 4 // $4 x
  0491:76               push0 
  0492:81 00              lag  
  0494:4a 04             send 4 

  0496:36                push 
  0497:39 03            pushi 3 // $3 y
  0499:78               push1 
  049a:39 03            pushi 3 // $3 y
  049c:76               push0 
  049d:81 00              lag  
  049f:4a 04             send 4 

  04a1:36                push 
  04a2:35 14              ldi 14 
  04a4:02                 add 
  04a5:36                push 
  04a6:87 01              lap param1 
  04a8:4a 0c             send c 

  04aa:32 008c            jmp code_0539 

        code_04ad
  04ad:3c                 dup 
  04ae:35 06              ldi 6 
  04b0:1a                 eq? 
  04b1:30 0025            bnt code_04d9 
  04b4:39 04            pushi 4 // $4 x
  04b6:78               push1 
  04b7:39 04            pushi 4 // $4 x
  04b9:76               push0 
  04ba:81 00              lag  
  04bc:4a 04             send 4 

  04be:36                push 
  04bf:35 14              ldi 14 
  04c1:04                 sub 
  04c2:36                push 
  04c3:39 03            pushi 3 // $3 y
  04c5:78               push1 
  04c6:39 03            pushi 3 // $3 y
  04c8:76               push0 
  04c9:81 00              lag  
  04cb:4a 04             send 4 

  04cd:36                push 
  04ce:35 14              ldi 14 
  04d0:02                 add 
  04d1:36                push 
  04d2:87 01              lap param1 
  04d4:4a 0c             send c 

  04d6:32 0060            jmp code_0539 

        code_04d9
  04d9:3c                 dup 
  04da:35 07              ldi 7 
  04dc:1a                 eq? 
  04dd:30 0016            bnt code_04f6 
  04e0:39 04            pushi 4 // $4 x
  04e2:78               push1 
  04e3:76               push0 
  04e4:39 03            pushi 3 // $3 y
  04e6:78               push1 
  04e7:39 03            pushi 3 // $3 y
  04e9:76               push0 
  04ea:81 00              lag  
  04ec:4a 04             send 4 

  04ee:36                push 
  04ef:87 01              lap param1 
  04f1:4a 0c             send c 

  04f3:32 0043            jmp code_0539 

        code_04f6
  04f6:3c                 dup 
  04f7:35 08              ldi 8 
  04f9:1a                 eq? 
  04fa:30 0025            bnt code_0522 
  04fd:39 04            pushi 4 // $4 x
  04ff:78               push1 
  0500:39 04            pushi 4 // $4 x
  0502:76               push0 
  0503:81 00              lag  
  0505:4a 04             send 4 

  0507:36                push 
  0508:35 14              ldi 14 
  050a:04                 sub 
  050b:36                push 
  050c:39 03            pushi 3 // $3 y
  050e:78               push1 
  050f:39 03            pushi 3 // $3 y
  0511:76               push0 
  0512:81 00              lag  
  0514:4a 04             send 4 

  0516:36                push 
  0517:35 14              ldi 14 
  0519:04                 sub 
  051a:36                push 
  051b:87 01              lap param1 
  051d:4a 0c             send c 

  051f:32 0017            jmp code_0539 

        code_0522
  0522:3c                 dup 
  0523:35 00              ldi 0 
  0525:1a                 eq? 
  0526:30 0010            bnt code_0539 
  0529:38 00c7          pushi c7 // $c7 advanceCurIcon
  052c:76               push0 
  052d:81 45              lag  
  052f:4a 04             send 4 

  0531:39 4c            pushi 4c // $4c claimed
  0533:78               push1 
  0534:78               push1 
  0535:87 01              lap param1 
  0537:4a 06             send 6 


        code_0539
  0539:3a                toss 
  053a:8d 01              lst temp1 
  053c:35 00              ldi 0 
  053e:1c                 ne? 
  053f:30 0037            bnt code_0579 
  0542:39 04            pushi 4 // $4 x
  0544:76               push0 
  0545:87 01              lap param1 
  0547:4a 04             send 4 

  0549:a3 08              sal local8 
  054b:39 03            pushi 3 // $3 y
  054d:76               push0 
  054e:87 01              lap param1 
  0550:4a 04             send 4 

  0552:a3 09              sal local9 
  0554:39 03            pushi 3 // $3 y
  0556:38 008a          pushi 8a // $8a script
  0559:76               push0 
  055a:81 02              lag  
  055c:4a 04             send 4 

  055e:36                push 
  055f:76               push0 
  0560:72 2a90          lofsa $2a90 // sMoveLarry
  0563:36                push 
  0564:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  056a:30 000c            bnt code_0579 
  056d:38 008e          pushi 8e // $8e setScript
  0570:78               push1 
  0571:72 2a90          lofsa $2a90 // sMoveLarry
  0574:36                push 
  0575:81 02              lag  
  0577:4a 06             send 6 


        code_0579
  0579:85 01              lat temp1 
  057b:a3 03              sal local3 
  057d:32 000f            jmp code_058f 

        code_0580
  0580:38 008e          pushi 8e // $8e setScript
  0583:39 03            pushi 3 // $3 y
  0585:72 2800          lofsa $2800 // sStandUp
  0588:36                push 
  0589:76               push0 
  058a:76               push0 
  058b:81 02              lag  
  058d:4a 0a             send a 


        code_058f
  058f:39 4c            pushi 4c // $4c claimed
  0591:78               push1 
  0592:78               push1 
  0593:87 01              lap param1 
  0595:4a 06             send 6 

  0597:32 00e1            jmp code_067b 

        code_059a
  059a:8d 00              lst temp0 
  059c:35 01              ldi 1 
  059e:1a                 eq? 
  059f:30 0025            bnt code_05c7 
  05a2:39 40            pushi 40 // $40 modifiers
  05a4:76               push0 
  05a5:87 01              lap param1 
  05a7:4a 04             send 4 

  05a9:18                 not 
  05aa:30 001a            bnt code_05c7 
  05ad:38 00ce          pushi ce // $ce curIcon
  05b0:76               push0 
  05b1:81 45              lag  
  05b3:4a 04             send 4 

  05b5:36                push 
  05b6:39 43            pushi 43 // $43 at
  05b8:78               push1 
  05b9:76               push0 
  05ba:81 45              lag  
  05bc:4a 06             send 6 

  05be:1a                 eq? 
  05bf:2e 0015             bt code_05d7 
  05c2:8d 01              lst temp1 
  05c4:35 01              ldi 1 
  05c6:1a                 eq? 

        code_05c7
  05c7:2e 000d             bt code_05d7 
  05ca:8d 00              lst temp0 
  05cc:35 04              ldi 4 
  05ce:1a                 eq? 
  05cf:30 00a9            bnt code_067b 
  05d2:8d 01              lst temp1 
  05d4:35 0d              ldi d 
  05d6:1a                 eq? 

        code_05d7
  05d7:30 00a1            bnt code_067b 
  05da:38 0209          pushi 209 // $209 sitting
  05dd:76               push0 
  05de:81 00              lag  
  05e0:4a 04             send 4 

  05e2:30 001a            bnt code_05ff 
  05e5:39 4c            pushi 4c // $4c claimed
  05e7:78               push1 
  05e8:78               push1 
  05e9:87 01              lap param1 
  05eb:4a 06             send 6 

  05ed:38 008e          pushi 8e // $8e setScript
  05f0:39 03            pushi 3 // $3 y
  05f2:72 2800          lofsa $2800 // sStandUp
  05f5:36                push 
  05f6:76               push0 
  05f7:76               push0 
  05f8:81 02              lag  
  05fa:4a 0a             send a 

  05fc:32 007c            jmp code_067b 

        code_05ff
  05ff:39 03            pushi 3 // $3 y
  0601:38 008a          pushi 8a // $8a script
  0604:76               push0 
  0605:81 02              lag  
  0607:4a 04             send 4 

  0609:36                push 
  060a:76               push0 
  060b:72 2a90          lofsa $2a90 // sMoveLarry
  060e:36                push 
  060f:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  0615:30 0063            bnt code_067b 
  0618:39 04            pushi 4 // $4 x
  061a:76               push0 
  061b:87 01              lap param1 
  061d:4a 04             send 4 

  061f:a3 08              sal local8 
  0621:39 03            pushi 3 // $3 y
  0623:76               push0 
  0624:87 01              lap param1 
  0626:4a 04             send 4 

  0628:a3 09              sal local9 
  062a:36                push 
  062b:34 009e            ldi 9e 
  062e:1e                 gt? 
  062f:30 002f            bnt code_0661 
  0632:38 0208          pushi 208 // $208 skating
  0635:76               push0 
  0636:81 00              lag  
  0638:4a 04             send 4 

  063a:18                 not 
  063b:30 000f            bnt code_064d 
  063e:38 008e          pushi 8e // $8e setScript
  0641:78               push1 
  0642:72 1f8e          lofsa $1f8e // sFall
  0645:36                push 
  0646:81 02              lag  
  0648:4a 06             send 6 

  064a:32 002e            jmp code_067b 

        code_064d
  064d:34 0091            ldi 91 
  0650:a3 09              sal local9 
  0652:38 008e          pushi 8e // $8e setScript
  0655:78               push1 
  0656:72 2a90          lofsa $2a90 // sMoveLarry
  0659:36                push 
  065a:81 02              lag  
  065c:4a 06             send 6 

  065e:32 001a            jmp code_067b 

        code_0661
  0661:8b 09              lsl local9 
  0663:34 0091            ldi 91 
  0666:1e                 gt? 
  0667:30 0005            bnt code_066f 
  066a:34 0091            ldi 91 
  066d:a3 09              sal local9 

        code_066f
  066f:38 008e          pushi 8e // $8e setScript
  0672:78               push1 
  0673:72 2a90          lofsa $2a90 // sMoveLarry
  0676:36                push 
  0677:81 02              lag  
  0679:4a 06             send 6 


        code_067b
  067b:48                 ret 
    )

    (method (cue) // method_02e8
  02e8:83 02              lal local2 
  02ea:30 000b            bnt code_02f8 
  02ed:35 00              ldi 0 
  02ef:a3 02              sal local2 
  02f1:76               push0 
  02f2:45 03 00         callb procedure_0003 0 //  

  02f5:32 001a            jmp code_0312 

        code_02f8
  02f8:38 0146          pushi 146 // $146 edgeHit
  02fb:78               push1 
  02fc:78               push1 
  02fd:81 00              lag  
  02ff:4a 06             send 6 

  0301:38 0179          pushi 179 // $179 newRoom
  0304:78               push1 
  0305:38 0184          pushi 184 // $184 north
  0308:76               push0 
  0309:81 02              lag  
  030b:4a 04             send 4 

  030d:36                push 
  030e:81 02              lag  
  0310:4a 06             send 6 


        code_0312
  0312:48                 ret 
    )

    (method (drawPic) // method_067c
  067c:3f 06             link 6 // (var $6)
  067e:8f 01              lsp param1 
  0680:34 031b            ldi 31b 
  0683:1c                 ne? 
  0684:30 00d1            bnt code_0758 
  0687:39 74            pushi 74 // $74 eachElementDo
  0689:7a               push2 
  068a:39 63            pushi 63 // $63 perform
  068c:72 15d2          lofsa $15d2 // showSkaterCode
  068f:36                push 
  0690:81 05              lag  
  0692:4a 08             send 8 

  0694:39 6c            pushi 6c // $6c dispose
  0696:76               push0 
  0697:81 0a              lag  
  0699:4a 04             send 4 

  069b:38 018c          pushi 18c // $18c drawPic
  069e:78               push1 
  069f:8f 01              lsp param1 
  06a1:59 02            &rest 2 
  06a3:57 72 06         super LLRoom 6 

  06a6:35 01              ldi 1 
  06a8:a5 04              sat temp4 
  06aa:35 00              ldi 0 
  06ac:a5 00              sat temp0 

        code_06ae
  06ae:8d 04              lst temp4 
  06b0:34 013e            ldi 13e 
  06b3:22                 lt? 
  06b4:30 0097            bnt code_074e 
  06b7:89 9f              lsg  
  06b9:35 01              ldi 1 
  06bb:02                 add 
  06bc:36                push 
  06bd:8d 00              lst temp0 
  06bf:35 25              ldi 25 
  06c1:06                 mul 
  06c2:06                 mul 
  06c3:a5 03              sat temp3 
  06c5:78               push1 
  06c6:36                push 
  06c7:85 00              lat temp0 
  06c9:0c                 shr 
  06ca:12                 and 
  06cb:30 0007            bnt code_06d5 
  06ce:8d 03              lst temp3 
  06d0:35 11              ldi 11 
  06d2:08                 div 
  06d3:a5 03              sat temp3 

        code_06d5
  06d5:89 9f              lsg  
  06d7:35 03              ldi 3 
  06d9:1a                 eq? 
  06da:30 0017            bnt code_06f4 
  06dd:8d 00              lst temp0 
  06df:35 03              ldi 3 
  06e1:1a                 eq? 
  06e2:30 000f            bnt code_06f4 
  06e5:35 02              ldi 2 
  06e7:a5 02              sat temp2 
  06e9:35 00              ldi 0 
  06eb:a5 03              sat temp3 
  06ed:35 6a              ldi 6a 
  06ef:a5 05              sat temp5 
  06f1:32 0022            jmp code_0716 

        code_06f4
  06f4:8d 03              lst temp3 
  06f6:35 11              ldi 11 
  06f8:0a                 mod 
  06f9:a5 03              sat temp3 
  06fb:93 1b             lali local27 
  06fd:a5 05              sat temp5 
  06ff:35 00              ldi 0 
  0701:a5 02              sat temp2 
  0703:8d 03              lst temp3 
  0705:35 08              ldi 8 
  0707:1e                 gt? 
  0708:30 000b            bnt code_0716 
  070b:8d 03              lst temp3 
  070d:35 09              ldi 9 
  070f:04                 sub 
  0710:a5 03              sat temp3 
  0712:35 01              ldi 1 
  0714:a5 02              sat temp2 

        code_0716
  0716:39 04            pushi 4 // $4 x
  0718:78               push1 
  0719:8d 04              lst temp4 
  071b:39 06            pushi 6 // $6 loop
  071d:78               push1 
  071e:8d 02              lst temp2 
  0720:39 07            pushi 7 // $7 cel
  0722:78               push1 
  0723:8d 03              lst temp3 
  0725:38 0111          pushi 111 // $111 approachX
  0728:78               push1 
  0729:8d 04              lst temp4 
  072b:35 2b              ldi 2b 
  072d:02                 add 
  072e:36                push 
  072f:38 0112          pushi 112 // $112 approachY
  0732:78               push1 
  0733:39 55            pushi 55 // $55 z
  0735:39 6b            pushi 6b // $6b init
  0737:76               push0 
  0738:39 6a            pushi 6a // $6a new
  073a:76               push0 
  073b:72 1828          lofsa $1828 // theBuilding
  073e:4a 04             send 4 

  0740:4a 22             send 22 

  0742:8d 04              lst temp4 
  0744:85 05              lat temp5 
  0746:02                 add 
  0747:a5 04              sat temp4 
  0749:c5 00              +at temp0 
  074b:32 ff60            jmp code_06ae 

        code_074e
  074e:39 3c            pushi 3c // $3c doit
  0750:76               push0 
  0751:81 0a              lag  
  0753:4a 04             send 4 

  0755:32 000b            jmp code_0763 

        code_0758
  0758:38 018c          pushi 18c // $18c drawPic
  075b:78               push1 
  075c:8f 01              lsp param1 
  075e:59 02            &rest 2 
  0760:57 72 06         super LLRoom 6 


        code_0763
  0763:48                 ret 
    )

)

// 0a2e
(class Skater of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $0
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $0
        freq $1
        nearLarry $0
        paused $0
    )
    (method (init) // method_07be
  07be:38 0096          pushi 96 // $96 setCycle
  07c1:78               push1 
  07c2:51 17            class Fwd 
  07c4:36                push 
  07c5:54 06             self 6 

  07c7:39 6b            pushi 6b // $6b init
  07c9:76               push0 
  07ca:57 30 04         super Actor 4 

  07cd:34 00a0            ldi a0 
  07d0:65 08             aTop x 
  07d2:38 008d          pushi 8d // $8d cue
  07d5:76               push0 
  07d6:54 04             self 4 

  07d8:48                 ret 
    )

    (method (doit) // method_07d9
  07d9:39 3c            pushi 3c // $3c doit
  07db:76               push0 
  07dc:57 30 04         super Actor 4 

  07df:63 72             pToa nearLarry 
  07e1:30 0005            bnt code_07e9 
  07e4:6d 72            dpToa nearLarry 
  07e6:32 003c            jmp code_0825 

        code_07e9
  07e9:67 6e             pTos room 
  07eb:81 9f              lag  
  07ed:1a                 eq? 
  07ee:30 0017            bnt code_0808 
  07f1:38 00e6          pushi e6 // $e6 distanceTo
  07f4:78               push1 
  07f5:7c            pushSelf 
  07f6:81 00              lag  
  07f8:4a 06             send 6 

  07fa:36                push 
  07fb:35 1e              ldi 1e 
  07fd:22                 lt? 
  07fe:30 0007            bnt code_0808 
  0801:35 12              ldi 12 
  0803:65 72             aTop nearLarry 
  0805:32 001d            jmp code_0825 

        code_0808
  0808:63 64             pToa mover 
  080a:18                 not 
  080b:30 0017            bnt code_0825 
  080e:39 03            pushi 3 // $3 y
  0810:67 08             pTos x 
  0812:76               push0 
  0813:38 0140          pushi 140 // $140 mapKeyToDir
  0816:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  081c:30 0006            bnt code_0825 
  081f:38 008d          pushi 8d // $8d cue
  0822:76               push0 
  0823:54 04             self 4 


        code_0825
  0825:67 70             pTos freq 
  0827:35 00              ldi 0 
  0829:24                 le? 
  082a:30 0003            bnt code_0830 
  082d:32 013d            jmp code_096d 

        code_0830
  0830:67 30             pTos loop 
  0832:35 00              ldi 0 
  0834:1a                 eq? 
  0835:30 009b            bnt code_08d3 
  0838:67 72             pTos nearLarry 
  083a:35 12              ldi 12 
  083c:1a                 eq? 
  083d:30 0014            bnt code_0854 
  0840:38 0118          pushi 118 // $118 isNotHidden
  0843:76               push0 
  0844:54 04             self 4 

  0846:30 000b            bnt code_0854 
  0849:38 0226          pushi 226 // $226 turn
  084c:78               push1 
  084d:39 04            pushi 4 // $4 x
  084f:54 06             self 6 

  0851:32 0119            jmp code_096d 

        code_0854
  0854:38 012c          pushi 12c // $12c ignoreHorizon
  0857:63 08             pToa x 
  0859:22                 lt? 
  085a:30 0110            bnt code_096d 
  085d:60               pprev 
  085e:34 0138            ldi 138 
  0861:22                 lt? 
  0862:30 0108            bnt code_096d 
  0865:7a               push2 
  0866:78               push1 
  0867:67 70             pTos freq 
  0869:43 3c 04         callk Random 4 

  086c:36                push 
  086d:35 01              ldi 1 
  086f:1a                 eq? 
  0870:2e 0005             bt code_0878 
  0873:67 6e             pTos room 
  0875:35 14              ldi 14 
  0877:1a                 eq? 

        code_0878
  0878:30 000b            bnt code_0886 
  087b:38 0226          pushi 226 // $226 turn
  087e:78               push1 
  087f:39 04            pushi 4 // $4 x
  0881:54 06             self 6 

  0883:32 00e7            jmp code_096d 

        code_0886
  0886:67 38             pTos signal 
  0888:34 0080            ldi 80 
  088b:12                 and 
  088c:30 002a            bnt code_08b9 
  088f:6b 6e            ipToa room 
  0891:67 08             pTos x 
  0893:34 0140            ldi 140 
  0896:04                 sub 
  0897:65 08             aTop x 
  0899:38 011b          pushi 11b // $11b setMotion
  089c:39 03            pushi 3 // $3 y
  089e:51 1e            class MoveTo 
  08a0:36                push 
  08a1:38 0140          pushi 140 // $140 mapKeyToDir
  08a4:67 0a             pTos y 
  08a6:54 0a             self a 

  08a8:67 6e             pTos room 
  08aa:81 9f              lag  
  08ac:1a                 eq? 
  08ad:30 00bd            bnt code_096d 
  08b0:38 00c2          pushi c2 // $c2 show
  08b3:76               push0 
  08b4:54 04             self 4 

  08b6:32 00b4            jmp code_096d 

        code_08b9
  08b9:38 0223          pushi 223 // $223 freq
  08bc:78               push1 
  08bd:67 70             pTos freq 
  08bf:35 ff              ldi ff 
  08c1:06                 mul 
  08c2:36                push 
  08c3:38 011b          pushi 11b // $11b setMotion
  08c6:39 03            pushi 3 // $3 y
  08c8:51 5c            class MoveFwd 
  08ca:36                push 
  08cb:39 28            pushi 28 // $28 message
  08cd:7c            pushSelf 
  08ce:54 10             self 10 

  08d0:32 009a            jmp code_096d 

        code_08d3
  08d3:67 30             pTos loop 
  08d5:35 01              ldi 1 
  08d7:1a                 eq? 
  08d8:30 0092            bnt code_096d 
  08db:67 72             pTos nearLarry 
  08dd:35 12              ldi 12 
  08df:1a                 eq? 
  08e0:30 0013            bnt code_08f6 
  08e3:38 0118          pushi 118 // $118 isNotHidden
  08e6:76               push0 
  08e7:54 04             self 4 

  08e9:30 000a            bnt code_08f6 
  08ec:38 0226          pushi 226 // $226 turn
  08ef:78               push1 
  08f0:7a               push2 
  08f1:54 06             self 6 

  08f3:32 0077            jmp code_096d 

        code_08f6
  08f6:39 0d            pushi d // $d lsTop
  08f8:63 08             pToa x 
  08fa:22                 lt? 
  08fb:30 006f            bnt code_096d 
  08fe:60               pprev 
  08ff:35 19              ldi 19 
  0901:22                 lt? 
  0902:30 0068            bnt code_096d 
  0905:7a               push2 
  0906:78               push1 
  0907:67 70             pTos freq 
  0909:43 3c 04         callk Random 4 

  090c:36                push 
  090d:35 01              ldi 1 
  090f:1a                 eq? 
  0910:2e 0005             bt code_0918 
  0913:67 6e             pTos room 
  0915:35 00              ldi 0 
  0917:1a                 eq? 

        code_0918
  0918:30 000a            bnt code_0925 
  091b:38 0226          pushi 226 // $226 turn
  091e:78               push1 
  091f:7a               push2 
  0920:54 06             self 6 

  0922:32 0048            jmp code_096d 

        code_0925
  0925:67 38             pTos signal 
  0927:34 0080            ldi 80 
  092a:12                 and 
  092b:30 0028            bnt code_0956 
  092e:6d 6e            dpToa room 
  0930:67 08             pTos x 
  0932:34 0140            ldi 140 
  0935:02                 add 
  0936:65 08             aTop x 
  0938:38 011b          pushi 11b // $11b setMotion
  093b:39 03            pushi 3 // $3 y
  093d:51 1e            class MoveTo 
  093f:36                push 
  0940:76               push0 
  0941:67 0a             pTos y 
  0943:54 0a             self a 

  0945:67 6e             pTos room 
  0947:81 9f              lag  
  0949:1a                 eq? 
  094a:30 0020            bnt code_096d 
  094d:38 00c2          pushi c2 // $c2 show
  0950:76               push0 
  0951:54 04             self 4 

  0953:32 0017            jmp code_096d 

        code_0956
  0956:38 0223          pushi 223 // $223 freq
  0959:78               push1 
  095a:67 70             pTos freq 
  095c:35 ff              ldi ff 
  095e:06                 mul 
  095f:36                push 
  0960:38 011b          pushi 11b // $11b setMotion
  0963:39 03            pushi 3 // $3 y
  0965:51 5c            class MoveFwd 
  0967:36                push 
  0968:39 28            pushi 28 // $28 message
  096a:7c            pushSelf 
  096b:54 10             self 10 


        code_096d
  096d:48                 ret 
    )

    (method (cue) // method_09a9
  09a9:67 30             pTos loop 
  09ab:35 01              ldi 1 
  09ad:1a                 eq? 
  09ae:30 003b            bnt code_09ec 
  09b1:6d 6e            dpToa room 
  09b3:39 04            pushi 4 // $4 x
  09b5:78               push1 
  09b6:67 08             pTos x 
  09b8:34 0140            ldi 140 
  09bb:02                 add 
  09bc:36                push 
  09bd:39 69            pushi 69 // $69 hide
  09bf:76               push0 
  09c0:38 011b          pushi 11b // $11b setMotion
  09c3:39 03            pushi 3 // $3 y
  09c5:51 1e            class MoveTo 
  09c7:36                push 
  09c8:76               push0 
  09c9:67 0a             pTos y 
  09cb:38 0223          pushi 223 // $223 freq
  09ce:78               push1 
  09cf:67 70             pTos freq 
  09d1:35 00              ldi 0 
  09d3:22                 lt? 
  09d4:30 0008            bnt code_09df 
  09d7:67 70             pTos freq 
  09d9:35 ff              ldi ff 
  09db:06                 mul 
  09dc:32 0002            jmp code_09e1 

        code_09df
  09df:63 70             pToa freq 

        code_09e1
  09e1:36                push 
  09e2:38 0224          pushi 224 // $224 nearLarry
  09e5:78               push1 
  09e6:76               push0 
  09e7:54 20             self 20 

  09e9:32 003a            jmp code_0a26 

        code_09ec
  09ec:6b 6e            ipToa room 
  09ee:39 04            pushi 4 // $4 x
  09f0:78               push1 
  09f1:67 08             pTos x 
  09f3:34 0140            ldi 140 
  09f6:04                 sub 
  09f7:36                push 
  09f8:39 69            pushi 69 // $69 hide
  09fa:76               push0 
  09fb:38 011b          pushi 11b // $11b setMotion
  09fe:39 03            pushi 3 // $3 y
  0a00:51 1e            class MoveTo 
  0a02:36                push 
  0a03:38 0140          pushi 140 // $140 mapKeyToDir
  0a06:67 0a             pTos y 
  0a08:38 0223          pushi 223 // $223 freq
  0a0b:78               push1 
  0a0c:67 70             pTos freq 
  0a0e:35 00              ldi 0 
  0a10:22                 lt? 
  0a11:30 0008            bnt code_0a1c 
  0a14:67 70             pTos freq 
  0a16:35 ff              ldi ff 
  0a18:06                 mul 
  0a19:32 0002            jmp code_0a1e 

        code_0a1c
  0a1c:63 70             pToa freq 

        code_0a1e
  0a1e:36                push 
  0a1f:38 0224          pushi 224 // $224 nearLarry
  0a22:78               push1 
  0a23:76               push0 
  0a24:54 20             self 20 


        code_0a26
  0a26:48                 ret 
  0a27:00                bnot 
    )

    (method (turn) // method_096e
  096e:8f 01              lsp param1 
  0970:3c                 dup 
  0971:35 04              ldi 4 
  0973:1a                 eq? 
  0974:30 0015            bnt code_098c 
  0977:38 00a2          pushi a2 // $a2 setLoop
  097a:78               push1 
  097b:78               push1 
  097c:38 011b          pushi 11b // $11b setMotion
  097f:39 03            pushi 3 // $3 y
  0981:51 1e            class MoveTo 
  0983:36                push 
  0984:76               push0 
  0985:67 0a             pTos y 
  0987:54 10             self 10 

  0989:32 001b            jmp code_09a7 

        code_098c
  098c:3c                 dup 
  098d:35 02              ldi 2 
  098f:1a                 eq? 
  0990:30 0014            bnt code_09a7 
  0993:38 00a2          pushi a2 // $a2 setLoop
  0996:78               push1 
  0997:76               push0 
  0998:38 011b          pushi 11b // $11b setMotion
  099b:39 03            pushi 3 // $3 y
  099d:51 1e            class MoveTo 
  099f:36                push 
  09a0:38 0140          pushi 140 // $140 mapKeyToDir
  09a3:67 0a             pTos y 
  09a5:54 10             self 10 


        code_09a7
  09a7:3a                toss 
  09a8:48                 ret 
    )

)

// 0ce6
(instance lana of Skater
    (properties
        x $0
        y $91
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $30c5
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $301
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $a
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $6
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $0
        freq $63
        nearLarry $0
        paused $0
    )
    (method (init) // method_0b38
  0b38:3f 02             link 2 // (var $2)
  0b3a:39 6b            pushi 6b // $6b init
  0b3c:76               push0 
  0b3d:57 7c 04         super Skater 4 

  0b40:7a               push2 
  0b41:76               push0 
  0b42:89 9f              lsg  
  0b44:35 04              ldi 4 
  0b46:04                 sub 
  0b47:36                push 
  0b48:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  0b4e:a5 00              sat temp0 
  0b50:7a               push2 
  0b51:39 14            pushi 14 // $14 brLeft
  0b53:89 9f              lsg  
  0b55:35 04              ldi 4 
  0b57:02                 add 
  0b58:36                push 
  0b59:46 03e7 0002 04  calle 3e7 procedure_0002 4 //  

  0b5f:a5 01              sat temp1 

        code_0b61
  0b61:7a               push2 
  0b62:8d 00              lst temp0 
  0b64:8d 01              lst temp1 
  0b66:43 3c 04         callk Random 4 

  0b69:65 6e             aTop room 
  0b6b:36                push 
  0b6c:81 9f              lag  
  0b6e:1a                 eq? 
  0b6f:30 0003            bnt code_0b75 
  0b72:32 ffec            jmp code_0b61 

        code_0b75
  0b75:67 6e             pTos room 
  0b77:81 9f              lag  
  0b79:1e                 gt? 
  0b7a:30 000a            bnt code_0b87 
  0b7d:38 00a2          pushi a2 // $a2 setLoop
  0b80:78               push1 
  0b81:78               push1 
  0b82:54 06             self 6 

  0b84:32 0007            jmp code_0b8e 

        code_0b87
  0b87:38 00a2          pushi a2 // $a2 setLoop
  0b8a:78               push1 
  0b8b:76               push0 
  0b8c:54 06             self 6 


        code_0b8e
  0b8e:48                 ret 
    )

    (method (doit) // method_0b9a
  0b9a:39 3c            pushi 3c // $3c doit
  0b9c:76               push0 
  0b9d:57 7c 04         super Skater 4 

  0ba0:67 6e             pTos room 
  0ba2:81 9f              lag  
  0ba4:1a                 eq? 
  0ba5:30 0030            bnt code_0bd8 
  0ba8:67 38             pTos signal 
  0baa:34 0088            ldi 88 
  0bad:12                 and 
  0bae:18                 not 
  0baf:30 0026            bnt code_0bd8 
  0bb2:83 00              lal local0 
  0bb4:18                 not 
  0bb5:30 0020            bnt code_0bd8 
  0bb8:39 14            pushi 14 // $14 brLeft
  0bba:63 08             pToa x 
  0bbc:22                 lt? 
  0bbd:30 0018            bnt code_0bd8 
  0bc0:60               pprev 
  0bc1:34 012c            ldi 12c 
  0bc4:22                 lt? 
  0bc5:30 0010            bnt code_0bd8 
  0bc8:7a               push2 
  0bc9:38 02f8          pushi 2f8 // $2f8 sel_760
  0bcc:78               push1 
  0bcd:45 0e 04         callb procedure_000e 4 //  

  0bd0:35 01              ldi 1 
  0bd2:a3 00              sal local0 
  0bd4:35 06              ldi 6 
  0bd6:65 70             aTop freq 

        code_0bd8
  0bd8:83 00              lal local0 
  0bda:30 0048            bnt code_0c25 
  0bdd:83 04              lal local4 
  0bdf:18                 not 
  0be0:30 0042            bnt code_0c25 
  0be3:39 03            pushi 3 // $3 y
  0be5:76               push0 
  0be6:81 00              lag  
  0be8:4a 04             send 4 

  0bea:36                push 
  0beb:63 0a             pToa y 
  0bed:1a                 eq? 
  0bee:2e 0008             bt code_0bf9 
  0bf1:38 0209          pushi 209 // $209 sitting
  0bf4:76               push0 
  0bf5:81 00              lag  
  0bf7:4a 04             send 4 


        code_0bf9
  0bf9:30 0029            bnt code_0c25 
  0bfc:38 00e6          pushi e6 // $e6 distanceTo
  0bff:78               push1 
  0c00:7c            pushSelf 
  0c01:81 00              lag  
  0c03:4a 06             send 6 

  0c05:36                push 
  0c06:35 28              ldi 28 
  0c08:22                 lt? 
  0c09:30 0019            bnt code_0c25 
  0c0c:38 0118          pushi 118 // $118 isNotHidden
  0c0f:76               push0 
  0c10:54 04             self 4 

  0c12:30 0010            bnt code_0c25 
  0c15:35 01              ldi 1 
  0c17:a3 04              sal local4 
  0c19:38 008e          pushi 8e // $8e setScript
  0c1c:78               push1 
  0c1d:72 23da          lofsa $23da // sMeetLana
  0c20:36                push 
  0c21:81 00              lag  
  0c23:4a 06             send 6 


        code_0c25
  0c25:48                 ret 
    )

    (method (dispose) // method_0b8f
  0b8f:76               push0 
  0b90:45 03 00         callb procedure_0003 0 //  

  0b93:39 6c            pushi 6c // $6c dispose
  0b95:76               push0 
  0b96:57 7c 04         super Skater 4 

  0b99:48                 ret 
    )

    (method (doVerb) // method_0c3c
  0c3c:8f 01              lsp param1 
  0c3e:3c                 dup 
  0c3f:35 02              ldi 2 
  0c41:1a                 eq? 
  0c42:30 000b            bnt code_0c50 
  0c45:7a               push2 
  0c46:38 02f8          pushi 2f8 // $2f8 sel_760
  0c49:78               push1 
  0c4a:45 0e 04         callb procedure_000e 4 //  

  0c4d:32 0027            jmp code_0c77 

        code_0c50
  0c50:3c                 dup 
  0c51:35 05              ldi 5 
  0c53:1a                 eq? 
  0c54:30 0013            bnt code_0c6a 
  0c57:35 01              ldi 1 
  0c59:a3 04              sal local4 
  0c5b:38 008e          pushi 8e // $8e setScript
  0c5e:78               push1 
  0c5f:72 23da          lofsa $23da // sMeetLana
  0c62:36                push 
  0c63:81 00              lag  
  0c65:4a 06             send 6 

  0c67:32 000d            jmp code_0c77 

        code_0c6a
  0c6a:38 010c          pushi 10c // $10c doVerb
  0c6d:7a               push2 
  0c6e:8f 01              lsp param1 
  0c70:8f 02              lsp param2 
  0c72:59 03            &rest 3 
  0c74:57 7c 08         super Skater 8 


        code_0c77
  0c77:3a                toss 
  0c78:48                 ret 
    )

    (method (cue) // method_0c79
  0c79:63 70             pToa freq 
  0c7b:18                 not 
  0c7c:30 0008            bnt code_0c87 
  0c7f:39 6c            pushi 6c // $6c dispose
  0c81:76               push0 
  0c82:54 04             self 4 

  0c84:32 0057            jmp code_0cde 

        code_0c87
  0c87:67 30             pTos loop 
  0c89:35 01              ldi 1 
  0c8b:1a                 eq? 
  0c8c:30 0029            bnt code_0cb8 
  0c8f:6d 6e            dpToa room 
  0c91:39 04            pushi 4 // $4 x
  0c93:78               push1 
  0c94:67 08             pTos x 
  0c96:34 0140            ldi 140 
  0c99:02                 add 
  0c9a:36                push 
  0c9b:39 69            pushi 69 // $69 hide
  0c9d:76               push0 
  0c9e:38 011b          pushi 11b // $11b setMotion
  0ca1:39 03            pushi 3 // $3 y
  0ca3:51 1e            class MoveTo 
  0ca5:36                push 
  0ca6:76               push0 
  0ca7:67 0a             pTos y 
  0ca9:38 0223          pushi 223 // $223 freq
  0cac:78               push1 
  0cad:67 70             pTos freq 
  0caf:35 ff              ldi ff 
  0cb1:06                 mul 
  0cb2:36                push 
  0cb3:54 1a             self 1a 

  0cb5:32 0026            jmp code_0cde 

        code_0cb8
  0cb8:6b 6e            ipToa room 
  0cba:39 04            pushi 4 // $4 x
  0cbc:78               push1 
  0cbd:67 08             pTos x 
  0cbf:34 0140            ldi 140 
  0cc2:04                 sub 
  0cc3:36                push 
  0cc4:39 69            pushi 69 // $69 hide
  0cc6:76               push0 
  0cc7:38 011b          pushi 11b // $11b setMotion
  0cca:39 05            pushi 5 // $5 view
  0ccc:51 1e            class MoveTo 
  0cce:36                push 
  0ccf:38 0140          pushi 140 // $140 mapKeyToDir
  0cd2:67 0a             pTos y 
  0cd4:67 70             pTos freq 
  0cd6:67 70             pTos freq 
  0cd8:35 ff              ldi ff 
  0cda:06                 mul 
  0cdb:36                push 
  0cdc:54 18             self 18 


        code_0cde
  0cde:48                 ret 
  0cdf:00                bnot 
    )

    (method (turn) // method_0c26
  0c26:63 72             pToa nearLarry 
  0c28:30 0007            bnt code_0c32 
  0c2b:35 00              ldi 0 
  0c2d:65 72             aTop nearLarry 
  0c2f:32 0009            jmp code_0c3b 

        code_0c32
  0c32:38 0226          pushi 226 // $226 turn
  0c35:76               push0 
  0c36:59 01            &rest 1 
  0c38:57 7c 04         super Skater 4 


        code_0c3b
  0c3b:48                 ret 
    )

)

// 0dd4
(instance skater1 of Skater
    (properties
        x $0
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $30d8
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $30e1
        yStep $2
        view $303
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $8
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $3
        freq $4
        nearLarry $0
        paused $0
    )
    (method (doit) // method_0d82
  0d82:63 74             pToa paused 
  0d84:18                 not 
  0d85:30 0006            bnt code_0d8e 
  0d88:39 3c            pushi 3c // $3c doit
  0d8a:76               push0 
  0d8b:57 7c 04         super Skater 4 


        code_0d8e
  0d8e:48                 ret 
    )

    (method (checkDetail) // method_0d8f
  0d8f:38 0125          pushi 125 // $125 detailLevel
  0d92:76               push0 
  0d93:81 01              lag  
  0d95:4a 04             send 4 

  0d97:36                push 
  0d98:35 01              ldi 1 
  0d9a:1e                 gt? 
  0d9b:30 0019            bnt code_0db7 
  0d9e:67 0c             pTos z 
  0da0:34 03e8            ldi 3e8 
  0da3:20                 ge? 
  0da4:30 0009            bnt code_0db0 
  0da7:39 63            pushi 63 // $63 perform
  0da9:78               push1 
  0daa:72 1582          lofsa $1582 // zCode
  0dad:36                push 
  0dae:54 06             self 6 


        code_0db0
  0db0:35 00              ldi 0 
  0db2:65 74             aTop paused 
  0db4:32 0016            jmp code_0dcd 

        code_0db7
  0db7:35 01              ldi 1 
  0db9:65 74             aTop paused 
  0dbb:67 0c             pTos z 
  0dbd:34 03e8            ldi 3e8 
  0dc0:22                 lt? 
  0dc1:30 0009            bnt code_0dcd 
  0dc4:39 63            pushi 63 // $63 perform
  0dc6:78               push1 
  0dc7:72 1582          lofsa $1582 // zCode
  0dca:36                push 
  0dcb:54 06             self 6 


        code_0dcd
  0dcd:48                 ret 
    )

)

// 0eb2
(instance skater2 of Skater
    (properties
        x $0
        y $79
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $3100
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $310c
        yStep $2
        view $304
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $8
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $3
        freq $4
        nearLarry $0
        paused $0
    )
    (method (doit) // method_0e60
  0e60:63 74             pToa paused 
  0e62:18                 not 
  0e63:30 0006            bnt code_0e6c 
  0e66:39 3c            pushi 3c // $3c doit
  0e68:76               push0 
  0e69:57 7c 04         super Skater 4 


        code_0e6c
  0e6c:48                 ret 
    )

    (method (checkDetail) // method_0e6d
  0e6d:38 0125          pushi 125 // $125 detailLevel
  0e70:76               push0 
  0e71:81 01              lag  
  0e73:4a 04             send 4 

  0e75:36                push 
  0e76:35 01              ldi 1 
  0e78:1e                 gt? 
  0e79:30 0019            bnt code_0e95 
  0e7c:67 0c             pTos z 
  0e7e:34 03e8            ldi 3e8 
  0e81:20                 ge? 
  0e82:30 0009            bnt code_0e8e 
  0e85:39 63            pushi 63 // $63 perform
  0e87:78               push1 
  0e88:72 1582          lofsa $1582 // zCode
  0e8b:36                push 
  0e8c:54 06             self 6 


        code_0e8e
  0e8e:35 00              ldi 0 
  0e90:65 74             aTop paused 
  0e92:32 0016            jmp code_0eab 

        code_0e95
  0e95:35 01              ldi 1 
  0e97:65 74             aTop paused 
  0e99:67 0c             pTos z 
  0e9b:34 03e8            ldi 3e8 
  0e9e:22                 lt? 
  0e9f:30 0009            bnt code_0eab 
  0ea2:39 63            pushi 63 // $63 perform
  0ea4:78               push1 
  0ea5:72 1582          lofsa $1582 // zCode
  0ea8:36                push 
  0ea9:54 06             self 6 


        code_0eab
  0eab:48                 ret 
    )

)

// 0f90
(instance skater3 of Skater
    (properties
        x $0
        y $76
        z $a
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $313e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3149
        yStep $2
        view $305
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $8
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $1
        freq $3
        nearLarry $0
        paused $0
    )
    (method (doit) // method_0f3e
  0f3e:63 74             pToa paused 
  0f40:18                 not 
  0f41:30 0006            bnt code_0f4a 
  0f44:39 3c            pushi 3c // $3c doit
  0f46:76               push0 
  0f47:57 7c 04         super Skater 4 


        code_0f4a
  0f4a:48                 ret 
    )

    (method (checkDetail) // method_0f4b
  0f4b:38 0125          pushi 125 // $125 detailLevel
  0f4e:76               push0 
  0f4f:81 01              lag  
  0f51:4a 04             send 4 

  0f53:36                push 
  0f54:35 02              ldi 2 
  0f56:1e                 gt? 
  0f57:30 0019            bnt code_0f73 
  0f5a:67 0c             pTos z 
  0f5c:34 03e8            ldi 3e8 
  0f5f:20                 ge? 
  0f60:30 0009            bnt code_0f6c 
  0f63:39 63            pushi 63 // $63 perform
  0f65:78               push1 
  0f66:72 1582          lofsa $1582 // zCode
  0f69:36                push 
  0f6a:54 06             self 6 


        code_0f6c
  0f6c:35 00              ldi 0 
  0f6e:65 74             aTop paused 
  0f70:32 0016            jmp code_0f89 

        code_0f73
  0f73:35 01              ldi 1 
  0f75:65 74             aTop paused 
  0f77:67 0c             pTos z 
  0f79:34 03e8            ldi 3e8 
  0f7c:22                 lt? 
  0f7d:30 0009            bnt code_0f89 
  0f80:39 63            pushi 63 // $63 perform
  0f82:78               push1 
  0f83:72 1582          lofsa $1582 // zCode
  0f86:36                push 
  0f87:54 06             self 6 


        code_0f89
  0f89:48                 ret 
    )

)

// 106e
(instance skater4 of Skater
    (properties
        x $0
        y $74
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $316c
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $317b
        yStep $2
        view $306
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $6
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_101c
  101c:63 74             pToa paused 
  101e:18                 not 
  101f:30 0006            bnt code_1028 
  1022:39 3c            pushi 3c // $3c doit
  1024:76               push0 
  1025:57 7c 04         super Skater 4 


        code_1028
  1028:48                 ret 
    )

    (method (checkDetail) // method_1029
  1029:38 0125          pushi 125 // $125 detailLevel
  102c:76               push0 
  102d:81 01              lag  
  102f:4a 04             send 4 

  1031:36                push 
  1032:35 02              ldi 2 
  1034:1e                 gt? 
  1035:30 0019            bnt code_1051 
  1038:67 0c             pTos z 
  103a:34 03e8            ldi 3e8 
  103d:20                 ge? 
  103e:30 0009            bnt code_104a 
  1041:39 63            pushi 63 // $63 perform
  1043:78               push1 
  1044:72 1582          lofsa $1582 // zCode
  1047:36                push 
  1048:54 06             self 6 


        code_104a
  104a:35 00              ldi 0 
  104c:65 74             aTop paused 
  104e:32 0016            jmp code_1067 

        code_1051
  1051:35 01              ldi 1 
  1053:65 74             aTop paused 
  1055:67 0c             pTos z 
  1057:34 03e8            ldi 3e8 
  105a:22                 lt? 
  105b:30 0009            bnt code_1067 
  105e:39 63            pushi 63 // $63 perform
  1060:78               push1 
  1061:72 1582          lofsa $1582 // zCode
  1064:36                push 
  1065:54 06             self 6 


        code_1067
  1067:48                 ret 
    )

)

// 114c
(instance skater5 of Skater
    (properties
        x $0
        y $8e
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $31a3
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $31ae
        yStep $2
        view $307
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $8
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_10fa
  10fa:63 74             pToa paused 
  10fc:18                 not 
  10fd:30 0006            bnt code_1106 
  1100:39 3c            pushi 3c // $3c doit
  1102:76               push0 
  1103:57 7c 04         super Skater 4 


        code_1106
  1106:48                 ret 
    )

    (method (checkDetail) // method_1107
  1107:38 0125          pushi 125 // $125 detailLevel
  110a:76               push0 
  110b:81 01              lag  
  110d:4a 04             send 4 

  110f:36                push 
  1110:35 03              ldi 3 
  1112:1e                 gt? 
  1113:30 0019            bnt code_112f 
  1116:67 0c             pTos z 
  1118:34 03e8            ldi 3e8 
  111b:20                 ge? 
  111c:30 0009            bnt code_1128 
  111f:39 63            pushi 63 // $63 perform
  1121:78               push1 
  1122:72 1582          lofsa $1582 // zCode
  1125:36                push 
  1126:54 06             self 6 


        code_1128
  1128:35 00              ldi 0 
  112a:65 74             aTop paused 
  112c:32 0016            jmp code_1145 

        code_112f
  112f:35 01              ldi 1 
  1131:65 74             aTop paused 
  1133:67 0c             pTos z 
  1135:34 03e8            ldi 3e8 
  1138:22                 lt? 
  1139:30 0009            bnt code_1145 
  113c:39 63            pushi 63 // $63 perform
  113e:78               push1 
  113f:72 1582          lofsa $1582 // zCode
  1142:36                push 
  1143:54 06             self 6 


        code_1145
  1145:48                 ret 
    )

)

// 122a
(instance skater6 of Skater
    (properties
        x $0
        y $75
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $31ea
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $31f8
        yStep $2
        view $308
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $6
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_11d8
  11d8:63 74             pToa paused 
  11da:18                 not 
  11db:30 0006            bnt code_11e4 
  11de:39 3c            pushi 3c // $3c doit
  11e0:76               push0 
  11e1:57 7c 04         super Skater 4 


        code_11e4
  11e4:48                 ret 
    )

    (method (checkDetail) // method_11e5
  11e5:38 0125          pushi 125 // $125 detailLevel
  11e8:76               push0 
  11e9:81 01              lag  
  11eb:4a 04             send 4 

  11ed:36                push 
  11ee:35 03              ldi 3 
  11f0:1e                 gt? 
  11f1:30 0019            bnt code_120d 
  11f4:67 0c             pTos z 
  11f6:34 03e8            ldi 3e8 
  11f9:20                 ge? 
  11fa:30 0009            bnt code_1206 
  11fd:39 63            pushi 63 // $63 perform
  11ff:78               push1 
  1200:72 1582          lofsa $1582 // zCode
  1203:36                push 
  1204:54 06             self 6 


        code_1206
  1206:35 00              ldi 0 
  1208:65 74             aTop paused 
  120a:32 0016            jmp code_1223 

        code_120d
  120d:35 01              ldi 1 
  120f:65 74             aTop paused 
  1211:67 0c             pTos z 
  1213:34 03e8            ldi 3e8 
  1216:22                 lt? 
  1217:30 0009            bnt code_1223 
  121a:39 63            pushi 63 // $63 perform
  121c:78               push1 
  121d:72 1582          lofsa $1582 // zCode
  1220:36                push 
  1221:54 06             self 6 


        code_1223
  1223:48                 ret 
    )

)

// 1308
(instance skater7 of Skater
    (properties
        x $0
        y $83
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $3229
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3232
        yStep $2
        view $309
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $8
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_12b6
  12b6:63 74             pToa paused 
  12b8:18                 not 
  12b9:30 0006            bnt code_12c2 
  12bc:39 3c            pushi 3c // $3c doit
  12be:76               push0 
  12bf:57 7c 04         super Skater 4 


        code_12c2
  12c2:48                 ret 
    )

    (method (checkDetail) // method_12c3
  12c3:38 0125          pushi 125 // $125 detailLevel
  12c6:76               push0 
  12c7:81 01              lag  
  12c9:4a 04             send 4 

  12cb:36                push 
  12cc:35 04              ldi 4 
  12ce:1e                 gt? 
  12cf:30 0019            bnt code_12eb 
  12d2:67 0c             pTos z 
  12d4:34 03e8            ldi 3e8 
  12d7:20                 ge? 
  12d8:30 0009            bnt code_12e4 
  12db:39 63            pushi 63 // $63 perform
  12dd:78               push1 
  12de:72 1582          lofsa $1582 // zCode
  12e1:36                push 
  12e2:54 06             self 6 


        code_12e4
  12e4:35 00              ldi 0 
  12e6:65 74             aTop paused 
  12e8:32 0016            jmp code_1301 

        code_12eb
  12eb:35 01              ldi 1 
  12ed:65 74             aTop paused 
  12ef:67 0c             pTos z 
  12f1:34 03e8            ldi 3e8 
  12f4:22                 lt? 
  12f5:30 0009            bnt code_1301 
  12f8:39 63            pushi 63 // $63 perform
  12fa:78               push1 
  12fb:72 1582          lofsa $1582 // zCode
  12fe:36                push 
  12ff:54 06             self 6 


        code_1301
  1301:48                 ret 
    )

)

// 13e6
(instance skater8 of Skater
    (properties
        x $0
        y $6e
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $3281
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $328c
        yStep $2
        view $30a
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $6
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_1394
  1394:63 74             pToa paused 
  1396:18                 not 
  1397:30 0006            bnt code_13a0 
  139a:39 3c            pushi 3c // $3c doit
  139c:76               push0 
  139d:57 7c 04         super Skater 4 


        code_13a0
  13a0:48                 ret 
    )

    (method (checkDetail) // method_13a1
  13a1:38 0125          pushi 125 // $125 detailLevel
  13a4:76               push0 
  13a5:81 01              lag  
  13a7:4a 04             send 4 

  13a9:36                push 
  13aa:35 04              ldi 4 
  13ac:1e                 gt? 
  13ad:30 0019            bnt code_13c9 
  13b0:67 0c             pTos z 
  13b2:34 03e8            ldi 3e8 
  13b5:20                 ge? 
  13b6:30 0009            bnt code_13c2 
  13b9:39 63            pushi 63 // $63 perform
  13bb:78               push1 
  13bc:72 1582          lofsa $1582 // zCode
  13bf:36                push 
  13c0:54 06             self 6 


        code_13c2
  13c2:35 00              ldi 0 
  13c4:65 74             aTop paused 
  13c6:32 0016            jmp code_13df 

        code_13c9
  13c9:35 01              ldi 1 
  13cb:65 74             aTop paused 
  13cd:67 0c             pTos z 
  13cf:34 03e8            ldi 3e8 
  13d2:22                 lt? 
  13d3:30 0009            bnt code_13df 
  13d6:39 63            pushi 63 // $63 perform
  13d8:78               push1 
  13d9:72 1582          lofsa $1582 // zCode
  13dc:36                push 
  13dd:54 06             self 6 


        code_13df
  13df:48                 ret 
    )

)

// 14c4
(instance skater9 of Skater
    (properties
        x $0
        y $5b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $3281
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $32ce
        yStep $2
        view $30b
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $6
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
        room $2
        freq $2
        nearLarry $0
        paused $0
    )
    (method (doit) // method_1472
  1472:63 74             pToa paused 
  1474:18                 not 
  1475:30 0006            bnt code_147e 
  1478:39 3c            pushi 3c // $3c doit
  147a:76               push0 
  147b:57 7c 04         super Skater 4 


        code_147e
  147e:48                 ret 
    )

    (method (checkDetail) // method_147f
  147f:38 0125          pushi 125 // $125 detailLevel
  1482:76               push0 
  1483:81 01              lag  
  1485:4a 04             send 4 

  1487:36                push 
  1488:35 04              ldi 4 
  148a:1e                 gt? 
  148b:30 0019            bnt code_14a7 
  148e:67 0c             pTos z 
  1490:34 03e8            ldi 3e8 
  1493:20                 ge? 
  1494:30 0009            bnt code_14a0 
  1497:39 63            pushi 63 // $63 perform
  1499:78               push1 
  149a:72 1582          lofsa $1582 // zCode
  149d:36                push 
  149e:54 06             self 6 


        code_14a0
  14a0:35 00              ldi 0 
  14a2:65 74             aTop paused 
  14a4:32 0016            jmp code_14bd 

        code_14a7
  14a7:35 01              ldi 1 
  14a9:65 74             aTop paused 
  14ab:67 0c             pTos z 
  14ad:34 03e8            ldi 3e8 
  14b0:22                 lt? 
  14b1:30 0009            bnt code_14bd 
  14b4:39 63            pushi 63 // $63 perform
  14b6:78               push1 
  14b7:72 1582          lofsa $1582 // zCode
  14ba:36                push 
  14bb:54 06             self 6 


        code_14bd
  14bd:48                 ret 
    )

)

// 157c
(instance zCode of Code
    (properties
    )
    (method (doit) // method_1550
  1550:39 55            pushi 55 // $55 z
  1552:76               push0 
  1553:87 01              lap param1 
  1555:4a 04             send 4 

  1557:36                push 
  1558:34 03e8            ldi 3e8 
  155b:1a                 eq? 
  155c:30 000b            bnt code_156a 
  155f:39 55            pushi 55 // $55 z
  1561:78               push1 
  1562:76               push0 
  1563:87 01              lap param1 
  1565:4a 06             send 6 

  1567:32 000a            jmp code_1574 

        code_156a
  156a:39 55            pushi 55 // $55 z
  156c:78               push1 
  156d:38 03e8          pushi 3e8 // $3e8 sel_1000
  1570:87 01              lap param1 
  1572:4a 06             send 6 


        code_1574
  1574:48                 ret 
  1575:00                bnot 
    )

)

// 15cc
(instance showSkaterCode of Code
    (properties
    )
    (method (doit) // method_1596
  1596:39 71            pushi 71 // $71 respondsTo
  1598:78               push1 
  1599:38 0223          pushi 223 // $223 freq
  159c:87 01              lap param1 
  159e:4a 06             send 6 

  15a0:30 0021            bnt code_15c4 
  15a3:38 0222          pushi 222 // $222 room
  15a6:76               push0 
  15a7:87 01              lap param1 
  15a9:4a 04             send 4 

  15ab:36                push 
  15ac:81 9f              lag  
  15ae:1a                 eq? 
  15af:30 000b            bnt code_15bd 
  15b2:38 00c2          pushi c2 // $c2 show
  15b5:76               push0 
  15b6:87 01              lap param1 
  15b8:4a 04             send 4 

  15ba:32 0007            jmp code_15c4 

        code_15bd
  15bd:39 69            pushi 69 // $69 hide
  15bf:76               push0 
  15c0:87 01              lap param1 
  15c2:4a 04             send 4 


        code_15c4
  15c4:48                 ret 
  15c5:00                bnot 
    )

)

// 1822
(instance theBuilding of PicView
    (properties
        x $0
        y $50
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $336e
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        view $2f8
        loop $0
        cel $0
        priority $ffff
        signal $0
        palette $0
    )
    (method (doVerb) // method_15e6
  15e6:3f 01             link 1 // (var $1)
  15e8:8f 01              lsp param1 
  15ea:3c                 dup 
  15eb:35 02              ldi 2 
  15ed:1a                 eq? 
  15ee:30 016c            bnt code_175d 
  15f1:67 2e             pTos loop 
  15f3:3c                 dup 
  15f4:35 00              ldi 0 
  15f6:1a                 eq? 
  15f7:30 00ad            bnt code_16a7 
  15fa:67 30             pTos cel 
  15fc:3c                 dup 
  15fd:35 00              ldi 0 
  15ff:1a                 eq? 
  1600:30 000b            bnt code_160e 
  1603:7a               push2 
  1604:38 02f8          pushi 2f8 // $2f8 sel_760
  1607:7a               push2 
  1608:45 0e 04         callb procedure_000e 4 //  

  160b:32 0095            jmp code_16a3 

        code_160e
  160e:3c                 dup 
  160f:35 01              ldi 1 
  1611:1a                 eq? 
  1612:30 000c            bnt code_1621 
  1615:7a               push2 
  1616:38 02f8          pushi 2f8 // $2f8 sel_760
  1619:39 03            pushi 3 // $3 y
  161b:45 0e 04         callb procedure_000e 4 //  

  161e:32 0082            jmp code_16a3 

        code_1621
  1621:3c                 dup 
  1622:35 02              ldi 2 
  1624:1a                 eq? 
  1625:30 000c            bnt code_1634 
  1628:7a               push2 
  1629:38 02f8          pushi 2f8 // $2f8 sel_760
  162c:39 04            pushi 4 // $4 x
  162e:45 0e 04         callb procedure_000e 4 //  

  1631:32 006f            jmp code_16a3 

        code_1634
  1634:3c                 dup 
  1635:35 03              ldi 3 
  1637:1a                 eq? 
  1638:30 000c            bnt code_1647 
  163b:7a               push2 
  163c:38 02f8          pushi 2f8 // $2f8 sel_760
  163f:39 05            pushi 5 // $5 view
  1641:45 0e 04         callb procedure_000e 4 //  

  1644:32 005c            jmp code_16a3 

        code_1647
  1647:3c                 dup 
  1648:35 04              ldi 4 
  164a:1a                 eq? 
  164b:30 000c            bnt code_165a 
  164e:7a               push2 
  164f:38 02f8          pushi 2f8 // $2f8 sel_760
  1652:39 06            pushi 6 // $6 loop
  1654:45 0e 04         callb procedure_000e 4 //  

  1657:32 0049            jmp code_16a3 

        code_165a
  165a:3c                 dup 
  165b:35 05              ldi 5 
  165d:1a                 eq? 
  165e:30 000c            bnt code_166d 
  1661:7a               push2 
  1662:38 02f8          pushi 2f8 // $2f8 sel_760
  1665:39 07            pushi 7 // $7 cel
  1667:45 0e 04         callb procedure_000e 4 //  

  166a:32 0036            jmp code_16a3 

        code_166d
  166d:3c                 dup 
  166e:35 06              ldi 6 
  1670:1a                 eq? 
  1671:30 000c            bnt code_1680 
  1674:7a               push2 
  1675:38 02f8          pushi 2f8 // $2f8 sel_760
  1678:39 08            pushi 8 // $8 underBits
  167a:45 0e 04         callb procedure_000e 4 //  

  167d:32 0023            jmp code_16a3 

        code_1680
  1680:3c                 dup 
  1681:35 07              ldi 7 
  1683:1a                 eq? 
  1684:30 000c            bnt code_1693 
  1687:7a               push2 
  1688:38 02f8          pushi 2f8 // $2f8 sel_760
  168b:39 09            pushi 9 // $9 nsTop
  168d:45 0e 04         callb procedure_000e 4 //  

  1690:32 0010            jmp code_16a3 

        code_1693
  1693:3c                 dup 
  1694:35 08              ldi 8 
  1696:1a                 eq? 
  1697:30 0009            bnt code_16a3 
  169a:7a               push2 
  169b:38 02f8          pushi 2f8 // $2f8 sel_760
  169e:39 0a            pushi a // $a nsLeft
  16a0:45 0e 04         callb procedure_000e 4 //  


        code_16a3
  16a3:3a                toss 
  16a4:32 00b2            jmp code_1759 

        code_16a7
  16a7:3c                 dup 
  16a8:35 01              ldi 1 
  16aa:1a                 eq? 
  16ab:30 009b            bnt code_1749 
  16ae:67 30             pTos cel 
  16b0:3c                 dup 
  16b1:35 00              ldi 0 
  16b3:1a                 eq? 
  16b4:30 000c            bnt code_16c3 
  16b7:7a               push2 
  16b8:38 02f8          pushi 2f8 // $2f8 sel_760
  16bb:39 0b            pushi b // $b nsBottom
  16bd:45 0e 04         callb procedure_000e 4 //  

  16c0:32 0082            jmp code_1745 

        code_16c3
  16c3:3c                 dup 
  16c4:35 01              ldi 1 
  16c6:1a                 eq? 
  16c7:30 000c            bnt code_16d6 
  16ca:7a               push2 
  16cb:38 02f8          pushi 2f8 // $2f8 sel_760
  16ce:39 0c            pushi c // $c nsRight
  16d0:45 0e 04         callb procedure_000e 4 //  

  16d3:32 006f            jmp code_1745 

        code_16d6
  16d6:3c                 dup 
  16d7:35 02              ldi 2 
  16d9:1a                 eq? 
  16da:30 000c            bnt code_16e9 
  16dd:7a               push2 
  16de:38 02f8          pushi 2f8 // $2f8 sel_760
  16e1:39 0d            pushi d // $d lsTop
  16e3:45 0e 04         callb procedure_000e 4 //  

  16e6:32 005c            jmp code_1745 

        code_16e9
  16e9:3c                 dup 
  16ea:35 03              ldi 3 
  16ec:1a                 eq? 
  16ed:30 000c            bnt code_16fc 
  16f0:7a               push2 
  16f1:38 02f8          pushi 2f8 // $2f8 sel_760
  16f4:39 0e            pushi e // $e lsLeft
  16f6:45 0e 04         callb procedure_000e 4 //  

  16f9:32 0049            jmp code_1745 

        code_16fc
  16fc:3c                 dup 
  16fd:35 04              ldi 4 
  16ff:1a                 eq? 
  1700:30 000c            bnt code_170f 
  1703:7a               push2 
  1704:38 02f8          pushi 2f8 // $2f8 sel_760
  1707:39 0f            pushi f // $f lsBottom
  1709:45 0e 04         callb procedure_000e 4 //  

  170c:32 0036            jmp code_1745 

        code_170f
  170f:3c                 dup 
  1710:35 05              ldi 5 
  1712:1a                 eq? 
  1713:30 000c            bnt code_1722 
  1716:7a               push2 
  1717:38 02f8          pushi 2f8 // $2f8 sel_760
  171a:39 10            pushi 10 // $10 lsRight
  171c:45 0e 04         callb procedure_000e 4 //  

  171f:32 0023            jmp code_1745 

        code_1722
  1722:3c                 dup 
  1723:35 06              ldi 6 
  1725:1a                 eq? 
  1726:30 000c            bnt code_1735 
  1729:7a               push2 
  172a:38 02f8          pushi 2f8 // $2f8 sel_760
  172d:39 11            pushi 11 // $11 signal
  172f:45 0e 04         callb procedure_000e 4 //  

  1732:32 0010            jmp code_1745 

        code_1735
  1735:3c                 dup 
  1736:35 07              ldi 7 
  1738:1a                 eq? 
  1739:30 0009            bnt code_1745 
  173c:7a               push2 
  173d:38 02f8          pushi 2f8 // $2f8 sel_760
  1740:39 12            pushi 12 // $12 illegalBits
  1742:45 0e 04         callb procedure_000e 4 //  


        code_1745
  1745:3a                toss 
  1746:32 0010            jmp code_1759 

        code_1749
  1749:3c                 dup 
  174a:35 02              ldi 2 
  174c:1a                 eq? 
  174d:30 0009            bnt code_1759 
  1750:7a               push2 
  1751:38 02f8          pushi 2f8 // $2f8 sel_760
  1754:39 13            pushi 13 // $13 brTop
  1756:45 0e 04         callb procedure_000e 4 //  


        code_1759
  1759:3a                toss 
  175a:32 00bd            jmp code_181a 

        code_175d
  175d:3c                 dup 
  175e:35 03              ldi 3 
  1760:1a                 eq? 
  1761:30 00ab            bnt code_180f 
  1764:39 05            pushi 5 // $5 view
  1766:76               push0 
  1767:81 00              lag  
  1769:4a 04             send 4 

  176b:36                push 
  176c:83 05              lal local5 
  176e:1a                 eq? 
  176f:30 0066            bnt code_17d8 
  1772:39 04            pushi 4 // $4 x
  1774:76               push0 
  1775:81 00              lag  
  1777:4a 04             send 4 

  1779:36                push 
  177a:63 22             pToa approachX 
  177c:1a                 eq? 
  177d:30 0058            bnt code_17d8 
  1780:39 03            pushi 3 // $3 y
  1782:76               push0 
  1783:81 00              lag  
  1785:4a 04             send 4 

  1787:36                push 
  1788:63 24             pToa approachY 
  178a:1a                 eq? 
  178b:30 004a            bnt code_17d8 
  178e:67 2e             pTos loop 
  1790:35 02              ldi 2 
  1792:1a                 eq? 
  1793:30 0025            bnt code_17bb 
  1796:38 0208          pushi 208 // $208 skating
  1799:76               push0 
  179a:81 00              lag  
  179c:4a 04             send 4 

  179e:30 000c            bnt code_17ad 
  17a1:7a               push2 
  17a2:38 02f8          pushi 2f8 // $2f8 sel_760
  17a5:39 14            pushi 14 // $14 brLeft
  17a7:45 0e 04         callb procedure_000e 4 //  

  17aa:32 006d            jmp code_181a 

        code_17ad
  17ad:38 00e4          pushi e4 // $e4 setHeading
  17b0:7a               push2 
  17b1:76               push0 
  17b2:89 02              lsg  
  17b4:81 00              lag  
  17b6:4a 08             send 8 

  17b8:32 005f            jmp code_181a 

        code_17bb
  17bb:7a               push2 
  17bc:38 02f8          pushi 2f8 // $2f8 sel_760
  17bf:39 15            pushi 15 // $15 brBottom
  17c1:45 0e 04         callb procedure_000e 4 //  

  17c4:39 05            pushi 5 // $5 view
  17c6:38 02f8          pushi 2f8 // $2f8 sel_760
  17c9:39 16            pushi 16 // $16 brRight
  17cb:39 43            pushi 43 // $43 at
  17cd:39 ff            pushi ff // $ff syncNum
  17cf:38 00b9          pushi b9 // $b9 bottom
  17d2:45 0e 0a         callb procedure_000e a //  

  17d5:32 0042            jmp code_181a 

        code_17d8
  17d8:38 0081          pushi 81 // $81 handleEvent
  17db:78               push1 
  17dc:39 22            pushi 22 // $22 type
  17de:78               push1 
  17df:78               push1 
  17e0:39 28            pushi 28 // $28 message
  17e2:78               push1 
  17e3:78               push1 
  17e4:39 04            pushi 4 // $4 x
  17e6:78               push1 
  17e7:67 22             pTos approachX 
  17e9:39 03            pushi 3 // $3 y
  17eb:78               push1 
  17ec:67 24             pTos approachY 
  17ee:39 6a            pushi 6a // $6a new
  17f0:76               push0 
  17f1:51 07            class Event 
  17f3:4a 04             send 4 

  17f5:4a 18             send 18 

  17f7:a5 00              sat temp0 
  17f9:36                push 
  17fa:81 02              lag  
  17fc:4a 06             send 6 

  17fe:5c              selfID 
  17ff:a3 0a              sal local10 
  1801:35 03              ldi 3 
  1803:a3 0b              sal local11 
  1805:39 6c            pushi 6c // $6c dispose
  1807:76               push0 
  1808:85 00              lat temp0 
  180a:4a 04             send 4 

  180c:32 000b            jmp code_181a 

        code_180f
  180f:38 010c          pushi 10c // $10c doVerb
  1812:78               push1 
  1813:8f 01              lsp param1 
  1815:59 02            &rest 2 
  1817:57 2d 06         super PicView 6 


        code_181a
  181a:3a                toss 
  181b:48                 ret 
    )

)

// 186e
(instance sSplash of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $2f9
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 18a4
(instance splash of Prop
    (properties
        x $0
        y $bd
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $302
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 191a
(instance rightEye of Prop
    (properties
        x $a5
        y $b4
        z $77
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $3396
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $31b
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_1908
  1908:38 010c          pushi 10c // $10c doVerb
  190b:76               push0 
  190c:59 01            &rest 1 
  190e:72 2d48          lofsa $2d48 // lanaFtr
  1911:4a 04             send 4 

  1913:48                 ret 
    )

)

// 1994
(instance leftEye of Prop
    (properties
        x $8c
        y $b4
        z $7b
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $33b0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $31b
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_1982
  1982:38 010c          pushi 10c // $10c doVerb
  1985:76               push0 
  1986:59 01            &rest 1 
  1988:72 2d48          lofsa $2d48 // lanaFtr
  198b:4a 04             send 4 

  198d:48                 ret 
    )

)

// 1a1e
(instance nose of Prop
    (properties
        x $95
        y $b4
        z $6c
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $33c8
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $31b
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $12
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (init) // method_19fc
  19fc:39 6b            pushi 6b // $6b init
  19fe:76               push0 
  19ff:57 2f 04         super Prop 4 

  1a02:38 0096          pushi 96 // $96 setCycle
  1a05:78               push1 
  1a06:51 17            class Fwd 
  1a08:36                push 
  1a09:54 06             self 6 

  1a0b:48                 ret 
    )

    (method (doVerb) // method_1a0c
  1a0c:38 010c          pushi 10c // $10c doVerb
  1a0f:76               push0 
  1a10:59 01            &rest 1 
  1a12:72 2d48          lofsa $2d48 // lanaFtr
  1a15:4a 04             send 4 

  1a17:48                 ret 
    )

)

// 1a9c
(instance lanaMouth of Prop
    (properties
        x $95
        y $b4
        z $66
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $33d9
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $31b
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_1a8a
  1a8a:38 010c          pushi 10c // $10c doVerb
  1a8d:76               push0 
  1a8e:59 01            &rest 1 
  1a90:72 2d48          lofsa $2d48 // lanaFtr
  1a93:4a 04             send 4 

  1a95:48                 ret 
    )

)

// 1b18
(instance Lana Luscious of Talker
    (properties
        x $8c
        y $a0
        z $0
        heading $0
        noun $0
        nsTop $46
        nsLeft $8c
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $703
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $0
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_1b04
  1b04:72 1b9a          lofsa $1b9a // lanaCMouth
  1b07:65 5a             aTop mouth 
  1b09:39 6b            pushi 6b // $6b init
  1b0b:76               push0 
  1b0c:59 01            &rest 1 
  1b0e:57 6f 04         super Talker 4 

  1b11:48                 ret 
    )

)

// 1b94
(instance lanaCMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $703
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 1c16
(instance Lana Luscious of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $64
        nsLeft $5
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6c3
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_1bf8
  1bf8:72 1c98          lofsa $1c98 // lanaFBust
  1bfb:65 56             aTop bust 
  1bfd:72 1cf4          lofsa $1cf4 // lanaFMouth
  1c00:65 5a             aTop mouth 
  1c02:72 1d5a          lofsa $1d5a // lanaFEyes
  1c05:65 58             aTop eyes 
  1c07:39 6b            pushi 6b // $6b init
  1c09:76               push0 
  1c0a:59 01            &rest 1 
  1c0c:57 6f 04         super Talker 4 

  1c0f:48                 ret 
    )

)

// 1c92
(instance lanaFBust of View
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6c3
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $101
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 1cee
(instance lanaFMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $28
        nsLeft $17
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6c3
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 1d54
(instance lanaFEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $1f
        nsLeft $1d
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6c3
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 1e0a
(instance sFromWest of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_1db8
  1db8:87 01              lap param1 
  1dba:65 0a             aTop state 
  1dbc:36                push 
  1dbd:3c                 dup 
  1dbe:35 00              ldi 0 
  1dc0:1a                 eq? 
  1dc1:30 0021            bnt code_1de5 
  1dc4:39 05            pushi 5 // $5 view
  1dc6:78               push1 
  1dc7:38 02fc          pushi 2fc // $2fc sel_764
  1dca:38 011c          pushi 11c // $11c posn
  1dcd:7a               push2 
  1dce:39 f6            pushi f6 // $f6 nonBumps
  1dd0:38 0091          pushi 91 // $91 globalize
  1dd3:38 011b          pushi 11b // $11b setMotion
  1dd6:39 03            pushi 3 // $3 y
  1dd8:51 5c            class MoveFwd 
  1dda:36                push 
  1ddb:39 28            pushi 28 // $28 message
  1ddd:7c            pushSelf 
  1dde:81 00              lag  
  1de0:4a 18             send 18 

  1de2:32 001c            jmp code_1e01 

        code_1de5
  1de5:3c                 dup 
  1de6:35 01              ldi 1 
  1de8:1a                 eq? 
  1de9:30 0015            bnt code_1e01 
  1dec:76               push0 
  1ded:45 03 00         callb procedure_0003 0 //  

  1df0:39 6c            pushi 6c // $6c dispose
  1df2:76               push0 
  1df3:39 3e            pushi 3e // $3e looper
  1df5:76               push0 
  1df6:81 00              lag  
  1df8:4a 04             send 4 

  1dfa:4a 04             send 4 

  1dfc:39 6c            pushi 6c // $6c dispose
  1dfe:76               push0 
  1dff:54 04             self 4 


        code_1e01
  1e01:3a                toss 
  1e02:48                 ret 
  1e03:00                bnot 
    )

)

// 1f88
(instance sFall of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_1e3e
  1e3e:39 3c            pushi 3c // $3c doit
  1e40:76               push0 
  1e41:57 06 04         super Script 4 

  1e44:7a               push2 
  1e45:89 00              lsg  
  1e47:38 4000          pushi 4000 // $4000 sel_16384
  1e4a:45 05 04         callb procedure_0005 4 //  

  1e4d:30 0038            bnt code_1e88 
  1e50:38 011b          pushi 11b // $11b setMotion
  1e53:39 03            pushi 3 // $3 y
  1e55:51 1e            class MoveTo 
  1e57:36                push 
  1e58:39 04            pushi 4 // $4 x
  1e5a:76               push0 
  1e5b:81 00              lag  
  1e5d:4a 04             send 4 

  1e5f:36                push 
  1e60:38 0091          pushi 91 // $91 globalize
  1e63:81 00              lag  
  1e65:4a 0a             send a 

  1e67:76               push0 
  1e68:45 03 00         callb procedure_0003 0 //  

  1e6b:38 008a          pushi 8a // $8a script
  1e6e:76               push0 
  1e6f:81 02              lag  
  1e71:4a 04             send 4 

  1e73:36                push 
  1e74:72 2a90          lofsa $2a90 // sMoveLarry
  1e77:1a                 eq? 
  1e78:30 0008            bnt code_1e83 
  1e7b:39 6c            pushi 6c // $6c dispose
  1e7d:76               push0 
  1e7e:72 2a90          lofsa $2a90 // sMoveLarry
  1e81:4a 04             send 4 


        code_1e83
  1e83:39 6c            pushi 6c // $6c dispose
  1e85:76               push0 
  1e86:54 04             self 4 


        code_1e88
  1e88:48                 ret 
    )

    (method (changeState) // method_1e89
  1e89:87 01              lap param1 
  1e8b:65 0a             aTop state 
  1e8d:36                push 
  1e8e:3c                 dup 
  1e8f:35 00              ldi 0 
  1e91:1a                 eq? 
  1e92:30 0059            bnt code_1eee 
  1e95:76               push0 
  1e96:45 02 00         callb procedure_0002 0 //  

  1e99:39 03            pushi 3 // $3 y
  1e9b:76               push0 
  1e9c:81 00              lag  
  1e9e:4a 04             send 4 

  1ea0:36                push 
  1ea1:34 0091            ldi 91 
  1ea4:22                 lt? 
  1ea5:30 001d            bnt code_1ec5 
  1ea8:39 44            pushi 44 // $44 next
  1eaa:78               push1 
  1eab:7c            pushSelf 
  1eac:72 2a90          lofsa $2a90 // sMoveLarry
  1eaf:4a 06             send 6 

  1eb1:34 0091            ldi 91 
  1eb4:a3 09              sal local9 
  1eb6:38 008e          pushi 8e // $8e setScript
  1eb9:78               push1 
  1eba:72 2a90          lofsa $2a90 // sMoveLarry
  1ebd:36                push 
  1ebe:63 08             pToa client 
  1ec0:4a 06             send 6 

  1ec2:32 00ba            jmp code_1f7f 

        code_1ec5
  1ec5:38 00a2          pushi a2 // $a2 setLoop
  1ec8:78               push1 
  1ec9:7a               push2 
  1eca:38 0096          pushi 96 // $96 setCycle
  1ecd:7a               push2 
  1ece:51 56            class StopWalk 
  1ed0:36                push 
  1ed1:39 ff            pushi ff // $ff syncNum
  1ed3:38 011b          pushi 11b // $11b setMotion
  1ed6:39 04            pushi 4 // $4 x
  1ed8:51 24            class PolyPath 
  1eda:36                push 
  1edb:39 04            pushi 4 // $4 x
  1edd:76               push0 
  1ede:81 00              lag  
  1ee0:4a 04             send 4 

  1ee2:36                push 
  1ee3:38 009e          pushi 9e // $9e hold
  1ee6:7c            pushSelf 
  1ee7:81 00              lag  
  1ee9:4a 1a             send 1a 

  1eeb:32 0091            jmp code_1f7f 

        code_1eee
  1eee:3c                 dup 
  1eef:35 01              ldi 1 
  1ef1:1a                 eq? 
  1ef2:30 0028            bnt code_1f1d 
  1ef5:39 05            pushi 5 // $5 view
  1ef7:78               push1 
  1ef8:38 0302          pushi 302 // $302 sel_770
  1efb:38 00a2          pushi a2 // $a2 setLoop
  1efe:78               push1 
  1eff:76               push0 
  1f00:38 0120          pushi 120 // $120 setCel
  1f03:78               push1 
  1f04:76               push0 
  1f05:38 00db          pushi db // $db cycleSpeed
  1f08:78               push1 
  1f09:39 0a            pushi a // $a nsLeft
  1f0b:38 0096          pushi 96 // $96 setCycle
  1f0e:78               push1 
  1f0f:51 1a            class End 
  1f11:36                push 
  1f12:81 00              lag  
  1f14:4a 1e             send 1e 

  1f16:35 0a              ldi a 
  1f18:65 10             aTop cycles 
  1f1a:32 0062            jmp code_1f7f 

        code_1f1d
  1f1d:3c                 dup 
  1f1e:35 02              ldi 2 
  1f20:1a                 eq? 
  1f21:30 001c            bnt code_1f40 
  1f24:38 00a2          pushi a2 // $a2 setLoop
  1f27:78               push1 
  1f28:78               push1 
  1f29:38 0120          pushi 120 // $120 setCel
  1f2c:78               push1 
  1f2d:76               push0 
  1f2e:38 0096          pushi 96 // $96 setCycle
  1f31:78               push1 
  1f32:51 1a            class End 
  1f34:36                push 
  1f35:81 00              lag  
  1f37:4a 12             send 12 

  1f39:35 5a              ldi 5a 
  1f3b:65 16             aTop ticks 
  1f3d:32 003f            jmp code_1f7f 

        code_1f40
  1f40:3c                 dup 
  1f41:35 03              ldi 3 
  1f43:1a                 eq? 
  1f44:30 0026            bnt code_1f6d 
  1f47:39 2a            pushi 2a // $2a play
  1f49:76               push0 
  1f4a:72 1874          lofsa $1874 // sSplash
  1f4d:4a 04             send 4 

  1f4f:39 6b            pushi 6b // $6b init
  1f51:76               push0 
  1f52:39 04            pushi 4 // $4 x
  1f54:78               push1 
  1f55:39 04            pushi 4 // $4 x
  1f57:76               push0 
  1f58:81 00              lag  
  1f5a:4a 04             send 4 

  1f5c:36                push 
  1f5d:38 0096          pushi 96 // $96 setCycle
  1f60:7a               push2 
  1f61:51 1a            class End 
  1f63:36                push 
  1f64:7c            pushSelf 
  1f65:72 18aa          lofsa $18aa // splash
  1f68:4a 12             send 12 

  1f6a:32 0012            jmp code_1f7f 

        code_1f6d
  1f6d:3c                 dup 
  1f6e:35 04              ldi 4 
  1f70:1a                 eq? 
  1f71:30 000b            bnt code_1f7f 
  1f74:38 0179          pushi 179 // $179 newRoom
  1f77:78               push1 
  1f78:38 030c          pushi 30c // $30c sel_780
  1f7b:81 02              lag  
  1f7d:4a 06             send 6 


        code_1f7f
  1f7f:3a                toss 
  1f80:48                 ret 
  1f81:00                bnot 
    )

)

// 2066
(instance sScroll of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_1fc0
  1fc0:87 01              lap param1 
  1fc2:65 0a             aTop state 
  1fc4:36                push 
  1fc5:3c                 dup 
  1fc6:35 00              ldi 0 
  1fc8:1a                 eq? 
  1fc9:30 0016            bnt code_1fe2 
  1fcc:76               push0 
  1fcd:45 02 00         callb procedure_0002 0 //  

  1fd0:38 011b          pushi 11b // $11b setMotion
  1fd3:39 03            pushi 3 // $3 y
  1fd5:51 5c            class MoveFwd 
  1fd7:36                push 
  1fd8:39 28            pushi 28 // $28 message
  1fda:7c            pushSelf 
  1fdb:81 00              lag  
  1fdd:4a 0a             send a 

  1fdf:32 007b            jmp code_205d 

        code_1fe2
  1fe2:3c                 dup 
  1fe3:35 01              ldi 1 
  1fe5:1a                 eq? 
  1fe6:30 0064            bnt code_204d 
  1fe9:67 1a             pTos register 
  1feb:35 04              ldi 4 
  1fed:1a                 eq? 
  1fee:30 002c            bnt code_201d 
  1ff1:e1 9f              -ag  
  1ff3:39 04            pushi 4 // $4 x
  1ff5:78               push1 
  1ff6:39 04            pushi 4 // $4 x
  1ff8:76               push0 
  1ff9:81 00              lag  
  1ffb:4a 04             send 4 

  1ffd:36                push 
  1ffe:34 0140            ldi 140 
  2001:02                 add 
  2002:36                push 
  2003:81 00              lag  
  2005:4a 06             send 6 

  2007:38 018c          pushi 18c // $18c drawPic
  200a:7a               push2 
  200b:38 0183          pushi 183 // $183 picture
  200e:76               push0 
  200f:81 02              lag  
  2011:4a 04             send 4 

  2013:36                push 
  2014:39 0b            pushi b // $b nsBottom
  2016:81 02              lag  
  2018:4a 08             send 8 

  201a:32 0029            jmp code_2046 

        code_201d
  201d:c1 9f              +ag  
  201f:39 04            pushi 4 // $4 x
  2021:78               push1 
  2022:39 04            pushi 4 // $4 x
  2024:76               push0 
  2025:81 00              lag  
  2027:4a 04             send 4 

  2029:36                push 
  202a:34 0140            ldi 140 
  202d:04                 sub 
  202e:36                push 
  202f:81 00              lag  
  2031:4a 06             send 6 

  2033:38 018c          pushi 18c // $18c drawPic
  2036:7a               push2 
  2037:38 0183          pushi 183 // $183 picture
  203a:76               push0 
  203b:81 02              lag  
  203d:4a 04             send 4 

  203f:36                push 
  2040:39 0c            pushi c // $c nsRight
  2042:81 02              lag  
  2044:4a 08             send 8 


        code_2046
  2046:35 01              ldi 1 
  2048:65 10             aTop cycles 
  204a:32 0010            jmp code_205d 

        code_204d
  204d:3c                 dup 
  204e:35 02              ldi 2 
  2050:1a                 eq? 
  2051:30 0009            bnt code_205d 
  2054:76               push0 
  2055:45 03 00         callb procedure_0003 0 //  

  2058:39 6c            pushi 6c // $6c dispose
  205a:76               push0 
  205b:54 04             self 4 


        code_205d
  205d:3a                toss 
  205e:48                 ret 
  205f:00                bnot 
    )

)

// 23d4
(instance sMeetLana of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_209a
  209a:87 01              lap param1 
  209c:65 0a             aTop state 
  209e:36                push 
  209f:3c                 dup 
  20a0:35 00              ldi 0 
  20a2:1a                 eq? 
  20a3:30 002d            bnt code_20d3 
  20a6:39 03            pushi 3 // $3 y
  20a8:76               push0 
  20a9:81 00              lag  
  20ab:4a 04             send 4 

  20ad:36                push 
  20ae:34 0091            ldi 91 
  20b1:22                 lt? 
  20b2:30 0017            bnt code_20cc 
  20b5:34 0091            ldi 91 
  20b8:a3 09              sal local9 
  20ba:5c              selfID 
  20bb:a3 0a              sal local10 
  20bd:38 008e          pushi 8e // $8e setScript
  20c0:78               push1 
  20c1:72 2a90          lofsa $2a90 // sMoveLarry
  20c4:36                push 
  20c5:81 02              lag  
  20c7:4a 06             send 6 

  20c9:32 02ff            jmp code_23cb 

        code_20cc
  20cc:35 01              ldi 1 
  20ce:65 10             aTop cycles 
  20d0:32 02f8            jmp code_23cb 

        code_20d3
  20d3:3c                 dup 
  20d4:35 01              ldi 1 
  20d6:1a                 eq? 
  20d7:30 0055            bnt code_212f 
  20da:76               push0 
  20db:45 02 00         callb procedure_0002 0 //  

  20de:38 008a          pushi 8a // $8a script
  20e1:76               push0 
  20e2:81 02              lag  
  20e4:4a 04             send 4 

  20e6:36                push 
  20e7:72 2a90          lofsa $2a90 // sMoveLarry
  20ea:1a                 eq? 
  20eb:30 0008            bnt code_20f6 
  20ee:39 6c            pushi 6c // $6c dispose
  20f0:76               push0 
  20f1:72 2a90          lofsa $2a90 // sMoveLarry
  20f4:4a 04             send 4 


        code_20f6
  20f6:7a               push2 
  20f7:39 06            pushi 6 // $6 loop
  20f9:38 008a          pushi 8a // $8a script
  20fc:45 0a 04         callb procedure_000a 4 //  

  20ff:38 0209          pushi 209 // $209 sitting
  2102:76               push0 
  2103:81 00              lag  
  2105:4a 04             send 4 

  2107:30 001e            bnt code_2128 
  210a:39 06            pushi 6 // $6 loop
  210c:76               push0 
  210d:81 00              lag  
  210f:4a 04             send 4 

  2111:36                push 
  2112:35 04              ldi 4 
  2114:1c                 ne? 
  2115:30 0010            bnt code_2128 
  2118:38 008e          pushi 8e // $8e setScript
  211b:39 03            pushi 3 // $3 y
  211d:72 2800          lofsa $2800 // sStandUp
  2120:36                push 
  2121:7c            pushSelf 
  2122:76               push0 
  2123:54 0a             self a 

  2125:32 02a3            jmp code_23cb 

        code_2128
  2128:35 02              ldi 2 
  212a:65 10             aTop cycles 
  212c:32 029c            jmp code_23cb 

        code_212f
  212f:3c                 dup 
  2130:35 02              ldi 2 
  2132:1a                 eq? 
  2133:30 002d            bnt code_2163 
  2136:38 011b          pushi 11b // $11b setMotion
  2139:78               push1 
  213a:76               push0 
  213b:72 0cec          lofsa $0cec // lana
  213e:4a 06             send 6 

  2140:39 03            pushi 3 // $3 y
  2142:89 00              lsg  
  2144:38 02f8          pushi 2f8 // $2f8 sel_760
  2147:39 17            pushi 17 // $17 name
  2149:45 12 06         callb procedure_0012 6 //  

  214c:39 04            pushi 4 // $4 x
  214e:72 1c1c          lofsa $1c1c // Lana Luscious
  2151:36                push 
  2152:38 02f8          pushi 2f8 // $2f8 sel_760
  2155:39 18            pushi 18 // $18 key
  2157:39 6c            pushi 6c // $6c dispose
  2159:45 12 08         callb procedure_0012 8 //  

  215c:35 1e              ldi 1e 
  215e:65 16             aTop ticks 
  2160:32 0268            jmp code_23cb 

        code_2163
  2163:3c                 dup 
  2164:35 03              ldi 3 
  2166:1a                 eq? 
  2167:30 0023            bnt code_218d 
  216a:39 03            pushi 3 // $3 y
  216c:89 00              lsg  
  216e:38 02f8          pushi 2f8 // $2f8 sel_760
  2171:39 19            pushi 19 // $19 time
  2173:45 12 06         callb procedure_0012 6 //  

  2176:39 04            pushi 4 // $4 x
  2178:72 1c1c          lofsa $1c1c // Lana Luscious
  217b:36                push 
  217c:38 02f8          pushi 2f8 // $2f8 sel_760
  217f:39 1a            pushi 1a // $1a text
  2181:39 6c            pushi 6c // $6c dispose
  2183:45 12 08         callb procedure_0012 8 //  

  2186:35 1e              ldi 1e 
  2188:65 16             aTop ticks 
  218a:32 023e            jmp code_23cb 

        code_218d
  218d:3c                 dup 
  218e:35 04              ldi 4 
  2190:1a                 eq? 
  2191:30 0013            bnt code_21a7 
  2194:39 03            pushi 3 // $3 y
  2196:89 00              lsg  
  2198:38 02f8          pushi 2f8 // $2f8 sel_760
  219b:39 1b            pushi 1b // $1b elements
  219d:45 12 06         callb procedure_0012 6 //  

  21a0:35 1e              ldi 1e 
  21a2:65 16             aTop ticks 
  21a4:32 0224            jmp code_23cb 

        code_21a7
  21a7:3c                 dup 
  21a8:35 05              ldi 5 
  21aa:1a                 eq? 
  21ab:30 0031            bnt code_21df 
  21ae:38 00a2          pushi a2 // $a2 setLoop
  21b1:78               push1 
  21b2:39 ff            pushi ff // $ff syncNum
  21b4:38 0096          pushi 96 // $96 setCycle
  21b7:7a               push2 
  21b8:51 56            class StopWalk 
  21ba:36                push 
  21bb:39 ff            pushi ff // $ff syncNum
  21bd:38 011b          pushi 11b // $11b setMotion
  21c0:39 04            pushi 4 // $4 x
  21c2:51 1e            class MoveTo 
  21c4:36                push 
  21c5:38 0091          pushi 91 // $91 globalize
  21c8:3c                 dup 
  21c9:7c            pushSelf 
  21ca:81 00              lag  
  21cc:4a 1a             send 1a 

  21ce:38 008e          pushi 8e // $8e setScript
  21d1:7a               push2 
  21d2:72 2516          lofsa $2516 // sLanaSits
  21d5:36                push 
  21d6:7c            pushSelf 
  21d7:72 0cec          lofsa $0cec // lana
  21da:4a 08             send 8 

  21dc:32 01ec            jmp code_23cb 

        code_21df
  21df:3c                 dup 
  21e0:35 06              ldi 6 
  21e2:1a                 eq? 
  21e3:30 001f            bnt code_2205 
  21e6:39 05            pushi 5 // $5 view
  21e8:78               push1 
  21e9:38 0317          pushi 317 // $317 sel_791
  21ec:38 00a2          pushi a2 // $a2 setLoop
  21ef:78               push1 
  21f0:39 04            pushi 4 // $4 x
  21f2:38 0120          pushi 120 // $120 setCel
  21f5:78               push1 
  21f6:76               push0 
  21f7:38 0096          pushi 96 // $96 setCycle
  21fa:78               push1 
  21fb:51 1a            class End 
  21fd:36                push 
  21fe:81 00              lag  
  2200:4a 18             send 18 

  2202:32 01c6            jmp code_23cb 

        code_2205
  2205:3c                 dup 
  2206:35 07              ldi 7 
  2208:1a                 eq? 
  2209:30 001f            bnt code_222b 
  220c:38 00a2          pushi a2 // $a2 setLoop
  220f:78               push1 
  2210:39 05            pushi 5 // $5 view
  2212:38 0120          pushi 120 // $120 setCel
  2215:78               push1 
  2216:76               push0 
  2217:38 0096          pushi 96 // $96 setCycle
  221a:7a               push2 
  221b:51 1a            class End 
  221d:36                push 
  221e:7c            pushSelf 
  221f:38 0209          pushi 209 // $209 sitting
  2222:78               push1 
  2223:78               push1 
  2224:81 00              lag  
  2226:4a 1a             send 1a 

  2228:32 01a0            jmp code_23cb 

        code_222b
  222b:3c                 dup 
  222c:35 08              ldi 8 
  222e:1a                 eq? 
  222f:30 0051            bnt code_2283 
  2232:39 74            pushi 74 // $74 eachElementDo
  2234:7a               push2 
  2235:39 63            pushi 63 // $63 perform
  2237:72 1582          lofsa $1582 // zCode
  223a:36                push 
  223b:81 05              lag  
  223d:4a 08             send 8 

  223f:78               push1 
  2240:78               push1 
  2241:45 16 02         callb procedure_0016 2 //  

  2244:38 018c          pushi 18c // $18c drawPic
  2247:7a               push2 
  2248:38 031b          pushi 31b // $31b sel_795
  224b:39 64            pushi 64 // $64 moveDone
  224d:81 02              lag  
  224f:4a 08             send 8 

  2251:76               push0 
  2252:45 03 00         callb procedure_0003 0 //  

  2255:39 6b            pushi 6b // $6b init
  2257:76               push0 
  2258:72 1920          lofsa $1920 // rightEye
  225b:4a 04             send 4 

  225d:39 6b            pushi 6b // $6b init
  225f:76               push0 
  2260:72 199a          lofsa $199a // leftEye
  2263:4a 04             send 4 

  2265:39 6b            pushi 6b // $6b init
  2267:76               push0 
  2268:72 1a24          lofsa $1a24 // nose
  226b:4a 04             send 4 

  226d:39 6b            pushi 6b // $6b init
  226f:76               push0 
  2270:72 1aa2          lofsa $1aa2 // lanaMouth
  2273:4a 04             send 4 

  2275:39 7d            pushi 7d // $7d addToFront
  2277:78               push1 
  2278:72 2d48          lofsa $2d48 // lanaFtr
  227b:36                push 
  227c:81 20              lag  
  227e:4a 06             send 6 

  2280:32 0148            jmp code_23cb 

        code_2283
  2283:3c                 dup 
  2284:35 09              ldi 9 
  2286:1a                 eq? 
  2287:30 00aa            bnt code_2334 
  228a:76               push0 
  228b:45 02 00         callb procedure_0002 0 //  

  228e:78               push1 
  228f:76               push0 
  2290:45 16 02         callb procedure_0016 2 //  

  2293:38 018c          pushi 18c // $18c drawPic
  2296:7a               push2 
  2297:38 02f8          pushi 2f8 // $2f8 sel_760
  229a:39 64            pushi 64 // $64 moveDone
  229c:81 02              lag  
  229e:4a 08             send 8 

  22a0:39 6c            pushi 6c // $6c dispose
  22a2:76               push0 
  22a3:72 1920          lofsa $1920 // rightEye
  22a6:4a 04             send 4 

  22a8:39 6c            pushi 6c // $6c dispose
  22aa:76               push0 
  22ab:72 199a          lofsa $199a // leftEye
  22ae:4a 04             send 4 

  22b0:39 6c            pushi 6c // $6c dispose
  22b2:76               push0 
  22b3:72 1a24          lofsa $1a24 // nose
  22b6:4a 04             send 4 

  22b8:39 6c            pushi 6c // $6c dispose
  22ba:76               push0 
  22bb:72 1aa2          lofsa $1aa2 // lanaMouth
  22be:4a 04             send 4 

  22c0:39 6c            pushi 6c // $6c dispose
  22c2:76               push0 
  22c3:72 2d48          lofsa $2d48 // lanaFtr
  22c6:4a 04             send 4 

  22c8:39 3c            pushi 3c // $3c doit
  22ca:76               push0 
  22cb:81 0a              lag  
  22cd:4a 04             send 4 

  22cf:39 74            pushi 74 // $74 eachElementDo
  22d1:7a               push2 
  22d2:39 63            pushi 63 // $63 perform
  22d4:72 1582          lofsa $1582 // zCode
  22d7:36                push 
  22d8:81 05              lag  
  22da:4a 08             send 8 

  22dc:38 008d          pushi 8d // $8d cue
  22df:76               push0 
  22e0:72 0dda          lofsa $0dda // skater1
  22e3:4a 04             send 4 

  22e5:38 008d          pushi 8d // $8d cue
  22e8:76               push0 
  22e9:72 0eb8          lofsa $0eb8 // skater2
  22ec:4a 04             send 4 

  22ee:38 008d          pushi 8d // $8d cue
  22f1:76               push0 
  22f2:72 0f96          lofsa $0f96 // skater3
  22f5:4a 04             send 4 

  22f7:38 008d          pushi 8d // $8d cue
  22fa:76               push0 
  22fb:72 1074          lofsa $1074 // skater4
  22fe:4a 04             send 4 

  2300:38 008d          pushi 8d // $8d cue
  2303:76               push0 
  2304:72 1152          lofsa $1152 // skater5
  2307:4a 04             send 4 

  2309:38 008d          pushi 8d // $8d cue
  230c:76               push0 
  230d:72 1230          lofsa $1230 // skater6
  2310:4a 04             send 4 

  2312:38 008d          pushi 8d // $8d cue
  2315:76               push0 
  2316:72 130e          lofsa $130e // skater7
  2319:4a 04             send 4 

  231b:38 008d          pushi 8d // $8d cue
  231e:76               push0 
  231f:72 13ec          lofsa $13ec // skater8
  2322:4a 04             send 4 

  2324:38 008d          pushi 8d // $8d cue
  2327:76               push0 
  2328:72 14ca          lofsa $14ca // skater9
  232b:4a 04             send 4 

  232d:35 03              ldi 3 
  232f:65 10             aTop cycles 
  2331:32 0097            jmp code_23cb 

        code_2334
  2334:3c                 dup 
  2335:35 0a              ldi a 
  2337:1a                 eq? 
  2338:30 002b            bnt code_2366 
  233b:38 0223          pushi 223 // $223 freq
  233e:78               push1 
  233f:76               push0 
  2340:38 00a2          pushi a2 // $a2 setLoop
  2343:78               push1 
  2344:39 05            pushi 5 // $5 view
  2346:38 0120          pushi 120 // $120 setCel
  2349:78               push1 
  234a:38 00ff          pushi ff // $ff syncNum
  234d:38 011c          pushi 11c // $11c posn
  2350:7a               push2 
  2351:39 6b            pushi 6b // $6b init
  2353:38 0091          pushi 91 // $91 globalize
  2356:38 0096          pushi 96 // $96 setCycle
  2359:7a               push2 
  235a:51 1b            class Beg 
  235c:36                push 
  235d:7c            pushSelf 
  235e:72 0cec          lofsa $0cec // lana
  2361:4a 22             send 22 

  2363:32 0065            jmp code_23cb 

        code_2366
  2366:3c                 dup 
  2367:35 0b              ldi b 
  2369:1a                 eq? 
  236a:30 000f            bnt code_237c 
  236d:38 0096          pushi 96 // $96 setCycle
  2370:7a               push2 
  2371:51 1b            class Beg 
  2373:36                push 
  2374:7c            pushSelf 
  2375:81 00              lag  
  2377:4a 08             send 8 

  2379:32 004f            jmp code_23cb 

        code_237c
  237c:3c                 dup 
  237d:35 0c              ldi c 
  237f:1a                 eq? 
  2380:30 0048            bnt code_23cb 
  2383:38 00a2          pushi a2 // $a2 setLoop
  2386:78               push1 
  2387:39 04            pushi 4 // $4 x
  2389:38 0120          pushi 120 // $120 setCel
  238c:78               push1 
  238d:38 00ff          pushi ff // $ff syncNum
  2390:81 00              lag  
  2392:4a 0c             send c 

  2394:38 00a2          pushi a2 // $a2 setLoop
  2397:78               push1 
  2398:78               push1 
  2399:38 0096          pushi 96 // $96 setCycle
  239c:78               push1 
  239d:51 17            class Fwd 
  239f:36                push 
  23a0:38 011b          pushi 11b // $11b setMotion
  23a3:39 04            pushi 4 // $4 x
  23a5:51 1e            class MoveTo 
  23a7:36                push 
  23a8:39 ec            pushi ec // $ec pickLoop
  23aa:38 0091          pushi 91 // $91 globalize
  23ad:72 0cec          lofsa $0cec // lana
  23b0:36                push 
  23b1:72 0cec          lofsa $0cec // lana
  23b4:4a 18             send 18 

  23b6:39 42            pushi 42 // $42 setPri
  23b8:78               push1 
  23b9:39 0a            pushi a // $a nsLeft
  23bb:72 1152          lofsa $1152 // skater5
  23be:4a 06             send 6 

  23c0:78               push1 
  23c1:39 03            pushi 3 // $3 y
  23c3:45 07 02         callb procedure_0007 2 //  

  23c6:39 6c            pushi 6c // $6c dispose
  23c8:76               push0 
  23c9:54 04             self 4 


        code_23cb
  23cb:3a                toss 
  23cc:48                 ret 
  23cd:00                bnot 
    )

)

// 2510
(instance sLanaSits of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2408
  2408:87 01              lap param1 
  240a:65 0a             aTop state 
  240c:36                push 
  240d:3c                 dup 
  240e:35 00              ldi 0 
  2410:1a                 eq? 
  2411:30 003e            bnt code_2452 
  2414:39 42            pushi 42 // $42 setPri
  2416:78               push1 
  2417:39 09            pushi 9 // $9 nsTop
  2419:72 0cec          lofsa $0cec // lana
  241c:4a 06             send 6 

  241e:39 04            pushi 4 // $4 x
  2420:76               push0 
  2421:72 0cec          lofsa $0cec // lana
  2424:4a 04             send 4 

  2426:36                push 
  2427:35 33              ldi 33 
  2429:22                 lt? 
  242a:30 000a            bnt code_2437 
  242d:38 008c          pushi 8c // $8c changeState
  2430:78               push1 
  2431:7a               push2 
  2432:54 06             self 6 

  2434:32 00d0            jmp code_2507 

        code_2437
  2437:38 00a2          pushi a2 // $a2 setLoop
  243a:78               push1 
  243b:78               push1 
  243c:38 011b          pushi 11b // $11b setMotion
  243f:39 04            pushi 4 // $4 x
  2441:51 1e            class MoveTo 
  2443:36                push 
  2444:39 32            pushi 32 // $32 b-i2
  2446:38 0091          pushi 91 // $91 globalize
  2449:7c            pushSelf 
  244a:72 0cec          lofsa $0cec // lana
  244d:4a 12             send 12 

  244f:32 00b5            jmp code_2507 

        code_2452
  2452:3c                 dup 
  2453:35 01              ldi 1 
  2455:1a                 eq? 
  2456:30 0017            bnt code_2470 
  2459:38 00a2          pushi a2 // $a2 setLoop
  245c:78               push1 
  245d:7a               push2 
  245e:38 0096          pushi 96 // $96 setCycle
  2461:39 03            pushi 3 // $3 y
  2463:51 59            class ForwardCounter 
  2465:36                push 
  2466:7a               push2 
  2467:7c            pushSelf 
  2468:72 0cec          lofsa $0cec // lana
  246b:4a 10             send 10 

  246d:32 0097            jmp code_2507 

        code_2470
  2470:3c                 dup 
  2471:35 02              ldi 2 
  2473:1a                 eq? 
  2474:30 0023            bnt code_249a 
  2477:38 00a2          pushi a2 // $a2 setLoop
  247a:78               push1 
  247b:39 03            pushi 3 // $3 y
  247d:38 0096          pushi 96 // $96 setCycle
  2480:78               push1 
  2481:51 1a            class End 
  2483:36                push 
  2484:38 011b          pushi 11b // $11b setMotion
  2487:39 04            pushi 4 // $4 x
  2489:51 1e            class MoveTo 
  248b:36                push 
  248c:39 5d            pushi 5d // $5d handle
  248e:38 0091          pushi 91 // $91 globalize
  2491:7c            pushSelf 
  2492:72 0cec          lofsa $0cec // lana
  2495:4a 18             send 18 

  2497:32 006d            jmp code_2507 

        code_249a
  249a:3c                 dup 
  249b:35 03              ldi 3 
  249d:1a                 eq? 
  249e:30 0023            bnt code_24c4 
  24a1:38 00a2          pushi a2 // $a2 setLoop
  24a4:78               push1 
  24a5:39 04            pushi 4 // $4 x
  24a7:38 0096          pushi 96 // $96 setCycle
  24aa:78               push1 
  24ab:51 17            class Fwd 
  24ad:36                push 
  24ae:38 011b          pushi 11b // $11b setMotion
  24b1:39 04            pushi 4 // $4 x
  24b3:51 1e            class MoveTo 
  24b5:36                push 
  24b6:39 6b            pushi 6b // $6b init
  24b8:38 0091          pushi 91 // $91 globalize
  24bb:7c            pushSelf 
  24bc:72 0cec          lofsa $0cec // lana
  24bf:4a 18             send 18 

  24c1:32 0043            jmp code_2507 

        code_24c4
  24c4:3c                 dup 
  24c5:35 04              ldi 4 
  24c7:1a                 eq? 
  24c8:30 0030            bnt code_24fb 
  24cb:39 42            pushi 42 // $42 setPri
  24cd:78               push1 
  24ce:39 09            pushi 9 // $9 nsTop
  24d0:72 1152          lofsa $1152 // skater5
  24d3:4a 06             send 6 

  24d5:38 011c          pushi 11c // $11c posn
  24d8:7a               push2 
  24d9:39 04            pushi 4 // $4 x
  24db:76               push0 
  24dc:72 0cec          lofsa $0cec // lana
  24df:4a 04             send 4 

  24e1:36                push 
  24e2:38 0094          pushi 94 // $94 lastTime
  24e5:38 00a2          pushi a2 // $a2 setLoop
  24e8:78               push1 
  24e9:39 05            pushi 5 // $5 view
  24eb:38 0096          pushi 96 // $96 setCycle
  24ee:7a               push2 
  24ef:51 1a            class End 
  24f1:36                push 
  24f2:7c            pushSelf 
  24f3:72 0cec          lofsa $0cec // lana
  24f6:4a 16             send 16 

  24f8:32 000c            jmp code_2507 

        code_24fb
  24fb:3c                 dup 
  24fc:35 05              ldi 5 
  24fe:1a                 eq? 
  24ff:30 0005            bnt code_2507 
  2502:39 6c            pushi 6c // $6c dispose
  2504:76               push0 
  2505:54 04             self 4 


        code_2507
  2507:3a                toss 
  2508:48                 ret 
  2509:00                bnot 
    )

)

// 261e
(instance sSitDown of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2544
  2544:87 01              lap param1 
  2546:65 0a             aTop state 
  2548:36                push 
  2549:3c                 dup 
  254a:35 00              ldi 0 
  254c:1a                 eq? 
  254d:30 002a            bnt code_257a 
  2550:63 1a             pToa register 
  2552:30 0005            bnt code_255a 
  2555:35 5a              ldi 5a 
  2557:32 0003            jmp code_255d 

        code_255a
  255a:34 008e            ldi 8e 

        code_255d
  255d:a3 08              sal local8 
  255f:34 0091            ldi 91 
  2562:a3 09              sal local9 
  2564:5c              selfID 
  2565:a3 0a              sal local10 
  2567:35 00              ldi 0 
  2569:a3 0b              sal local11 
  256b:38 008e          pushi 8e // $8e setScript
  256e:78               push1 
  256f:72 2a90          lofsa $2a90 // sMoveLarry
  2572:36                push 
  2573:81 02              lag  
  2575:4a 06             send 6 

  2577:32 009b            jmp code_2615 

        code_257a
  257a:3c                 dup 
  257b:35 01              ldi 1 
  257d:1a                 eq? 
  257e:30 0021            bnt code_25a2 
  2581:63 1a             pToa register 
  2583:30 0015            bnt code_259b 
  2586:38 011b          pushi 11b // $11b setMotion
  2589:39 04            pushi 4 // $4 x
  258b:51 1e            class MoveTo 
  258d:36                push 
  258e:39 5a            pushi 5a // $5a points
  2590:38 0095          pushi 95 // $95 set
  2593:7c            pushSelf 
  2594:81 00              lag  
  2596:4a 0c             send c 

  2598:32 007a            jmp code_2615 

        code_259b
  259b:35 01              ldi 1 
  259d:65 10             aTop cycles 
  259f:32 0073            jmp code_2615 

        code_25a2
  25a2:3c                 dup 
  25a3:35 02              ldi 2 
  25a5:1a                 eq? 
  25a6:30 0060            bnt code_2609 
  25a9:63 1a             pToa register 
  25ab:30 0036            bnt code_25e4 
  25ae:39 05            pushi 5 // $5 view
  25b0:78               push1 
  25b1:38 0317          pushi 317 // $317 sel_791
  25b4:38 00a2          pushi a2 // $a2 setLoop
  25b7:78               push1 
  25b8:38 0208          pushi 208 // $208 skating
  25bb:76               push0 
  25bc:81 00              lag  
  25be:4a 04             send 4 

  25c0:30 0005            bnt code_25c8 
  25c3:35 02              ldi 2 
  25c5:32 0002            jmp code_25ca 

        code_25c8
  25c8:35 00              ldi 0 

        code_25ca
  25ca:36                push 
  25cb:38 0120          pushi 120 // $120 setCel
  25ce:78               push1 
  25cf:76               push0 
  25d0:38 0096          pushi 96 // $96 setCycle
  25d3:7a               push2 
  25d4:51 1a            class End 
  25d6:36                push 
  25d7:7c            pushSelf 
  25d8:38 0209          pushi 209 // $209 sitting
  25db:78               push1 
  25dc:78               push1 
  25dd:81 00              lag  
  25df:4a 20             send 20 

  25e1:32 0031            jmp code_2615 

        code_25e4
  25e4:39 05            pushi 5 // $5 view
  25e6:78               push1 
  25e7:38 0317          pushi 317 // $317 sel_791
  25ea:38 00a2          pushi a2 // $a2 setLoop
  25ed:78               push1 
  25ee:39 04            pushi 4 // $4 x
  25f0:38 0120          pushi 120 // $120 setCel
  25f3:78               push1 
  25f4:76               push0 
  25f5:38 0096          pushi 96 // $96 setCycle
  25f8:7a               push2 
  25f9:51 1a            class End 
  25fb:36                push 
  25fc:7c            pushSelf 
  25fd:38 0209          pushi 209 // $209 sitting
  2600:78               push1 
  2601:78               push1 
  2602:81 00              lag  
  2604:4a 20             send 20 

  2606:32 000c            jmp code_2615 

        code_2609
  2609:3c                 dup 
  260a:35 03              ldi 3 
  260c:1a                 eq? 
  260d:30 0005            bnt code_2615 
  2610:39 6c            pushi 6c // $6c dispose
  2612:76               push0 
  2613:54 04             self 4 


        code_2615
  2615:3a                toss 
  2616:48                 ret 
  2617:00                bnot 
    )

)

// 275a
(instance sDoSkates of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2652
  2652:87 01              lap param1 
  2654:65 0a             aTop state 
  2656:36                push 
  2657:3c                 dup 
  2658:35 00              ldi 0 
  265a:1a                 eq? 
  265b:30 0048            bnt code_26a6 
  265e:38 0208          pushi 208 // $208 skating
  2661:76               push0 
  2662:81 00              lag  
  2664:4a 04             send 4 

  2666:30 001b            bnt code_2684 
  2669:38 00a2          pushi a2 // $a2 setLoop
  266c:78               push1 
  266d:78               push1 
  266e:38 0120          pushi 120 // $120 setCel
  2671:78               push1 
  2672:38 00ff          pushi ff // $ff syncNum
  2675:38 0096          pushi 96 // $96 setCycle
  2678:7a               push2 
  2679:51 1b            class Beg 
  267b:36                push 
  267c:7c            pushSelf 
  267d:81 00              lag  
  267f:4a 14             send 14 

  2681:32 00ce            jmp code_2752 

        code_2684
  2684:7a               push2 
  2685:39 03            pushi 3 // $3 y
  2687:38 008b          pushi 8b // $8b caller
  268a:45 0a 04         callb procedure_000a 4 //  

  268d:38 00a2          pushi a2 // $a2 setLoop
  2690:78               push1 
  2691:78               push1 
  2692:38 0120          pushi 120 // $120 setCel
  2695:78               push1 
  2696:76               push0 
  2697:38 0096          pushi 96 // $96 setCycle
  269a:7a               push2 
  269b:51 1a            class End 
  269d:36                push 
  269e:7c            pushSelf 
  269f:81 00              lag  
  26a1:4a 14             send 14 

  26a3:32 00ac            jmp code_2752 

        code_26a6
  26a6:3c                 dup 
  26a7:35 01              ldi 1 
  26a9:1a                 eq? 
  26aa:30 00a5            bnt code_2752 
  26ad:38 0208          pushi 208 // $208 skating
  26b0:76               push0 
  26b1:81 00              lag  
  26b3:4a 04             send 4 

  26b5:30 004c            bnt code_2704 
  26b8:38 0208          pushi 208 // $208 skating
  26bb:78               push1 
  26bc:76               push0 
  26bd:81 00              lag  
  26bf:4a 06             send 6 

  26c1:34 02f9            ldi 2f9 
  26c4:a3 05              sal local5 
  26c6:34 02fc            ldi 2fc 
  26c9:a3 06              sal local6 
  26cb:39 20            pushi 20 // $20 state
  26cd:78               push1 
  26ce:76               push0 
  26cf:39 43            pushi 43 // $43 at
  26d1:78               push1 
  26d2:39 12            pushi 12 // $12 illegalBits
  26d4:51 40            class Inv 
  26d6:4a 06             send 6 

  26d8:4a 06             send 6 

  26da:38 00a2          pushi a2 // $a2 setLoop
  26dd:78               push1 
  26de:76               push0 
  26df:38 0120          pushi 120 // $120 setCel
  26e2:78               push1 
  26e3:38 00ff          pushi ff // $ff syncNum
  26e6:81 00              lag  
  26e8:4a 0c             send c 

  26ea:39 05            pushi 5 // $5 view
  26ec:38 0080          pushi 80 // $80 indexOf
  26ef:38 02fb          pushi 2fb // $2fb sel_763
  26f2:38 02fa          pushi 2fa // $2fa sel_762
  26f5:38 02f9          pushi 2f9 // $2f9 sel_761
  26f8:38 02fc          pushi 2fc // $2fc sel_764
  26fb:46 03be 0000 0a  calle 3be procedure_0000 a //  

  2701:32 0049            jmp code_274d 

        code_2704
  2704:38 0208          pushi 208 // $208 skating
  2707:78               push1 
  2708:78               push1 
  2709:81 00              lag  
  270b:4a 06             send 6 

  270d:34 02fd            ldi 2fd 
  2710:a3 05              sal local5 
  2712:34 0300            ldi 300 
  2715:a3 06              sal local6 
  2717:39 20            pushi 20 // $20 state
  2719:78               push1 
  271a:78               push1 
  271b:39 43            pushi 43 // $43 at
  271d:78               push1 
  271e:39 12            pushi 12 // $12 illegalBits
  2720:51 40            class Inv 
  2722:4a 06             send 6 

  2724:4a 06             send 6 

  2726:38 00a2          pushi a2 // $a2 setLoop
  2729:78               push1 
  272a:7a               push2 
  272b:38 0120          pushi 120 // $120 setCel
  272e:78               push1 
  272f:38 00ff          pushi ff // $ff syncNum
  2732:81 00              lag  
  2734:4a 0c             send c 

  2736:39 05            pushi 5 // $5 view
  2738:38 0080          pushi 80 // $80 indexOf
  273b:38 02ff          pushi 2ff // $2ff sel_767
  273e:38 02fe          pushi 2fe // $2fe sel_766
  2741:38 02fd          pushi 2fd // $2fd sel_765
  2744:38 0300          pushi 300 // $300 sel_768
  2747:46 03be 0000 0a  calle 3be procedure_0000 a //  


        code_274d
  274d:39 6c            pushi 6c // $6c dispose
  274f:76               push0 
  2750:54 04             self 4 


        code_2752
  2752:3a                toss 
  2753:48                 ret 
    )

)

// 27fa
(instance sStandUp of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_278e
  278e:87 01              lap param1 
  2790:65 0a             aTop state 
  2792:36                push 
  2793:3c                 dup 
  2794:35 00              ldi 0 
  2796:1a                 eq? 
  2797:30 000f            bnt code_27a9 
  279a:38 0096          pushi 96 // $96 setCycle
  279d:7a               push2 
  279e:51 1b            class Beg 
  27a0:36                push 
  27a1:7c            pushSelf 
  27a2:81 00              lag  
  27a4:4a 08             send 8 

  27a6:32 0048            jmp code_27f1 

        code_27a9
  27a9:3c                 dup 
  27aa:35 01              ldi 1 
  27ac:1a                 eq? 
  27ad:30 0041            bnt code_27f1 
  27b0:38 0209          pushi 209 // $209 sitting
  27b3:78               push1 
  27b4:76               push0 
  27b5:38 020a          pushi 20a // $20a normalize
  27b8:78               push1 
  27b9:8b 06              lsl local6 
  27bb:38 0134          pushi 134 // $134 setStep
  27be:7a               push2 
  27bf:39 03            pushi 3 // $3 y
  27c1:3c                 dup 
  27c2:38 00e4          pushi e4 // $e4 setHeading
  27c5:78               push1 
  27c6:76               push0 
  27c7:38 011c          pushi 11c // $11c posn
  27ca:7a               push2 
  27cb:39 04            pushi 4 // $4 x
  27cd:76               push0 
  27ce:81 00              lag  
  27d0:4a 04             send 4 

  27d2:36                push 
  27d3:38 0091          pushi 91 // $91 globalize
  27d6:81 00              lag  
  27d8:4a 22             send 22 

  27da:63 1a             pToa register 
  27dc:30 000d            bnt code_27ec 
  27df:38 010c          pushi 10c // $10c doVerb
  27e2:7a               push2 
  27e3:39 04            pushi 4 // $4 x
  27e5:39 12            pushi 12 // $12 illegalBits
  27e7:72 2eca          lofsa $2eca // bench
  27ea:4a 08             send 8 


        code_27ec
  27ec:39 6c            pushi 6c // $6c dispose
  27ee:76               push0 
  27ef:54 04             self 4 


        code_27f1
  27f1:3a                toss 
  27f2:48                 ret 
  27f3:00                bnot 
    )

)

// 2a8a
(instance sMoveLarry of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_282e
  282e:3f 01             link 1 // (var $1)
  2830:87 01              lap param1 
  2832:65 0a             aTop state 
  2834:36                push 
  2835:3c                 dup 
  2836:35 00              ldi 0 
  2838:1a                 eq? 
  2839:30 0052            bnt code_288e 
  283c:38 020a          pushi 20a // $20a normalize
  283f:78               push1 
  2840:39 05            pushi 5 // $5 view
  2842:76               push0 
  2843:81 00              lag  
  2845:4a 04             send 4 

  2847:36                push 
  2848:38 0134          pushi 134 // $134 setStep
  284b:7a               push2 
  284c:39 03            pushi 3 // $3 y
  284e:3c                 dup 
  284f:81 00              lag  
  2851:4a 0e             send e 

  2853:8b 09              lsl local9 
  2855:39 03            pushi 3 // $3 y
  2857:76               push0 
  2858:81 00              lag  
  285a:4a 04             send 4 

  285c:36                push 
  285d:35 05              ldi 5 
  285f:04                 sub 
  2860:22                 lt? 
  2861:30 0007            bnt code_286b 
  2864:35 01              ldi 1 
  2866:65 1a             aTop register 
  2868:32 001c            jmp code_2887 

        code_286b
  286b:8b 09              lsl local9 
  286d:39 03            pushi 3 // $3 y
  286f:76               push0 
  2870:81 00              lag  
  2872:4a 04             send 4 

  2874:36                push 
  2875:35 05              ldi 5 
  2877:02                 add 
  2878:1e                 gt? 
  2879:30 0007            bnt code_2883 
  287c:35 02              ldi 2 
  287e:65 1a             aTop register 
  2880:32 0004            jmp code_2887 

        code_2883
  2883:35 00              ldi 0 
  2885:65 1a             aTop register 

        code_2887
  2887:35 01              ldi 1 
  2889:65 10             aTop cycles 
  288b:32 01f4            jmp code_2a82 

        code_288e
  288e:3c                 dup 
  288f:35 01              ldi 1 
  2891:1a                 eq? 
  2892:30 010a            bnt code_299f 
  2895:67 1a             pTos register 
  2897:3c                 dup 
  2898:35 00              ldi 0 
  289a:1a                 eq? 
  289b:30 0039            bnt code_28d7 
  289e:38 011a          pushi 11a // $11a canControl
  28a1:78               push1 
  28a2:78               push1 
  28a3:51 31            class User 
  28a5:4a 06             send 6 

  28a7:6b 0a            ipToa state 
  28a9:38 0096          pushi 96 // $96 setCycle
  28ac:7a               push2 
  28ad:51 56            class StopWalk 
  28af:36                push 
  28b0:39 ff            pushi ff // $ff syncNum
  28b2:38 011b          pushi 11b // $11b setMotion
  28b5:39 04            pushi 4 // $4 x
  28b7:51 24            class PolyPath 
  28b9:36                push 
  28ba:8b 08              lsl local8 
  28bc:7a               push2 
  28bd:38 0091          pushi 91 // $91 globalize
  28c0:39 03            pushi 3 // $3 y
  28c2:76               push0 
  28c3:81 00              lag  
  28c5:4a 04             send 4 

  28c7:36                push 
  28c8:46 03e7 0002 04  calle 3e7 procedure_0002 4 //  

  28ce:36                push 
  28cf:7c            pushSelf 
  28d0:81 00              lag  
  28d2:4a 14             send 14 

  28d4:32 00c4            jmp code_299b 

        code_28d7
  28d7:3c                 dup 
  28d8:35 01              ldi 1 
  28da:1a                 eq? 
  28db:30 005d            bnt code_293b 
  28de:38 011a          pushi 11a // $11a canControl
  28e1:78               push1 
  28e2:76               push0 
  28e3:51 31            class User 
  28e5:4a 06             send 6 

  28e7:39 05            pushi 5 // $5 view
  28e9:76               push0 
  28ea:81 00              lag  
  28ec:4a 04             send 4 

  28ee:36                push 
  28ef:83 05              lal local5 
  28f1:1a                 eq? 
  28f2:30 000b            bnt code_2900 
  28f5:35 00              ldi 0 
  28f7:65 1a             aTop register 
  28f9:35 01              ldi 1 
  28fb:65 10             aTop cycles 
  28fd:32 009b            jmp code_299b 

        code_2900
  2900:39 05            pushi 5 // $5 view
  2902:76               push0 
  2903:81 00              lag  
  2905:4a 04             send 4 

  2907:36                push 
  2908:83 05              lal local5 
  290a:04                 sub 
  290b:a5 00              sat temp0 
  290d:38 00a2          pushi a2 // $a2 setLoop
  2910:78               push1 
  2911:39 03            pushi 3 // $3 y
  2913:38 0120          pushi 120 // $120 setCel
  2916:78               push1 
  2917:76               push0 
  2918:38 0096          pushi 96 // $96 setCycle
  291b:78               push1 
  291c:51 1a            class End 
  291e:36                push 
  291f:38 011b          pushi 11b // $11b setMotion
  2922:39 04            pushi 4 // $4 x
  2924:51 24            class PolyPath 
  2926:36                push 
  2927:39 04            pushi 4 // $4 x
  2929:76               push0 
  292a:81 00              lag  
  292c:4a 04             send 4 

  292e:36                push 
  292f:85 00              lat temp0 
  2931:9b 0c             lsli local12 
  2933:7c            pushSelf 
  2934:81 00              lag  
  2936:4a 1e             send 1e 

  2938:32 0060            jmp code_299b 

        code_293b
  293b:3c                 dup 
  293c:35 02              ldi 2 
  293e:1a                 eq? 
  293f:30 0059            bnt code_299b 
  2942:38 011a          pushi 11a // $11a canControl
  2945:78               push1 
  2946:76               push0 
  2947:51 31            class User 
  2949:4a 06             send 6 

  294b:39 05            pushi 5 // $5 view
  294d:76               push0 
  294e:81 00              lag  
  2950:4a 04             send 4 

  2952:36                push 
  2953:83 06              lal local6 
  2955:1a                 eq? 
  2956:30 000b            bnt code_2964 
  2959:35 00              ldi 0 
  295b:65 1a             aTop register 
  295d:35 01              ldi 1 
  295f:65 10             aTop cycles 
  2961:32 0037            jmp code_299b 

        code_2964
  2964:39 05            pushi 5 // $5 view
  2966:76               push0 
  2967:81 00              lag  
  2969:4a 04             send 4 

  296b:36                push 
  296c:83 05              lal local5 
  296e:04                 sub 
  296f:a5 00              sat temp0 
  2971:38 00a2          pushi a2 // $a2 setLoop
  2974:78               push1 
  2975:7a               push2 
  2976:38 0120          pushi 120 // $120 setCel
  2979:78               push1 
  297a:76               push0 
  297b:38 0096          pushi 96 // $96 setCycle
  297e:78               push1 
  297f:51 1a            class End 
  2981:36                push 
  2982:38 011b          pushi 11b // $11b setMotion
  2985:39 04            pushi 4 // $4 x
  2987:51 24            class PolyPath 
  2989:36                push 
  298a:39 04            pushi 4 // $4 x
  298c:76               push0 
  298d:81 00              lag  
  298f:4a 04             send 4 

  2991:36                push 
  2992:85 00              lat temp0 
  2994:9b 10             lsli local16 
  2996:7c            pushSelf 
  2997:81 00              lag  
  2999:4a 1e             send 1e 


        code_299b
  299b:3a                toss 
  299c:32 00e3            jmp code_2a82 

        code_299f
  299f:3c                 dup 
  29a0:35 02              ldi 2 
  29a2:1a                 eq? 
  29a3:30 00a5            bnt code_2a4b 
  29a6:67 1a             pTos register 
  29a8:3c                 dup 
  29a9:35 01              ldi 1 
  29ab:1a                 eq? 
  29ac:30 0048            bnt code_29f7 
  29af:39 05            pushi 5 // $5 view
  29b1:76               push0 
  29b2:81 00              lag  
  29b4:4a 04             send 4 

  29b6:36                push 
  29b7:34 0301            ldi 301 
  29ba:22                 lt? 
  29bb:30 0020            bnt code_29de 
  29be:39 05            pushi 5 // $5 view
  29c0:78               push1 
  29c1:39 05            pushi 5 // $5 view
  29c3:76               push0 
  29c4:81 00              lag  
  29c6:4a 04             send 4 

  29c8:36                push 
  29c9:35 01              ldi 1 
  29cb:04                 sub 
  29cc:36                push 
  29cd:38 00a2          pushi a2 // $a2 setLoop
  29d0:78               push1 
  29d1:39 ff            pushi ff // $ff syncNum
  29d3:38 0120          pushi 120 // $120 setCel
  29d6:78               push1 
  29d7:38 00ff          pushi ff // $ff syncNum
  29da:81 00              lag  
  29dc:4a 12             send 12 


        code_29de
  29de:39 03            pushi 3 // $3 y
  29e0:76               push0 
  29e1:81 00              lag  
  29e3:4a 04             send 4 

  29e5:36                push 
  29e6:83 09              lal local9 
  29e8:04                 sub 
  29e9:36                push 
  29ea:35 06              ldi 6 
  29ec:22                 lt? 
  29ed:30 0050            bnt code_2a40 
  29f0:35 00              ldi 0 
  29f2:65 1a             aTop register 
  29f4:32 0049            jmp code_2a40 

        code_29f7
  29f7:3c                 dup 
  29f8:35 02              ldi 2 
  29fa:1a                 eq? 
  29fb:30 0042            bnt code_2a40 
  29fe:39 05            pushi 5 // $5 view
  2a00:76               push0 
  2a01:81 00              lag  
  2a03:4a 04             send 4 

  2a05:36                push 
  2a06:34 0301            ldi 301 
  2a09:22                 lt? 
  2a0a:30 001e            bnt code_2a2b 
  2a0d:39 05            pushi 5 // $5 view
  2a0f:78               push1 
  2a10:39 05            pushi 5 // $5 view
  2a12:76               push0 
  2a13:81 00              lag  
  2a15:4a 04             send 4 

  2a17:36                push 
  2a18:35 01              ldi 1 
  2a1a:02                 add 
  2a1b:36                push 
  2a1c:38 00a2          pushi a2 // $a2 setLoop
  2a1f:78               push1 
  2a20:39 ff            pushi ff // $ff syncNum
  2a22:38 0120          pushi 120 // $120 setCel
  2a25:78               push1 
  2a26:76               push0 
  2a27:81 00              lag  
  2a29:4a 12             send 12 


        code_2a2b
  2a2b:8b 09              lsl local9 
  2a2d:39 03            pushi 3 // $3 y
  2a2f:76               push0 
  2a30:81 00              lag  
  2a32:4a 04             send 4 

  2a34:04                 sub 
  2a35:36                push 
  2a36:35 06              ldi 6 
  2a38:22                 lt? 
  2a39:30 0004            bnt code_2a40 
  2a3c:35 00              ldi 0 
  2a3e:65 1a             aTop register 

        code_2a40
  2a40:3a                toss 
  2a41:38 008c          pushi 8c // $8c changeState
  2a44:78               push1 
  2a45:78               push1 
  2a46:54 06             self 6 

  2a48:32 0037            jmp code_2a82 

        code_2a4b
  2a4b:3c                 dup 
  2a4c:35 03              ldi 3 
  2a4e:1a                 eq? 
  2a4f:30 0030            bnt code_2a82 
  2a52:83 0b              lal local11 
  2a54:30 000c            bnt code_2a63 
  2a57:38 010c          pushi 10c // $10c doVerb
  2a5a:78               push1 
  2a5b:36                push 
  2a5c:83 0a              lal local10 
  2a5e:4a 06             send 6 

  2a60:32 000b            jmp code_2a6e 

        code_2a63
  2a63:83 0a              lal local10 
  2a65:30 0006            bnt code_2a6e 
  2a68:38 008d          pushi 8d // $8d cue
  2a6b:76               push0 
  2a6c:4a 04             send 4 


        code_2a6e
  2a6e:35 00              ldi 0 
  2a70:a3 0b              sal local11 
  2a72:a3 0a              sal local10 
  2a74:38 011a          pushi 11a // $11a canControl
  2a77:78               push1 
  2a78:78               push1 
  2a79:51 31            class User 
  2a7b:4a 06             send 6 

  2a7d:39 6c            pushi 6c // $6c dispose
  2a7f:76               push0 
  2a80:54 04             self 4 


        code_2a82
  2a82:3a                toss 
  2a83:48                 ret 
    )

)

// 2c66
(instance sLanaTalks of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_2abe
  2abe:87 01              lap param1 
  2ac0:65 0a             aTop state 
  2ac2:36                push 
  2ac3:3c                 dup 
  2ac4:35 00              ldi 0 
  2ac6:1a                 eq? 
  2ac7:30 0013            bnt code_2add 
  2aca:39 03            pushi 3 // $3 y
  2acc:89 00              lsg  
  2ace:38 02f8          pushi 2f8 // $2f8 sel_760
  2ad1:39 1c            pushi 1c // $1c color
  2ad3:45 12 06         callb procedure_0012 6 //  

  2ad6:35 3c              ldi 3c 
  2ad8:65 16             aTop ticks 
  2ada:32 0181            jmp code_2c5e 

        code_2add
  2add:3c                 dup 
  2ade:35 01              ldi 1 
  2ae0:1a                 eq? 
  2ae1:30 0017            bnt code_2afb 
  2ae4:39 04            pushi 4 // $4 x
  2ae6:72 1b1e          lofsa $1b1e // Lana Luscious
  2ae9:36                push 
  2aea:38 02f8          pushi 2f8 // $2f8 sel_760
  2aed:39 1d            pushi 1d // $1d back
  2aef:39 6c            pushi 6c // $6c dispose
  2af1:45 12 08         callb procedure_0012 8 //  

  2af4:35 3c              ldi 3c 
  2af6:65 16             aTop ticks 
  2af8:32 0163            jmp code_2c5e 

        code_2afb
  2afb:3c                 dup 
  2afc:35 02              ldi 2 
  2afe:1a                 eq? 
  2aff:30 0003            bnt code_2b05 
  2b02:32 0159            jmp code_2c5e 

        code_2b05
  2b05:3c                 dup 
  2b06:35 03              ldi 3 
  2b08:1a                 eq? 
  2b09:30 0013            bnt code_2b1f 
  2b0c:39 03            pushi 3 // $3 y
  2b0e:89 00              lsg  
  2b10:38 02f8          pushi 2f8 // $2f8 sel_760
  2b13:39 1e            pushi 1e // $1e mode
  2b15:45 12 06         callb procedure_0012 6 //  

  2b18:35 3c              ldi 3c 
  2b1a:65 16             aTop ticks 
  2b1c:32 013f            jmp code_2c5e 

        code_2b1f
  2b1f:3c                 dup 
  2b20:35 04              ldi 4 
  2b22:1a                 eq? 
  2b23:30 0017            bnt code_2b3d 
  2b26:39 04            pushi 4 // $4 x
  2b28:72 1b1e          lofsa $1b1e // Lana Luscious
  2b2b:36                push 
  2b2c:38 02f8          pushi 2f8 // $2f8 sel_760
  2b2f:39 1f            pushi 1f // $1f style
  2b31:39 6c            pushi 6c // $6c dispose
  2b33:45 12 08         callb procedure_0012 8 //  

  2b36:35 3c              ldi 3c 
  2b38:65 16             aTop ticks 
  2b3a:32 0121            jmp code_2c5e 

        code_2b3d
  2b3d:3c                 dup 
  2b3e:35 05              ldi 5 
  2b40:1a                 eq? 
  2b41:30 0003            bnt code_2b47 
  2b44:32 0117            jmp code_2c5e 

        code_2b47
  2b47:3c                 dup 
  2b48:35 06              ldi 6 
  2b4a:1a                 eq? 
  2b4b:30 0013            bnt code_2b61 
  2b4e:39 03            pushi 3 // $3 y
  2b50:89 00              lsg  
  2b52:38 02f8          pushi 2f8 // $2f8 sel_760
  2b55:39 20            pushi 20 // $20 state
  2b57:45 12 06         callb procedure_0012 6 //  

  2b5a:35 3c              ldi 3c 
  2b5c:65 16             aTop ticks 
  2b5e:32 00fd            jmp code_2c5e 

        code_2b61
  2b61:3c                 dup 
  2b62:35 07              ldi 7 
  2b64:1a                 eq? 
  2b65:30 0017            bnt code_2b7f 
  2b68:39 04            pushi 4 // $4 x
  2b6a:72 1b1e          lofsa $1b1e // Lana Luscious
  2b6d:36                push 
  2b6e:38 02f8          pushi 2f8 // $2f8 sel_760
  2b71:39 21            pushi 21 // $21 font
  2b73:39 6c            pushi 6c // $6c dispose
  2b75:45 12 08         callb procedure_0012 8 //  

  2b78:35 3c              ldi 3c 
  2b7a:65 16             aTop ticks 
  2b7c:32 00df            jmp code_2c5e 

        code_2b7f
  2b7f:3c                 dup 
  2b80:35 08              ldi 8 
  2b82:1a                 eq? 
  2b83:30 0003            bnt code_2b89 
  2b86:32 00d5            jmp code_2c5e 

        code_2b89
  2b89:3c                 dup 
  2b8a:35 09              ldi 9 
  2b8c:1a                 eq? 
  2b8d:30 0013            bnt code_2ba3 
  2b90:39 03            pushi 3 // $3 y
  2b92:89 00              lsg  
  2b94:38 02f8          pushi 2f8 // $2f8 sel_760
  2b97:39 22            pushi 22 // $22 type
  2b99:45 12 06         callb procedure_0012 6 //  

  2b9c:35 3c              ldi 3c 
  2b9e:65 16             aTop ticks 
  2ba0:32 00bb            jmp code_2c5e 

        code_2ba3
  2ba3:3c                 dup 
  2ba4:35 0a              ldi a 
  2ba6:1a                 eq? 
  2ba7:30 0017            bnt code_2bc1 
  2baa:39 04            pushi 4 // $4 x
  2bac:72 1b1e          lofsa $1b1e // Lana Luscious
  2baf:36                push 
  2bb0:38 02f8          pushi 2f8 // $2f8 sel_760
  2bb3:39 23            pushi 23 // $23 window
  2bb5:39 6c            pushi 6c // $6c dispose
  2bb7:45 12 08         callb procedure_0012 8 //  

  2bba:35 3c              ldi 3c 
  2bbc:65 16             aTop ticks 
  2bbe:32 009d            jmp code_2c5e 

        code_2bc1
  2bc1:3c                 dup 
  2bc2:35 0b              ldi b 
  2bc4:1a                 eq? 
  2bc5:30 0018            bnt code_2be0 
  2bc8:39 05            pushi 5 // $5 view
  2bca:38 02f8          pushi 2f8 // $2f8 sel_760
  2bcd:39 24            pushi 24 // $24 cursor
  2bcf:39 43            pushi 43 // $43 at
  2bd1:39 ff            pushi ff // $ff syncNum
  2bd3:38 00b9          pushi b9 // $b9 bottom
  2bd6:45 0e 0a         callb procedure_000e a //  

  2bd9:35 3c              ldi 3c 
  2bdb:65 16             aTop ticks 
  2bdd:32 007e            jmp code_2c5e 

        code_2be0
  2be0:3c                 dup 
  2be1:35 0c              ldi c 
  2be3:1a                 eq? 
  2be4:30 0003            bnt code_2bea 
  2be7:32 0074            jmp code_2c5e 

        code_2bea
  2bea:3c                 dup 
  2beb:35 0d              ldi d 
  2bed:1a                 eq? 
  2bee:30 001b            bnt code_2c0c 
  2bf1:7a               push2 
  2bf2:7a               push2 
  2bf3:38 008c          pushi 8c // $8c changeState
  2bf6:45 0a 04         callb procedure_000a 4 //  

  2bf9:39 03            pushi 3 // $3 y
  2bfb:89 00              lsg  
  2bfd:38 02f8          pushi 2f8 // $2f8 sel_760
  2c00:39 25            pushi 25 // $25 max
  2c02:45 12 06         callb procedure_0012 6 //  

  2c05:35 3c              ldi 3c 
  2c07:65 16             aTop ticks 
  2c09:32 0052            jmp code_2c5e 

        code_2c0c
  2c0c:3c                 dup 
  2c0d:35 0e              ldi e 
  2c0f:1a                 eq? 
  2c10:30 0017            bnt code_2c2a 
  2c13:39 04            pushi 4 // $4 x
  2c15:72 1b1e          lofsa $1b1e // Lana Luscious
  2c18:36                push 
  2c19:38 02f8          pushi 2f8 // $2f8 sel_760
  2c1c:39 26            pushi 26 // $26 mark
  2c1e:39 6c            pushi 6c // $6c dispose
  2c20:45 12 08         callb procedure_0012 8 //  

  2c23:35 3c              ldi 3c 
  2c25:65 16             aTop ticks 
  2c27:32 0034            jmp code_2c5e 

        code_2c2a
  2c2a:3c                 dup 
  2c2b:35 0f              ldi f 
  2c2d:1a                 eq? 
  2c2e:30 0018            bnt code_2c49 
  2c31:39 05            pushi 5 // $5 view
  2c33:38 02f8          pushi 2f8 // $2f8 sel_760
  2c36:39 27            pushi 27 // $27 who
  2c38:39 43            pushi 43 // $43 at
  2c3a:39 ff            pushi ff // $ff syncNum
  2c3c:38 00b9          pushi b9 // $b9 bottom
  2c3f:45 0e 0a         callb procedure_000e a //  

  2c42:35 01              ldi 1 
  2c44:65 10             aTop cycles 
  2c46:32 0015            jmp code_2c5e 

        code_2c49
  2c49:3c                 dup 
  2c4a:35 10              ldi 10 
  2c4c:1a                 eq? 
  2c4d:30 000e            bnt code_2c5e 
  2c50:38 008d          pushi 8d // $8d cue
  2c53:76               push0 
  2c54:72 23da          lofsa $23da // sMeetLana
  2c57:4a 04             send 4 

  2c59:39 6c            pushi 6c // $6c dispose
  2c5b:76               push0 
  2c5c:54 04             self 4 


        code_2c5e
  2c5e:3a                toss 
  2c5f:48                 ret 
    )

)

// 2d42
(instance lanaFtr of Feature
    (properties
        x $a0
        y $aa
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $bd
        nsRight $13f
        description $30c5
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_2c9a
  2c9a:8f 01              lsp param1 
  2c9c:3c                 dup 
  2c9d:35 02              ldi 2 
  2c9f:1a                 eq? 
  2ca0:30 000c            bnt code_2caf 
  2ca3:7a               push2 
  2ca4:38 02f8          pushi 2f8 // $2f8 sel_760
  2ca7:39 28            pushi 28 // $28 message
  2ca9:45 0e 04         callb procedure_000e 4 //  

  2cac:32 008b            jmp code_2d3a 

        code_2caf
  2caf:3c                 dup 
  2cb0:35 05              ldi 5 
  2cb2:1a                 eq? 
  2cb3:30 002b            bnt code_2ce1 
  2cb6:38 008a          pushi 8a // $8a script
  2cb9:76               push0 
  2cba:81 02              lag  
  2cbc:4a 04             send 4 

  2cbe:30 0011            bnt code_2cd2 
  2cc1:38 008d          pushi 8d // $8d cue
  2cc4:76               push0 
  2cc5:38 008a          pushi 8a // $8a script
  2cc8:76               push0 
  2cc9:81 02              lag  
  2ccb:4a 04             send 4 

  2ccd:4a 04             send 4 

  2ccf:32 0068            jmp code_2d3a 

        code_2cd2
  2cd2:38 008e          pushi 8e // $8e setScript
  2cd5:78               push1 
  2cd6:72 2c6c          lofsa $2c6c // sLanaTalks
  2cd9:36                push 
  2cda:81 02              lag  
  2cdc:4a 06             send 6 

  2cde:32 0059            jmp code_2d3a 

        code_2ce1
  2ce1:3c                 dup 
  2ce2:35 03              ldi 3 
  2ce4:1a                 eq? 
  2ce5:30 0013            bnt code_2cfb 
  2ce8:39 04            pushi 4 // $4 x
  2cea:72 1b1e          lofsa $1b1e // Lana Luscious
  2ced:36                push 
  2cee:38 02f8          pushi 2f8 // $2f8 sel_760
  2cf1:39 29            pushi 29 // $29 edit
  2cf3:39 6c            pushi 6c // $6c dispose
  2cf5:45 12 08         callb procedure_0012 8 //  

  2cf8:32 003f            jmp code_2d3a 

        code_2cfb
  2cfb:3c                 dup 
  2cfc:35 0a              ldi a 
  2cfe:1a                 eq? 
  2cff:30 0013            bnt code_2d15 
  2d02:39 04            pushi 4 // $4 x
  2d04:72 1b1e          lofsa $1b1e // Lana Luscious
  2d07:36                push 
  2d08:38 02f8          pushi 2f8 // $2f8 sel_760
  2d0b:39 2a            pushi 2a // $2a play
  2d0d:39 6c            pushi 6c // $6c dispose
  2d0f:45 12 08         callb procedure_0012 8 //  

  2d12:32 0025            jmp code_2d3a 

        code_2d15
  2d15:3c                 dup 
  2d16:35 04              ldi 4 
  2d18:1a                 eq? 
  2d19:30 0013            bnt code_2d2f 
  2d1c:39 04            pushi 4 // $4 x
  2d1e:72 1b1e          lofsa $1b1e // Lana Luscious
  2d21:36                push 
  2d22:38 02f8          pushi 2f8 // $2f8 sel_760
  2d25:39 2b            pushi 2b // $2b number
  2d27:39 6c            pushi 6c // $6c dispose
  2d29:45 12 08         callb procedure_0012 8 //  

  2d2c:32 000b            jmp code_2d3a 

        code_2d2f
  2d2f:38 010c          pushi 10c // $10c doVerb
  2d32:78               push1 
  2d33:8f 01              lsp param1 
  2d35:59 02            &rest 2 
  2d37:57 2c 06         super Feature 6 


        code_2d3a
  2d3a:3a                toss 
  2d3b:48                 ret 
    )

)

// 2daa
(instance buildings of Feature
    (properties
        x $9f
        y $1d
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $3b
        nsRight $13f
        description $3480
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3498
    )
    (method (doVerb) // method_2d80
  2d80:8f 01              lsp param1 
  2d82:3c                 dup 
  2d83:35 03              ldi 3 
  2d85:1a                 eq? 
  2d86:30 000c            bnt code_2d95 
  2d89:7a               push2 
  2d8a:38 02f8          pushi 2f8 // $2f8 sel_760
  2d8d:39 2c            pushi 2c // $2c nodePtr
  2d8f:45 0e 04         callb procedure_000e 4 //  

  2d92:32 000d            jmp code_2da2 

        code_2d95
  2d95:38 010c          pushi 10c // $10c doVerb
  2d98:7a               push2 
  2d99:8f 01              lsp param1 
  2d9b:8f 02              lsp param2 
  2d9d:59 03            &rest 3 
  2d9f:57 2c 08         super Feature 8 


        code_2da2
  2da2:3a                toss 
  2da3:48                 ret 
    )

)

// 2ec4
(instance publicbench of Feature
    (properties
        x $7e
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $81
        nsLeft $62
        nsBottom $97
        nsRight $9a
        description $3520
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $58
        approachY $98
        approachDist $0
        _approachVerbs $6789
        lookStr $352a
    )
    (method (doVerb) // method_2de8
  2de8:3f 01             link 1 // (var $1)
  2dea:8f 01              lsp param1 
  2dec:3c                 dup 
  2ded:35 03              ldi 3 
  2def:1a                 eq? 
  2df0:30 0086            bnt code_2e79 
  2df3:38 0209          pushi 209 // $209 sitting
  2df6:76               push0 
  2df7:81 00              lag  
  2df9:4a 04             send 4 

  2dfb:18                 not 
  2dfc:30 0024            bnt code_2e23 
  2dff:38 008e          pushi 8e // $8e setScript
  2e02:39 03            pushi 3 // $3 y
  2e04:72 2624          lofsa $2624 // sSitDown
  2e07:36                push 
  2e08:76               push0 
  2e09:39 44            pushi 44 // $44 next
  2e0b:76               push0 
  2e0c:72 2624          lofsa $2624 // sSitDown
  2e0f:4a 04             send 4 

  2e11:30 0005            bnt code_2e19 
  2e14:35 01              ldi 1 
  2e16:32 0002            jmp code_2e1b 

        code_2e19
  2e19:35 00              ldi 0 

        code_2e1b
  2e1b:36                push 
  2e1c:81 00              lag  
  2e1e:4a 0a             send a 

  2e20:32 0099            jmp code_2ebc 

        code_2e23
  2e23:39 06            pushi 6 // $6 loop
  2e25:76               push0 
  2e26:81 00              lag  
  2e28:4a 04             send 4 

  2e2a:36                push 
  2e2b:35 04              ldi 4 
  2e2d:1a                 eq? 
  2e2e:30 001c            bnt code_2e4d 
  2e31:38 008e          pushi 8e // $8e setScript
  2e34:39 03            pushi 3 // $3 y
  2e36:72 2800          lofsa $2800 // sStandUp
  2e39:36                push 
  2e3a:76               push0 
  2e3b:38 00d5          pushi d5 // $d5 has
  2e3e:78               push1 
  2e3f:39 12            pushi 12 // $12 illegalBits
  2e41:81 00              lag  
  2e43:4a 06             send 6 

  2e45:36                push 
  2e46:81 00              lag  
  2e48:4a 0a             send a 

  2e4a:32 006f            jmp code_2ebc 

        code_2e4d
  2e4d:38 00d5          pushi d5 // $d5 has
  2e50:78               push1 
  2e51:39 12            pushi 12 // $12 illegalBits
  2e53:81 00              lag  
  2e55:4a 06             send 6 

  2e57:30 000f            bnt code_2e69 
  2e5a:38 008e          pushi 8e // $8e setScript
  2e5d:78               push1 
  2e5e:72 2760          lofsa $2760 // sDoSkates
  2e61:36                push 
  2e62:81 00              lag  
  2e64:4a 06             send 6 

  2e66:32 0053            jmp code_2ebc 

        code_2e69
  2e69:38 010c          pushi 10c // $10c doVerb
  2e6c:7a               push2 
  2e6d:8f 01              lsp param1 
  2e6f:8f 02              lsp param2 
  2e71:59 03            &rest 3 
  2e73:57 2c 08         super Feature 8 

  2e76:32 0043            jmp code_2ebc 

        code_2e79
  2e79:3c                 dup 
  2e7a:35 04              ldi 4 
  2e7c:1a                 eq? 
  2e7d:30 002f            bnt code_2eaf 
  2e80:8f 02              lsp param2 
  2e82:35 12              ldi 12 
  2e84:1a                 eq? 
  2e85:30 0017            bnt code_2e9f 
  2e88:39 44            pushi 44 // $44 next
  2e8a:78               push1 
  2e8b:72 2760          lofsa $2760 // sDoSkates
  2e8e:36                push 
  2e8f:72 2624          lofsa $2624 // sSitDown
  2e92:4a 06             send 6 

  2e94:38 010c          pushi 10c // $10c doVerb
  2e97:78               push1 
  2e98:39 03            pushi 3 // $3 y
  2e9a:54 06             self 6 

  2e9c:32 001d            jmp code_2ebc 

        code_2e9f
  2e9f:38 010c          pushi 10c // $10c doVerb
  2ea2:7a               push2 
  2ea3:8f 01              lsp param1 
  2ea5:8f 02              lsp param2 
  2ea7:59 03            &rest 3 
  2ea9:57 2c 08         super Feature 8 

  2eac:32 000d            jmp code_2ebc 

        code_2eaf
  2eaf:38 010c          pushi 10c // $10c doVerb
  2eb2:7a               push2 
  2eb3:8f 01              lsp param1 
  2eb5:8f 02              lsp param2 
  2eb7:59 03            &rest 3 
  2eb9:57 2c 08         super Feature 8 


        code_2ebc
  2ebc:3a                toss 
  2ebd:48                 ret 
    )

)

// 2f04
(instance post1 of Feature
    (properties
        x $3d
        y $a0
        z $0
        heading $0
        noun $0
        nsTop $83
        nsLeft $33
        nsBottom $bd
        nsRight $48
        description $358e
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3597
    )
)

// 2f40
(instance post2 of Feature
    (properties
        x $89
        y $a3
        z $0
        heading $0
        noun $0
        nsTop $8a
        nsLeft $7d
        nsBottom $bd
        nsRight $95
        description $358e
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3597
    )
)

// 2f7c
(instance post3 of Feature
    (properties
        x $cd
        y $a4
        z $0
        heading $0
        noun $0
        nsTop $8b
        nsLeft $c1
        nsBottom $bd
        nsRight $dd
        description $358e
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3597
    )
)

// 2fb8
(instance post4 of Feature
    (properties
        x $127
        y $a5
        z $0
        heading $0
        noun $0
        nsTop $8d
        nsLeft $11b
        nsBottom $bd
        nsRight $135
        description $358e
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $3597
    )
)



