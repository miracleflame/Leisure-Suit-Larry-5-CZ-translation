(script 740)

(string
    string_08e8 "rm740"
    string_08ee "sRoom"
    string_08f4 "sRoar"
    string_08fa "sFadeout"
    string_0903 "her"
    string_0907 "The Audience"
    string_0914 "bodyPart"
    string_091d "findWhere"
    string_0927 "you and Lana"
    string_0934 "That's you and Lana wrestling, but you can't touch you from way up here!"
    string_097d "larry"
    string_0983 "soundFX"
    string_098b "patFX"
    string_0991 ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0001
    local6 = $0000
    local7 = $0000
)

// 0118
(instance publicrm740 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $2e4
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 09            pushi 9 // $9 nsTop
  0010:38 0084          pushi 84 // $84 cycles
  0013:38 02e6          pushi 2e6 // $2e6 sel_742
  0016:3c                 dup 
  0017:38 02f0          pushi 2f0 // $2f0 sel_752
  001a:38 02f1          pushi 2f1 // $2f1 sel_753
  001d:38 02f2          pushi 2f2 // $2f2 sel_754
  0020:38 02f0          pushi 2f0 // $2f0 sel_752
  0023:38 02f1          pushi 2f1 // $2f1 sel_753
  0026:38 02f2          pushi 2f2 // $2f2 sel_754
  0029:46 03be 0000 12  calle 3be procedure_0000 12 //  

  002f:7a               push2 
  0030:38 0082          pushi 82 // $82 start
  0033:38 03ca          pushi 3ca // $3ca sel_970
  0036:43 00 04         callk Load 4 

  0039:39 6b            pushi 6b // $6b init
  003b:76               push0 
  003c:57 72 04         super LLRoom 4 

  003f:76               push0 
  0040:45 03 00         callb procedure_0003 0 //  

  0043:38 011a          pushi 11a // $11a canControl
  0046:78               push1 
  0047:76               push0 
  0048:51 31            class User 
  004a:4a 06             send 6 

  004c:38 00c9          pushi c9 // $c9 disable
  004f:39 04            pushi 4 // $4 x
  0051:76               push0 
  0052:39 03            pushi 3 // $3 y
  0054:39 06            pushi 6 // $6 loop
  0056:39 07            pushi 7 // $7 cel
  0058:81 45              lag  
  005a:4a 0c             send c 

  005c:39 6b            pushi 6b // $6b init
  005e:76               push0 
  005f:72 07fa          lofsa $07fa // larry
  0062:4a 04             send 4 

  0064:39 2b            pushi 2b // $2b number
  0066:78               push1 
  0067:38 02e4          pushi 2e4 // $2e4 sel_740
  006a:38 00a2          pushi a2 // $a2 setLoop
  006d:78               push1 
  006e:39 ff            pushi ff // $ff syncNum
  0070:39 66            pushi 66 // $66 flags
  0072:78               push1 
  0073:78               push1 
  0074:39 2a            pushi 2a // $2a play
  0076:78               push1 
  0077:39 7f            pushi 7f // $7f addAfter
  0079:81 66              lag  
  007b:4a 18             send 18 

  007d:38 008e          pushi 8e // $8e setScript
  0080:78               push1 
  0081:72 0248          lofsa $0248 // sRoom
  0084:36                push 
  0085:54 06             self 6 

  0087:48                 ret 
    )

    (method (doit) // method_0088
  0088:39 3c            pushi 3c // $3c doit
  008a:76               push0 
  008b:57 72 04         super LLRoom 4 

  008e:39 77            pushi 77 // $77 contains
  0090:78               push1 
  0091:72 05bc          lofsa $05bc // bodyPart
  0094:36                push 
  0095:81 05              lag  
  0097:4a 06             send 6 

  0099:30 0063            bnt code_00ff 
  009c:78               push1 
  009d:78               push1 
  009e:43 42 02         callk GetTime 2 

  00a1:a3 03              sal local3 
  00a3:8b 04              lsl local4 
  00a5:1c                 ne? 
  00a6:30 0056            bnt code_00ff 
  00a9:83 03              lal local3 
  00ab:a3 04              sal local4 
  00ad:c3 07              +al local7 
  00af:8b 05              lsl local5 
  00b1:34 03e8            ldi 3e8 
  00b4:22                 lt? 
  00b5:30 0002            bnt code_00ba 
  00b8:c3 05              +al local5 

        code_00ba
  00ba:8b 07              lsl local7 
  00bc:35 1e              ldi 1e 
  00be:1a                 eq? 
  00bf:30 000b            bnt code_00cd 
  00c2:7a               push2 
  00c3:38 02e4          pushi 2e4 // $2e4 sel_740
  00c6:76               push0 
  00c7:45 0e 04         callb procedure_000e 4 //  

  00ca:32 0032            jmp code_00ff 

        code_00cd
  00cd:8b 07              lsl local7 
  00cf:35 08              ldi 8 
  00d1:0a                 mod 
  00d2:18                 not 
  00d3:30 0029            bnt code_00ff 
  00d6:83 06              lal local6 
  00d8:18                 not 
  00d9:30 000b            bnt code_00e7 
  00dc:7a               push2 
  00dd:38 02e4          pushi 2e4 // $2e4 sel_740
  00e0:78               push1 
  00e1:45 0e 04         callb procedure_000e 4 //  

  00e4:32 0018            jmp code_00ff 

        code_00e7
  00e7:8b 07              lsl local7 
  00e9:35 13              ldi 13 
  00eb:1e                 gt? 
  00ec:30 0010            bnt code_00ff 
  00ef:8b 06              lsl local6 
  00f1:35 05              ldi 5 
  00f3:22                 lt? 
  00f4:30 0008            bnt code_00ff 
  00f7:7a               push2 
  00f8:38 02e4          pushi 2e4 // $2e4 sel_740
  00fb:7a               push2 
  00fc:45 0e 04         callb procedure_000e 4 //  


        code_00ff
  00ff:48                 ret 
    )

    (method (dispose) // method_0103
  0103:78               push1 
  0104:38 03ca          pushi 3ca // $3ca sel_970
  0107:43 03 02         callk DisposeScript 2 

  010a:39 6c            pushi 6c // $6c dispose
  010c:76               push0 
  010d:57 72 04         super LLRoom 4 

  0110:48                 ret 
  0111:00                bnot 
    )

    (method (doVerb) // method_0100
  0100:35 01              ldi 1 
  0102:48                 ret 
    )

)

// 0242
(instance sRoom of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0164
  0164:87 01              lap param1 
  0166:65 0a             aTop state 
  0168:36                push 
  0169:3c                 dup 
  016a:35 00              ldi 0 
  016c:1a                 eq? 
  016d:30 0007            bnt code_0177 
  0170:35 02              ldi 2 
  0172:65 12             aTop seconds 
  0174:32 00c3            jmp code_023a 

        code_0177
  0177:3c                 dup 
  0178:35 01              ldi 1 
  017a:1a                 eq? 
  017b:30 0010            bnt code_018e 
  017e:7a               push2 
  017f:38 02e4          pushi 2e4 // $2e4 sel_740
  0182:39 03            pushi 3 // $3 y
  0184:45 0e 04         callb procedure_000e 4 //  

  0187:35 02              ldi 2 
  0189:65 12             aTop seconds 
  018b:32 00ac            jmp code_023a 

        code_018e
  018e:3c                 dup 
  018f:35 02              ldi 2 
  0191:1a                 eq? 
  0192:30 002b            bnt code_01c0 
  0195:38 00db          pushi db // $db cycleSpeed
  0198:78               push1 
  0199:39 06            pushi 6 // $6 loop
  019b:39 38            pushi 38 // $38 moveSpeed
  019d:78               push1 
  019e:39 06            pushi 6 // $6 loop
  01a0:38 012d          pushi 12d // $12d observeControl
  01a3:78               push1 
  01a4:39 04            pushi 4 // $4 x
  01a6:38 0096          pushi 96 // $96 setCycle
  01a9:78               push1 
  01aa:51 17            class Fwd 
  01ac:36                push 
  01ad:38 011b          pushi 11b // $11b setMotion
  01b0:78               push1 
  01b1:51 22            class Wander 
  01b3:36                push 
  01b4:72 07fa          lofsa $07fa // larry
  01b7:4a 1e             send 1e 

  01b9:35 03              ldi 3 
  01bb:65 12             aTop seconds 
  01bd:32 007a            jmp code_023a 

        code_01c0
  01c0:3c                 dup 
  01c1:35 03              ldi 3 
  01c3:1a                 eq? 
  01c4:30 0073            bnt code_023a 
  01c7:7a               push2 
  01c8:38 02e4          pushi 2e4 // $2e4 sel_740
  01cb:39 04            pushi 4 // $4 x
  01cd:45 0e 04         callb procedure_000e 4 //  

  01d0:39 05            pushi 5 // $5 view
  01d2:38 02e4          pushi 2e4 // $2e4 sel_740
  01d5:39 05            pushi 5 // $5 view
  01d7:39 43            pushi 43 // $43 at
  01d9:39 ff            pushi ff // $ff syncNum
  01db:38 00b9          pushi b9 // $b9 bottom
  01de:45 0e 0a         callb procedure_000e a //  

  01e1:38 011b          pushi 11b // $11b setMotion
  01e4:78               push1 
  01e5:76               push0 
  01e6:72 07fa          lofsa $07fa // larry
  01e9:4a 06             send 6 

  01eb:38 00ce          pushi ce // $ce curIcon
  01ee:78               push1 
  01ef:39 43            pushi 43 // $43 at
  01f1:78               push1 
  01f2:7a               push2 
  01f3:81 45              lag  
  01f5:4a 06             send 6 

  01f7:36                push 
  01f8:81 45              lag  
  01fa:4a 06             send 6 

  01fc:38 00bb          pushi bb // $bb setCursor
  01ff:78               push1 
  0200:39 24            pushi 24 // $24 cursor
  0202:76               push0 
  0203:38 00ce          pushi ce // $ce curIcon
  0206:76               push0 
  0207:81 45              lag  
  0209:4a 04             send 4 

  020b:4a 04             send 4 

  020d:36                push 
  020e:81 01              lag  
  0210:4a 06             send 6 

  0212:7a               push2 
  0213:39 1b            pushi 1b // $1b elements
  0215:76               push0 
  0216:81 05              lag  
  0218:4a 04             send 4 

  021a:36                push 
  021b:76               push0 
  021c:43 0b 04         callk Animate 4 

  021f:39 6b            pushi 6b // $6b init
  0221:76               push0 
  0222:39 63            pushi 63 // $63 perform
  0224:78               push1 
  0225:72 06a2          lofsa $06a2 // findWhere
  0228:36                push 
  0229:72 05bc          lofsa $05bc // bodyPart
  022c:4a 0a             send a 

  022e:38 008e          pushi 8e // $8e setScript
  0231:78               push1 
  0232:72 02c0          lofsa $02c0 // sRoar
  0235:36                push 
  0236:81 02              lag  
  0238:4a 06             send 6 


        code_023a
  023a:3a                toss 
  023b:48                 ret 
    )

)

// 02ba
(instance sRoar of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0276
  0276:87 01              lap param1 
  0278:65 0a             aTop state 
  027a:36                push 
  027b:3c                 dup 
  027c:35 00              ldi 0 
  027e:1a                 eq? 
  027f:30 000c            bnt code_028e 
  0282:7a               push2 
  0283:78               push1 
  0284:39 04            pushi 4 // $4 x
  0286:43 3c 04         callk Random 4 

  0289:65 12             aTop seconds 
  028b:32 0024            jmp code_02b2 

        code_028e
  028e:3c                 dup 
  028f:35 01              ldi 1 
  0291:1a                 eq? 
  0292:30 0011            bnt code_02a6 
  0295:39 2b            pushi 2b // $2b number
  0297:78               push1 
  0298:38 02e6          pushi 2e6 // $2e6 sel_742
  029b:39 2a            pushi 2a // $2a play
  029d:76               push0 
  029e:72 0884          lofsa $0884 // soundFX
  02a1:4a 0a             send a 

  02a3:32 000c            jmp code_02b2 

        code_02a6
  02a6:3c                 dup 
  02a7:35 02              ldi 2 
  02a9:1a                 eq? 
  02aa:30 0005            bnt code_02b2 
  02ad:39 6b            pushi 6b // $6b init
  02af:76               push0 
  02b0:54 04             self 4 


        code_02b2
  02b2:3a                toss 
  02b3:48                 ret 
    )

)

// 0370
(instance sFadeout of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_02ee
  02ee:87 01              lap param1 
  02f0:65 0a             aTop state 
  02f2:36                push 
  02f3:3c                 dup 
  02f4:35 00              ldi 0 
  02f6:1a                 eq? 
  02f7:30 0026            bnt code_0320 
  02fa:39 12            pushi 12 // $12 illegalBits
  02fc:78               push1 
  02fd:76               push0 
  02fe:38 00a2          pushi a2 // $a2 setLoop
  0301:78               push1 
  0302:78               push1 
  0303:38 0096          pushi 96 // $96 setCycle
  0306:78               push1 
  0307:51 17            class Fwd 
  0309:36                push 
  030a:38 011b          pushi 11b // $11b setMotion
  030d:39 04            pushi 4 // $4 x
  030f:51 1e            class MoveTo 
  0311:36                push 
  0312:38 0093          pushi 93 // $93 ticksToDo
  0315:39 4e            pushi 4e // $4e save
  0317:7c            pushSelf 
  0318:72 07fa          lofsa $07fa // larry
  031b:4a 1e             send 1e 

  031d:32 0048            jmp code_0368 

        code_0320
  0320:3c                 dup 
  0321:35 01              ldi 1 
  0323:1a                 eq? 
  0324:30 0016            bnt code_033d 
  0327:38 011b          pushi 11b // $11b setMotion
  032a:39 04            pushi 4 // $4 x
  032c:51 1e            class MoveTo 
  032e:36                push 
  032f:38 0083          pushi 83 // $83 timer
  0332:39 38            pushi 38 // $38 moveSpeed
  0334:7c            pushSelf 
  0335:72 07fa          lofsa $07fa // larry
  0338:4a 0c             send c 

  033a:32 002b            jmp code_0368 

        code_033d
  033d:3c                 dup 
  033e:35 02              ldi 2 
  0340:1a                 eq? 
  0341:30 0024            bnt code_0368 
  0344:38 009f          pushi 9f // $9f fade
  0347:39 04            pushi 4 // $4 x
  0349:39 50            pushi 50 // $50 title
  034b:39 0a            pushi a // $a nsLeft
  034d:3c                 dup 
  034e:76               push0 
  034f:81 66              lag  
  0351:4a 0c             send c 

  0353:81 19              lag  
  0355:30 0005            bnt code_035d 
  0358:39 6c            pushi 6c // $6c dispose
  035a:76               push0 
  035b:4a 04             send 4 


        code_035d
  035d:38 0179          pushi 179 // $179 newRoom
  0360:78               push1 
  0361:38 02ee          pushi 2ee // $2ee sel_750
  0364:81 02              lag  
  0366:4a 06             send 6 


        code_0368
  0368:3a                toss 
  0369:48                 ret 
    )

)

// 05b6
(instance bodyPart of Actor
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $903
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2e4
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doit) // method_0569
  0569:39 3c            pushi 3c // $3c doit
  056b:76               push0 
  056c:57 30 04         super Actor 4 

  056f:38 00c4          pushi c4 // $c4 onMe
  0572:78               push1 
  0573:38 0141          pushi 141 // $141 curEvent
  0576:76               push0 
  0577:51 31            class User 
  0579:4a 04             send 4 

  057b:36                push 
  057c:54 06             self 6 

  057e:30 000f            bnt code_0590 
  0581:7a               push2 
  0582:76               push0 
  0583:8b 05              lsl local5 
  0585:43 3c 04         callk Random 4 

  0588:18                 not 
  0589:30 0004            bnt code_0590 
  058c:35 01              ldi 1 
  058e:a3 01              sal local1 

        code_0590
  0590:e3 01              -al local1 
  0592:18                 not 
  0593:30 0019            bnt code_05af 
  0596:38 008a          pushi 8a // $8a script
  0599:76               push0 
  059a:81 02              lag  
  059c:4a 04             send 4 

  059e:36                push 
  059f:72 0376          lofsa $0376 // sFadeout
  05a2:1c                 ne? 
  05a3:30 0009            bnt code_05af 
  05a6:39 63            pushi 63 // $63 perform
  05a8:78               push1 
  05a9:72 06a2          lofsa $06a2 // findWhere
  05ac:36                push 
  05ad:54 06             self 6 


        code_05af
  05af:48                 ret 
    )

    (method (doVerb) // method_03a4
  03a4:8f 01              lsp param1 
  03a6:3c                 dup 
  03a7:35 02              ldi 2 
  03a9:1a                 eq? 
  03aa:30 0088            bnt code_0435 
  03ad:67 32             pTos cel 
  03af:3c                 dup 
  03b0:35 01              ldi 1 
  03b2:1a                 eq? 
  03b3:30 000c            bnt code_03c2 
  03b6:7a               push2 
  03b7:38 02e4          pushi 2e4 // $2e4 sel_740
  03ba:39 06            pushi 6 // $6 loop
  03bc:45 0e 04         callb procedure_000e 4 //  

  03bf:32 006f            jmp code_0431 

        code_03c2
  03c2:3c                 dup 
  03c3:35 00              ldi 0 
  03c5:1a                 eq? 
  03c6:30 000c            bnt code_03d5 
  03c9:7a               push2 
  03ca:38 02e4          pushi 2e4 // $2e4 sel_740
  03cd:39 06            pushi 6 // $6 loop
  03cf:45 0e 04         callb procedure_000e 4 //  

  03d2:32 005c            jmp code_0431 

        code_03d5
  03d5:3c                 dup 
  03d6:35 03              ldi 3 
  03d8:1a                 eq? 
  03d9:30 000c            bnt code_03e8 
  03dc:7a               push2 
  03dd:38 02e4          pushi 2e4 // $2e4 sel_740
  03e0:39 07            pushi 7 // $7 cel
  03e2:45 0e 04         callb procedure_000e 4 //  

  03e5:32 0049            jmp code_0431 

        code_03e8
  03e8:3c                 dup 
  03e9:35 02              ldi 2 
  03eb:1a                 eq? 
  03ec:30 000c            bnt code_03fb 
  03ef:7a               push2 
  03f0:38 02e4          pushi 2e4 // $2e4 sel_740
  03f3:39 07            pushi 7 // $7 cel
  03f5:45 0e 04         callb procedure_000e 4 //  

  03f8:32 0036            jmp code_0431 

        code_03fb
  03fb:3c                 dup 
  03fc:35 04              ldi 4 
  03fe:1a                 eq? 
  03ff:30 000c            bnt code_040e 
  0402:7a               push2 
  0403:38 02e4          pushi 2e4 // $2e4 sel_740
  0406:39 08            pushi 8 // $8 underBits
  0408:45 0e 04         callb procedure_000e 4 //  

  040b:32 0023            jmp code_0431 

        code_040e
  040e:3c                 dup 
  040f:35 05              ldi 5 
  0411:1a                 eq? 
  0412:30 000c            bnt code_0421 
  0415:7a               push2 
  0416:38 02e4          pushi 2e4 // $2e4 sel_740
  0419:39 09            pushi 9 // $9 nsTop
  041b:45 0e 04         callb procedure_000e 4 //  

  041e:32 0010            jmp code_0431 

        code_0421
  0421:3c                 dup 
  0422:35 06              ldi 6 
  0424:1a                 eq? 
  0425:30 0009            bnt code_0431 
  0428:7a               push2 
  0429:38 02e4          pushi 2e4 // $2e4 sel_740
  042c:39 0a            pushi a // $a nsLeft
  042e:45 0e 04         callb procedure_000e 4 //  


        code_0431
  0431:3a                toss 
  0432:32 0132            jmp code_0567 

        code_0435
  0435:3c                 dup 
  0436:35 03              ldi 3 
  0438:1a                 eq? 
  0439:30 0120            bnt code_055c 
  043c:38 008d          pushi 8d // $8d cue
  043f:78               push1 
  0440:78               push1 
  0441:72 07fa          lofsa $07fa // larry
  0444:4a 06             send 6 

  0446:39 63            pushi 63 // $63 perform
  0448:78               push1 
  0449:72 06a2          lofsa $06a2 // findWhere
  044c:36                push 
  044d:54 06             self 6 

  044f:67 32             pTos cel 
  0451:3c                 dup 
  0452:35 01              ldi 1 
  0454:1a                 eq? 
  0455:30 001f            bnt code_0477 
  0458:39 0a            pushi a // $a nsLeft
  045a:38 02e4          pushi 2e4 // $2e4 sel_740
  045d:39 0b            pushi b // $b nsBottom
  045f:39 43            pushi 43 // $43 at
  0461:39 ff            pushi ff // $ff syncNum
  0463:38 00b9          pushi b9 // $b9 bottom
  0466:39 50            pushi 50 // $50 title
  0468:72 0907          lofsa $0907 // The Audience
  046b:36                push 
  046c:39 1e            pushi 1e // $1e mode
  046e:78               push1 
  046f:39 6c            pushi 6c // $6c dispose
  0471:45 0e 14         callb procedure_000e 14 //  

  0474:32 00e1            jmp code_0558 

        code_0477
  0477:3c                 dup 
  0478:35 00              ldi 0 
  047a:1a                 eq? 
  047b:30 001f            bnt code_049d 
  047e:39 0a            pushi a // $a nsLeft
  0480:38 02e4          pushi 2e4 // $2e4 sel_740
  0483:39 0c            pushi c // $c nsRight
  0485:39 43            pushi 43 // $43 at
  0487:39 ff            pushi ff // $ff syncNum
  0489:38 00b9          pushi b9 // $b9 bottom
  048c:39 50            pushi 50 // $50 title
  048e:72 0907          lofsa $0907 // The Audience
  0491:36                push 
  0492:39 1e            pushi 1e // $1e mode
  0494:78               push1 
  0495:39 6c            pushi 6c // $6c dispose
  0497:45 0e 14         callb procedure_000e 14 //  

  049a:32 00bb            jmp code_0558 

        code_049d
  049d:3c                 dup 
  049e:35 03              ldi 3 
  04a0:1a                 eq? 
  04a1:30 001f            bnt code_04c3 
  04a4:39 0a            pushi a // $a nsLeft
  04a6:38 02e4          pushi 2e4 // $2e4 sel_740
  04a9:39 0d            pushi d // $d lsTop
  04ab:39 43            pushi 43 // $43 at
  04ad:39 ff            pushi ff // $ff syncNum
  04af:38 00b9          pushi b9 // $b9 bottom
  04b2:39 50            pushi 50 // $50 title
  04b4:72 0907          lofsa $0907 // The Audience
  04b7:36                push 
  04b8:39 1e            pushi 1e // $1e mode
  04ba:78               push1 
  04bb:39 6c            pushi 6c // $6c dispose
  04bd:45 0e 14         callb procedure_000e 14 //  

  04c0:32 0095            jmp code_0558 

        code_04c3
  04c3:3c                 dup 
  04c4:35 02              ldi 2 
  04c6:1a                 eq? 
  04c7:30 001f            bnt code_04e9 
  04ca:39 0a            pushi a // $a nsLeft
  04cc:38 02e4          pushi 2e4 // $2e4 sel_740
  04cf:39 0e            pushi e // $e lsLeft
  04d1:39 43            pushi 43 // $43 at
  04d3:39 ff            pushi ff // $ff syncNum
  04d5:38 00b9          pushi b9 // $b9 bottom
  04d8:39 50            pushi 50 // $50 title
  04da:72 0907          lofsa $0907 // The Audience
  04dd:36                push 
  04de:39 1e            pushi 1e // $1e mode
  04e0:78               push1 
  04e1:39 6c            pushi 6c // $6c dispose
  04e3:45 0e 14         callb procedure_000e 14 //  

  04e6:32 006f            jmp code_0558 

        code_04e9
  04e9:3c                 dup 
  04ea:35 04              ldi 4 
  04ec:1a                 eq? 
  04ed:30 001f            bnt code_050f 
  04f0:39 0a            pushi a // $a nsLeft
  04f2:38 02e4          pushi 2e4 // $2e4 sel_740
  04f5:39 0f            pushi f // $f lsBottom
  04f7:39 43            pushi 43 // $43 at
  04f9:39 ff            pushi ff // $ff syncNum
  04fb:38 00b9          pushi b9 // $b9 bottom
  04fe:39 50            pushi 50 // $50 title
  0500:72 0907          lofsa $0907 // The Audience
  0503:36                push 
  0504:39 1e            pushi 1e // $1e mode
  0506:78               push1 
  0507:39 6c            pushi 6c // $6c dispose
  0509:45 0e 14         callb procedure_000e 14 //  

  050c:32 0049            jmp code_0558 

        code_050f
  050f:3c                 dup 
  0510:35 05              ldi 5 
  0512:1a                 eq? 
  0513:30 001f            bnt code_0535 
  0516:39 0a            pushi a // $a nsLeft
  0518:38 02e4          pushi 2e4 // $2e4 sel_740
  051b:39 10            pushi 10 // $10 lsRight
  051d:39 43            pushi 43 // $43 at
  051f:39 ff            pushi ff // $ff syncNum
  0521:38 00b9          pushi b9 // $b9 bottom
  0524:39 50            pushi 50 // $50 title
  0526:72 0907          lofsa $0907 // The Audience
  0529:36                push 
  052a:39 1e            pushi 1e // $1e mode
  052c:78               push1 
  052d:39 6c            pushi 6c // $6c dispose
  052f:45 0e 14         callb procedure_000e 14 //  

  0532:32 0023            jmp code_0558 

        code_0535
  0535:3c                 dup 
  0536:35 06              ldi 6 
  0538:1a                 eq? 
  0539:30 001c            bnt code_0558 
  053c:39 0a            pushi a // $a nsLeft
  053e:38 02e4          pushi 2e4 // $2e4 sel_740
  0541:39 11            pushi 11 // $11 signal
  0543:39 43            pushi 43 // $43 at
  0545:39 ff            pushi ff // $ff syncNum
  0547:38 00b9          pushi b9 // $b9 bottom
  054a:39 50            pushi 50 // $50 title
  054c:72 0907          lofsa $0907 // The Audience
  054f:36                push 
  0550:39 1e            pushi 1e // $1e mode
  0552:78               push1 
  0553:39 6c            pushi 6c // $6c dispose
  0555:45 0e 14         callb procedure_000e 14 //  


        code_0558
  0558:3a                toss 
  0559:32 000b            jmp code_0567 

        code_055c
  055c:38 010c          pushi 10c // $10c doVerb
  055f:78               push1 
  0560:8f 01              lsp param1 
  0562:59 02            &rest 2 
  0564:57 30 06         super Actor 6 


        code_0567
  0567:3a                toss 
  0568:48                 ret 
    )

)

// 069c
(instance findWhere of Code
    (properties
    )
    (method (doit) // method_063a
  063a:3f 02             link 2 // (var $2)

        code_063c
  063c:39 03            pushi 3 // $3 y
  063e:39 04            pushi 4 // $4 x
  0640:7a               push2 
  0641:39 0a            pushi a // $a nsLeft
  0643:38 0136          pushi 136 // $136 horizon
  0646:43 3c 04         callk Random 4 

  0649:a5 00              sat temp0 
  064b:36                push 
  064c:7a               push2 
  064d:39 0a            pushi a // $a nsLeft
  064f:38 00aa          pushi aa // $aa setSize
  0652:43 3c 04         callk Random 4 

  0655:a5 01              sat temp1 
  0657:36                push 
  0658:43 4e 06         callk OnControl 6 

  065b:36                push 
  065c:35 02              ldi 2 
  065e:1a                 eq? 
  065f:30 0003            bnt code_0665 
  0662:32 ffd7            jmp code_063c 

        code_0665
  0665:38 0120          pushi 120 // $120 setCel
  0668:78               push1 
  0669:7a               push2 
  066a:76               push0 
  066b:39 06            pushi 6 // $6 loop
  066d:43 3c 04         callk Random 4 

  0670:36                push 
  0671:38 011c          pushi 11c // $11c posn
  0674:7a               push2 
  0675:8d 00              lst temp0 
  0677:8d 01              lst temp1 
  0679:87 01              lap param1 
  067b:4a 0e             send e 

  067d:7a               push2 
  067e:39 3c            pushi 3c // $3c doit
  0680:38 0168          pushi 168 // $168 shadWid
  0683:43 3c 04         callk Random 4 

  0686:a3 01              sal local1 
  0688:8b 05              lsl local5 
  068a:7a               push2 
  068b:39 05            pushi 5 // $5 view
  068d:39 1e            pushi 1e // $1e mode
  068f:43 3c 04         callk Random 4 

  0692:06                 mul 
  0693:a3 01              sal local1 
  0695:48                 ret 
    )

)

// 07f4
(instance larry of Actor
    (properties
        x $a0
        y $64
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $927
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $934
        yStep $2
        view $2e7
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4800
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (init) // method_06d8
  06d8:39 6b            pushi 6b // $6b init
  06da:76               push0 
  06db:57 30 04         super Actor 4 

  06de:38 0096          pushi 96 // $96 setCycle
  06e1:78               push1 
  06e2:51 1a            class End 
  06e4:36                push 
  06e5:54 06             self 6 

  06e7:48                 ret 
    )

    (method (doVerb) // method_06b6
  06b6:8f 01              lsp param1 
  06b8:3c                 dup 
  06b9:35 03              ldi 3 
  06bb:1a                 eq? 
  06bc:30 000c            bnt code_06cb 
  06bf:7a               push2 
  06c0:38 02e4          pushi 2e4 // $2e4 sel_740
  06c3:39 12            pushi 12 // $12 illegalBits
  06c5:45 0e 04         callb procedure_000e 4 //  

  06c8:32 000b            jmp code_06d6 

        code_06cb
  06cb:38 010c          pushi 10c // $10c doVerb
  06ce:7a               push2 
  06cf:8f 01              lsp param1 
  06d1:8f 02              lsp param2 
  06d3:57 30 08         super Actor 8 


        code_06d6
  06d6:3a                toss 
  06d7:48                 ret 
    )

    (method (cue) // method_06e8
  06e8:3f 03             link 3 // (var $3)
  06ea:8f 01              lsp param1 
  06ec:3c                 dup 
  06ed:35 00              ldi 0 
  06ef:1a                 eq? 
  06f0:30 000a            bnt code_06fd 
  06f3:38 0096          pushi 96 // $96 setCycle
  06f6:78               push1 
  06f7:76               push0 
  06f8:54 06             self 6 

  06fa:32 00ee            jmp code_07eb 

        code_06fd
  06fd:3c                 dup 
  06fe:35 01              ldi 1 
  0700:1a                 eq? 
  0701:30 00e7            bnt code_07eb 
  0704:8b 06              lsl local6 
  0706:35 09              ldi 9 
  0708:1e                 gt? 
  0709:30 0013            bnt code_071f 
  070c:76               push0 
  070d:45 02 00         callb procedure_0002 0 //  

  0710:38 008e          pushi 8e // $8e setScript
  0713:78               push1 
  0714:72 0376          lofsa $0376 // sFadeout
  0717:36                push 
  0718:81 02              lag  
  071a:4a 06             send 6 

  071c:32 00cc            jmp code_07eb 

        code_071f
  071f:39 2b            pushi 2b // $2b number
  0721:78               push1 
  0722:38 02f0          pushi 2f0 // $2f0 sel_752
  0725:8b 06              lsl local6 
  0727:35 02              ldi 2 
  0729:08                 div 
  072a:02                 add 
  072b:36                push 
  072c:39 2a            pushi 2a // $2a play
  072e:76               push0 
  072f:72 08ba          lofsa $08ba // patFX
  0732:4a 0a             send a 

  0734:c3 06              +al local6 
  0736:39 04            pushi 4 // $4 x
  0738:67 08             pTos x 
  073a:67 0a             pTos y 
  073c:38 0099          pushi 99 // $99 timeLeft
  073f:39 54            pushi 54 // $54 delete
  0741:43 3f 08         callk GetAngle 8 

  0744:a5 00              sat temp0 
  0746:36                push 
  0747:35 5a              ldi 5a 
  0749:22                 lt? 
  074a:30 001d            bnt code_076a 
  074d:67 08             pTos x 
  074f:7a               push2 
  0750:39 0a            pushi a // $a nsLeft
  0752:39 28            pushi 28 // $28 message
  0754:43 3c 04         callk Random 4 

  0757:02                 add 
  0758:a5 01              sat temp1 
  075a:67 0a             pTos y 
  075c:7a               push2 
  075d:39 0a            pushi a // $a nsLeft
  075f:39 28            pushi 28 // $28 message
  0761:43 3c 04         callk Random 4 

  0764:04                 sub 
  0765:a5 02              sat temp2 
  0767:32 0066            jmp code_07d0 

        code_076a
  076a:8d 00              lst temp0 
  076c:34 00b4            ldi b4 
  076f:22                 lt? 
  0770:30 001d            bnt code_0790 
  0773:67 08             pTos x 
  0775:7a               push2 
  0776:39 0a            pushi a // $a nsLeft
  0778:39 28            pushi 28 // $28 message
  077a:43 3c 04         callk Random 4 

  077d:02                 add 
  077e:a5 01              sat temp1 
  0780:67 0a             pTos y 
  0782:7a               push2 
  0783:39 0a            pushi a // $a nsLeft
  0785:39 28            pushi 28 // $28 message
  0787:43 3c 04         callk Random 4 

  078a:02                 add 
  078b:a5 02              sat temp2 
  078d:32 0040            jmp code_07d0 

        code_0790
  0790:8d 00              lst temp0 
  0792:34 010e            ldi 10e 
  0795:22                 lt? 
  0796:30 001d            bnt code_07b6 
  0799:67 08             pTos x 
  079b:7a               push2 
  079c:39 0a            pushi a // $a nsLeft
  079e:39 28            pushi 28 // $28 message
  07a0:43 3c 04         callk Random 4 

  07a3:04                 sub 
  07a4:a5 01              sat temp1 
  07a6:67 0a             pTos y 
  07a8:7a               push2 
  07a9:39 0a            pushi a // $a nsLeft
  07ab:39 28            pushi 28 // $28 message
  07ad:43 3c 04         callk Random 4 

  07b0:02                 add 
  07b1:a5 02              sat temp2 
  07b3:32 001a            jmp code_07d0 

        code_07b6
  07b6:67 08             pTos x 
  07b8:7a               push2 
  07b9:39 0a            pushi a // $a nsLeft
  07bb:39 28            pushi 28 // $28 message
  07bd:43 3c 04         callk Random 4 

  07c0:04                 sub 
  07c1:a5 01              sat temp1 
  07c3:67 0a             pTos y 
  07c5:7a               push2 
  07c6:39 0a            pushi a // $a nsLeft
  07c8:39 28            pushi 28 // $28 message
  07ca:43 3c 04         callk Random 4 

  07cd:04                 sub 
  07ce:a5 02              sat temp2 

        code_07d0
  07d0:38 00a2          pushi a2 // $a2 setLoop
  07d3:78               push1 
  07d4:76               push0 
  07d5:38 0096          pushi 96 // $96 setCycle
  07d8:78               push1 
  07d9:51 17            class Fwd 
  07db:36                push 
  07dc:38 011b          pushi 11b // $11b setMotion
  07df:39 04            pushi 4 // $4 x
  07e1:51 1e            class MoveTo 
  07e3:36                push 
  07e4:8d 01              lst temp1 
  07e6:8d 02              lst temp2 
  07e8:7c            pushSelf 
  07e9:54 18             self 18 


        code_07eb
  07eb:3a                toss 
  07ec:48                 ret 
  07ed:00                bnot 
    )

)

// 087e
(instance soundFX of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 08b4
(instance patFX of Sound
    (properties
        nodePtr $0
        handle $0
        flags $1
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)



