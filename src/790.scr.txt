(script 790)

(string
    string_0f38 "You are inside the only open shop along the entire boardwalk. You wonder why this place doesn't join in the celebration of Donald Tramp's birthday."
    string_0fcc "rm790"
    string_0fd2 "sIvanaEnters"
    string_0fdf "sFromSouth"
    string_0fea "sTalk"
    string_0ff0 "sCamcorder"
    string_0ffb "sRollerblades"
    string_1009 "Ivana Tramp"
    string_1015 "Ivana Tramp (known locally as \"Wheels, The Blademaster\") has plummeted several social levels since her divorce from The Donald."
    string_1095 "Ivana"
    string_109b "the skates"
    string_10a6 "From the many pairs of in-line skates on this rack, you feel safe in predicting that this store rents skates."
    string_1114 "skates"
    string_111b "the curtain"
    string_1127 "A beaded curtain blocks your view of the skate shop's back room."
    string_1168 "curtain"
    string_1170 "the poster"
    string_117b "You presume this poster advertises an amusement park for insects."
    string_11bd "poster1"
    string_11c5 "So that's what Ivana looked like when she was a redhead!"
    string_11fe "poster2"
    string_1206 "To demonstrate how good these skates are, the lady in the poster is eating one."
    string_1256 "poster3"
    string_125e "This poster advertises roller skate odor eaters."
    string_128f "poster4"
    string_1297 "\"Keep your in-line skates in line with the all new `Edlin,' from Ed's Skate Aligning Corp.\""
    string_12f3 "poster5"
    string_12fb "\"Better skating, no waiting.\""
    string_1319 "poster6"
    string_1321 "\"Nuclear Blades\" for those who want to go REALLY fast!"
    string_1358 "poster7"
    string_1360 "the light"
    string_136a "Ivana has thoughtfully replaced the standard 60-watt bulb with this new 250-watt halogen."
    string_13c4 "light"
    string_13ca "the counter"
    string_13d6 "Across this counter pass the world's sharpest `blades!'"
    string_140e "desk"
    string_1413 "the box"
    string_141b "A wooden crate resides incongruously in the center of the floor."
    string_145c "box"
    string_1460 "ivanaBust"
    string_146a "ivanaEyes"
    string_1474 "ivanaMouth"
    string_147f "sitActions"
)

(said
)

(local
    local0 = $0000
)

// 01e2
(instance publicrm790 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $f38
        picture $316
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $2f8
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 03            pushi 3 // $3 y
  0010:38 0080          pushi 80 // $80 indexOf
  0013:38 0700          pushi 700 // $700 sel_1792
  0016:38 0318          pushi 318 // $318 sel_792
  0019:46 03be 0000 06  calle 3be procedure_0000 6 //  

  001f:39 6b            pushi 6b // $6b init
  0021:76               push0 
  0022:38 020a          pushi 20a // $20a normalize
  0025:76               push0 
  0026:38 010b          pushi 10b // $10b actions
  0029:78               push1 
  002a:72 0f24          lofsa $0f24 // sitActions
  002d:36                push 
  002e:81 00              lag  
  0030:4a 0e             send e 

  0032:89 0c              lsg  
  0034:3c                 dup 
  0035:63 20             pToa south 
  0037:1a                 eq? 
  0038:30 001d            bnt code_0058 
  003b:76               push0 
  003c:45 02 00         callb procedure_0002 0 //  

  003f:39 04            pushi 4 // $4 x
  0041:78               push1 
  0042:38 00a0          pushi a0 // $a0 mute
  0045:81 00              lag  
  0047:4a 06             send 6 

  0049:38 008e          pushi 8e // $8e setScript
  004c:78               push1 
  004d:72 035a          lofsa $035a // sFromSouth
  0050:36                push 
  0051:81 02              lag  
  0053:4a 06             send 6 

  0055:32 0015            jmp code_006d 

        code_0058
  0058:76               push0 
  0059:45 03 00         callb procedure_0003 0 //  

  005c:38 011c          pushi 11c // $11c posn
  005f:7a               push2 
  0060:38 00a0          pushi a0 // $a0 mute
  0063:3c                 dup 
  0064:38 0146          pushi 146 // $146 edgeHit
  0067:78               push1 
  0068:76               push0 
  0069:81 00              lag  
  006b:4a 0e             send e 


        code_006d
  006d:3a                toss 
  006e:39 6b            pushi 6b // $6b init
  0070:76               push0 
  0071:57 72 04         super LLRoom 4 

  0074:39 2b            pushi 2b // $2b number
  0076:78               push1 
  0077:38 0316          pushi 316 // $316 sel_790
  007a:39 06            pushi 6 // $6 loop
  007c:78               push1 
  007d:39 ff            pushi ff // $ff syncNum
  007f:39 66            pushi 66 // $66 flags
  0081:78               push1 
  0082:78               push1 
  0083:39 2a            pushi 2a // $2a play
  0085:76               push0 
  0086:81 66              lag  
  0088:4a 16             send 16 

  008a:39 6b            pushi 6b // $6b init
  008c:76               push0 
  008d:72 09c4          lofsa $09c4 // skates
  0090:4a 04             send 4 

  0092:39 6b            pushi 6b // $6b init
  0094:76               push0 
  0095:38 011d          pushi 11d // $11d stopUpd
  0098:76               push0 
  0099:72 0a3a          lofsa $0a3a // curtain
  009c:4a 08             send 8 

  009e:39 6b            pushi 6b // $6b init
  00a0:76               push0 
  00a1:72 0aa8          lofsa $0aa8 // poster1
  00a4:4a 04             send 4 

  00a6:39 6b            pushi 6b // $6b init
  00a8:76               push0 
  00a9:72 0ae4          lofsa $0ae4 // poster2
  00ac:4a 04             send 4 

  00ae:39 6b            pushi 6b // $6b init
  00b0:76               push0 
  00b1:72 0b20          lofsa $0b20 // poster3
  00b4:4a 04             send 4 

  00b6:39 6b            pushi 6b // $6b init
  00b8:76               push0 
  00b9:72 0b5c          lofsa $0b5c // poster4
  00bc:4a 04             send 4 

  00be:39 6b            pushi 6b // $6b init
  00c0:76               push0 
  00c1:72 0b98          lofsa $0b98 // poster5
  00c4:4a 04             send 4 

  00c6:39 6b            pushi 6b // $6b init
  00c8:76               push0 
  00c9:72 0bd4          lofsa $0bd4 // poster6
  00cc:4a 04             send 4 

  00ce:39 6b            pushi 6b // $6b init
  00d0:76               push0 
  00d1:72 0c10          lofsa $0c10 // poster7
  00d4:4a 04             send 4 

  00d6:39 6b            pushi 6b // $6b init
  00d8:76               push0 
  00d9:72 0cec          lofsa $0cec // box
  00dc:4a 04             send 4 

  00de:39 6b            pushi 6b // $6b init
  00e0:76               push0 
  00e1:72 0c4c          lofsa $0c4c // light
  00e4:4a 04             send 4 

  00e6:39 6b            pushi 6b // $6b init
  00e8:76               push0 
  00e9:72 0c88          lofsa $0c88 // desk
  00ec:4a 04             send 4 

  00ee:38 0176          pushi 176 // $176 addObstacle
  00f1:7a               push2 
  00f2:39 22            pushi 22 // $22 type
  00f4:78               push1 
  00f5:7a               push2 
  00f6:39 6b            pushi 6b // $6b init
  00f8:39 14            pushi 14 // $14 brLeft
  00fa:76               push0 
  00fb:76               push0 
  00fc:38 013f          pushi 13f // $13f inputLineAddr
  00ff:76               push0 
  0100:38 013f          pushi 13f // $13f inputLineAddr
  0103:38 00bd          pushi bd // $bd maskView
  0106:38 00fa          pushi fa // $fa outOfTouch
  0109:38 00bd          pushi bd // $bd maskView
  010c:38 00fa          pushi fa // $fa outOfTouch
  010f:38 0089          pushi 89 // $89 register
  0112:38 00e0          pushi e0 // $e0 xLast
  0115:39 78            pushi 78 // $78 isEmpty
  0117:39 5b            pushi 5b // $5b palette
  0119:39 78            pushi 78 // $78 isEmpty
  011b:39 3f            pushi 3f // $3f priority
  011d:38 0097          pushi 97 // $97 setReal
  0120:39 3f            pushi 3f // $3f priority
  0122:38 00bd          pushi bd // $bd maskView
  0125:76               push0 
  0126:38 00bd          pushi bd // $bd maskView
  0129:39 72            pushi 72 // $72 yourself
  012b:76               push0 
  012c:39 6a            pushi 6a // $6a new
  012e:76               push0 
  012f:51 23            class Polygon 
  0131:4a 04             send 4 

  0133:4a 36             send 36 

  0135:36                push 
  0136:39 22            pushi 22 // $22 type
  0138:78               push1 
  0139:7a               push2 
  013a:39 6b            pushi 6b // $6b init
  013c:39 08            pushi 8 // $8 underBits
  013e:38 00b3          pushi b3 // $b3 theItem
  0141:38 0090          pushi 90 // $90 localize
  0144:38 00d9          pushi d9 // $d9 cycleDone
  0147:38 0090          pushi 90 // $90 localize
  014a:38 00ee          pushi ee // $ee bumpTurn
  014d:38 009d          pushi 9d // $9d pause
  0150:38 00c6          pushi c6 // $c6 swapCurIcon
  0153:38 009d          pushi 9d // $9d pause
  0156:39 72            pushi 72 // $72 yourself
  0158:76               push0 
  0159:39 6a            pushi 6a // $6a new
  015b:76               push0 
  015c:51 23            class Polygon 
  015e:4a 04             send 4 

  0160:4a 1e             send 1e 

  0162:36                push 
  0163:81 02              lag  
  0165:4a 08             send 8 

  0167:48                 ret 
    )

    (method (doit) // method_018a
  018a:39 3c            pushi 3c // $3c doit
  018c:76               push0 
  018d:57 72 04         super LLRoom 4 

  0190:63 08             pToa script 
  0192:30 0003            bnt code_0198 
  0195:32 0043            jmp code_01db 

        code_0198
  0198:7a               push2 
  0199:89 00              lsg  
  019b:7a               push2 
  019c:45 05 04         callb procedure_0005 4 //  

  019f:30 0039            bnt code_01db 
  01a2:39 77            pushi 77 // $77 contains
  01a4:78               push1 
  01a5:72 091a          lofsa $091a // Ivana
  01a8:36                push 
  01a9:81 05              lag  
  01ab:4a 06             send 6 

  01ad:18                 not 
  01ae:30 002a            bnt code_01db 
  01b1:76               push0 
  01b2:45 02 00         callb procedure_0002 0 //  

  01b5:39 6b            pushi 6b // $6b init
  01b7:76               push0 
  01b8:38 0119          pushi 119 // $119 approachVerbs
  01bb:39 03            pushi 3 // $3 y
  01bd:39 04            pushi 4 // $4 x
  01bf:39 05            pushi 5 // $5 view
  01c1:39 03            pushi 3 // $3 y
  01c3:38 0096          pushi 96 // $96 setCycle
  01c6:78               push1 
  01c7:51 18            class Walk 
  01c9:36                push 
  01ca:72 091a          lofsa $091a // Ivana
  01cd:4a 14             send 14 

  01cf:38 008e          pushi 8e // $8e setScript
  01d2:78               push1 
  01d3:72 02e6          lofsa $02e6 // sIvanaEnters
  01d6:36                push 
  01d7:81 02              lag  
  01d9:4a 06             send 6 


        code_01db
  01db:48                 ret 
    )

    (method (dispose) // method_0168
  0168:38 00d5          pushi d5 // $d5 has
  016b:78               push1 
  016c:39 12            pushi 12 // $12 illegalBits
  016e:81 00              lag  
  0170:4a 06             send 6 

  0172:30 0006            bnt code_017b 
  0175:78               push1 
  0176:39 06            pushi 6 // $6 loop
  0178:45 07 02         callb procedure_0007 2 //  


        code_017b
  017b:38 009f          pushi 9f // $9f fade
  017e:76               push0 
  017f:81 66              lag  
  0181:4a 04             send 4 

  0183:39 6c            pushi 6c // $6c dispose
  0185:76               push0 
  0186:57 72 04         super LLRoom 4 

  0189:48                 ret 
    )

)

// 02e0
(instance sIvanaEnters of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_022a
  022a:87 01              lap param1 
  022c:65 0a             aTop state 
  022e:36                push 
  022f:3c                 dup 
  0230:35 00              ldi 0 
  0232:1a                 eq? 
  0233:30 0015            bnt code_024b 
  0236:38 011b          pushi 11b // $11b setMotion
  0239:39 04            pushi 4 // $4 x
  023b:51 1e            class MoveTo 
  023d:36                push 
  023e:39 79            pushi 79 // $79 first
  0240:39 6b            pushi 6b // $6b init
  0242:7c            pushSelf 
  0243:72 091a          lofsa $091a // Ivana
  0246:4a 0c             send c 

  0248:32 008d            jmp code_02d8 

        code_024b
  024b:3c                 dup 
  024c:35 01              ldi 1 
  024e:1a                 eq? 
  024f:30 0025            bnt code_0277 
  0252:38 0096          pushi 96 // $96 setCycle
  0255:7a               push2 
  0256:51 1a            class End 
  0258:36                push 
  0259:72 0a3a          lofsa $0a3a // curtain
  025c:36                push 
  025d:72 0a3a          lofsa $0a3a // curtain
  0260:4a 08             send 8 

  0262:38 011b          pushi 11b // $11b setMotion
  0265:39 04            pushi 4 // $4 x
  0267:51 1e            class MoveTo 
  0269:36                push 
  026a:39 79            pushi 79 // $79 first
  026c:39 6f            pushi 6f // $6f isKindOf
  026e:7c            pushSelf 
  026f:72 091a          lofsa $091a // Ivana
  0272:4a 0c             send c 

  0274:32 0061            jmp code_02d8 

        code_0277
  0277:3c                 dup 
  0278:35 02              ldi 2 
  027a:1a                 eq? 
  027b:30 001b            bnt code_0299 
  027e:39 42            pushi 42 // $42 setPri
  0280:78               push1 
  0281:39 06            pushi 6 // $6 loop
  0283:38 011b          pushi 11b // $11b setMotion
  0286:39 04            pushi 4 // $4 x
  0288:51 1e            class MoveTo 
  028a:36                push 
  028b:38 0096          pushi 96 // $96 setCycle
  028e:39 6f            pushi 6f // $6f isKindOf
  0290:7c            pushSelf 
  0291:72 091a          lofsa $091a // Ivana
  0294:4a 12             send 12 

  0296:32 003f            jmp code_02d8 

        code_0299
  0299:3c                 dup 
  029a:35 03              ldi 3 
  029c:1a                 eq? 
  029d:30 0010            bnt code_02b0 
  02a0:38 00e4          pushi e4 // $e4 setHeading
  02a3:7a               push2 
  02a4:38 00b4          pushi b4 // $b4 busy
  02a7:7c            pushSelf 
  02a8:72 091a          lofsa $091a // Ivana
  02ab:4a 08             send 8 

  02ad:32 0028            jmp code_02d8 

        code_02b0
  02b0:3c                 dup 
  02b1:35 04              ldi 4 
  02b3:1a                 eq? 
  02b4:30 0021            bnt code_02d8 
  02b7:39 04            pushi 4 // $4 x
  02b9:72 0d48          lofsa $0d48 // Ivana
  02bc:36                push 
  02bd:38 0316          pushi 316 // $316 sel_790
  02c0:76               push0 
  02c1:39 6c            pushi 6c // $6c dispose
  02c3:45 12 08         callb procedure_0012 8 //  

  02c6:38 011d          pushi 11d // $11d stopUpd
  02c9:76               push0 
  02ca:72 091a          lofsa $091a // Ivana
  02cd:4a 04             send 4 

  02cf:76               push0 
  02d0:45 03 00         callb procedure_0003 0 //  

  02d3:39 6c            pushi 6c // $6c dispose
  02d5:76               push0 
  02d6:54 04             self 4 


        code_02d8
  02d8:3a                toss 
  02d9:48                 ret 
    )

)

// 0354
(instance sFromSouth of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0314
  0314:87 01              lap param1 
  0316:65 0a             aTop state 
  0318:36                push 
  0319:3c                 dup 
  031a:35 00              ldi 0 
  031c:1a                 eq? 
  031d:30 001c            bnt code_033c 
  0320:39 03            pushi 3 // $3 y
  0322:78               push1 
  0323:38 00fa          pushi fa // $fa outOfTouch
  0326:38 011b          pushi 11b // $11b setMotion
  0329:39 04            pushi 4 // $4 x
  032b:51 1e            class MoveTo 
  032d:36                push 
  032e:38 00a0          pushi a0 // $a0 mute
  0331:38 00b4          pushi b4 // $b4 busy
  0334:7c            pushSelf 
  0335:81 00              lag  
  0337:4a 12             send 12 

  0339:32 0010            jmp code_034c 

        code_033c
  033c:3c                 dup 
  033d:35 01              ldi 1 
  033f:1a                 eq? 
  0340:30 0009            bnt code_034c 
  0343:76               push0 
  0344:45 03 00         callb procedure_0003 0 //  

  0347:39 6c            pushi 6c // $6c dispose
  0349:76               push0 
  034a:54 04             self 4 


        code_034c
  034c:3a                toss 
  034d:48                 ret 
    )

)

// 043a
(instance sTalk of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0388
  0388:3f 51             link 51 // (var $51)
  038a:87 01              lap param1 
  038c:65 0a             aTop state 
  038e:36                push 
  038f:3c                 dup 
  0390:35 00              ldi 0 
  0392:1a                 eq? 
  0393:30 002c            bnt code_03c2 
  0396:35 01              ldi 1 
  0398:a3 00              sal local0 
  039a:39 06            pushi 6 // $6 loop
  039c:89 00              lsg  
  039e:38 0316          pushi 316 // $316 sel_790
  03a1:78               push1 
  03a2:39 43            pushi 43 // $43 at
  03a4:39 ff            pushi ff // $ff syncNum
  03a6:38 00b9          pushi b9 // $b9 bottom
  03a9:45 12 0c         callb procedure_0012 c //  

  03ac:39 06            pushi 6 // $6 loop
  03ae:72 0d48          lofsa $0d48 // Ivana
  03b1:36                push 
  03b2:38 0316          pushi 316 // $316 sel_790
  03b5:7a               push2 
  03b6:39 6c            pushi 6c // $6c dispose
  03b8:38 008b          pushi 8b // $8b caller
  03bb:7c            pushSelf 
  03bc:45 12 0c         callb procedure_0012 c //  

  03bf:32 006f            jmp code_0431 

        code_03c2
  03c2:3c                 dup 
  03c3:35 01              ldi 1 
  03c5:1a                 eq? 
  03c6:30 0027            bnt code_03f0 
  03c9:39 04            pushi 4 // $4 x
  03cb:5b 04 01           lea 4 1 
  03ce:36                push 
  03cf:38 0316          pushi 316 // $316 sel_790
  03d2:39 03            pushi 3 // $3 y
  03d4:38 00fa          pushi fa // $fa outOfTouch
  03d7:43 48 08         callk Format 8 

  03da:39 05            pushi 5 // $5 view
  03dc:72 0d48          lofsa $0d48 // Ivana
  03df:36                push 
  03e0:5b 04 01           lea 4 1 
  03e3:36                push 
  03e4:39 6c            pushi 6c // $6c dispose
  03e6:38 008b          pushi 8b // $8b caller
  03e9:7c            pushSelf 
  03ea:45 12 0a         callb procedure_0012 a //  

  03ed:32 0041            jmp code_0431 

        code_03f0
  03f0:3c                 dup 
  03f1:35 02              ldi 2 
  03f3:1a                 eq? 
  03f4:30 002a            bnt code_0421 
  03f7:39 06            pushi 6 // $6 loop
  03f9:89 00              lsg  
  03fb:38 0316          pushi 316 // $316 sel_790
  03fe:39 04            pushi 4 // $4 x
  0400:39 43            pushi 43 // $43 at
  0402:39 ff            pushi ff // $ff syncNum
  0404:38 00b9          pushi b9 // $b9 bottom
  0407:45 12 0c         callb procedure_0012 c //  

  040a:39 06            pushi 6 // $6 loop
  040c:72 0d48          lofsa $0d48 // Ivana
  040f:36                push 
  0410:38 0316          pushi 316 // $316 sel_790
  0413:39 05            pushi 5 // $5 view
  0415:39 6c            pushi 6c // $6c dispose
  0417:38 008b          pushi 8b // $8b caller
  041a:7c            pushSelf 
  041b:45 12 0c         callb procedure_0012 c //  

  041e:32 0010            jmp code_0431 

        code_0421
  0421:3c                 dup 
  0422:35 03              ldi 3 
  0424:1a                 eq? 
  0425:30 0009            bnt code_0431 
  0428:76               push0 
  0429:45 03 00         callb procedure_0003 0 //  

  042c:39 6c            pushi 6c // $6c dispose
  042e:76               push0 
  042f:54 04             self 4 


        code_0431
  0431:3a                toss 
  0432:48                 ret 
  0433:00                bnot 
    )

)

// 051a
(instance sCamcorder of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_046e
  046e:87 01              lap param1 
  0470:65 0a             aTop state 
  0472:36                push 
  0473:3c                 dup 
  0474:35 00              ldi 0 
  0476:1a                 eq? 
  0477:30 0046            bnt code_04c0 
  047a:39 06            pushi 6 // $6 loop
  047c:89 00              lsg  
  047e:38 0316          pushi 316 // $316 sel_790
  0481:39 06            pushi 6 // $6 loop
  0483:39 43            pushi 43 // $43 at
  0485:39 ff            pushi ff // $ff syncNum
  0487:38 00b9          pushi b9 // $b9 bottom
  048a:45 12 0c         callb procedure_0012 c //  

  048d:39 06            pushi 6 // $6 loop
  048f:89 00              lsg  
  0491:38 0316          pushi 316 // $316 sel_790
  0494:39 07            pushi 7 // $7 cel
  0496:39 43            pushi 43 // $43 at
  0498:39 ff            pushi ff // $ff syncNum
  049a:38 00b9          pushi b9 // $b9 bottom
  049d:45 12 0c         callb procedure_0012 c //  

  04a0:7a               push2 
  04a1:39 08            pushi 8 // $8 underBits
  04a3:38 008d          pushi 8d // $8d cue
  04a6:45 0a 04         callb procedure_000a 4 //  

  04a9:39 06            pushi 6 // $6 loop
  04ab:72 0d48          lofsa $0d48 // Ivana
  04ae:36                push 
  04af:38 0316          pushi 316 // $316 sel_790
  04b2:39 08            pushi 8 // $8 underBits
  04b4:39 6c            pushi 6c // $6c dispose
  04b6:38 008b          pushi 8b // $8b caller
  04b9:7c            pushSelf 
  04ba:45 12 0c         callb procedure_0012 c //  

  04bd:32 0052            jmp code_0512 

        code_04c0
  04c0:3c                 dup 
  04c1:35 01              ldi 1 
  04c3:1a                 eq? 
  04c4:30 004b            bnt code_0512 
  04c7:7a               push2 
  04c8:38 0316          pushi 316 // $316 sel_790
  04cb:39 09            pushi 9 // $9 nsTop
  04cd:45 0e 04         callb procedure_000e 4 //  

  04d0:38 0148          pushi 148 // $148 put
  04d3:7a               push2 
  04d4:76               push0 
  04d5:38 0316          pushi 316 // $316 sel_790
  04d8:38 0147          pushi 147 // $147 get
  04db:78               push1 
  04dc:39 12            pushi 12 // $12 illegalBits
  04de:81 00              lag  
  04e0:4a 0e             send e 

  04e2:76               push0 
  04e3:45 03 00         callb procedure_0003 0 //  

  04e6:38 00ce          pushi ce // $ce curIcon
  04e9:78               push1 
  04ea:39 43            pushi 43 // $43 at
  04ec:78               push1 
  04ed:76               push0 
  04ee:81 45              lag  
  04f0:4a 06             send 6 

  04f2:36                push 
  04f3:81 45              lag  
  04f5:4a 06             send 6 

  04f7:38 00bb          pushi bb // $bb setCursor
  04fa:78               push1 
  04fb:39 24            pushi 24 // $24 cursor
  04fd:76               push0 
  04fe:38 00ce          pushi ce // $ce curIcon
  0501:76               push0 
  0502:81 45              lag  
  0504:4a 04             send 4 

  0506:4a 04             send 4 

  0508:36                push 
  0509:81 01              lag  
  050b:4a 06             send 6 

  050d:39 6c            pushi 6c // $6c dispose
  050f:76               push0 
  0510:54 04             self 4 


        code_0512
  0512:3a                toss 
  0513:48                 ret 
    )

)

// 0644
(instance sRollerblades of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_054e
  054e:3f 51             link 51 // (var $51)
  0550:87 01              lap param1 
  0552:65 0a             aTop state 
  0554:36                push 
  0555:3c                 dup 
  0556:35 00              ldi 0 
  0558:1a                 eq? 
  0559:30 002a            bnt code_0586 
  055c:39 06            pushi 6 // $6 loop
  055e:89 00              lsg  
  0560:38 0316          pushi 316 // $316 sel_790
  0563:39 0a            pushi a // $a nsLeft
  0565:39 43            pushi 43 // $43 at
  0567:39 ff            pushi ff // $ff syncNum
  0569:38 00b9          pushi b9 // $b9 bottom
  056c:45 12 0c         callb procedure_0012 c //  

  056f:39 06            pushi 6 // $6 loop
  0571:72 0d48          lofsa $0d48 // Ivana
  0574:36                push 
  0575:38 0316          pushi 316 // $316 sel_790
  0578:39 0b            pushi b // $b nsBottom
  057a:39 6c            pushi 6c // $6c dispose
  057c:38 008b          pushi 8b // $8b caller
  057f:7c            pushSelf 
  0580:45 12 0c         callb procedure_0012 c //  

  0583:32 00b5            jmp code_063b 

        code_0586
  0586:3c                 dup 
  0587:35 01              ldi 1 
  0589:1a                 eq? 
  058a:30 00ae            bnt code_063b 
  058d:7a               push2 
  058e:39 03            pushi 3 // $3 y
  0590:38 008e          pushi 8e // $8e setScript
  0593:45 0a 04         callb procedure_000a 4 //  

  0596:38 00d5          pushi d5 // $d5 has
  0599:78               push1 
  059a:76               push0 
  059b:81 00              lag  
  059d:4a 06             send 6 

  059f:30 0049            bnt code_05eb 
  05a2:7a               push2 
  05a3:39 64            pushi 64 // $64 moveDone
  05a5:38 00f0          pushi f0 // $f0 thisTurn
  05a8:43 3c 04         callk Random 4 

  05ab:a5 00              sat temp0 
  05ad:39 04            pushi 4 // $4 x
  05af:5b 04 01           lea 4 1 
  05b2:36                push 
  05b3:38 0316          pushi 316 // $316 sel_790
  05b6:39 0c            pushi c // $c nsRight
  05b8:8d 00              lst temp0 
  05ba:43 48 08         callk Format 8 

  05bd:39 03            pushi 3 // $3 y
  05bf:72 0d48          lofsa $0d48 // Ivana
  05c2:36                push 
  05c3:5b 04 01           lea 4 1 
  05c6:36                push 
  05c7:39 6c            pushi 6c // $6c dispose
  05c9:45 12 06         callb procedure_0012 6 //  

  05cc:38 0148          pushi 148 // $148 put
  05cf:7a               push2 
  05d0:39 12            pushi 12 // $12 illegalBits
  05d2:76               push0 
  05d3:38 0147          pushi 147 // $147 get
  05d6:78               push1 
  05d7:39 11            pushi 11 // $11 signal
  05d9:81 00              lag  
  05db:4a 0e             send e 

  05dd:89 99              lsg  
  05df:38 00fa          pushi fa // $fa outOfTouch
  05e2:85 00              lat temp0 
  05e4:04                 sub 
  05e5:02                 add 
  05e6:a1 99              sag  
  05e8:32 0020            jmp code_060b 

        code_05eb
  05eb:39 04            pushi 4 // $4 x
  05ed:72 0d48          lofsa $0d48 // Ivana
  05f0:36                push 
  05f1:38 0316          pushi 316 // $316 sel_790
  05f4:39 0d            pushi d // $d lsTop
  05f6:39 6c            pushi 6c // $6c dispose
  05f8:45 12 08         callb procedure_0012 8 //  

  05fb:38 0148          pushi 148 // $148 put
  05fe:7a               push2 
  05ff:39 12            pushi 12 // $12 illegalBits
  0601:76               push0 
  0602:38 0147          pushi 147 // $147 get
  0605:78               push1 
  0606:76               push0 
  0607:81 00              lag  
  0609:4a 0e             send e 


        code_060b
  060b:76               push0 
  060c:45 03 00         callb procedure_0003 0 //  

  060f:38 00ce          pushi ce // $ce curIcon
  0612:78               push1 
  0613:39 43            pushi 43 // $43 at
  0615:78               push1 
  0616:76               push0 
  0617:81 45              lag  
  0619:4a 06             send 6 

  061b:36                push 
  061c:81 45              lag  
  061e:4a 06             send 6 

  0620:38 00bb          pushi bb // $bb setCursor
  0623:78               push1 
  0624:39 24            pushi 24 // $24 cursor
  0626:76               push0 
  0627:38 00ce          pushi ce // $ce curIcon
  062a:76               push0 
  062b:81 45              lag  
  062d:4a 04             send 4 

  062f:4a 04             send 4 

  0631:36                push 
  0632:81 01              lag  
  0634:4a 06             send 6 

  0636:39 6c            pushi 6c // $6c dispose
  0638:76               push0 
  0639:54 04             self 4 


        code_063b
  063b:3a                toss 
  063c:48                 ret 
  063d:00                bnot 
    )

)

// 0914
(instance Ivana of Actor
    (properties
        x $93
        y $6b
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $1009
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $82
        approachY $78
        approachDist $0
        _approachVerbs $6789
        lookStr $1015
        yStep $2
        view $318
        loop $0
        cel $0
        priority $3
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0678
  0678:3f 51             link 51 // (var $51)
  067a:8f 01              lsp param1 
  067c:3c                 dup 
  067d:35 03              ldi 3 
  067f:1a                 eq? 
  0680:30 000c            bnt code_068f 
  0683:7a               push2 
  0684:38 0316          pushi 316 // $316 sel_790
  0687:39 0e            pushi e // $e lsLeft
  0689:45 0e 04         callb procedure_000e 4 //  

  068c:32 027c            jmp code_090b 

        code_068f
  068f:3c                 dup 
  0690:35 0a              ldi a 
  0692:1a                 eq? 
  0693:30 000c            bnt code_06a2 
  0696:7a               push2 
  0697:38 0316          pushi 316 // $316 sel_790
  069a:39 0f            pushi f // $f lsBottom
  069c:45 0e 04         callb procedure_000e 4 //  

  069f:32 0269            jmp code_090b 

        code_06a2
  06a2:3c                 dup 
  06a3:35 05              ldi 5 
  06a5:1a                 eq? 
  06a6:30 0084            bnt code_072d 
  06a9:38 00d5          pushi d5 // $d5 has
  06ac:78               push1 
  06ad:39 12            pushi 12 // $12 illegalBits
  06af:81 00              lag  
  06b1:4a 06             send 6 

  06b3:30 002f            bnt code_06e5 
  06b6:78               push1 
  06b7:39 06            pushi 6 // $6 loop
  06b9:45 06 02         callb procedure_0006 2 //  

  06bc:30 0013            bnt code_06d2 
  06bf:39 04            pushi 4 // $4 x
  06c1:72 0d48          lofsa $0d48 // Ivana
  06c4:36                push 
  06c5:38 0316          pushi 316 // $316 sel_790
  06c8:39 10            pushi 10 // $10 lsRight
  06ca:39 6c            pushi 6c // $6c dispose
  06cc:45 12 08         callb procedure_0012 8 //  

  06cf:32 0239            jmp code_090b 

        code_06d2
  06d2:39 04            pushi 4 // $4 x
  06d4:72 0d48          lofsa $0d48 // Ivana
  06d7:36                push 
  06d8:38 0316          pushi 316 // $316 sel_790
  06db:39 11            pushi 11 // $11 signal
  06dd:39 6c            pushi 6c // $6c dispose
  06df:45 12 08         callb procedure_0012 8 //  

  06e2:32 0226            jmp code_090b 

        code_06e5
  06e5:78               push1 
  06e6:39 06            pushi 6 // $6 loop
  06e8:45 06 02         callb procedure_0006 2 //  

  06eb:30 0013            bnt code_0701 
  06ee:39 04            pushi 4 // $4 x
  06f0:72 0d48          lofsa $0d48 // Ivana
  06f3:36                push 
  06f4:38 0316          pushi 316 // $316 sel_790
  06f7:39 12            pushi 12 // $12 illegalBits
  06f9:39 6c            pushi 6c // $6c dispose
  06fb:45 12 08         callb procedure_0012 8 //  

  06fe:32 020a            jmp code_090b 

        code_0701
  0701:83 00              lal local0 
  0703:18                 not 
  0704:30 0013            bnt code_071a 
  0707:76               push0 
  0708:45 02 00         callb procedure_0002 0 //  

  070b:38 008e          pushi 8e // $8e setScript
  070e:78               push1 
  070f:72 0440          lofsa $0440 // sTalk
  0712:36                push 
  0713:81 02              lag  
  0715:4a 06             send 6 

  0717:32 01f1            jmp code_090b 

        code_071a
  071a:39 04            pushi 4 // $4 x
  071c:72 0d48          lofsa $0d48 // Ivana
  071f:36                push 
  0720:38 0316          pushi 316 // $316 sel_790
  0723:39 13            pushi 13 // $13 brTop
  0725:39 6c            pushi 6c // $6c dispose
  0727:45 12 08         callb procedure_0012 8 //  

  072a:32 01de            jmp code_090b 

        code_072d
  072d:3c                 dup 
  072e:35 04              ldi 4 
  0730:1a                 eq? 
  0731:30 01ca            bnt code_08fe 
  0734:8f 02              lsp param2 
  0736:3c                 dup 
  0737:35 11              ldi 11 
  0739:1a                 eq? 
  073a:30 0124            bnt code_0861 
  073d:38 00d5          pushi d5 // $d5 has
  0740:78               push1 
  0741:39 12            pushi 12 // $12 illegalBits
  0743:81 00              lag  
  0745:4a 06             send 6 

  0747:30 001d            bnt code_0767 
  074a:78               push1 
  074b:39 06            pushi 6 // $6 loop
  074d:45 06 02         callb procedure_0006 2 //  

  0750:18                 not 
  0751:30 0013            bnt code_0767 
  0754:39 04            pushi 4 // $4 x
  0756:72 0d48          lofsa $0d48 // Ivana
  0759:36                push 
  075a:38 0316          pushi 316 // $316 sel_790
  075d:39 14            pushi 14 // $14 brLeft
  075f:39 6c            pushi 6c // $6c dispose
  0761:45 12 08         callb procedure_0012 8 //  

  0764:32 0193            jmp code_08fa 

        code_0767
  0767:78               push1 
  0768:39 06            pushi 6 // $6 loop
  076a:45 06 02         callb procedure_0006 2 //  

  076d:30 0013            bnt code_0783 
  0770:39 04            pushi 4 // $4 x
  0772:72 0d48          lofsa $0d48 // Ivana
  0775:36                push 
  0776:38 0316          pushi 316 // $316 sel_790
  0779:39 15            pushi 15 // $15 brBottom
  077b:39 6c            pushi 6c // $6c dispose
  077d:45 12 08         callb procedure_0012 8 //  

  0780:32 0177            jmp code_08fa 

        code_0783
  0783:83 00              lal local0 
  0785:18                 not 
  0786:30 0013            bnt code_079c 
  0789:76               push0 
  078a:45 02 00         callb procedure_0002 0 //  

  078d:38 008e          pushi 8e // $8e setScript
  0790:78               push1 
  0791:72 0440          lofsa $0440 // sTalk
  0794:36                push 
  0795:81 02              lag  
  0797:4a 06             send 6 

  0799:32 015e            jmp code_08fa 

        code_079c
  079c:89 99              lsg  
  079e:34 00fa            ldi fa 
  07a1:22                 lt? 
  07a2:30 0035            bnt code_07da 
  07a5:39 04            pushi 4 // $4 x
  07a7:5b 04 01           lea 4 1 
  07aa:36                push 
  07ab:38 0316          pushi 316 // $316 sel_790
  07ae:39 16            pushi 16 // $16 brRight
  07b0:89 99              lsg  
  07b2:43 48 08         callk Format 8 

  07b5:39 05            pushi 5 // $5 view
  07b7:89 00              lsg  
  07b9:5b 04 01           lea 4 1 
  07bc:36                push 
  07bd:39 43            pushi 43 // $43 at
  07bf:39 ff            pushi ff // $ff syncNum
  07c1:38 00b9          pushi b9 // $b9 bottom
  07c4:45 12 0a         callb procedure_0012 a //  

  07c7:39 04            pushi 4 // $4 x
  07c9:72 0d48          lofsa $0d48 // Ivana
  07cc:36                push 
  07cd:38 0316          pushi 316 // $316 sel_790
  07d0:39 17            pushi 17 // $17 name
  07d2:39 6c            pushi 6c // $6c dispose
  07d4:45 12 08         callb procedure_0012 8 //  

  07d7:32 0120            jmp code_08fa 

        code_07da
  07da:39 04            pushi 4 // $4 x
  07dc:5b 04 01           lea 4 1 
  07df:36                push 
  07e0:38 0316          pushi 316 // $316 sel_790
  07e3:39 18            pushi 18 // $18 key
  07e5:38 00fa          pushi fa // $fa outOfTouch
  07e8:43 48 08         callk Format 8 

  07eb:39 05            pushi 5 // $5 view
  07ed:89 00              lsg  
  07ef:5b 04 01           lea 4 1 
  07f2:36                push 
  07f3:39 43            pushi 43 // $43 at
  07f5:39 ff            pushi ff // $ff syncNum
  07f7:38 00b9          pushi b9 // $b9 bottom
  07fa:45 12 0a         callb procedure_0012 a //  

  07fd:7a               push2 
  07fe:39 04            pushi 4 // $4 x
  0800:38 008f          pushi 8f // $8f port
  0803:45 0a 04         callb procedure_000a 4 //  

  0806:39 04            pushi 4 // $4 x
  0808:72 0d48          lofsa $0d48 // Ivana
  080b:36                push 
  080c:38 0316          pushi 316 // $316 sel_790
  080f:39 19            pushi 19 // $19 time
  0811:39 6c            pushi 6c // $6c dispose
  0813:45 12 08         callb procedure_0012 8 //  

  0816:89 99              lsg  
  0818:34 00fa            ldi fa 
  081b:04                 sub 
  081c:a1 99              sag  
  081e:18                 not 
  081f:30 000b            bnt code_082d 
  0822:38 0148          pushi 148 // $148 put
  0825:7a               push2 
  0826:39 11            pushi 11 // $11 signal
  0828:76               push0 
  0829:81 00              lag  
  082b:4a 08             send 8 


        code_082d
  082d:38 0147          pushi 147 // $147 get
  0830:78               push1 
  0831:39 12            pushi 12 // $12 illegalBits
  0833:81 00              lag  
  0835:4a 06             send 6 

  0837:38 00ce          pushi ce // $ce curIcon
  083a:78               push1 
  083b:39 43            pushi 43 // $43 at
  083d:78               push1 
  083e:76               push0 
  083f:81 45              lag  
  0841:4a 06             send 6 

  0843:36                push 
  0844:81 45              lag  
  0846:4a 06             send 6 

  0848:38 00bb          pushi bb // $bb setCursor
  084b:78               push1 
  084c:39 24            pushi 24 // $24 cursor
  084e:76               push0 
  084f:38 00ce          pushi ce // $ce curIcon
  0852:76               push0 
  0853:81 45              lag  
  0855:4a 04             send 4 

  0857:4a 04             send 4 

  0859:36                push 
  085a:81 01              lag  
  085c:4a 06             send 6 

  085e:32 0099            jmp code_08fa 

        code_0861
  0861:3c                 dup 
  0862:35 00              ldi 0 
  0864:1a                 eq? 
  0865:30 004f            bnt code_08b7 
  0868:78               push1 
  0869:39 06            pushi 6 // $6 loop
  086b:45 06 02         callb procedure_0006 2 //  

  086e:30 0013            bnt code_0884 
  0871:39 04            pushi 4 // $4 x
  0873:72 0d48          lofsa $0d48 // Ivana
  0876:36                push 
  0877:38 0316          pushi 316 // $316 sel_790
  087a:39 1a            pushi 1a // $1a text
  087c:39 6c            pushi 6c // $6c dispose
  087e:45 12 08         callb procedure_0012 8 //  

  0881:32 0076            jmp code_08fa 

        code_0884
  0884:38 00d5          pushi d5 // $d5 has
  0887:78               push1 
  0888:39 12            pushi 12 // $12 illegalBits
  088a:81 00              lag  
  088c:4a 06             send 6 

  088e:30 0013            bnt code_08a4 
  0891:39 04            pushi 4 // $4 x
  0893:72 0d48          lofsa $0d48 // Ivana
  0896:36                push 
  0897:38 0316          pushi 316 // $316 sel_790
  089a:39 1b            pushi 1b // $1b elements
  089c:39 6c            pushi 6c // $6c dispose
  089e:45 12 08         callb procedure_0012 8 //  

  08a1:32 0056            jmp code_08fa 

        code_08a4
  08a4:76               push0 
  08a5:45 02 00         callb procedure_0002 0 //  

  08a8:38 008e          pushi 8e // $8e setScript
  08ab:78               push1 
  08ac:72 0520          lofsa $0520 // sCamcorder
  08af:36                push 
  08b0:81 02              lag  
  08b2:4a 06             send 6 

  08b4:32 0043            jmp code_08fa 

        code_08b7
  08b7:3c                 dup 
  08b8:35 12              ldi 12 
  08ba:1a                 eq? 
  08bb:30 002f            bnt code_08ed 
  08be:78               push1 
  08bf:39 06            pushi 6 // $6 loop
  08c1:45 06 02         callb procedure_0006 2 //  

  08c4:30 0013            bnt code_08da 
  08c7:76               push0 
  08c8:45 02 00         callb procedure_0002 0 //  

  08cb:38 008e          pushi 8e // $8e setScript
  08ce:78               push1 
  08cf:72 064a          lofsa $064a // sRollerblades
  08d2:36                push 
  08d3:81 02              lag  
  08d5:4a 06             send 6 

  08d7:32 0020            jmp code_08fa 

        code_08da
  08da:39 04            pushi 4 // $4 x
  08dc:72 0d48          lofsa $0d48 // Ivana
  08df:36                push 
  08e0:38 0316          pushi 316 // $316 sel_790
  08e3:39 1c            pushi 1c // $1c color
  08e5:39 6c            pushi 6c // $6c dispose
  08e7:45 12 08         callb procedure_0012 8 //  

  08ea:32 000d            jmp code_08fa 

        code_08ed
  08ed:38 010c          pushi 10c // $10c doVerb
  08f0:7a               push2 
  08f1:8f 01              lsp param1 
  08f3:8f 02              lsp param2 
  08f5:59 03            &rest 3 
  08f7:57 30 08         super Actor 8 


        code_08fa
  08fa:3a                toss 
  08fb:32 000d            jmp code_090b 

        code_08fe
  08fe:38 010c          pushi 10c // $10c doVerb
  0901:7a               push2 
  0902:8f 01              lsp param1 
  0904:8f 02              lsp param2 
  0906:59 03            &rest 3 
  0908:57 30 08         super Actor 8 


        code_090b
  090b:3a                toss 
  090c:48                 ret 
  090d:00                bnot 
    )

)

// 09be
(instance skates of Feature
    (properties
        x $b1
        y $45
        z $0
        heading $0
        noun $0
        nsTop $31
        nsLeft $94
        nsBottom $5a
        nsRight $ce
        description $109b
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $10a6
    )
    (method (doVerb) // method_0994
  0994:8f 01              lsp param1 
  0996:3c                 dup 
  0997:35 03              ldi 3 
  0999:1a                 eq? 
  099a:30 000c            bnt code_09a9 
  099d:7a               push2 
  099e:38 0316          pushi 316 // $316 sel_790
  09a1:39 1d            pushi 1d // $1d back
  09a3:45 0e 04         callb procedure_000e 4 //  

  09a6:32 000d            jmp code_09b6 

        code_09a9
  09a9:38 010c          pushi 10c // $10c doVerb
  09ac:7a               push2 
  09ad:8f 01              lsp param1 
  09af:8f 02              lsp param2 
  09b1:59 03            &rest 3 
  09b3:57 2c 08         super Feature 8 


        code_09b6
  09b6:3a                toss 
  09b7:48                 ret 
    )

)

// 0a34
(instance curtain of Prop
    (properties
        x $7b
        y $5e
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $111b
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1127
        yStep $2
        view $316
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doVerb) // method_0a0a
  0a0a:8f 01              lsp param1 
  0a0c:3c                 dup 
  0a0d:35 03              ldi 3 
  0a0f:1a                 eq? 
  0a10:30 000c            bnt code_0a1f 
  0a13:7a               push2 
  0a14:38 0316          pushi 316 // $316 sel_790
  0a17:39 1e            pushi 1e // $1e mode
  0a19:45 0e 04         callb procedure_000e 4 //  

  0a1c:32 000d            jmp code_0a2c 

        code_0a1f
  0a1f:38 010c          pushi 10c // $10c doVerb
  0a22:7a               push2 
  0a23:8f 01              lsp param1 
  0a25:8f 02              lsp param2 
  0a27:59 03            &rest 3 
  0a29:57 2f 08         super Prop 8 


        code_0a2c
  0a2c:3a                toss 
  0a2d:48                 ret 
    )

    (method (cue) // method_09fc
  09fc:38 008d          pushi 8d // $8d cue
  09ff:76               push0 
  0a00:57 2f 04         super Prop 4 

  0a03:38 011d          pushi 11d // $11d stopUpd
  0a06:76               push0 
  0a07:54 04             self 4 

  0a09:48                 ret 
    )

)

// 0aa2
(instance poster1 of Feature
    (properties
        x $40
        y $2a
        z $0
        heading $0
        noun $0
        nsTop $1f
        nsLeft $36
        nsBottom $36
        nsRight $4b
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $117b
    )
)

// 0ade
(instance poster2 of Feature
    (properties
        x $4c
        y $4b
        z $0
        heading $0
        noun $0
        nsTop $33
        nsLeft $3e
        nsBottom $64
        nsRight $5a
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $11c5
    )
)

// 0b1a
(instance poster3 of Feature
    (properties
        x $3d
        y $71
        z $0
        heading $0
        noun $0
        nsTop $60
        nsLeft $32
        nsBottom $83
        nsRight $49
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1206
    )
)

// 0b56
(instance poster4 of Feature
    (properties
        x $e6
        y $4b
        z $0
        heading $0
        noun $0
        nsTop $2c
        nsLeft $dd
        nsBottom $52
        nsRight $f0
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $125e
    )
)

// 0b92
(instance poster5 of Feature
    (properties
        x $ee
        y $2c
        z $0
        heading $0
        noun $0
        nsTop $42
        nsLeft $e1
        nsBottom $67
        nsRight $fc
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1297
    )
)

// 0bce
(instance poster6 of Feature
    (properties
        x $fd
        y $25
        z $0
        heading $0
        noun $0
        nsTop $19
        nsLeft $f6
        nsBottom $32
        nsRight $105
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $12fb
    )
)

// 0c0a
(instance poster7 of Feature
    (properties
        x $fa
        y $6a
        z $0
        heading $0
        noun $0
        nsTop $5c
        nsLeft $f1
        nsBottom $79
        nsRight $103
        description $1170
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1321
    )
)

// 0c46
(instance light of Feature
    (properties
        x $a5
        y $25
        z $0
        heading $0
        noun $0
        nsTop $1e
        nsLeft $93
        nsBottom $2c
        nsRight $b8
        description $1360
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $136a
    )
)

// 0c82
(instance desk of Feature
    (properties
        x $9e
        y $69
        z $0
        heading $0
        noun $0
        nsTop $5b
        nsLeft $5a
        nsBottom $78
        nsRight $e3
        description $13ca
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $13d6
    )
)

// 0ce6
(instance box of Feature
    (properties
        x $cd
        y $90
        z $0
        heading $0
        noun $0
        nsTop $85
        nsLeft $bc
        nsBottom $9c
        nsRight $df
        description $1413
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $141b
    )
    (method (doVerb) // method_0cbc
  0cbc:8f 01              lsp param1 
  0cbe:3c                 dup 
  0cbf:35 03              ldi 3 
  0cc1:1a                 eq? 
  0cc2:30 000c            bnt code_0cd1 
  0cc5:7a               push2 
  0cc6:38 0316          pushi 316 // $316 sel_790
  0cc9:39 1f            pushi 1f // $1f style
  0ccb:45 0e 04         callb procedure_000e 4 //  

  0cce:32 000d            jmp code_0cde 

        code_0cd1
  0cd1:38 010c          pushi 10c // $10c doVerb
  0cd4:7a               push2 
  0cd5:8f 01              lsp param1 
  0cd7:8f 02              lsp param2 
  0cd9:59 03            &rest 3 
  0cdb:57 2c 08         super Feature 8 


        code_0cde
  0cde:3a                toss 
  0cdf:48                 ret 
    )

)

// 0d42
(instance Ivana of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $f
        nsLeft $14
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $700
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_0d24
  0d24:72 0dc4          lofsa $0dc4 // ivanaBust
  0d27:65 56             aTop bust 
  0d29:72 0e2a          lofsa $0e2a // ivanaEyes
  0d2c:65 58             aTop eyes 
  0d2e:72 0e90          lofsa $0e90 // ivanaMouth
  0d31:65 5a             aTop mouth 
  0d33:39 6b            pushi 6b // $6b init
  0d35:76               push0 
  0d36:59 01            &rest 1 
  0d38:57 6f 04         super Talker 4 

  0d3b:48                 ret 
    )

)

// 0dbe
(instance ivanaBust of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $700
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0e24
(instance ivanaEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $29
        nsLeft $18
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $700
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $1e
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0e8a
(instance ivanaMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $29
        nsLeft $18
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $700
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $8
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0f1e
(instance sitActions of Actions
    (properties
    )
    (method (doVerb) // method_0eee
  0eee:8f 01              lsp param1 
  0ef0:3c                 dup 
  0ef1:35 04              ldi 4 
  0ef3:1a                 eq? 
  0ef4:30 001c            bnt code_0f13 
  0ef7:8f 02              lsp param2 
  0ef9:3c                 dup 
  0efa:35 12              ldi 12 
  0efc:1a                 eq? 
  0efd:30 000c            bnt code_0f0c 
  0f00:7a               push2 
  0f01:38 0316          pushi 316 // $316 sel_790
  0f04:39 20            pushi 20 // $20 state
  0f06:45 0e 04         callb procedure_000e 4 //  

  0f09:32 0003            jmp code_0f0f 

        code_0f0c
  0f0c:35 00              ldi 0 
  0f0e:48                 ret 

        code_0f0f
  0f0f:3a                toss 
  0f10:32 0003            jmp code_0f16 

        code_0f13
  0f13:35 00              ldi 0 
  0f15:48                 ret 

        code_0f16
  0f16:3a                toss 
  0f17:48                 ret 
    )

)



