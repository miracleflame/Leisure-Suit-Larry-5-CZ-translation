(script 690)

(string
    string_03d2 "rm690"
    string_03d8 "Inspector Desmond"
    string_03ea "Agent Smith"
    string_03f6 "sFBI"
    string_03fb "sonarScreen"
    string_0407 "sweep"
    string_040d "blip"
    string_0412 "sonarPing"
)

(said
)

(local
    local0 = $0000
)

// 0060
(instance publicrm690 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $1
        style $c
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:38 00c9          pushi c9 // $c9 disable
  0011:76               push0 
  0012:81 45              lag  
  0014:4a 04             send 4 

  0016:7a               push2 
  0017:38 0081          pushi 81 // $81 handleEvent
  001a:38 02b2          pushi 2b2 // $2b2 sel_690
  001d:46 03be 0000 04  calle 3be procedure_0000 4 //  

  0023:7a               push2 
  0024:38 0080          pushi 80 // $80 indexOf
  0027:38 02b2          pushi 2b2 // $2b2 sel_690
  002a:46 03be 0000 04  calle 3be procedure_0000 4 //  

  0030:7a               push2 
  0031:38 0087          pushi 87 // $87 ticks
  0034:89 af              lsg  
  0036:46 03be 0000 04  calle 3be procedure_0000 4 //  

  003c:7a               push2 
  003d:38 0084          pushi 84 // $84 cycles
  0040:38 02b3          pushi 2b3 // $2b3 sel_691
  0043:46 03be 0000 04  calle 3be procedure_0000 4 //  

  0049:39 6b            pushi 6b // $6b init
  004b:76               push0 
  004c:57 72 04         super LLRoom 4 

  004f:38 008e          pushi 8e // $8e setScript
  0052:78               push1 
  0053:72 0218          lofsa $0218 // sFBI
  0056:36                push 
  0057:54 06             self 6 

  0059:48                 ret 
    )

)

// 0212
(instance sFBI of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_00a0
  00a0:87 01              lap param1 
  00a2:65 0a             aTop state 
  00a4:36                push 
  00a5:3c                 dup 
  00a6:35 00              ldi 0 
  00a8:1a                 eq? 
  00a9:30 0018            bnt code_00c4 
  00ac:76               push0 
  00ad:45 02 00         callb procedure_0002 0 //  

  00b0:39 04            pushi 4 // $4 x
  00b2:39 03            pushi 3 // $3 y
  00b4:89 83              lsg  
  00b6:38 02b2          pushi 2b2 // $2b2 sel_690
  00b9:76               push0 
  00ba:45 19 08         callb procedure_0019 8 //  

  00bd:35 05              ldi 5 
  00bf:65 12             aTop seconds 
  00c1:32 0146            jmp code_020a 

        code_00c4
  00c4:3c                 dup 
  00c5:35 01              ldi 1 
  00c7:1a                 eq? 
  00c8:30 003a            bnt code_0105 
  00cb:39 6b            pushi 6b // $6b init
  00cd:76               push0 
  00ce:72 024e          lofsa $024e // sonarScreen
  00d1:4a 04             send 4 

  00d3:39 6b            pushi 6b // $6b init
  00d5:76               push0 
  00d6:38 0096          pushi 96 // $96 setCycle
  00d9:78               push1 
  00da:51 17            class Fwd 
  00dc:36                push 
  00dd:72 02d4          lofsa $02d4 // sweep
  00e0:4a 0a             send a 

  00e2:39 6b            pushi 6b // $6b init
  00e4:76               push0 
  00e5:38 0096          pushi 96 // $96 setCycle
  00e8:78               push1 
  00e9:51 17            class Fwd 
  00eb:36                push 
  00ec:72 033e          lofsa $033e // blip
  00ef:4a 0a             send a 

  00f1:38 018c          pushi 18c // $18c drawPic
  00f4:7a               push2 
  00f5:38 02b2          pushi 2b2 // $2b2 sel_690
  00f8:39 0c            pushi c // $c nsRight
  00fa:81 02              lag  
  00fc:4a 08             send 8 

  00fe:35 05              ldi 5 
  0100:65 12             aTop seconds 
  0102:32 0105            jmp code_020a 

        code_0105
  0105:3c                 dup 
  0106:35 02              ldi 2 
  0108:1a                 eq? 
  0109:30 0023            bnt code_012f 
  010c:38 00a7          pushi a7 // $a7 enable
  010f:76               push0 
  0110:81 45              lag  
  0112:4a 04             send 4 

  0114:39 09            pushi 9 // $9 nsTop
  0116:38 02b2          pushi 2b2 // $2b2 sel_690
  0119:78               push1 
  011a:39 43            pushi 43 // $43 at
  011c:39 ff            pushi ff // $ff syncNum
  011e:39 14            pushi 14 // $14 brLeft
  0120:39 50            pushi 50 // $50 title
  0122:72 03d8          lofsa $03d8 // Inspector Desmond
  0125:36                push 
  0126:39 6c            pushi 6c // $6c dispose
  0128:7c            pushSelf 
  0129:45 0e 12         callb procedure_000e 12 //  

  012c:32 00db            jmp code_020a 

        code_012f
  012f:3c                 dup 
  0130:35 03              ldi 3 
  0132:1a                 eq? 
  0133:30 0007            bnt code_013d 
  0136:35 03              ldi 3 
  0138:65 12             aTop seconds 
  013a:32 00cd            jmp code_020a 

        code_013d
  013d:3c                 dup 
  013e:35 04              ldi 4 
  0140:1a                 eq? 
  0141:30 0040            bnt code_0184 
  0144:78               push1 
  0145:39 14            pushi 14 // $14 brLeft
  0147:45 06 02         callb procedure_0006 2 //  

  014a:30 001b            bnt code_0168 
  014d:39 09            pushi 9 // $9 nsTop
  014f:38 02b2          pushi 2b2 // $2b2 sel_690
  0152:7a               push2 
  0153:39 43            pushi 43 // $43 at
  0155:39 ff            pushi ff // $ff syncNum
  0157:39 14            pushi 14 // $14 brLeft
  0159:39 50            pushi 50 // $50 title
  015b:72 03ea          lofsa $03ea // Agent Smith
  015e:36                push 
  015f:39 6c            pushi 6c // $6c dispose
  0161:7c            pushSelf 
  0162:45 0e 12         callb procedure_000e 12 //  

  0165:32 00a2            jmp code_020a 

        code_0168
  0168:39 09            pushi 9 // $9 nsTop
  016a:38 02b2          pushi 2b2 // $2b2 sel_690
  016d:39 03            pushi 3 // $3 y
  016f:39 43            pushi 43 // $43 at
  0171:39 ff            pushi ff // $ff syncNum
  0173:39 14            pushi 14 // $14 brLeft
  0175:39 50            pushi 50 // $50 title
  0177:72 03ea          lofsa $03ea // Agent Smith
  017a:36                push 
  017b:39 6c            pushi 6c // $6c dispose
  017d:7c            pushSelf 
  017e:45 0e 12         callb procedure_000e 12 //  

  0181:32 0086            jmp code_020a 

        code_0184
  0184:3c                 dup 
  0185:35 05              ldi 5 
  0187:1a                 eq? 
  0188:30 0007            bnt code_0192 
  018b:35 03              ldi 3 
  018d:65 12             aTop seconds 
  018f:32 0078            jmp code_020a 

        code_0192
  0192:3c                 dup 
  0193:35 06              ldi 6 
  0195:1a                 eq? 
  0196:30 002c            bnt code_01c5 
  0199:81 19              lag  
  019b:30 0005            bnt code_01a3 
  019e:39 6c            pushi 6c // $6c dispose
  01a0:76               push0 
  01a1:4a 04             send 4 


        code_01a3
  01a3:39 6c            pushi 6c // $6c dispose
  01a5:76               push0 
  01a6:72 02d4          lofsa $02d4 // sweep
  01a9:4a 04             send 4 

  01ab:39 6c            pushi 6c // $6c dispose
  01ad:76               push0 
  01ae:72 033e          lofsa $033e // blip
  01b1:4a 04             send 4 

  01b3:38 018c          pushi 18c // $18c drawPic
  01b6:7a               push2 
  01b7:78               push1 
  01b8:39 06            pushi 6 // $6 loop
  01ba:81 02              lag  
  01bc:4a 08             send 8 

  01be:35 03              ldi 3 
  01c0:65 12             aTop seconds 
  01c2:32 0045            jmp code_020a 

        code_01c5
  01c5:3c                 dup 
  01c6:35 07              ldi 7 
  01c8:1a                 eq? 
  01c9:30 0025            bnt code_01f1 
  01cc:78               push1 
  01cd:39 14            pushi 14 // $14 brLeft
  01cf:45 06 02         callb procedure_0006 2 //  

  01d2:30 000c            bnt code_01e1 
  01d5:7a               push2 
  01d6:38 02b2          pushi 2b2 // $2b2 sel_690
  01d9:39 04            pushi 4 // $4 x
  01db:45 0e 04         callb procedure_000e 4 //  

  01de:32 0009            jmp code_01ea 

        code_01e1
  01e1:7a               push2 
  01e2:38 02b2          pushi 2b2 // $2b2 sel_690
  01e5:39 05            pushi 5 // $5 view
  01e7:45 0e 04         callb procedure_000e 4 //  


        code_01ea
  01ea:35 03              ldi 3 
  01ec:65 12             aTop seconds 
  01ee:32 0019            jmp code_020a 

        code_01f1
  01f1:3c                 dup 
  01f2:35 08              ldi 8 
  01f4:1a                 eq? 
  01f5:30 0012            bnt code_020a 
  01f8:38 0179          pushi 179 // $179 newRoom
  01fb:7a               push2 
  01fc:38 00c8          pushi c8 // $c8 dispatchEvent
  01ff:39 07            pushi 7 // $7 cel
  0201:81 02              lag  
  0203:4a 08             send 8 

  0205:39 6c            pushi 6c // $6c dispose
  0207:76               push0 
  0208:54 04             self 4 


        code_020a
  020a:3a                toss 
  020b:48                 ret 
    )

)

// 0248
(instance sonarScreen of View
    (properties
        x $a3
        y $72
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2b2
        loop $0
        cel $0
        priority $1
        underBits $0
        signal $4010
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 02ce
(instance sweep of Prop
    (properties
        x $a1
        y $56
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2b2
        loop $2
        cel $0
        priority $c
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
    (method (doit) // method_02a2
  02a2:39 3c            pushi 3c // $3c doit
  02a4:76               push0 
  02a5:57 2f 04         super Prop 4 

  02a8:63 32             pToa cel 
  02aa:30 0007            bnt code_02b4 
  02ad:35 00              ldi 0 
  02af:a3 00              sal local0 
  02b1:32 0012            jmp code_02c6 

        code_02b4
  02b4:83 00              lal local0 
  02b6:18                 not 
  02b7:30 000c            bnt code_02c6 
  02ba:39 2a            pushi 2a // $2a play
  02bc:76               push0 
  02bd:72 03a4          lofsa $03a4 // sonarPing
  02c0:4a 04             send 4 

  02c2:35 01              ldi 1 
  02c4:a3 00              sal local0 

        code_02c6
  02c6:48                 ret 
  02c7:00                bnot 
    )

)

// 0338
(instance blip of Prop
    (properties
        x $aa
        y $60
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $2b2
        loop $1
        cel $0
        priority $c
        underBits $0
        signal $10
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $c
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 039e
(instance sonarPing of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $2b3
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)



