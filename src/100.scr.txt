(script 100)

(string
    string_0ac2 "rm100"
    string_0ac8 "Passionate Patti Does PittsbuA Little Undercover Work"
    string_0afe "Fast Forward"
    string_0b0b "Really? Show Me!"
    string_0b1c "Oops"
    string_0b21 ""
    string_0b22 ""
    string_0b23 "sCartoon"
    string_0b2c "sLarryCartoon"
    string_0b3a "larry"
    string_0b40 "patti"
    string_0b46 "blankPanel"
    string_0b51 "glue"
    string_0b56 "brush"
    string_0b5c "footInBucket"
    string_0b69 "typewriter"
    string_0b74 "broomUp"
    string_0b7c "glueStretch"
    string_0b88 "backSpace"
    string_0b92 "%c"
    string_0b95 ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0000
    local6 = $0000
    local7 = $0000
    local8 = $0000
    local9 = $0000
    local10 = $0000
    local11 = $0000
    local12 = $0000
    local13 = $0000
    local14 = $0000
    local15 = $0000
    local16 = $0000
    local17 = $0000
    local18 = $0000
    local19 = $0000
    local20 = $0000
    local21 = $0000
    local22 = $0000
    local23 = $0000
    local24 = $0000
    local25 = $0000
    local26 = $0000
    local27 = $0000
    local28 = $0000
    local29 = $0000
    local30 = $0000
    local31 = $0000
    local32 = $0000
    local33 = $0000
    local34 = $0000
    local35 = $0000
    local36 = $0000
    local37 = $0000
    local38 = $0000
    local39 = $0000
    local40 = $0000
    local41 = $0000
    local42 = $0000
    local43 = $0000
    local44 = $0000
    local45 = $0000
    local46 = $0000
    local47 = $0000
    local48 = $0000
    local49 = $0000
    local50 = $0000
    local51 = $0000
    local52 = $0000
    local53 = $0000
    local54 = $0000
    local55 = $0000
    local56 = $0000
    local57 = $0000
    local58 = $0000
    local59 = $0000
    local60 = $0000
    local61 = $0000
    local62 = $0000
    local63 = $0000
    local64 = $0000
)

// 015e
(instance publicrm100 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $64
        style $a
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:7a               push2 
  000f:38 0081          pushi 81 // $81 handleEvent
  0012:39 69            pushi 69 // $69 hide
  0014:46 03be 0000 04  calle 3be procedure_0000 4 //  

  001a:39 06            pushi 6 // $6 loop
  001c:38 0080          pushi 80 // $80 indexOf
  001f:39 69            pushi 69 // $69 hide
  0021:39 6a            pushi 6a // $6a new
  0023:39 6b            pushi 6b // $6b init
  0025:39 6c            pushi 6c // $6c dispose
  0027:39 6d            pushi 6d // $6d showStr
  0029:46 03be 0000 0c  calle 3be procedure_0000 c //  

  002f:39 06            pushi 6 // $6 loop
  0031:38 0084          pushi 84 // $84 cycles
  0034:39 65            pushi 65 // $65 topString
  0036:39 66            pushi 66 // $66 flags
  0038:39 67            pushi 67 // $67 quitGame
  003a:39 68            pushi 68 // $68 restart
  003c:39 69            pushi 69 // $69 hide
  003e:46 03be 0000 0c  calle 3be procedure_0000 c //  

  0044:39 2b            pushi 2b // $2b number
  0046:78               push1 
  0047:39 64            pushi 64 // $64 moveDone
  0049:38 00a2          pushi a2 // $a2 setLoop
  004c:78               push1 
  004d:39 ff            pushi ff // $ff syncNum
  004f:39 66            pushi 66 // $66 flags
  0051:78               push1 
  0052:78               push1 
  0053:39 2a            pushi 2a // $2a play
  0055:76               push0 
  0056:81 66              lag  
  0058:4a 16             send 16 

  005a:7a               push2 
  005b:5b 02 02           lea 2 2 
  005e:36                push 
  005f:72 0ac8          lofsa $0ac8 // Passionate Patti Does PittsbuA Little Undercover Work
  0062:36                push 
  0063:43 47 04         callk StrCpy 4 

  0066:39 6b            pushi 6b // $6b init
  0068:76               push0 
  0069:57 72 04         super LLRoom 4 

  006c:76               push0 
  006d:45 02 00         callb procedure_0002 0 //  

  0070:39 7d            pushi 7d // $7d addToFront
  0072:78               push1 
  0073:7c            pushSelf 
  0074:81 48              lag  
  0076:4a 06             send 6 

  0078:39 7d            pushi 7d // $7d addToFront
  007a:78               push1 
  007b:7c            pushSelf 
  007c:81 49              lag  
  007e:4a 06             send 6 

  0080:78               push1 
  0081:39 78            pushi 78 // $78 isEmpty
  0083:45 0d 02         callb procedure_000d 2 //  

  0086:38 008e          pushi 8e // $8e setScript
  0089:78               push1 
  008a:72 04cc          lofsa $04cc // sCartoon
  008d:36                push 
  008e:54 06             self 6 

  0090:48                 ret 
    )

    (method (dispose) // method_013f
  013f:39 6c            pushi 6c // $6c dispose
  0141:76               push0 
  0142:59 01            &rest 1 
  0144:57 72 04         super LLRoom 4 

  0147:39 54            pushi 54 // $54 delete
  0149:78               push1 
  014a:7c            pushSelf 
  014b:81 48              lag  
  014d:4a 06             send 6 

  014f:39 54            pushi 54 // $54 delete
  0151:78               push1 
  0152:7c            pushSelf 
  0153:81 49              lag  
  0155:4a 06             send 6 

  0157:48                 ret 
    )

    (method (handleEvent) // method_0091
  0091:39 22            pushi 22 // $22 type
  0093:76               push0 
  0094:87 01              lap param1 
  0096:4a 04             send 4 

  0098:30 0098            bnt code_0133 
  009b:39 28            pushi 28 // $28 message
  009d:76               push0 
  009e:87 01              lap param1 
  00a0:4a 04             send 4 

  00a2:36                push 
  00a3:35 1b              ldi 1b 
  00a5:1c                 ne? 
  00a6:30 008a            bnt code_0133 
  00a9:39 28            pushi 28 // $28 message
  00ab:76               push0 
  00ac:87 01              lap param1 
  00ae:4a 04             send 4 

  00b0:36                push 
  00b1:34 1e00            ldi 1e00 
  00b4:1c                 ne? 
  00b5:30 007b            bnt code_0133 
  00b8:39 28            pushi 28 // $28 message
  00ba:76               push0 
  00bb:87 01              lap param1 
  00bd:4a 04             send 4 

  00bf:36                push 
  00c0:34 1300            ldi 1300 
  00c3:1c                 ne? 
  00c4:30 006c            bnt code_0133 
  00c7:39 28            pushi 28 // $28 message
  00c9:76               push0 
  00ca:87 01              lap param1 
  00cc:4a 04             send 4 

  00ce:36                push 
  00cf:34 1400            ldi 1400 
  00d2:1c                 ne? 
  00d3:30 005d            bnt code_0133 
  00d6:39 0f            pushi f // $f lsBottom
  00d8:39 64            pushi 64 // $64 moveDone
  00da:76               push0 
  00db:39 50            pushi 50 // $50 title
  00dd:72 0afe          lofsa $0afe // Fast Forward
  00e0:36                push 
  00e1:39 52            pushi 52 // $52 icon
  00e3:38 03de          pushi 3de // $3de sel_990
  00e6:39 0b            pushi b // $b nsBottom
  00e8:76               push0 
  00e9:39 6a            pushi 6a // $6a new
  00eb:39 51            pushi 51 // $51 button
  00ed:72 0b0b          lofsa $0b0b // Really? Show Me!
  00f0:36                push 
  00f1:78               push1 
  00f2:39 51            pushi 51 // $51 button
  00f4:72 0b1c          lofsa $0b1c // Oops
  00f7:36                push 
  00f8:76               push0 
  00f9:47 ff 00 1e      calle ff procedure_0000 1e //  

  00fd:30 0028            bnt code_0128 
  0100:38 00ce          pushi ce // $ce curIcon
  0103:78               push1 
  0104:39 43            pushi 43 // $43 at
  0106:78               push1 
  0107:39 05            pushi 5 // $5 view
  0109:81 45              lag  
  010b:4a 06             send 6 

  010d:36                push 
  010e:38 0081          pushi 81 // $81 handleEvent
  0111:78               push1 
  0112:39 22            pushi 22 // $22 type
  0114:78               push1 
  0115:39 04            pushi 4 // $4 x
  0117:39 28            pushi 28 // $28 message
  0119:78               push1 
  011a:39 1b            pushi 1b // $1b elements
  011c:39 72            pushi 72 // $72 yourself
  011e:76               push0 
  011f:87 01              lap param1 
  0121:4a 10             send 10 

  0123:36                push 
  0124:81 45              lag  
  0126:4a 0c             send c 


        code_0128
  0128:39 4c            pushi 4c // $4c claimed
  012a:78               push1 
  012b:78               push1 
  012c:87 01              lap param1 
  012e:4a 06             send 6 

  0130:32 000b            jmp code_013e 

        code_0133
  0133:38 0081          pushi 81 // $81 handleEvent
  0136:78               push1 
  0137:8f 01              lsp param1 
  0139:59 02            &rest 2 
  013b:57 72 06         super LLRoom 6 


        code_013e
  013e:48                 ret 
    )

)

// 04c6
(instance sCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_01a6
  01a6:39 3c            pushi 3c // $3c doit
  01a8:76               push0 
  01a9:57 06 04         super Script 4 

  01ac:83 40              lal local64 
  01ae:30 001c            bnt code_01cd 
  01b1:39 04            pushi 4 // $4 x
  01b3:39 06            pushi 6 // $6 loop
  01b5:39 18            pushi 18 // $18 key
  01b7:39 1f            pushi 1f // $1f style
  01b9:39 ff            pushi ff // $ff syncNum
  01bb:43 6f 08         callk Palette 8 

  01be:39 04            pushi 4 // $4 x
  01c0:39 06            pushi 6 // $6 loop
  01c2:38 00f0          pushi f0 // $f0 thisTurn
  01c5:38 00fe          pushi fe // $fe prevCue
  01c8:39 ff            pushi ff // $ff syncNum
  01ca:43 6f 08         callk Palette 8 


        code_01cd
  01cd:48                 ret 
    )

    (method (changeState) // method_01ce
  01ce:87 01              lap param1 
  01d0:65 0a             aTop state 
  01d2:36                push 
  01d3:3c                 dup 
  01d4:35 00              ldi 0 
  01d6:1a                 eq? 
  01d7:30 0007            bnt code_01e1 
  01da:35 04              ldi 4 
  01dc:65 12             aTop seconds 
  01de:32 02dd            jmp code_04be 

        code_01e1
  01e1:3c                 dup 
  01e2:35 01              ldi 1 
  01e4:1a                 eq? 
  01e5:30 0033            bnt code_021b 
  01e8:39 6b            pushi 6b // $6b init
  01ea:76               push0 
  01eb:72 072c          lofsa $072c // larry
  01ee:4a 04             send 4 

  01f0:39 6b            pushi 6b // $6b init
  01f2:76               push0 
  01f3:72 07aa          lofsa $07aa // patti
  01f6:4a 04             send 4 

  01f8:39 6b            pushi 6b // $6b init
  01fa:76               push0 
  01fb:72 0828          lofsa $0828 // blankPanel
  01fe:4a 04             send 4 

  0200:39 6b            pushi 6b // $6b init
  0202:76               push0 
  0203:72 0884          lofsa $0884 // glue
  0206:4a 04             send 4 

  0208:38 018c          pushi 18c // $18c drawPic
  020b:7a               push2 
  020c:39 69            pushi 69 // $69 hide
  020e:39 0a            pushi a // $a nsLeft
  0210:81 02              lag  
  0212:4a 08             send 8 

  0214:35 03              ldi 3 
  0216:65 12             aTop seconds 
  0218:32 02a3            jmp code_04be 

        code_021b
  021b:3c                 dup 
  021c:35 02              ldi 2 
  021e:1a                 eq? 
  021f:30 0010            bnt code_0232 
  0222:38 0096          pushi 96 // $96 setCycle
  0225:7a               push2 
  0226:51 1a            class End 
  0228:36                push 
  0229:7c            pushSelf 
  022a:72 072c          lofsa $072c // larry
  022d:4a 08             send 8 

  022f:32 028c            jmp code_04be 

        code_0232
  0232:3c                 dup 
  0233:35 03              ldi 3 
  0235:1a                 eq? 
  0236:30 0022            bnt code_025b 
  0239:39 2a            pushi 2a // $2a play
  023b:76               push0 
  023c:72 09a8          lofsa $09a8 // broomUp
  023f:4a 04             send 4 

  0241:38 00a2          pushi a2 // $a2 setLoop
  0244:78               push1 
  0245:7a               push2 
  0246:38 0120          pushi 120 // $120 setCel
  0249:78               push1 
  024a:76               push0 
  024b:38 0096          pushi 96 // $96 setCycle
  024e:7a               push2 
  024f:51 1a            class End 
  0251:36                push 
  0252:7c            pushSelf 
  0253:72 072c          lofsa $072c // larry
  0256:4a 14             send 14 

  0258:32 0263            jmp code_04be 

        code_025b
  025b:3c                 dup 
  025c:35 04              ldi 4 
  025e:1a                 eq? 
  025f:30 001d            bnt code_027f 
  0262:39 2a            pushi 2a // $2a play
  0264:76               push0 
  0265:72 09a8          lofsa $09a8 // broomUp
  0268:4a 04             send 4 

  026a:38 0120          pushi 120 // $120 setCel
  026d:78               push1 
  026e:76               push0 
  026f:38 0096          pushi 96 // $96 setCycle
  0272:7a               push2 
  0273:51 1a            class End 
  0275:36                push 
  0276:7c            pushSelf 
  0277:72 072c          lofsa $072c // larry
  027a:4a 0e             send e 

  027c:32 023f            jmp code_04be 

        code_027f
  027f:3c                 dup 
  0280:35 05              ldi 5 
  0282:1a                 eq? 
  0283:30 001f            bnt code_02a5 
  0286:39 42            pushi 42 // $42 setPri
  0288:78               push1 
  0289:76               push0 
  028a:72 0884          lofsa $0884 // glue
  028d:4a 06             send 6 

  028f:38 00a2          pushi a2 // $a2 setLoop
  0292:78               push1 
  0293:39 03            pushi 3 // $3 y
  0295:38 0096          pushi 96 // $96 setCycle
  0298:7a               push2 
  0299:51 1a            class End 
  029b:36                push 
  029c:7c            pushSelf 
  029d:72 072c          lofsa $072c // larry
  02a0:4a 0e             send e 

  02a2:32 0219            jmp code_04be 

        code_02a5
  02a5:3c                 dup 
  02a6:35 06              ldi 6 
  02a8:1a                 eq? 
  02a9:30 0007            bnt code_02b3 
  02ac:35 03              ldi 3 
  02ae:65 12             aTop seconds 
  02b0:32 020b            jmp code_04be 

        code_02b3
  02b3:3c                 dup 
  02b4:35 07              ldi 7 
  02b6:1a                 eq? 
  02b7:30 0023            bnt code_02dd 
  02ba:39 6b            pushi 6b // $6b init
  02bc:76               push0 
  02bd:72 08e0          lofsa $08e0 // brush
  02c0:4a 04             send 4 

  02c2:38 00a2          pushi a2 // $a2 setLoop
  02c5:78               push1 
  02c6:39 04            pushi 4 // $4 x
  02c8:38 0120          pushi 120 // $120 setCel
  02cb:78               push1 
  02cc:76               push0 
  02cd:38 0096          pushi 96 // $96 setCycle
  02d0:7a               push2 
  02d1:51 1a            class End 
  02d3:36                push 
  02d4:7c            pushSelf 
  02d5:72 072c          lofsa $072c // larry
  02d8:4a 14             send 14 

  02da:32 01e1            jmp code_04be 

        code_02dd
  02dd:3c                 dup 
  02de:35 08              ldi 8 
  02e0:1a                 eq? 
  02e1:30 0027            bnt code_030b 
  02e4:39 6c            pushi 6c // $6c dispose
  02e6:76               push0 
  02e7:72 0828          lofsa $0828 // blankPanel
  02ea:4a 04             send 4 

  02ec:39 05            pushi 5 // $5 view
  02ee:78               push1 
  02ef:39 6c            pushi 6c // $6c dispose
  02f1:38 00a2          pushi a2 // $a2 setLoop
  02f4:78               push1 
  02f5:76               push0 
  02f6:38 0120          pushi 120 // $120 setCel
  02f9:78               push1 
  02fa:76               push0 
  02fb:38 0096          pushi 96 // $96 setCycle
  02fe:7a               push2 
  02ff:51 1a            class End 
  0301:36                push 
  0302:7c            pushSelf 
  0303:72 072c          lofsa $072c // larry
  0306:4a 1a             send 1a 

  0308:32 01b3            jmp code_04be 

        code_030b
  030b:3c                 dup 
  030c:35 09              ldi 9 
  030e:1a                 eq? 
  030f:30 001a            bnt code_032c 
  0312:38 00a2          pushi a2 // $a2 setLoop
  0315:78               push1 
  0316:78               push1 
  0317:38 0120          pushi 120 // $120 setCel
  031a:78               push1 
  031b:76               push0 
  031c:38 0096          pushi 96 // $96 setCycle
  031f:7a               push2 
  0320:51 1a            class End 
  0322:36                push 
  0323:7c            pushSelf 
  0324:72 072c          lofsa $072c // larry
  0327:4a 14             send 14 

  0329:32 0192            jmp code_04be 

        code_032c
  032c:3c                 dup 
  032d:35 0a              ldi a 
  032f:1a                 eq? 
  0330:30 002a            bnt code_035d 
  0333:38 00a2          pushi a2 // $a2 setLoop
  0336:78               push1 
  0337:78               push1 
  0338:38 0120          pushi 120 // $120 setCel
  033b:78               push1 
  033c:76               push0 
  033d:39 04            pushi 4 // $4 x
  033f:78               push1 
  0340:39 04            pushi 4 // $4 x
  0342:76               push0 
  0343:72 072c          lofsa $072c // larry
  0346:4a 04             send 4 

  0348:36                push 
  0349:35 14              ldi 14 
  034b:02                 add 
  034c:36                push 
  034d:38 0096          pushi 96 // $96 setCycle
  0350:7a               push2 
  0351:51 1a            class End 
  0353:36                push 
  0354:7c            pushSelf 
  0355:72 072c          lofsa $072c // larry
  0358:4a 1a             send 1a 

  035a:32 0161            jmp code_04be 

        code_035d
  035d:3c                 dup 
  035e:35 0b              ldi b 
  0360:1a                 eq? 
  0361:30 001a            bnt code_037e 
  0364:38 00a2          pushi a2 // $a2 setLoop
  0367:78               push1 
  0368:7a               push2 
  0369:38 0120          pushi 120 // $120 setCel
  036c:78               push1 
  036d:76               push0 
  036e:38 0096          pushi 96 // $96 setCycle
  0371:7a               push2 
  0372:51 1a            class End 
  0374:36                push 
  0375:7c            pushSelf 
  0376:72 072c          lofsa $072c // larry
  0379:4a 14             send 14 

  037b:32 0140            jmp code_04be 

        code_037e
  037e:3c                 dup 
  037f:35 0c              ldi c 
  0381:1a                 eq? 
  0382:30 000b            bnt code_0390 
  0385:35 01              ldi 1 
  0387:a3 40              sal local64 
  0389:35 05              ldi 5 
  038b:65 12             aTop seconds 
  038d:32 012e            jmp code_04be 

        code_0390
  0390:3c                 dup 
  0391:35 0d              ldi d 
  0393:1a                 eq? 
  0394:30 001d            bnt code_03b4 
  0397:38 0096          pushi 96 // $96 setCycle
  039a:78               push1 
  039b:51 18            class Walk 
  039d:36                push 
  039e:38 011b          pushi 11b // $11b setMotion
  03a1:39 04            pushi 4 // $4 x
  03a3:51 1e            class MoveTo 
  03a5:36                push 
  03a6:39 0f            pushi f // $f lsBottom
  03a8:38 008c          pushi 8c // $8c changeState
  03ab:7c            pushSelf 
  03ac:72 07aa          lofsa $07aa // patti
  03af:4a 12             send 12 

  03b1:32 010a            jmp code_04be 

        code_03b4
  03b4:3c                 dup 
  03b5:35 0e              ldi e 
  03b7:1a                 eq? 
  03b8:30 002f            bnt code_03ea 
  03bb:38 011b          pushi 11b // $11b setMotion
  03be:39 03            pushi 3 // $3 y
  03c0:51 1e            class MoveTo 
  03c2:36                push 
  03c3:38 014f          pushi 14f // $14f seek
  03c6:38 008c          pushi 8c // $8c changeState
  03c9:72 07aa          lofsa $07aa // patti
  03cc:4a 0a             send a 

  03ce:35 00              ldi 0 
  03d0:a3 00              sal local0 
  03d2:35 03              ldi 3 
  03d4:a3 01              sal local1 
  03d6:38 008e          pushi 8e // $8e setScript
  03d9:78               push1 
  03da:72 06f6          lofsa $06f6 // sLarryCartoon
  03dd:36                push 
  03de:72 072c          lofsa $072c // larry
  03e1:4a 06             send 6 

  03e3:35 01              ldi 1 
  03e5:65 10             aTop cycles 
  03e7:32 00d4            jmp code_04be 

        code_03ea
  03ea:3c                 dup 
  03eb:35 0f              ldi f 
  03ed:1a                 eq? 
  03ee:30 002c            bnt code_041d 
  03f1:76               push0 
  03f2:40 064c 00        call proc_0a42 0 

  03f6:39 2a            pushi 2a // $2a play
  03f8:76               push0 
  03f9:72 0972          lofsa $0972 // typewriter
  03fc:4a 04             send 4 

  03fe:c3 00              +al local0 
  0400:36                push 
  0401:35 1d              ldi 1d 
  0403:22                 lt? 
  0404:30 000f            bnt code_0416 
  0407:7a               push2 
  0408:39 03            pushi 3 // $3 y
  040a:39 05            pushi 5 // $5 view
  040c:43 3c 04         callk Random 4 

  040f:65 10             aTop cycles 
  0411:6d 0a            dpToa state 
  0413:32 00a8            jmp code_04be 

        code_0416
  0416:35 0a              ldi a 
  0418:65 10             aTop cycles 
  041a:32 00a1            jmp code_04be 

        code_041d
  041d:3c                 dup 
  041e:35 10              ldi 10 
  0420:1a                 eq? 
  0421:30 003c            bnt code_0460 
  0424:39 03            pushi 3 // $3 y
  0426:72 0b21          lofsa $0b21 // 
  0429:36                push 
  042a:39 6c            pushi 6c // $6c dispose
  042c:e3 00              -al local0 
  042e:36                push 
  042f:35 16              ldi 16 
  0431:04                 sub 
  0432:9b 34             lsli local52 
  0434:43 1b 06         callk Display 6 

  0437:39 2a            pushi 2a // $2a play
  0439:76               push0 
  043a:72 0a14          lofsa $0a14 // backSpace
  043d:4a 04             send 4 

  043f:8b 00              lsl local0 
  0441:35 16              ldi 16 
  0443:1e                 gt? 
  0444:30 0009            bnt code_0450 
  0447:35 04              ldi 4 
  0449:65 10             aTop cycles 
  044b:6d 0a            dpToa state 
  044d:32 006e            jmp code_04be 

        code_0450
  0450:34 0099            ldi 99 
  0453:a3 01              sal local1 
  0455:35 1d              ldi 1d 
  0457:a3 00              sal local0 
  0459:35 0a              ldi a 
  045b:65 10             aTop cycles 
  045d:32 005e            jmp code_04be 

        code_0460
  0460:3c                 dup 
  0461:35 11              ldi 11 
  0463:1a                 eq? 
  0464:30 0032            bnt code_0499 
  0467:76               push0 
  0468:40 05d6 00        call proc_0a42 0 

  046c:39 2a            pushi 2a // $2a play
  046e:76               push0 
  046f:72 0972          lofsa $0972 // typewriter
  0472:4a 04             send 4 

  0474:c3 00              +al local0 
  0476:36                push 
  0477:78               push1 
  0478:5b 02 02           lea 2 2 
  047b:36                push 
  047c:43 46 02         callk StrLen 2 

  047f:22                 lt? 
  0480:30 000f            bnt code_0492 
  0483:6d 0a            dpToa state 
  0485:7a               push2 
  0486:39 03            pushi 3 // $3 y
  0488:39 05            pushi 5 // $5 view
  048a:43 3c 04         callk Random 4 

  048d:65 10             aTop cycles 
  048f:32 002c            jmp code_04be 

        code_0492
  0492:35 0a              ldi a 
  0494:65 10             aTop cycles 
  0496:32 0025            jmp code_04be 

        code_0499
  0499:3c                 dup 
  049a:35 12              ldi 12 
  049c:1a                 eq? 
  049d:30 0008            bnt code_04a8 
  04a0:34 010e            ldi 10e 
  04a3:65 16             aTop ticks 
  04a5:32 0016            jmp code_04be 

        code_04a8
  04a8:3c                 dup 
  04a9:35 13              ldi 13 
  04ab:1a                 eq? 
  04ac:30 000f            bnt code_04be 
  04af:38 0179          pushi 179 // $179 newRoom
  04b2:78               push1 
  04b3:39 6e            pushi 6e // $6e showSelf
  04b5:81 02              lag  
  04b7:4a 06             send 6 

  04b9:39 6c            pushi 6c // $6c dispose
  04bb:76               push0 
  04bc:54 04             self 4 


        code_04be
  04be:3a                toss 
  04bf:48                 ret 
    )

)

// 06f0
(instance sLarryCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_04fe
  04fe:87 01              lap param1 
  0500:65 0a             aTop state 
  0502:36                push 
  0503:3c                 dup 
  0504:35 00              ldi 0 
  0506:1a                 eq? 
  0507:30 001e            bnt code_0528 
  050a:38 00a2          pushi a2 // $a2 setLoop
  050d:78               push1 
  050e:39 04            pushi 4 // $4 x
  0510:38 0120          pushi 120 // $120 setCel
  0513:78               push1 
  0514:76               push0 
  0515:38 0096          pushi 96 // $96 setCycle
  0518:39 03            pushi 3 // $3 y
  051a:51 59            class ForwardCounter 
  051c:36                push 
  051d:39 04            pushi 4 // $4 x
  051f:7c            pushSelf 
  0520:72 072c          lofsa $072c // larry
  0523:4a 16             send 16 

  0525:32 01c0            jmp code_06e8 

        code_0528
  0528:3c                 dup 
  0529:35 01              ldi 1 
  052b:1a                 eq? 
  052c:30 003d            bnt code_056c 
  052f:39 05            pushi 5 // $5 view
  0531:78               push1 
  0532:39 6a            pushi 6a // $6a new
  0534:38 00a2          pushi a2 // $a2 setLoop
  0537:78               push1 
  0538:39 04            pushi 4 // $4 x
  053a:38 0120          pushi 120 // $120 setCel
  053d:78               push1 
  053e:76               push0 
  053f:38 011c          pushi 11c // $11c posn
  0542:7a               push2 
  0543:38 010c          pushi 10c // $10c doVerb
  0546:38 0085          pushi 85 // $85 seconds
  0549:38 0096          pushi 96 // $96 setCycle
  054c:39 04            pushi 4 // $4 x
  054e:51 19            class CT 
  0550:36                push 
  0551:39 03            pushi 3 // $3 y
  0553:78               push1 
  0554:7c            pushSelf 
  0555:38 011b          pushi 11b // $11b setMotion
  0558:39 04            pushi 4 // $4 x
  055a:51 1e            class MoveTo 
  055c:36                push 
  055d:38 0107          pushi 107 // $107 waitApogeeY
  0560:38 0085          pushi 85 // $85 seconds
  0563:7c            pushSelf 
  0564:72 072c          lofsa $072c // larry
  0567:4a 32             send 32 

  0569:32 017c            jmp code_06e8 

        code_056c
  056c:3c                 dup 
  056d:35 02              ldi 2 
  056f:1a                 eq? 
  0570:30 0003            bnt code_0576 
  0573:32 0172            jmp code_06e8 

        code_0576
  0576:3c                 dup 
  0577:35 03              ldi 3 
  0579:1a                 eq? 
  057a:30 001c            bnt code_0599 
  057d:39 6c            pushi 6c // $6c dispose
  057f:76               push0 
  0580:72 0884          lofsa $0884 // glue
  0583:4a 04             send 4 

  0585:38 0096          pushi 96 // $96 setCycle
  0588:39 04            pushi 4 // $4 x
  058a:51 19            class CT 
  058c:36                push 
  058d:39 05            pushi 5 // $5 view
  058f:78               push1 
  0590:7c            pushSelf 
  0591:72 072c          lofsa $072c // larry
  0594:4a 0c             send c 

  0596:32 014f            jmp code_06e8 

        code_0599
  0599:3c                 dup 
  059a:35 04              ldi 4 
  059c:1a                 eq? 
  059d:30 0018            bnt code_05b8 
  05a0:39 2a            pushi 2a // $2a play
  05a2:76               push0 
  05a3:72 093c          lofsa $093c // footInBucket
  05a6:4a 04             send 4 

  05a8:38 0096          pushi 96 // $96 setCycle
  05ab:7a               push2 
  05ac:51 1a            class End 
  05ae:36                push 
  05af:7c            pushSelf 
  05b0:72 072c          lofsa $072c // larry
  05b3:4a 08             send 8 

  05b5:32 0130            jmp code_06e8 

        code_05b8
  05b8:3c                 dup 
  05b9:35 05              ldi 5 
  05bb:1a                 eq? 
  05bc:30 002e            bnt code_05ed 
  05bf:38 00a2          pushi a2 // $a2 setLoop
  05c2:78               push1 
  05c3:76               push0 
  05c4:38 0120          pushi 120 // $120 setCel
  05c7:78               push1 
  05c8:76               push0 
  05c9:39 04            pushi 4 // $4 x
  05cb:78               push1 
  05cc:39 04            pushi 4 // $4 x
  05ce:76               push0 
  05cf:72 072c          lofsa $072c // larry
  05d2:4a 04             send 4 

  05d4:36                push 
  05d5:35 05              ldi 5 
  05d7:04                 sub 
  05d8:36                push 
  05d9:38 0096          pushi 96 // $96 setCycle
  05dc:39 04            pushi 4 // $4 x
  05de:51 19            class CT 
  05e0:36                push 
  05e1:39 04            pushi 4 // $4 x
  05e3:78               push1 
  05e4:7c            pushSelf 
  05e5:72 072c          lofsa $072c // larry
  05e8:4a 1e             send 1e 

  05ea:32 00fb            jmp code_06e8 

        code_05ed
  05ed:3c                 dup 
  05ee:35 06              ldi 6 
  05f0:1a                 eq? 
  05f1:30 0018            bnt code_060c 
  05f4:39 2a            pushi 2a // $2a play
  05f6:76               push0 
  05f7:72 09de          lofsa $09de // glueStretch
  05fa:4a 04             send 4 

  05fc:38 0096          pushi 96 // $96 setCycle
  05ff:7a               push2 
  0600:51 1a            class End 
  0602:36                push 
  0603:7c            pushSelf 
  0604:72 072c          lofsa $072c // larry
  0607:4a 08             send 8 

  0609:32 00dc            jmp code_06e8 

        code_060c
  060c:3c                 dup 
  060d:35 07              ldi 7 
  060f:1a                 eq? 
  0610:30 0010            bnt code_0623 
  0613:38 0096          pushi 96 // $96 setCycle
  0616:7a               push2 
  0617:51 1b            class Beg 
  0619:36                push 
  061a:7c            pushSelf 
  061b:72 072c          lofsa $072c // larry
  061e:4a 08             send 8 

  0620:32 00c5            jmp code_06e8 

        code_0623
  0623:3c                 dup 
  0624:35 08              ldi 8 
  0626:1a                 eq? 
  0627:30 001c            bnt code_0646 
  062a:38 00a2          pushi a2 // $a2 setLoop
  062d:78               push1 
  062e:78               push1 
  062f:38 0120          pushi 120 // $120 setCel
  0632:78               push1 
  0633:76               push0 
  0634:38 0096          pushi 96 // $96 setCycle
  0637:39 03            pushi 3 // $3 y
  0639:51 59            class ForwardCounter 
  063b:36                push 
  063c:7a               push2 
  063d:7c            pushSelf 
  063e:72 072c          lofsa $072c // larry
  0641:4a 16             send 16 

  0643:32 00a2            jmp code_06e8 

        code_0646
  0646:3c                 dup 
  0647:35 09              ldi 9 
  0649:1a                 eq? 
  064a:30 001c            bnt code_0669 
  064d:38 00a2          pushi a2 // $a2 setLoop
  0650:78               push1 
  0651:7a               push2 
  0652:38 0120          pushi 120 // $120 setCel
  0655:78               push1 
  0656:76               push0 
  0657:38 0096          pushi 96 // $96 setCycle
  065a:39 03            pushi 3 // $3 y
  065c:51 59            class ForwardCounter 
  065e:36                push 
  065f:7a               push2 
  0660:7c            pushSelf 
  0661:72 072c          lofsa $072c // larry
  0664:4a 16             send 16 

  0666:32 007f            jmp code_06e8 

        code_0669
  0669:3c                 dup 
  066a:35 0a              ldi a 
  066c:1a                 eq? 
  066d:30 001b            bnt code_068b 
  0670:38 00a2          pushi a2 // $a2 setLoop
  0673:78               push1 
  0674:39 03            pushi 3 // $3 y
  0676:38 0120          pushi 120 // $120 setCel
  0679:78               push1 
  067a:76               push0 
  067b:38 0096          pushi 96 // $96 setCycle
  067e:7a               push2 
  067f:51 1a            class End 
  0681:36                push 
  0682:7c            pushSelf 
  0683:72 072c          lofsa $072c // larry
  0686:4a 14             send 14 

  0688:32 005d            jmp code_06e8 

        code_068b
  068b:3c                 dup 
  068c:35 0b              ldi b 
  068e:1a                 eq? 
  068f:30 0021            bnt code_06b3 
  0692:39 05            pushi 5 // $5 view
  0694:78               push1 
  0695:39 6b            pushi 6b // $6b init
  0697:38 00a2          pushi a2 // $a2 setLoop
  069a:78               push1 
  069b:76               push0 
  069c:38 0120          pushi 120 // $120 setCel
  069f:78               push1 
  06a0:76               push0 
  06a1:38 0096          pushi 96 // $96 setCycle
  06a4:39 03            pushi 3 // $3 y
  06a6:51 59            class ForwardCounter 
  06a8:36                push 
  06a9:7a               push2 
  06aa:7c            pushSelf 
  06ab:72 072c          lofsa $072c // larry
  06ae:4a 1c             send 1c 

  06b0:32 0035            jmp code_06e8 

        code_06b3
  06b3:3c                 dup 
  06b4:35 0c              ldi c 
  06b6:1a                 eq? 
  06b7:30 0022            bnt code_06dc 
  06ba:39 2a            pushi 2a // $2a play
  06bc:76               push0 
  06bd:72 09de          lofsa $09de // glueStretch
  06c0:4a 04             send 4 

  06c2:38 00a2          pushi a2 // $a2 setLoop
  06c5:78               push1 
  06c6:78               push1 
  06c7:38 0120          pushi 120 // $120 setCel
  06ca:78               push1 
  06cb:76               push0 
  06cc:38 0096          pushi 96 // $96 setCycle
  06cf:7a               push2 
  06d0:51 1a            class End 
  06d2:36                push 
  06d3:7c            pushSelf 
  06d4:72 072c          lofsa $072c // larry
  06d7:4a 14             send 14 

  06d9:32 000c            jmp code_06e8 

        code_06dc
  06dc:3c                 dup 
  06dd:35 0d              ldi d 
  06df:1a                 eq? 
  06e0:30 0005            bnt code_06e8 
  06e3:39 6c            pushi 6c // $6c dispose
  06e5:76               push0 
  06e6:54 04             self 4 


        code_06e8
  06e8:3a                toss 
  06e9:48                 ret 
    )

)

// 0726
(instance larry of Actor
    (properties
        x $e6
        y $84
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $69
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $a
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $a
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 07a4
(instance patti of Actor
    (properties
        x $fff0
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6d
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $a
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $5
        moveSpeed $a
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
)

// 0822
(instance blankPanel of View
    (properties
        x $df
        y $6c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $6c
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $4001
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 087e
(instance glue of View
    (properties
        x $fb
        y $84
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $69
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4001
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 08da
(instance brush of View
    (properties
        x $100
        y $84
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $69
        loop $0
        cel $1
        priority $0
        underBits $0
        signal $4001
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
    )
)

// 0936
(instance footInBucket of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $65
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 096c
(instance typewriter of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $66
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 09a2
(instance broomUp of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $67
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 09d8
(instance glueStretch of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $68
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 0a0e
(instance backSpace of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $69
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)



(procedure proc_0a42
  0a42:3f 04             link 4 // (var $4)
  0a44:7a               push2 
  0a45:5b 02 02           lea 2 2 
  0a48:36                push 
  0a49:8b 00              lsl local0 
  0a4b:43 62 04         callk StrAt 4 

  0a4e:a5 02              sat temp2 
  0a50:39 03            pushi 3 // $3 y
  0a52:5b 04 00           lea 4 0 
  0a55:36                push 
  0a56:72 0b92          lofsa $0b92 // %c
  0a59:36                push 
  0a5a:8d 02              lst temp2 
  0a5c:43 48 06         callk Format 6 

  0a5f:39 0d            pushi d // $d lsTop
  0a61:5b 04 00           lea 4 0 
  0a64:36                push 
  0a65:39 64            pushi 64 // $64 moveDone
  0a67:8b 01              lsl local1 
  0a69:38 00a0          pushi a0 // $a0 mute
  0a6c:39 66            pushi 66 // $66 flags
  0a6e:89 80              lsg  
  0a70:39 6a            pushi 6a // $6a new
  0a72:39 07            pushi 7 // $7 cel
  0a74:39 65            pushi 65 // $65 topString
  0a76:76               push0 
  0a77:39 69            pushi 69 // $69 hide
  0a79:89 ad              lsg  
  0a7b:39 6b            pushi 6b // $6b init
  0a7d:43 1b 1a         callk Display 1a 

  0a80:a5 03              sat temp3 
  0a82:39 15            pushi 15 // $15 brBottom
  0a84:83 00              lal local0 
  0a86:22                 lt? 
  0a87:30 0013            bnt code_0a9d 
  0a8a:60               pprev 
  0a8b:35 1d              ldi 1d 
  0a8d:22                 lt? 
  0a8e:30 000c            bnt code_0a9d 
  0a91:8d 03              lst temp3 
  0a93:8b 00              lsl local0 
  0a95:35 16              ldi 16 
  0a97:04                 sub 
  0a98:b3 34             sali local52 
  0a9a:32 0009            jmp code_0aa6 

        code_0a9d
  0a9d:7a               push2 
  0a9e:38 0085          pushi 85 // $85 seconds
  0aa1:8d 03              lst temp3 
  0aa3:43 01 04         callk UnLoad 4 


        code_0aa6
  0aa6:8b 01              lsl local1 
  0aa8:35 07              ldi 7 
  0aaa:02                 add 
  0aab:a3 01              sal local1 
  0aad:39 20            pushi 20 // $20 state
  0aaf:85 02              lat temp2 
  0ab1:1a                 eq? 
  0ab2:30 0007            bnt code_0abc 
  0ab5:8b 01              lsl local1 
  0ab7:35 02              ldi 2 
  0ab9:04                 sub 
  0aba:a3 01              sal local1 

        code_0abc
  0abc:48                 ret 
  0abd:00                bnot 
)

