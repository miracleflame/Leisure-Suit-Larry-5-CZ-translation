(script 18)

(string
    string_06ee "controls"
    string_06f7 "LLRoom"
    string_06fe "lRS"
    string_0702 "eRS"
)

(said
)

(local
    local0 = $00a0
    local1 = $0040
    local2 = $006c
    local3 = $0104
    local4 = $0013
    local5 = $0092
    local6 = $0000
)

// 0010
(instance controls of Controls
    (properties
        elements $0
        size $0
    )
)

// 02d0
(class LLRoom of Rm
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $0
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_002a
  002a:3f 04             link 4 // (var $4)
  002c:81 0b              lag  
  002e:65 0a             aTop number 
  0030:72 0016          lofsa $0016 // controls
  0033:65 1a             aTop controls 
  0035:38 009b          pushi 9b // $9b owner
  0038:76               push0 
  0039:39 43            pushi 43 // $43 at
  003b:78               push1 
  003c:78               push1 
  003d:51 40            class Inv 
  003f:4a 06             send 6 

  0041:4a 04             send 4 

  0043:36                push 
  0044:81 02              lag  
  0046:1a                 eq? 
  0047:30 0079            bnt code_00c3 
  004a:35 00              ldi 0 
  004c:a5 02              sat temp2 

        code_004e
  004e:85 02              lat temp2 
  0050:9b 00             lsli local0 
  0052:35 00              ldi 0 
  0054:1c                 ne? 
  0055:30 006b            bnt code_00c3 
  0058:85 02              lat temp2 
  005a:9b 00             lsli local0 
  005c:81 0b              lag  
  005e:1a                 eq? 
  005f:30 0057            bnt code_00b9 
  0062:38 009b          pushi 9b // $9b owner
  0065:76               push0 
  0066:39 43            pushi 43 // $43 at
  0068:78               push1 
  0069:76               push0 
  006a:51 40            class Inv 
  006c:4a 06             send 6 

  006e:4a 04             send 4 

  0070:36                push 
  0071:39 43            pushi 43 // $43 at
  0073:78               push1 
  0074:78               push1 
  0075:51 40            class Inv 
  0077:4a 06             send 6 

  0079:1a                 eq? 
  007a:30 0007            bnt code_0084 
  007d:35 04              ldi 4 
  007f:a5 03              sat temp3 
  0081:32 0004            jmp code_0088 

        code_0084
  0084:35 03              ldi 3 
  0086:a5 03              sat temp3 

        code_0088
  0088:39 04            pushi 4 // $4 x
  008a:78               push1 
  008b:c5 02              +at temp2 
  008d:9b 00             lsli local0 
  008f:39 03            pushi 3 // $3 y
  0091:78               push1 
  0092:c5 02              +at temp2 
  0094:9b 00             lsli local0 
  0096:38 00a2          pushi a2 // $a2 setLoop
  0099:78               push1 
  009a:8d 03              lst temp3 
  009c:39 6b            pushi 6b // $6b init
  009e:76               push0 
  009f:38 0119          pushi 119 // $119 approachVerbs
  00a2:39 03            pushi 3 // $3 y
  00a4:7a               push2 
  00a5:39 03            pushi 3 // $3 y
  00a7:39 04            pushi 4 // $4 x
  00a9:7a               push2 
  00aa:39 16            pushi 16 // $16 brRight
  00ac:39 03            pushi 3 // $3 y
  00ae:43 02 04         callk ScriptID 4 

  00b1:4a 20             send 20 

  00b3:32 000d            jmp code_00c3 
  00b6:32 ff95            jmp code_004e 

        code_00b9
  00b9:8d 02              lst temp2 
  00bb:35 03              ldi 3 
  00bd:02                 add 
  00be:a5 02              sat temp2 
  00c0:32 ff8b            jmp code_004e 

        code_00c3
  00c3:63 26             pToa picAngle 
  00c5:a1 1f              sag  
  00c7:63 14             pToa picture 
  00c9:30 0007            bnt code_00d3 
  00cc:38 018c          pushi 18c // $18c drawPic
  00cf:78               push1 
  00d0:36                push 
  00d1:54 06             self 6 


        code_00d3
  00d3:39 77            pushi 77 // $77 contains
  00d5:78               push1 
  00d6:89 00              lsg  
  00d8:81 05              lag  
  00da:4a 06             send 6 

  00dc:18                 not 
  00dd:30 0005            bnt code_00e5 
  00e0:35 00              ldi 0 
  00e2:32 0142            jmp code_0227 

        code_00e5
  00e5:63 08             pToa script 
  00e7:30 0005            bnt code_00ef 
  00ea:35 00              ldi 0 
  00ec:32 0138            jmp code_0227 

        code_00ef
  00ef:38 0146          pushi 146 // $146 edgeHit
  00f2:76               push0 
  00f3:38 0139          pushi 139 // $139 alterEgo
  00f6:76               push0 
  00f7:51 31            class User 
  00f9:4a 04             send 4 

  00fb:4a 04             send 4 

  00fd:18                 not 
  00fe:30 0005            bnt code_0106 
  0101:35 00              ldi 0 
  0103:32 0121            jmp code_0227 

        code_0106
  0106:39 05            pushi 5 // $5 view
  0108:67 16             pTos style 
  010a:39 0b            pushi b // $b nsBottom
  010c:39 0c            pushi c // $c nsRight
  010e:39 0d            pushi d // $d lsTop
  0110:39 0e            pushi e // $e lsLeft
  0112:46 03e7 0005 0a  calle 3e7 procedure_0005 a //  

  0118:30 00fe            bnt code_0219 
  011b:78               push1 
  011c:39 03            pushi 3 // $3 y
  011e:39 05            pushi 5 // $5 view
  0120:76               push0 
  0121:38 0139          pushi 139 // $139 alterEgo
  0124:76               push0 
  0125:51 31            class User 
  0127:4a 04             send 4 

  0129:4a 04             send 4 

  012b:36                push 
  012c:39 06            pushi 6 // $6 loop
  012e:76               push0 
  012f:38 0139          pushi 139 // $139 alterEgo
  0132:76               push0 
  0133:51 31            class User 
  0135:4a 04             send 4 

  0137:4a 04             send 4 

  0139:36                push 
  013a:39 07            pushi 7 // $7 cel
  013c:76               push0 
  013d:38 0139          pushi 139 // $139 alterEgo
  0140:76               push0 
  0141:51 31            class User 
  0143:4a 04             send 4 

  0145:4a 04             send 4 

  0147:36                push 
  0148:43 0f 06         callk CelWide 6 

  014b:36                push 
  014c:35 02              ldi 2 
  014e:08                 div 
  014f:02                 add 
  0150:a5 00              sat temp0 
  0152:78               push1 
  0153:39 03            pushi 3 // $3 y
  0155:39 05            pushi 5 // $5 view
  0157:76               push0 
  0158:38 0139          pushi 139 // $139 alterEgo
  015b:76               push0 
  015c:51 31            class User 
  015e:4a 04             send 4 

  0160:4a 04             send 4 

  0162:36                push 
  0163:39 06            pushi 6 // $6 loop
  0165:76               push0 
  0166:38 0139          pushi 139 // $139 alterEgo
  0169:76               push0 
  016a:51 31            class User 
  016c:4a 04             send 4 

  016e:4a 04             send 4 

  0170:36                push 
  0171:39 07            pushi 7 // $7 cel
  0173:76               push0 
  0174:38 0139          pushi 139 // $139 alterEgo
  0177:76               push0 
  0178:51 31            class User 
  017a:4a 04             send 4 

  017c:4a 04             send 4 

  017e:36                push 
  017f:43 10 06         callk CelHigh 6 

  0182:36                push 
  0183:35 02              ldi 2 
  0185:08                 div 
  0186:02                 add 
  0187:a5 01              sat temp1 
  0189:38 0146          pushi 146 // $146 edgeHit
  018c:76               push0 
  018d:38 0139          pushi 139 // $139 alterEgo
  0190:76               push0 
  0191:51 31            class User 
  0193:4a 04             send 4 

  0195:4a 04             send 4 

  0197:36                push 
  0198:3c                 dup 
  0199:35 01              ldi 1 
  019b:1a                 eq? 
  019c:30 0013            bnt code_01b2 
  019f:39 03            pushi 3 // $3 y
  01a1:78               push1 
  01a2:38 00bc          pushi bc // $bc helpStr
  01a5:38 0139          pushi 139 // $139 alterEgo
  01a8:76               push0 
  01a9:51 31            class User 
  01ab:4a 04             send 4 

  01ad:4a 06             send 6 

  01af:32 0054            jmp code_0206 

        code_01b2
  01b2:3c                 dup 
  01b3:35 04              ldi 4 
  01b5:1a                 eq? 
  01b6:30 0017            bnt code_01d0 
  01b9:39 04            pushi 4 // $4 x
  01bb:78               push1 
  01bc:38 013f          pushi 13f // $13f inputLineAddr
  01bf:85 00              lat temp0 
  01c1:04                 sub 
  01c2:36                push 
  01c3:38 0139          pushi 139 // $139 alterEgo
  01c6:76               push0 
  01c7:51 31            class User 
  01c9:4a 04             send 4 

  01cb:4a 06             send 6 

  01cd:32 0036            jmp code_0206 

        code_01d0
  01d0:3c                 dup 
  01d1:35 03              ldi 3 
  01d3:1a                 eq? 
  01d4:30 0016            bnt code_01ed 
  01d7:39 03            pushi 3 // $3 y
  01d9:78               push1 
  01da:67 18             pTos horizon 
  01dc:85 01              lat temp1 
  01de:02                 add 
  01df:36                push 
  01e0:38 0139          pushi 139 // $139 alterEgo
  01e3:76               push0 
  01e4:51 31            class User 
  01e6:4a 04             send 4 

  01e8:4a 06             send 6 

  01ea:32 0019            jmp code_0206 

        code_01ed
  01ed:3c                 dup 
  01ee:35 02              ldi 2 
  01f0:1a                 eq? 
  01f1:30 0012            bnt code_0206 
  01f4:39 04            pushi 4 // $4 x
  01f6:78               push1 
  01f7:76               push0 
  01f8:85 00              lat temp0 
  01fa:02                 add 
  01fb:36                push 
  01fc:38 0139          pushi 139 // $139 alterEgo
  01ff:76               push0 
  0200:51 31            class User 
  0202:4a 04             send 4 

  0204:4a 06             send 6 


        code_0206
  0206:3a                toss 
  0207:38 0146          pushi 146 // $146 edgeHit
  020a:78               push1 
  020b:76               push0 
  020c:38 0139          pushi 139 // $139 alterEgo
  020f:76               push0 
  0210:51 31            class User 
  0212:4a 04             send 4 

  0214:4a 06             send 6 

  0216:32 000e            jmp code_0227 

        code_0219
  0219:38 008e          pushi 8e // $8e setScript
  021c:39 03            pushi 3 // $3 y
  021e:72 06c0          lofsa $06c0 // eRS
  0221:36                push 
  0222:76               push0 
  0223:89 0c              lsg  
  0225:54 0a             self a 


        code_0227
  0227:48                 ret 
    )

    (method (doit) // method_0228
  0228:3f 01             link 1 // (var $1)
  022a:63 08             pToa script 
  022c:30 0008            bnt code_0237 
  022f:39 3c            pushi 3c // $3c doit
  0231:76               push0 
  0232:4a 04             send 4 

  0234:32 0062            jmp code_0299 

        code_0237
  0237:39 77            pushi 77 // $77 contains
  0239:78               push1 
  023a:89 00              lsg  
  023c:81 05              lag  
  023e:4a 06             send 6 

  0240:18                 not 
  0241:30 0005            bnt code_0249 
  0244:35 00              ldi 0 
  0246:32 0050            jmp code_0299 

        code_0249
  0249:38 0146          pushi 146 // $146 edgeHit
  024c:76               push0 
  024d:38 0139          pushi 139 // $139 alterEgo
  0250:76               push0 
  0251:51 31            class User 
  0253:4a 04             send 4 

  0255:4a 04             send 4 

  0257:36                push 
  0258:3c                 dup 
  0259:35 01              ldi 1 
  025b:1a                 eq? 
  025c:30 0005            bnt code_0264 
  025f:63 1c             pToa north 
  0261:32 0021            jmp code_0285 

        code_0264
  0264:3c                 dup 
  0265:35 02              ldi 2 
  0267:1a                 eq? 
  0268:30 0005            bnt code_0270 
  026b:63 1e             pToa east 
  026d:32 0015            jmp code_0285 

        code_0270
  0270:3c                 dup 
  0271:35 03              ldi 3 
  0273:1a                 eq? 
  0274:30 0005            bnt code_027c 
  0277:63 20             pToa south 
  0279:32 0009            jmp code_0285 

        code_027c
  027c:3c                 dup 
  027d:35 04              ldi 4 
  027f:1a                 eq? 
  0280:30 0002            bnt code_0285 
  0283:63 22             pToa west 

        code_0285
  0285:3a                toss 
  0286:a5 00              sat temp0 
  0288:30 000e            bnt code_0299 
  028b:38 008e          pushi 8e // $8e setScript
  028e:39 03            pushi 3 // $3 y
  0290:72 046e          lofsa $046e // lRS
  0293:36                push 
  0294:76               push0 
  0295:8d 00              lst temp0 
  0297:54 0a             self a 


        code_0299
  0299:48                 ret 
    )

    (method (doVerb) // method_029a
  029a:3f c8             link c8 // (var $c8)
  029c:8f 01              lsp param1 
  029e:35 02              ldi 2 
  02a0:1a                 eq? 
  02a1:30 0021            bnt code_02c5 
  02a4:63 12             pToa lookStr 
  02a6:30 001c            bnt code_02c5 
  02a9:39 04            pushi 4 // $4 x
  02ab:5b 04 00           lea 4 0 
  02ae:36                push 
  02af:39 12            pushi 12 // $12 illegalBits
  02b1:76               push0 
  02b2:67 12             pTos lookStr 
  02b4:43 48 08         callk Format 8 

  02b7:78               push1 
  02b8:5b 04 00           lea 4 0 
  02bb:36                push 
  02bc:45 0e 02         callb procedure_000e 2 //  

  02bf:35 01              ldi 1 
  02c1:48                 ret 
  02c2:32 0003            jmp code_02c8 

        code_02c5
  02c5:35 00              ldi 0 
  02c7:48                 ret 

        code_02c8
  02c8:48                 ret 
  02c9:00                bnot 
    )

)

// 0468
(instance lRS of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0346
  0346:3f 02             link 2 // (var $2)
  0348:87 01              lap param1 
  034a:65 0a             aTop state 
  034c:36                push 
  034d:3c                 dup 
  034e:35 00              ldi 0 
  0350:1a                 eq? 
  0351:30 00e1            bnt code_0435 
  0354:76               push0 
  0355:45 02 00         callb procedure_0002 0 //  

  0358:39 03            pushi 3 // $3 y
  035a:39 05            pushi 5 // $5 view
  035c:76               push0 
  035d:81 00              lag  
  035f:4a 04             send 4 

  0361:36                push 
  0362:39 06            pushi 6 // $6 loop
  0364:76               push0 
  0365:81 00              lag  
  0367:4a 04             send 4 

  0369:36                push 
  036a:39 07            pushi 7 // $7 cel
  036c:76               push0 
  036d:81 00              lag  
  036f:4a 04             send 4 

  0371:36                push 
  0372:43 0f 06         callk CelWide 6 

  0375:a5 01              sat temp1 
  0377:39 03            pushi 3 // $3 y
  0379:39 05            pushi 5 // $5 view
  037b:76               push0 
  037c:81 00              lag  
  037e:4a 04             send 4 

  0380:36                push 
  0381:39 06            pushi 6 // $6 loop
  0383:76               push0 
  0384:81 00              lag  
  0386:4a 04             send 4 

  0388:36                push 
  0389:39 07            pushi 7 // $7 cel
  038b:76               push0 
  038c:81 00              lag  
  038e:4a 04             send 4 

  0390:36                push 
  0391:43 10 06         callk CelHigh 6 

  0394:a5 00              sat temp0 
  0396:67 1a             pTos register 
  0398:3c                 dup 
  0399:38 0184          pushi 184 // $184 north
  039c:76               push0 
  039d:63 08             pToa client 
  039f:4a 04             send 4 

  03a1:1a                 eq? 
  03a2:30 000d            bnt code_03b2 
  03a5:38 0179          pushi 179 // $179 newRoom
  03a8:78               push1 
  03a9:67 1a             pTos register 
  03ab:81 02              lag  
  03ad:4a 06             send 6 

  03af:32 007f            jmp code_0431 

        code_03b2
  03b2:3c                 dup 
  03b3:38 0186          pushi 186 // $186 south
  03b6:76               push0 
  03b7:63 08             pToa client 
  03b9:4a 04             send 4 

  03bb:1a                 eq? 
  03bc:30 001f            bnt code_03de 
  03bf:38 011b          pushi 11b // $11b setMotion
  03c2:39 04            pushi 4 // $4 x
  03c4:51 24            class PolyPath 
  03c6:36                push 
  03c7:39 04            pushi 4 // $4 x
  03c9:76               push0 
  03ca:81 00              lag  
  03cc:4a 04             send 4 

  03ce:36                push 
  03cf:38 00bd          pushi bd // $bd maskView
  03d2:85 00              lat temp0 
  03d4:02                 add 
  03d5:36                push 
  03d6:7c            pushSelf 
  03d7:81 00              lag  
  03d9:4a 0c             send c 

  03db:32 0053            jmp code_0431 

        code_03de
  03de:3c                 dup 
  03df:38 0185          pushi 185 // $185 east
  03e2:76               push0 
  03e3:63 08             pToa client 
  03e5:4a 04             send 4 

  03e7:1a                 eq? 
  03e8:30 001f            bnt code_040a 
  03eb:38 011b          pushi 11b // $11b setMotion
  03ee:39 04            pushi 4 // $4 x
  03f0:51 24            class PolyPath 
  03f2:36                push 
  03f3:38 013f          pushi 13f // $13f inputLineAddr
  03f6:85 01              lat temp1 
  03f8:02                 add 
  03f9:36                push 
  03fa:39 03            pushi 3 // $3 y
  03fc:76               push0 
  03fd:81 00              lag  
  03ff:4a 04             send 4 

  0401:36                push 
  0402:7c            pushSelf 
  0403:81 00              lag  
  0405:4a 0c             send c 

  0407:32 0027            jmp code_0431 

        code_040a
  040a:3c                 dup 
  040b:38 0187          pushi 187 // $187 west
  040e:76               push0 
  040f:63 08             pToa client 
  0411:4a 04             send 4 

  0413:1a                 eq? 
  0414:30 001a            bnt code_0431 
  0417:38 011b          pushi 11b // $11b setMotion
  041a:39 04            pushi 4 // $4 x
  041c:51 24            class PolyPath 
  041e:36                push 
  041f:76               push0 
  0420:85 01              lat temp1 
  0422:04                 sub 
  0423:36                push 
  0424:39 03            pushi 3 // $3 y
  0426:76               push0 
  0427:81 00              lag  
  0429:4a 04             send 4 

  042b:36                push 
  042c:7c            pushSelf 
  042d:81 00              lag  
  042f:4a 0c             send c 


        code_0431
  0431:3a                toss 
  0432:32 002b            jmp code_0460 

        code_0435
  0435:3c                 dup 
  0436:35 01              ldi 1 
  0438:1a                 eq? 
  0439:30 000e            bnt code_044a 
  043c:39 69            pushi 69 // $69 hide
  043e:76               push0 
  043f:81 00              lag  
  0441:4a 04             send 4 

  0443:35 02              ldi 2 
  0445:65 10             aTop cycles 
  0447:32 0016            jmp code_0460 

        code_044a
  044a:3c                 dup 
  044b:35 02              ldi 2 
  044d:1a                 eq? 
  044e:30 000f            bnt code_0460 
  0451:38 008e          pushi 8e // $8e setScript
  0454:78               push1 
  0455:76               push0 
  0456:38 0179          pushi 179 // $179 newRoom
  0459:78               push1 
  045a:67 1a             pTos register 
  045c:81 02              lag  
  045e:4a 0c             send c 


        code_0460
  0460:3a                toss 
  0461:48                 ret 
    )

)

// 06ba
(instance publiceRS of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0544
  0544:3f 02             link 2 // (var $2)
  0546:87 01              lap param1 
  0548:65 0a             aTop state 
  054a:36                push 
  054b:3c                 dup 
  054c:35 00              ldi 0 
  054e:1a                 eq? 
  054f:30 0150            bnt code_06a2 
  0552:35 00              ldi 0 
  0554:65 10             aTop cycles 
  0556:76               push0 
  0557:45 02 00         callb procedure_0002 0 //  

  055a:39 03            pushi 3 // $3 y
  055c:39 05            pushi 5 // $5 view
  055e:76               push0 
  055f:81 00              lag  
  0561:4a 04             send 4 

  0563:36                push 
  0564:39 06            pushi 6 // $6 loop
  0566:76               push0 
  0567:81 00              lag  
  0569:4a 04             send 4 

  056b:36                push 
  056c:39 07            pushi 7 // $7 cel
  056e:76               push0 
  056f:81 00              lag  
  0571:4a 04             send 4 

  0573:36                push 
  0574:43 10 06         callk CelHigh 6 

  0577:a5 00              sat temp0 
  0579:39 03            pushi 3 // $3 y
  057b:39 05            pushi 5 // $5 view
  057d:76               push0 
  057e:81 00              lag  
  0580:4a 04             send 4 

  0582:36                push 
  0583:39 06            pushi 6 // $6 loop
  0585:76               push0 
  0586:81 00              lag  
  0588:4a 04             send 4 

  058a:36                push 
  058b:39 07            pushi 7 // $7 cel
  058d:76               push0 
  058e:81 00              lag  
  0590:4a 04             send 4 

  0592:36                push 
  0593:43 0f 06         callk CelWide 6 

  0596:a5 01              sat temp1 
  0598:67 1a             pTos register 
  059a:3c                 dup 
  059b:38 0184          pushi 184 // $184 north
  059e:76               push0 
  059f:63 08             pToa client 
  05a1:4a 04             send 4 

  05a3:1a                 eq? 
  05a4:30 0025            bnt code_05cc 
  05a7:76               push0 
  05a8:40 fef0 00        call proc_049c 0 

  05ac:39 03            pushi 3 // $3 y
  05ae:78               push1 
  05af:38 0136          pushi 136 // $136 horizon
  05b2:76               push0 
  05b3:81 02              lag  
  05b5:4a 04             send 4 

  05b7:36                push 
  05b8:39 37            pushi 37 // $37 yStep
  05ba:76               push0 
  05bb:81 00              lag  
  05bd:4a 04             send 4 

  05bf:02                 add 
  05c0:36                push 
  05c1:81 00              lag  
  05c3:4a 06             send 6 

  05c5:35 01              ldi 1 
  05c7:65 10             aTop cycles 
  05c9:32 00d2            jmp code_069e 

        code_05cc
  05cc:3c                 dup 
  05cd:38 0186          pushi 186 // $186 south
  05d0:76               push0 
  05d1:63 08             pToa client 
  05d3:4a 04             send 4 

  05d5:1a                 eq? 
  05d6:30 0037            bnt code_0610 
  05d9:76               push0 
  05da:40 febe 00        call proc_049c 0 

  05de:39 03            pushi 3 // $3 y
  05e0:78               push1 
  05e1:38 00bd          pushi bd // $bd maskView
  05e4:85 00              lat temp0 
  05e6:02                 add 
  05e7:36                push 
  05e8:38 011b          pushi 11b // $11b setMotion
  05eb:39 04            pushi 4 // $4 x
  05ed:51 24            class PolyPath 
  05ef:36                push 
  05f0:39 04            pushi 4 // $4 x
  05f2:76               push0 
  05f3:81 00              lag  
  05f5:4a 04             send 4 

  05f7:36                push 
  05f8:38 00bd          pushi bd // $bd maskView
  05fb:39 37            pushi 37 // $37 yStep
  05fd:76               push0 
  05fe:81 00              lag  
  0600:4a 04             send 4 

  0602:36                push 
  0603:35 02              ldi 2 
  0605:06                 mul 
  0606:04                 sub 
  0607:36                push 
  0608:7c            pushSelf 
  0609:81 00              lag  
  060b:4a 12             send 12 

  060d:32 008e            jmp code_069e 

        code_0610
  0610:3c                 dup 
  0611:38 0185          pushi 185 // $185 east
  0614:76               push0 
  0615:63 08             pToa client 
  0617:4a 04             send 4 

  0619:1a                 eq? 
  061a:30 003a            bnt code_0657 
  061d:76               push0 
  061e:40 fec7 00        call proc_04e9 0 

  0622:39 04            pushi 4 // $4 x
  0624:78               push1 
  0625:38 013f          pushi 13f // $13f inputLineAddr
  0628:8d 01              lst temp1 
  062a:35 02              ldi 2 
  062c:08                 div 
  062d:02                 add 
  062e:36                push 
  062f:38 011b          pushi 11b // $11b setMotion
  0632:39 04            pushi 4 // $4 x
  0634:51 24            class PolyPath 
  0636:36                push 
  0637:38 013f          pushi 13f // $13f inputLineAddr
  063a:39 36            pushi 36 // $36 xStep
  063c:76               push0 
  063d:81 00              lag  
  063f:4a 04             send 4 

  0641:36                push 
  0642:35 02              ldi 2 
  0644:06                 mul 
  0645:04                 sub 
  0646:36                push 
  0647:39 03            pushi 3 // $3 y
  0649:76               push0 
  064a:81 00              lag  
  064c:4a 04             send 4 

  064e:36                push 
  064f:7c            pushSelf 
  0650:81 00              lag  
  0652:4a 12             send 12 

  0654:32 0047            jmp code_069e 

        code_0657
  0657:3c                 dup 
  0658:38 0187          pushi 187 // $187 west
  065b:76               push0 
  065c:63 08             pToa client 
  065e:4a 04             send 4 

  0660:1a                 eq? 
  0661:30 0036            bnt code_069a 
  0664:76               push0 
  0665:40 fe80 00        call proc_04e9 0 

  0669:39 04            pushi 4 // $4 x
  066b:78               push1 
  066c:76               push0 
  066d:8d 01              lst temp1 
  066f:35 02              ldi 2 
  0671:08                 div 
  0672:04                 sub 
  0673:36                push 
  0674:38 011b          pushi 11b // $11b setMotion
  0677:39 04            pushi 4 // $4 x
  0679:51 24            class PolyPath 
  067b:36                push 
  067c:76               push0 
  067d:39 36            pushi 36 // $36 xStep
  067f:76               push0 
  0680:81 00              lag  
  0682:4a 04             send 4 

  0684:36                push 
  0685:35 02              ldi 2 
  0687:06                 mul 
  0688:02                 add 
  0689:36                push 
  068a:39 03            pushi 3 // $3 y
  068c:76               push0 
  068d:81 00              lag  
  068f:4a 04             send 4 

  0691:36                push 
  0692:7c            pushSelf 
  0693:81 00              lag  
  0695:4a 12             send 12 

  0697:32 0004            jmp code_069e 

        code_069a
  069a:35 01              ldi 1 
  069c:65 10             aTop cycles 

        code_069e
  069e:3a                toss 
  069f:32 0010            jmp code_06b2 

        code_06a2
  06a2:3c                 dup 
  06a3:35 01              ldi 1 
  06a5:1a                 eq? 
  06a6:30 0009            bnt code_06b2 
  06a9:76               push0 
  06aa:45 03 00         callb procedure_0003 0 //  

  06ad:39 6c            pushi 6c // $6c dispose
  06af:76               push0 
  06b0:54 04             self 4 


        code_06b2
  06b2:3a                toss 
  06b3:48                 ret 
    )

)



(procedure proc_049c
  049c:39 04            pushi 4 // $4 x
  049e:76               push0 
  049f:81 00              lag  
  04a1:4a 04             send 4 

  04a3:36                push 
  04a4:35 00              ldi 0 
  04a6:22                 lt? 
  04a7:30 0018            bnt code_04c2 
  04aa:39 04            pushi 4 // $4 x
  04ac:78               push1 
  04ad:76               push0 
  04ae:39 36            pushi 36 // $36 xStep
  04b0:76               push0 
  04b1:81 00              lag  
  04b3:4a 04             send 4 

  04b5:36                push 
  04b6:35 02              ldi 2 
  04b8:06                 mul 
  04b9:02                 add 
  04ba:36                push 
  04bb:81 00              lag  
  04bd:4a 06             send 6 

  04bf:32 0026            jmp code_04e8 

        code_04c2
  04c2:39 04            pushi 4 // $4 x
  04c4:76               push0 
  04c5:81 00              lag  
  04c7:4a 04             send 4 

  04c9:36                push 
  04ca:34 013f            ldi 13f 
  04cd:1e                 gt? 
  04ce:30 0017            bnt code_04e8 
  04d1:39 04            pushi 4 // $4 x
  04d3:78               push1 
  04d4:38 013f          pushi 13f // $13f inputLineAddr
  04d7:39 36            pushi 36 // $36 xStep
  04d9:76               push0 
  04da:81 00              lag  
  04dc:4a 04             send 4 

  04de:36                push 
  04df:35 02              ldi 2 
  04e1:06                 mul 
  04e2:04                 sub 
  04e3:36                push 
  04e4:81 00              lag  
  04e6:4a 06             send 6 


        code_04e8
  04e8:48                 ret 
)

(procedure proc_04e9
  04e9:39 03            pushi 3 // $3 y
  04eb:76               push0 
  04ec:81 00              lag  
  04ee:4a 04             send 4 

  04f0:36                push 
  04f1:38 0136          pushi 136 // $136 horizon
  04f4:76               push0 
  04f5:81 02              lag  
  04f7:4a 04             send 4 

  04f9:22                 lt? 
  04fa:30 0020            bnt code_051d 
  04fd:39 03            pushi 3 // $3 y
  04ff:78               push1 
  0500:38 0136          pushi 136 // $136 horizon
  0503:76               push0 
  0504:81 02              lag  
  0506:4a 04             send 4 

  0508:36                push 
  0509:39 37            pushi 37 // $37 yStep
  050b:76               push0 
  050c:81 00              lag  
  050e:4a 04             send 4 

  0510:36                push 
  0511:35 02              ldi 2 
  0513:06                 mul 
  0514:02                 add 
  0515:36                push 
  0516:81 00              lag  
  0518:4a 06             send 6 

  051a:32 0026            jmp code_0543 

        code_051d
  051d:39 03            pushi 3 // $3 y
  051f:76               push0 
  0520:81 00              lag  
  0522:4a 04             send 4 

  0524:36                push 
  0525:34 00bd            ldi bd 
  0528:1e                 gt? 
  0529:30 0017            bnt code_0543 
  052c:39 03            pushi 3 // $3 y
  052e:78               push1 
  052f:38 00bd          pushi bd // $bd maskView
  0532:39 37            pushi 37 // $37 yStep
  0534:76               push0 
  0535:81 00              lag  
  0537:4a 04             send 4 

  0539:36                push 
  053a:35 02              ldi 2 
  053c:06                 mul 
  053d:04                 sub 
  053e:36                push 
  053f:81 00              lag  
  0541:4a 06             send 6 


        code_0543
  0543:48                 ret 
)

