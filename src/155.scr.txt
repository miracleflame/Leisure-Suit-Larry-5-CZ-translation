(script 155)

(string
    string_0318 "NONE"
    string_031d "Five Strikes and You're Out!"
    string_033a "Please enter your new password:"
    string_035a "Write this down!"
    string_036b "Restore"
    string_0373 "Continue"
    string_037c "Welcome back!"
    string_038a "passwordTest"
    string_0397 "MEMORY.DRV"
    string_03a2 "If you would like to use a\npassword to protect this game,\nselect \"Password\" below."
    string_03f5 "Why bother?"
    string_0401 "Password"
    string_040a "An ounce of prevention..."
    string_0424 "Please enter your password,\nexactly as you typed it:"
    string_0459 "Ok"
    string_045c "Change"
    string_0463 "Hey! Is that you again?"
    string_047b "\n"
    string_047d ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0000
    local4 = $0000
    local5 = $0000
    local6 = $0000
    local7 = $0000
    local8 = $0000
    local9 = $0000
    local10 = $0000
    local11 = $0000
    local12 = $0000
    local13 = $0000
    local14 = $0000
    local15 = $0000
    local16 = $0000
    local17 = $0000
    local18 = $0000
    local19 = $0000
    local20 = $0000
)

// 0116
(instance publicpasswordTest of Rm
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $6e
        style $7
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:3f 01             link 1 // (var $1)
  0010:39 6b            pushi 6b // $6b init
  0012:76               push0 
  0013:57 43 04         super Rm 4 

  0016:76               push0 
  0017:40 0255 00        call proc_0270 0 

  001b:7a               push2 
  001c:5b 02 0a           lea 2 a 
  001f:36                push 
  0020:72 0318          lofsa $0318 // NONE
  0023:36                push 
  0024:43 45 04         callk StrCmp 4 

  0027:30 0007            bnt code_0031 
  002a:35 00              ldi 0 
  002c:a3 00              sal local0 
  002e:32 000c            jmp code_003d 

        code_0031
  0031:7a               push2 
  0032:5b 02 00           lea 2 0 
  0035:36                push 
  0036:5b 02 0a           lea 2 a 
  0039:36                push 
  003a:43 47 04         callk StrCpy 4 


        code_003d
  003d:8b 14              lsl local20 
  003f:35 05              ldi 5 
  0041:22                 lt? 
  0042:30 001d            bnt code_0062 
  0045:76               push0 
  0046:40 0126 00        call proc_0170 0 

  004a:a5 00              sat temp0 
  004c:18                 not 
  004d:2e 000c             bt code_005c 
  0050:7a               push2 
  0051:5b 02 0a           lea 2 a 
  0054:36                push 
  0055:5b 02 00           lea 2 0 
  0058:36                push 
  0059:43 45 04         callk StrCmp 4 


        code_005c
  005c:30 0003            bnt code_0062 
  005f:32 ffdb            jmp code_003d 

        code_0062
  0062:8b 14              lsl local20 
  0064:35 05              ldi 5 
  0066:1a                 eq? 
  0067:30 0018            bnt code_0082 
  006a:39 04            pushi 4 // $4 x
  006c:38 009b          pushi 9b // $9b owner
  006f:76               push0 
  0070:39 50            pushi 50 // $50 title
  0072:72 031d          lofsa $031d // Five Strikes and You're Out!
  0075:36                push 
  0076:47 ff 00 08      calle ff procedure_0000 8 //  

  007a:35 01              ldi 1 
  007c:a1 04              sag  
  007e:48                 ret 
  007f:32 0042            jmp code_00c4 

        code_0082
  0082:8d 00              lst temp0 
  0084:35 02              ldi 2 
  0086:1a                 eq? 
  0087:30 003a            bnt code_00c4 
  008a:39 03            pushi 3 // $3 y
  008c:5b 02 00           lea 2 0 
  008f:36                push 
  0090:39 14            pushi 14 // $14 brLeft
  0092:72 033a          lofsa $033a // Please enter your new password:
  0095:36                push 
  0096:47 ff 02 06      calle ff procedure_0002 6 //  

  009a:76               push0 
  009b:40 0154 00        call proc_01f3 0 

  009f:7a               push2 
  00a0:5b 02 0a           lea 2 a 
  00a3:36                push 
  00a4:5b 02 00           lea 2 0 
  00a7:36                push 
  00a8:43 47 04         callk StrCpy 4 

  00ab:76               push0 
  00ac:40 0219 00        call proc_02c9 0 

  00b0:39 05            pushi 5 // $5 view
  00b2:38 009b          pushi 9b // $9b owner
  00b5:78               push1 
  00b6:5b 02 00           lea 2 0 
  00b9:36                push 
  00ba:39 50            pushi 50 // $50 title
  00bc:72 035a          lofsa $035a // Write this down!
  00bf:36                push 
  00c0:47 ff 04 0a      calle ff procedure_0004 a //  


        code_00c4
  00c4:78               push1 
  00c5:39 6f            pushi 6f // $6f isKindOf
  00c7:43 08 02         callk DrawPic 2 

  00ca:39 0f            pushi f // $f lsBottom
  00cc:38 009b          pushi 9b // $9b owner
  00cf:7a               push2 
  00d0:39 51            pushi 51 // $51 button
  00d2:72 036b          lofsa $036b // Restore
  00d5:36                push 
  00d6:78               push1 
  00d7:39 51            pushi 51 // $51 button
  00d9:72 0373          lofsa $0373 // Continue
  00dc:36                push 
  00dd:76               push0 
  00de:39 50            pushi 50 // $50 title
  00e0:72 037c          lofsa $037c // Welcome back!
  00e3:36                push 
  00e4:39 46            pushi 46 // $46 width
  00e6:38 00a0          pushi a0 // $a0 mute
  00e9:39 43            pushi 43 // $43 at
  00eb:39 03            pushi 3 // $3 y
  00ed:39 ff            pushi ff // $ff syncNum
  00ef:47 ff 00 1e      calle ff procedure_0000 1e //  

  00f3:30 0007            bnt code_00fd 
  00f6:39 4f            pushi 4f // $4f restore
  00f8:76               push0 
  00f9:81 01              lag  
  00fb:4a 04             send 4 


        code_00fd
  00fd:78               push1 
  00fe:38 03e1          pushi 3e1 // $3e1 sel_993
  0101:43 03 02         callk DisposeScript 2 

  0104:38 0179          pushi 179 // $179 newRoom
  0107:78               push1 
  0108:38 00a0          pushi a0 // $a0 mute
  010b:81 02              lag  
  010d:4a 06             send 6 

  010f:48                 ret 
    )

)

// 0158
(instance MEMORY.DRV of Class_993_0
    (properties
        handle $0
    )
)



(procedure proc_0170
  0170:3f 01             link 1 // (var $1)
  0172:7a               push2 
  0173:5b 02 0a           lea 2 a 
  0176:36                push 
  0177:72 0318          lofsa $0318 // NONE
  017a:36                push 
  017b:43 45 04         callk StrCmp 4 

  017e:18                 not 
  017f:30 0030            bnt code_01b2 
  0182:39 0f            pushi f // $f lsBottom
  0184:72 03a2          lofsa $03a2 // If you would like to use a
password to protect this game,
select "Password" below.
  0187:36                push 
  0188:39 6a            pushi 6a // $6a new
  018a:39 51            pushi 51 // $51 button
  018c:72 03f5          lofsa $03f5 // Why bother?
  018f:36                push 
  0190:78               push1 
  0191:39 51            pushi 51 // $51 button
  0193:72 0401          lofsa $0401 // Password
  0196:36                push 
  0197:7a               push2 
  0198:39 50            pushi 50 // $50 title
  019a:72 040a          lofsa $040a // An ounce of prevention...
  019d:36                push 
  019e:39 46            pushi 46 // $46 width
  01a0:38 00a0          pushi a0 // $a0 mute
  01a3:39 43            pushi 43 // $43 at
  01a5:39 03            pushi 3 // $3 y
  01a7:39 ff            pushi ff // $ff syncNum
  01a9:47 ff 00 1e      calle ff procedure_0000 1e //  

  01ad:a5 00              sat temp0 
  01af:32 0039            jmp code_01eb 

        code_01b2
  01b2:c3 14              +al local20 
  01b4:39 13            pushi 13 // $13 brTop
  01b6:72 0424          lofsa $0424 // Please enter your password,
exactly as you typed it:
  01b9:36                push 
  01ba:39 6a            pushi 6a // $6a new
  01bc:39 29            pushi 29 // $29 edit
  01be:5b 02 00           lea 2 0 
  01c1:36                push 
  01c2:39 14            pushi 14 // $14 brLeft
  01c4:39 6a            pushi 6a // $6a new
  01c6:39 51            pushi 51 // $51 button
  01c8:72 0459          lofsa $0459 // Ok
  01cb:36                push 
  01cc:78               push1 
  01cd:39 51            pushi 51 // $51 button
  01cf:72 045c          lofsa $045c // Change
  01d2:36                push 
  01d3:7a               push2 
  01d4:39 50            pushi 50 // $50 title
  01d6:72 0463          lofsa $0463 // Hey! Is that you again?
  01d9:36                push 
  01da:39 46            pushi 46 // $46 width
  01dc:38 00a0          pushi a0 // $a0 mute
  01df:39 43            pushi 43 // $43 at
  01e1:39 03            pushi 3 // $3 y
  01e3:39 ff            pushi ff // $ff syncNum
  01e5:47 ff 00 26      calle ff procedure_0000 26 //  

  01e9:a5 00              sat temp0 

        code_01eb
  01eb:76               push0 
  01ec:40 0003 00        call proc_01f3 0 

  01f0:85 00              lat temp0 
  01f2:48                 ret 
)

(procedure proc_01f3
  01f3:3f 02             link 2 // (var $2)
  01f5:35 00              ldi 0 
  01f7:a5 00              sat temp0 

        code_01f9
  01f9:8d 00              lst temp0 
  01fb:78               push1 
  01fc:5b 02 00           lea 2 0 
  01ff:36                push 
  0200:43 46 02         callk StrLen 2 

  0203:22                 lt? 
  0204:30 0029            bnt code_0230 
  0207:7a               push2 
  0208:5b 02 00           lea 2 0 
  020b:36                push 
  020c:8d 00              lst temp0 
  020e:43 62 04         callk StrAt 4 

  0211:a5 01              sat temp1 
  0213:36                push 
  0214:35 5a              ldi 5a 
  0216:1e                 gt? 
  0217:30 0011            bnt code_022b 
  021a:39 03            pushi 3 // $3 y
  021c:5b 02 00           lea 2 0 
  021f:36                push 
  0220:8d 00              lst temp0 
  0222:8d 01              lst temp1 
  0224:35 20              ldi 20 
  0226:04                 sub 
  0227:36                push 
  0228:43 62 06         callk StrAt 6 


        code_022b
  022b:c5 00              +at temp0 
  022d:32 ffc9            jmp code_01f9 

        code_0230
  0230:48                 ret 
)

(procedure proc_0231
  0231:3f 03             link 3 // (var $3)
  0233:35 00              ldi 0 
  0235:a5 00              sat temp0 

        code_0237
  0237:8d 00              lst temp0 
  0239:78               push1 
  023a:5b 02 0a           lea 2 a 
  023d:36                push 
  023e:43 46 02         callk StrLen 2 

  0241:22                 lt? 
  0242:30 002a            bnt code_026f 
  0245:38 00a7          pushi a7 // $a7 enable
  0248:85 00              lat temp0 
  024a:04                 sub 
  024b:a5 02              sat temp2 
  024d:7a               push2 
  024e:5b 02 0a           lea 2 a 
  0251:36                push 
  0252:8d 00              lst temp0 
  0254:43 62 04         callk StrAt 4 

  0257:36                push 
  0258:85 02              lat temp2 
  025a:10                 xor 
  025b:a5 01              sat temp1 
  025d:39 03            pushi 3 // $3 y
  025f:5b 02 0a           lea 2 a 
  0262:36                push 
  0263:8d 00              lst temp0 
  0265:8d 01              lst temp1 
  0267:43 62 06         callk StrAt 6 

  026a:c5 00              +at temp0 
  026c:32 ffc8            jmp code_0237 

        code_026f
  026f:48                 ret 
)

(procedure proc_0270
  0270:3f 0a             link a // (var $a)
  0272:38 00b5          pushi b5 // $b5 open
  0275:78               push1 
  0276:78               push1 
  0277:72 015e          lofsa $015e // MEMORY.DRV
  027a:4a 06             send 6 

  027c:36                push 
  027d:35 00              ldi 0 
  027f:1c                 ne? 
  0280:30 002a            bnt code_02ad 
  0283:38 014b          pushi 14b // $14b readString
  0286:7a               push2 
  0287:5b 02 0a           lea 2 a 
  028a:36                push 
  028b:39 14            pushi 14 // $14 brLeft
  028d:38 014e          pushi 14e // $14e read
  0290:7a               push2 
  0291:5b 04 00           lea 4 0 
  0294:36                push 
  0295:39 08            pushi 8 // $8 underBits
  0297:38 0150          pushi 150 // $150 close
  029a:76               push0 
  029b:72 015e          lofsa $015e // MEMORY.DRV
  029e:4a 14             send 14 

  02a0:78               push1 
  02a1:5b 04 00           lea 4 0 
  02a4:36                push 
  02a5:43 4a 02         callk ReadNumber 2 

  02a8:a1 a3              sag  
  02aa:32 0016            jmp code_02c3 

        code_02ad
  02ad:7a               push2 
  02ae:5b 02 0a           lea 2 a 
  02b1:36                push 
  02b2:72 0318          lofsa $0318 // NONE
  02b5:36                push 
  02b6:43 47 04         callk StrCpy 4 

  02b9:34 03e8            ldi 3e8 
  02bc:a1 a3              sag  
  02be:76               push0 
  02bf:40 0006 00        call proc_02c9 0 


        code_02c3
  02c3:76               push0 
  02c4:40 ff69 00        call proc_0231 0 

  02c8:48                 ret 
)

(procedure proc_02c9
  02c9:3f 0a             link a // (var $a)
  02cb:38 00b5          pushi b5 // $b5 open
  02ce:78               push1 
  02cf:7a               push2 
  02d0:72 015e          lofsa $015e // MEMORY.DRV
  02d3:4a 06             send 6 

  02d5:36                push 
  02d6:35 00              ldi 0 
  02d8:1c                 ne? 
  02d9:30 0036            bnt code_0312 
  02dc:76               push0 
  02dd:40 ff50 00        call proc_0231 0 

  02e1:39 04            pushi 4 // $4 x
  02e3:5b 04 00           lea 4 0 
  02e6:36                push 
  02e7:38 009b          pushi 9b // $9b owner
  02ea:39 03            pushi 3 // $3 y
  02ec:89 a3              lsg  
  02ee:43 48 08         callk Format 8 

  02f1:38 014c          pushi 14c // $14c writeString
  02f4:78               push1 
  02f5:5b 02 0a           lea 2 a 
  02f8:36                push 
  02f9:38 014c          pushi 14c // $14c writeString
  02fc:78               push1 
  02fd:72 047b          lofsa $047b // 

  0300:36                push 
  0301:38 014c          pushi 14c // $14c writeString
  0304:78               push1 
  0305:5b 04 00           lea 4 0 
  0308:36                push 
  0309:38 0150          pushi 150 // $150 close
  030c:76               push0 
  030d:72 015e          lofsa $015e // MEMORY.DRV
  0310:4a 16             send 16 


        code_0312
  0312:48                 ret 
  0313:00                bnot 
)

