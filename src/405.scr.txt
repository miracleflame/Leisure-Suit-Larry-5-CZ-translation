(script 405)

(string
    string_07f6 "rm405"
    string_07fc "the door"
    string_0805 "ownersDoor"
    string_0810 "clubOwner"
    string_081a "the Piano Pit Manager"
    string_0830 "ownerBust"
    string_083a "ownerEyes"
    string_0844 "ownerMouth"
    string_084f "sCartoon"
)

(said
)

(local
    local0 = $0000
)

// 00b4
(instance publicrm405 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $195
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $190
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:39 05            pushi 5 // $5 view
  0010:38 0080          pushi 80 // $80 indexOf
  0013:38 0195          pushi 195 // $195 maxPause
  0016:38 0196          pushi 196 // $196 minCycles
  0019:38 0197          pushi 197 // $197 maxCycles
  001c:38 057f          pushi 57f // $57f sel_1407
  001f:46 03be 0000 0a  calle 3be procedure_0000 a //  

  0025:39 6b            pushi 6b // $6b init
  0027:76               push0 
  0028:39 05            pushi 5 // $5 view
  002a:78               push1 
  002b:38 0196          pushi 196 // $196 minCycles
  002e:81 00              lag  
  0030:4a 0a             send a 

  0032:39 6b            pushi 6b // $6b init
  0034:76               push0 
  0035:38 0096          pushi 96 // $96 setCycle
  0038:78               push1 
  0039:51 17            class Fwd 
  003b:36                push 
  003c:72 0186          lofsa $0186 // clubOwner
  003f:4a 0a             send a 

  0041:38 0146          pushi 146 // $146 edgeHit
  0044:78               push1 
  0045:76               push0 
  0046:38 00a2          pushi a2 // $a2 setLoop
  0049:78               push1 
  004a:78               push1 
  004b:81 00              lag  
  004d:4a 0c             send c 

  004f:39 6b            pushi 6b // $6b init
  0051:76               push0 
  0052:38 008b          pushi 8b // $8b caller
  0055:78               push1 
  0056:72 00ba          lofsa $00ba // rm405
  0059:36                push 
  005a:72 0104          lofsa $0104 // ownersDoor
  005d:4a 0a             send a 

  005f:39 2b            pushi 2b // $2b number
  0061:78               push1 
  0062:38 0195          pushi 195 // $195 maxPause
  0065:39 66            pushi 66 // $66 flags
  0067:78               push1 
  0068:78               push1 
  0069:38 00a2          pushi a2 // $a2 setLoop
  006c:78               push1 
  006d:39 ff            pushi ff // $ff syncNum
  006f:39 2a            pushi 2a // $2a play
  0071:76               push0 
  0072:81 66              lag  
  0074:4a 16             send 16 

  0076:39 6b            pushi 6b // $6b init
  0078:76               push0 
  0079:57 72 04         super LLRoom 4 

  007c:48                 ret 
    )

    (method (dispose) // method_0097
  0097:38 009f          pushi 9f // $9f fade
  009a:39 05            pushi 5 // $5 view
  009c:76               push0 
  009d:39 0f            pushi f // $f lsBottom
  009f:39 0c            pushi c // $c nsRight
  00a1:78               push1 
  00a2:7c            pushSelf 
  00a3:81 66              lag  
  00a5:4a 0e             send e 

  00a7:39 6c            pushi 6c // $6c dispose
  00a9:76               push0 
  00aa:57 72 04         super LLRoom 4 

  00ad:48                 ret 
    )

    (method (cue) // method_007d
  007d:39 20            pushi 20 // $20 state
  007f:76               push0 
  0080:72 0104          lofsa $0104 // ownersDoor
  0083:4a 04             send 4 

  0085:36                push 
  0086:35 00              ldi 0 
  0088:1a                 eq? 
  0089:30 000a            bnt code_0096 
  008c:38 008e          pushi 8e // $8e setScript
  008f:78               push1 
  0090:72 07c8          lofsa $07c8 // sCartoon
  0093:36                push 
  0094:54 06             self 6 


        code_0096
  0096:48                 ret 
    )

)

// 00fe
(instance ownersDoor of Door
    (properties
        x $5e
        y $72
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $7fc
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $6d
        approachY $7c
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $195
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $4000
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        entranceTo $190
        locked $0
        openSnd $28
        closeSnd $29
        state $0
        doubleDoor $0
        forceOpen $0
        caller $0
        moveToX $47
        moveToY $7b
        enterType $0
        exitType $0
        closeScript $0
        openScript $0
    )
)

// 0180
(instance clubOwner of Prop
    (properties
        x $da
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $197
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0202
(instance the Piano Pit Manager of Talker
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $d
        nsLeft $a
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $57f
        loop $3
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        bust $0
        eyes $0
        mouth $0
        ticks $0
        disposeWhenDone $1
        caller $0
        viewInPrint $1
        useFrame $0
        talkWidth $13e
    )
    (method (init) // method_01e4
  01e4:72 02ea          lofsa $02ea // ownerEyes
  01e7:65 58             aTop eyes 
  01e9:72 0284          lofsa $0284 // ownerBust
  01ec:65 56             aTop bust 
  01ee:72 0350          lofsa $0350 // ownerMouth
  01f1:65 5a             aTop mouth 
  01f3:39 6b            pushi 6b // $6b init
  01f5:76               push0 
  01f6:59 01            &rest 1 
  01f8:57 6f 04         super Talker 4 

  01fb:48                 ret 
    )

)

// 027e
(instance ownerBust of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $57f
        loop $1
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 02e4
(instance ownerEyes of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $9
        nsLeft $1f
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $57f
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $46
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 034a
(instance ownerMouth of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $f
        nsLeft $24
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $57f
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $5
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 07c2
(instance sCartoon of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_03ae
  03ae:87 01              lap param1 
  03b0:65 0a             aTop state 
  03b2:36                push 
  03b3:3c                 dup 
  03b4:35 00              ldi 0 
  03b6:1a                 eq? 
  03b7:30 001f            bnt code_03d9 
  03ba:76               push0 
  03bb:45 02 00         callb procedure_0002 0 //  

  03be:38 011b          pushi 11b // $11b setMotion
  03c1:39 04            pushi 4 // $4 x
  03c3:51 1e            class MoveTo 
  03c5:36                push 
  03c6:38 00a5          pushi a5 // $a5 clean
  03c9:38 0089          pushi 89 // $89 register
  03cc:7c            pushSelf 
  03cd:39 42            pushi 42 // $42 setPri
  03cf:78               push1 
  03d0:39 0f            pushi f // $f lsBottom
  03d2:81 00              lag  
  03d4:4a 12             send 12 

  03d6:32 03e1            jmp code_07ba 

        code_03d9
  03d9:3c                 dup 
  03da:35 01              ldi 1 
  03dc:1a                 eq? 
  03dd:30 0014            bnt code_03f4 
  03e0:38 00a2          pushi a2 // $a2 setLoop
  03e3:78               push1 
  03e4:76               push0 
  03e5:38 0096          pushi 96 // $96 setCycle
  03e8:7a               push2 
  03e9:51 1a            class End 
  03eb:36                push 
  03ec:7c            pushSelf 
  03ed:81 00              lag  
  03ef:4a 0e             send e 

  03f1:32 03c6            jmp code_07ba 

        code_03f4
  03f4:3c                 dup 
  03f5:35 02              ldi 2 
  03f7:1a                 eq? 
  03f8:30 003e            bnt code_0439 
  03fb:38 0096          pushi 96 // $96 setCycle
  03fe:78               push1 
  03ff:76               push0 
  0400:38 0120          pushi 120 // $120 setCel
  0403:78               push1 
  0404:76               push0 
  0405:38 011d          pushi 11d // $11d stopUpd
  0408:76               push0 
  0409:72 0186          lofsa $0186 // clubOwner
  040c:4a 10             send 10 

  040e:39 08            pushi 8 // $8 underBits
  0410:89 00              lsg  
  0412:38 0195          pushi 195 // $195 maxPause
  0415:76               push0 
  0416:39 43            pushi 43 // $43 at
  0418:39 0f            pushi f // $f lsBottom
  041a:3c                 dup 
  041b:39 46            pushi 46 // $46 width
  041d:38 00a0          pushi a0 // $a0 mute
  0420:45 12 10         callb procedure_0012 10 //  

  0423:39 06            pushi 6 // $6 loop
  0425:72 0208          lofsa $0208 // the Piano Pit Manager
  0428:36                push 
  0429:38 0195          pushi 195 // $195 maxPause
  042c:78               push1 
  042d:39 6c            pushi 6c // $6c dispose
  042f:38 008b          pushi 8b // $8b caller
  0432:7c            pushSelf 
  0433:45 12 0c         callb procedure_0012 c //  

  0436:32 0381            jmp code_07ba 

        code_0439
  0439:3c                 dup 
  043a:35 03              ldi 3 
  043c:1a                 eq? 
  043d:30 0007            bnt code_0447 
  0440:35 1e              ldi 1e 
  0442:65 16             aTop ticks 
  0444:32 0373            jmp code_07ba 

        code_0447
  0447:3c                 dup 
  0448:35 04              ldi 4 
  044a:1a                 eq? 
  044b:30 0016            bnt code_0464 
  044e:39 06            pushi 6 // $6 loop
  0450:72 0208          lofsa $0208 // the Piano Pit Manager
  0453:36                push 
  0454:38 0195          pushi 195 // $195 maxPause
  0457:7a               push2 
  0458:39 6c            pushi 6c // $6c dispose
  045a:38 008b          pushi 8b // $8b caller
  045d:7c            pushSelf 
  045e:45 12 0c         callb procedure_0012 c //  

  0461:32 0356            jmp code_07ba 

        code_0464
  0464:3c                 dup 
  0465:35 05              ldi 5 
  0467:1a                 eq? 
  0468:30 0007            bnt code_0472 
  046b:35 7b              ldi 7b 
  046d:65 16             aTop ticks 
  046f:32 0348            jmp code_07ba 

        code_0472
  0472:3c                 dup 
  0473:35 06              ldi 6 
  0475:1a                 eq? 
  0476:30 001d            bnt code_0496 
  0479:39 08            pushi 8 // $8 underBits
  047b:89 00              lsg  
  047d:38 0195          pushi 195 // $195 maxPause
  0480:39 03            pushi 3 // $3 y
  0482:39 43            pushi 43 // $43 at
  0484:39 0f            pushi f // $f lsBottom
  0486:3c                 dup 
  0487:39 46            pushi 46 // $46 width
  0489:38 00a0          pushi a0 // $a0 mute
  048c:45 12 10         callb procedure_0012 10 //  

  048f:35 03              ldi 3 
  0491:65 12             aTop seconds 
  0493:32 0324            jmp code_07ba 

        code_0496
  0496:3c                 dup 
  0497:35 07              ldi 7 
  0499:1a                 eq? 
  049a:30 0017            bnt code_04b4 
  049d:39 06            pushi 6 // $6 loop
  049f:72 0208          lofsa $0208 // the Piano Pit Manager
  04a2:36                push 
  04a3:38 0195          pushi 195 // $195 maxPause
  04a6:39 04            pushi 4 // $4 x
  04a8:39 6c            pushi 6c // $6c dispose
  04aa:38 008b          pushi 8b // $8b caller
  04ad:7c            pushSelf 
  04ae:45 12 0c         callb procedure_0012 c //  

  04b1:32 0306            jmp code_07ba 

        code_04b4
  04b4:3c                 dup 
  04b5:35 08              ldi 8 
  04b7:1a                 eq? 
  04b8:30 0007            bnt code_04c2 
  04bb:35 3c              ldi 3c 
  04bd:65 16             aTop ticks 
  04bf:32 02f8            jmp code_07ba 

        code_04c2
  04c2:3c                 dup 
  04c3:35 09              ldi 9 
  04c5:1a                 eq? 
  04c6:30 0017            bnt code_04e0 
  04c9:39 06            pushi 6 // $6 loop
  04cb:72 0208          lofsa $0208 // the Piano Pit Manager
  04ce:36                push 
  04cf:38 0195          pushi 195 // $195 maxPause
  04d2:39 05            pushi 5 // $5 view
  04d4:39 6c            pushi 6c // $6c dispose
  04d6:38 008b          pushi 8b // $8b caller
  04d9:7c            pushSelf 
  04da:45 12 0c         callb procedure_0012 c //  

  04dd:32 02da            jmp code_07ba 

        code_04e0
  04e0:3c                 dup 
  04e1:35 0a              ldi a 
  04e3:1a                 eq? 
  04e4:30 0007            bnt code_04ee 
  04e7:35 3c              ldi 3c 
  04e9:65 16             aTop ticks 
  04eb:32 02cc            jmp code_07ba 

        code_04ee
  04ee:3c                 dup 
  04ef:35 0b              ldi b 
  04f1:1a                 eq? 
  04f2:30 0017            bnt code_050c 
  04f5:39 06            pushi 6 // $6 loop
  04f7:72 0208          lofsa $0208 // the Piano Pit Manager
  04fa:36                push 
  04fb:38 0195          pushi 195 // $195 maxPause
  04fe:39 06            pushi 6 // $6 loop
  0500:39 6c            pushi 6c // $6c dispose
  0502:38 008b          pushi 8b // $8b caller
  0505:7c            pushSelf 
  0506:45 12 0c         callb procedure_0012 c //  

  0509:32 02ae            jmp code_07ba 

        code_050c
  050c:3c                 dup 
  050d:35 0c              ldi c 
  050f:1a                 eq? 
  0510:30 0007            bnt code_051a 
  0513:35 3c              ldi 3c 
  0515:65 16             aTop ticks 
  0517:32 02a0            jmp code_07ba 

        code_051a
  051a:3c                 dup 
  051b:35 0d              ldi d 
  051d:1a                 eq? 
  051e:30 0028            bnt code_0549 
  0521:39 05            pushi 5 // $5 view
  0523:38 0195          pushi 195 // $195 maxPause
  0526:39 07            pushi 7 // $7 cel
  0528:39 43            pushi 43 // $43 at
  052a:39 ff            pushi ff // $ff syncNum
  052c:38 00b9          pushi b9 // $b9 bottom
  052f:45 0e 0a         callb procedure_000e a //  

  0532:39 06            pushi 6 // $6 loop
  0534:72 0208          lofsa $0208 // the Piano Pit Manager
  0537:36                push 
  0538:38 0195          pushi 195 // $195 maxPause
  053b:39 08            pushi 8 // $8 underBits
  053d:39 6c            pushi 6c // $6c dispose
  053f:38 008b          pushi 8b // $8b caller
  0542:7c            pushSelf 
  0543:45 12 0c         callb procedure_0012 c //  

  0546:32 0271            jmp code_07ba 

        code_0549
  0549:3c                 dup 
  054a:35 0e              ldi e 
  054c:1a                 eq? 
  054d:30 0007            bnt code_0557 
  0550:35 1e              ldi 1e 
  0552:65 16             aTop ticks 
  0554:32 0263            jmp code_07ba 

        code_0557
  0557:3c                 dup 
  0558:35 0f              ldi f 
  055a:1a                 eq? 
  055b:30 0017            bnt code_0575 
  055e:39 06            pushi 6 // $6 loop
  0560:72 0208          lofsa $0208 // the Piano Pit Manager
  0563:36                push 
  0564:38 0195          pushi 195 // $195 maxPause
  0567:39 09            pushi 9 // $9 nsTop
  0569:39 6c            pushi 6c // $6c dispose
  056b:38 008b          pushi 8b // $8b caller
  056e:7c            pushSelf 
  056f:45 12 0c         callb procedure_0012 c //  

  0572:32 0245            jmp code_07ba 

        code_0575
  0575:3c                 dup 
  0576:35 10              ldi 10 
  0578:1a                 eq? 
  0579:30 0007            bnt code_0583 
  057c:35 7b              ldi 7b 
  057e:65 16             aTop ticks 
  0580:32 0237            jmp code_07ba 

        code_0583
  0583:3c                 dup 
  0584:35 11              ldi 11 
  0586:1a                 eq? 
  0587:30 002d            bnt code_05b7 
  058a:39 08            pushi 8 // $8 underBits
  058c:89 00              lsg  
  058e:38 0195          pushi 195 // $195 maxPause
  0591:39 0a            pushi a // $a nsLeft
  0593:39 43            pushi 43 // $43 at
  0595:39 0f            pushi f // $f lsBottom
  0597:3c                 dup 
  0598:39 46            pushi 46 // $46 width
  059a:38 00a0          pushi a0 // $a0 mute
  059d:45 12 10         callb procedure_0012 10 //  

  05a0:39 06            pushi 6 // $6 loop
  05a2:72 0208          lofsa $0208 // the Piano Pit Manager
  05a5:36                push 
  05a6:38 0195          pushi 195 // $195 maxPause
  05a9:39 0b            pushi b // $b nsBottom
  05ab:39 6c            pushi 6c // $6c dispose
  05ad:38 008b          pushi 8b // $8b caller
  05b0:7c            pushSelf 
  05b1:45 12 0c         callb procedure_0012 c //  

  05b4:32 0203            jmp code_07ba 

        code_05b7
  05b7:3c                 dup 
  05b8:35 12              ldi 12 
  05ba:1a                 eq? 
  05bb:30 0007            bnt code_05c5 
  05be:35 7b              ldi 7b 
  05c0:65 16             aTop ticks 
  05c2:32 01f5            jmp code_07ba 

        code_05c5
  05c5:3c                 dup 
  05c6:35 13              ldi 13 
  05c8:1a                 eq? 
  05c9:30 002d            bnt code_05f9 
  05cc:39 08            pushi 8 // $8 underBits
  05ce:89 00              lsg  
  05d0:38 0195          pushi 195 // $195 maxPause
  05d3:39 0c            pushi c // $c nsRight
  05d5:39 43            pushi 43 // $43 at
  05d7:39 0f            pushi f // $f lsBottom
  05d9:3c                 dup 
  05da:39 46            pushi 46 // $46 width
  05dc:38 00a0          pushi a0 // $a0 mute
  05df:45 12 10         callb procedure_0012 10 //  

  05e2:39 06            pushi 6 // $6 loop
  05e4:72 0208          lofsa $0208 // the Piano Pit Manager
  05e7:36                push 
  05e8:38 0195          pushi 195 // $195 maxPause
  05eb:39 0d            pushi d // $d lsTop
  05ed:39 6c            pushi 6c // $6c dispose
  05ef:38 008b          pushi 8b // $8b caller
  05f2:7c            pushSelf 
  05f3:45 12 0c         callb procedure_0012 c //  

  05f6:32 01c1            jmp code_07ba 

        code_05f9
  05f9:3c                 dup 
  05fa:35 14              ldi 14 
  05fc:1a                 eq? 
  05fd:30 0007            bnt code_0607 
  0600:35 3c              ldi 3c 
  0602:65 16             aTop ticks 
  0604:32 01b3            jmp code_07ba 

        code_0607
  0607:3c                 dup 
  0608:35 15              ldi 15 
  060a:1a                 eq? 
  060b:30 0017            bnt code_0625 
  060e:39 06            pushi 6 // $6 loop
  0610:72 0208          lofsa $0208 // the Piano Pit Manager
  0613:36                push 
  0614:38 0195          pushi 195 // $195 maxPause
  0617:39 0e            pushi e // $e lsLeft
  0619:39 6c            pushi 6c // $6c dispose
  061b:38 008b          pushi 8b // $8b caller
  061e:7c            pushSelf 
  061f:45 12 0c         callb procedure_0012 c //  

  0622:32 0195            jmp code_07ba 

        code_0625
  0625:3c                 dup 
  0626:35 16              ldi 16 
  0628:1a                 eq? 
  0629:30 0007            bnt code_0633 
  062c:35 7b              ldi 7b 
  062e:65 16             aTop ticks 
  0630:32 0187            jmp code_07ba 

        code_0633
  0633:3c                 dup 
  0634:35 17              ldi 17 
  0636:1a                 eq? 
  0637:30 002d            bnt code_0667 
  063a:39 08            pushi 8 // $8 underBits
  063c:89 00              lsg  
  063e:38 0195          pushi 195 // $195 maxPause
  0641:39 0f            pushi f // $f lsBottom
  0643:39 43            pushi 43 // $43 at
  0645:39 0f            pushi f // $f lsBottom
  0647:3c                 dup 
  0648:39 46            pushi 46 // $46 width
  064a:38 00a0          pushi a0 // $a0 mute
  064d:45 12 10         callb procedure_0012 10 //  

  0650:39 06            pushi 6 // $6 loop
  0652:72 0208          lofsa $0208 // the Piano Pit Manager
  0655:36                push 
  0656:38 0195          pushi 195 // $195 maxPause
  0659:39 10            pushi 10 // $10 lsRight
  065b:39 6c            pushi 6c // $6c dispose
  065d:38 008b          pushi 8b // $8b caller
  0660:7c            pushSelf 
  0661:45 12 0c         callb procedure_0012 c //  

  0664:32 0153            jmp code_07ba 

        code_0667
  0667:3c                 dup 
  0668:35 18              ldi 18 
  066a:1a                 eq? 
  066b:30 0007            bnt code_0675 
  066e:35 3c              ldi 3c 
  0670:65 16             aTop ticks 
  0672:32 0145            jmp code_07ba 

        code_0675
  0675:3c                 dup 
  0676:35 19              ldi 19 
  0678:1a                 eq? 
  0679:30 002d            bnt code_06a9 
  067c:39 08            pushi 8 // $8 underBits
  067e:89 00              lsg  
  0680:38 0195          pushi 195 // $195 maxPause
  0683:39 11            pushi 11 // $11 signal
  0685:39 43            pushi 43 // $43 at
  0687:39 0f            pushi f // $f lsBottom
  0689:3c                 dup 
  068a:39 46            pushi 46 // $46 width
  068c:38 00a0          pushi a0 // $a0 mute
  068f:45 12 10         callb procedure_0012 10 //  

  0692:39 06            pushi 6 // $6 loop
  0694:72 0208          lofsa $0208 // the Piano Pit Manager
  0697:36                push 
  0698:38 0195          pushi 195 // $195 maxPause
  069b:39 12            pushi 12 // $12 illegalBits
  069d:39 6c            pushi 6c // $6c dispose
  069f:38 008b          pushi 8b // $8b caller
  06a2:7c            pushSelf 
  06a3:45 12 0c         callb procedure_0012 c //  

  06a6:32 0111            jmp code_07ba 

        code_06a9
  06a9:3c                 dup 
  06aa:35 1a              ldi 1a 
  06ac:1a                 eq? 
  06ad:30 0007            bnt code_06b7 
  06b0:35 7b              ldi 7b 
  06b2:65 16             aTop ticks 
  06b4:32 0103            jmp code_07ba 

        code_06b7
  06b7:3c                 dup 
  06b8:35 1b              ldi 1b 
  06ba:1a                 eq? 
  06bb:30 0024            bnt code_06e2 
  06be:39 07            pushi 7 // $7 cel
  06c0:78               push1 
  06c1:39 04            pushi 4 // $4 x
  06c3:38 0096          pushi 96 // $96 setCycle
  06c6:7a               push2 
  06c7:51 1b            class Beg 
  06c9:36                push 
  06ca:7c            pushSelf 
  06cb:81 00              lag  
  06cd:4a 0e             send e 

  06cf:38 011f          pushi 11f // $11f startUpd
  06d2:76               push0 
  06d3:38 0096          pushi 96 // $96 setCycle
  06d6:78               push1 
  06d7:51 17            class Fwd 
  06d9:36                push 
  06da:72 0186          lofsa $0186 // clubOwner
  06dd:4a 0a             send a 

  06df:32 00d8            jmp code_07ba 

        code_06e2
  06e2:3c                 dup 
  06e3:35 1c              ldi 1c 
  06e5:1a                 eq? 
  06e6:30 0036            bnt code_071f 
  06e9:39 08            pushi 8 // $8 underBits
  06eb:89 00              lsg  
  06ed:38 0195          pushi 195 // $195 maxPause
  06f0:39 13            pushi 13 // $13 brTop
  06f2:39 43            pushi 43 // $43 at
  06f4:39 0f            pushi f // $f lsBottom
  06f6:3c                 dup 
  06f7:39 46            pushi 46 // $46 width
  06f9:38 00a0          pushi a0 // $a0 mute
  06fc:45 12 10         callb procedure_0012 10 //  

  06ff:38 0096          pushi 96 // $96 setCycle
  0702:78               push1 
  0703:51 17            class Fwd 
  0705:36                push 
  0706:38 00a2          pushi a2 // $a2 setLoop
  0709:78               push1 
  070a:7a               push2 
  070b:38 011b          pushi 11b // $11b setMotion
  070e:39 04            pushi 4 // $4 x
  0710:51 1e            class MoveTo 
  0712:36                push 
  0713:39 6d            pushi 6d // $6d showStr
  0715:39 7c            pushi 7c // $7c prev
  0717:7c            pushSelf 
  0718:81 00              lag  
  071a:4a 18             send 18 

  071c:32 009b            jmp code_07ba 

        code_071f
  071f:3c                 dup 
  0720:35 1d              ldi 1d 
  0722:1a                 eq? 
  0723:30 0019            bnt code_073f 
  0726:38 0096          pushi 96 // $96 setCycle
  0729:78               push1 
  072a:76               push0 
  072b:81 00              lag  
  072d:4a 06             send 6 

  072f:39 42            pushi 42 // $42 setPri
  0731:78               push1 
  0732:39 ff            pushi ff // $ff syncNum
  0734:81 00              lag  
  0736:4a 06             send 6 

  0738:35 01              ldi 1 
  073a:65 10             aTop cycles 
  073c:32 007b            jmp code_07ba 

        code_073f
  073f:3c                 dup 
  0740:35 1e              ldi 1e 
  0742:1a                 eq? 
  0743:30 0035            bnt code_077b 
  0746:38 0096          pushi 96 // $96 setCycle
  0749:7a               push2 
  074a:51 1a            class End 
  074c:36                push 
  074d:7c            pushSelf 
  074e:72 0104          lofsa $0104 // ownersDoor
  0751:4a 08             send 8 

  0753:38 020f          pushi 20f // $20f openSnd
  0756:76               push0 
  0757:72 0104          lofsa $0104 // ownersDoor
  075a:4a 04             send 4 

  075c:30 005b            bnt code_07ba 
  075f:39 2b            pushi 2b // $2b number
  0761:78               push1 
  0762:38 020f          pushi 20f // $20f openSnd
  0765:76               push0 
  0766:72 0104          lofsa $0104 // ownersDoor
  0769:4a 04             send 4 

  076b:36                push 
  076c:39 2a            pushi 2a // $2a play
  076e:76               push0 
  076f:39 6a            pushi 6a // $6a new
  0771:76               push0 
  0772:51 0a            class Sound 
  0774:4a 04             send 4 

  0776:4a 0a             send a 

  0778:32 003f            jmp code_07ba 

        code_077b
  077b:3c                 dup 
  077c:35 1f              ldi 1f 
  077e:1a                 eq? 
  077f:30 0020            bnt code_07a2 
  0782:38 0096          pushi 96 // $96 setCycle
  0785:78               push1 
  0786:51 17            class Fwd 
  0788:36                push 
  0789:39 42            pushi 42 // $42 setPri
  078b:78               push1 
  078c:39 ff            pushi ff // $ff syncNum
  078e:38 011b          pushi 11b // $11b setMotion
  0791:39 04            pushi 4 // $4 x
  0793:51 1e            class MoveTo 
  0795:36                push 
  0796:39 47            pushi 47 // $47 wordFail
  0798:39 7b            pushi 7b // $7b last
  079a:7c            pushSelf 
  079b:81 00              lag  
  079d:4a 18             send 18 

  079f:32 0018            jmp code_07ba 

        code_07a2
  07a2:3c                 dup 
  07a3:35 20              ldi 20 
  07a5:1a                 eq? 
  07a6:30 0011            bnt code_07ba 
  07a9:38 0179          pushi 179 // $179 newRoom
  07ac:78               push1 
  07ad:38 0187          pushi 187 // $187 west
  07b0:76               push0 
  07b1:81 02              lag  
  07b3:4a 04             send 4 

  07b5:36                push 
  07b6:81 02              lag  
  07b8:4a 06             send 6 


        code_07ba
  07ba:3a                toss 
  07bb:48                 ret 
    )

)



