(script 994)

(string
    string_114a "cast"
    string_114f "features"
    string_1158 "theDoits"
    string_1161 "sFeatures"
    string_116b "sounds"
    string_1172 "mayPause"
    string_117b "regions"
    string_1183 "locales"
    string_118b "addToPics"
    string_1195 "controls"
    string_119e "timers"
    string_11a5 "aTOC"
    string_11aa "OK"
    string_11ad "Free Heap: %u Bytes\nLargest ptr: %u Bytes\nFreeHunk: %u KBytes\nLargest hunk: %u Bytes"
    string_1202 "Game"
    string_1207 "Rgn"
    string_120b "Rm"
    string_120e "Locale"
    string_1215 "SL"
    string_1218 "SAVE GAME"
    string_1222 "GAME"
    string_1227 "Cancel"
    string_122e "Change Directory"
    string_123f "RU"
    string_1242 "DNKR"
    string_1247 "fDC"
    string_124b "talkerEvent"
    string_1257 ""
)

(said
)

(local
)

// 0006
(instance cast of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 0022
(instance features of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 003e
(instance theDoits of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 0096
(instance sFeatures of EventHandler
    (properties
        elements $0
        size $0
    )
    (method (delete) // method_0058
  0058:39 54            pushi 54 // $54 delete
  005a:78               push1 
  005b:8f 01              lsp param1 
  005d:57 05 06         super EventHandler 6 

  0060:81 22              lag  
  0062:30 0029            bnt code_008e 
  0065:39 6f            pushi 6f // $6f isKindOf
  0067:78               push1 
  0068:51 02            class Collect 
  006a:36                push 
  006b:87 01              lap param1 
  006d:4a 06             send 6 

  006f:30 001c            bnt code_008e 
  0072:39 03            pushi 3 // $3 y
  0074:8f 01              lsp param1 
  0076:89 06              lsg  
  0078:89 1c              lsg  
  007a:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  0080:18                 not 
  0081:30 000a            bnt code_008e 
  0084:39 7a            pushi 7a // $7a release
  0086:76               push0 
  0087:39 6c            pushi 6c // $6c dispose
  0089:76               push0 
  008a:87 01              lap param1 
  008c:4a 08             send 8 


        code_008e
  008e:48                 ret 
  008f:00                bnot 
    )

)

// 00d4
(instance sounds of EventHandler
    (properties
        elements $0
        size $0
    )
    (method (pause) // method_00b4
  00b4:39 74            pushi 74 // $74 eachElementDo
  00b6:39 03            pushi 3 // $3 y
  00b8:39 63            pushi 63 // $63 perform
  00ba:72 0118          lofsa $0118 // mayPause
  00bd:36                push 
  00be:87 00              lap paramTotal 
  00c0:30 0005            bnt code_00c8 
  00c3:87 01              lap param1 
  00c5:32 0002            jmp code_00ca 

        code_00c8
  00c8:35 01              ldi 1 

        code_00ca
  00ca:36                push 
  00cb:54 0a             self a 

  00cd:48                 ret 
    )

)

// 0112
(instance mayPause of Code
    (properties
    )
    (method (doit) // method_00f2
  00f2:39 66            pushi 66 // $66 flags
  00f4:76               push0 
  00f5:87 01              lap param1 
  00f7:4a 04             send 4 

  00f9:36                push 
  00fa:35 01              ldi 1 
  00fc:12                 and 
  00fd:18                 not 
  00fe:30 000a            bnt code_010b 
  0101:38 009d          pushi 9d // $9d pause
  0104:78               push1 
  0105:8f 02              lsp param2 
  0107:87 01              lap param1 
  0109:4a 06             send 6 


        code_010b
  010b:48                 ret 
    )

)

// 012e
(instance regions of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 014a
(instance locales of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 017c
(instance addToPics of EventHandler
    (properties
        elements $0
        size $0
    )
    (method (doit) // method_0164
  0164:39 74            pushi 74 // $74 eachElementDo
  0166:7a               push2 
  0167:39 63            pushi 63 // $63 perform
  0169:72 02ac          lofsa $02ac // aTOC
  016c:36                push 
  016d:54 08             self 8 

  016f:78               push1 
  0170:67 08             pTos elements 
  0172:43 12 02         callk AddToPic 2 

  0175:48                 ret 
    )

)

// 019c
(instance controls of Controls
    (properties
        elements $0
        size $0
    )
)

// 01b8
(instance timers of Set
    (properties
        elements $0
        size $0
    )
)

// 02a6
(instance aTOC of Code
    (properties
    )
    (method (doit) // method_01d2
  01d2:3f 02             link 2 // (var $2)
  01d4:39 11            pushi 11 // $11 signal
  01d6:76               push0 
  01d7:87 01              lap param1 
  01d9:4a 04             send 4 

  01db:36                push 
  01dc:34 4000            ldi 4000 
  01df:14                  or 
  01e0:18                 not 
  01e1:30 00ba            bnt code_029e 
  01e4:39 36            pushi 36 // $36 xStep
  01e6:76               push0 
  01e7:81 00              lag  
  01e9:4a 04             send 4 

  01eb:36                push 
  01ec:39 03            pushi 3 // $3 y
  01ee:39 05            pushi 5 // $5 view
  01f0:76               push0 
  01f1:81 00              lag  
  01f3:4a 04             send 4 

  01f5:36                push 
  01f6:7a               push2 
  01f7:76               push0 
  01f8:43 0f 06         callk CelWide 6 

  01fb:36                push 
  01fc:35 02              ldi 2 
  01fe:08                 div 
  01ff:02                 add 
  0200:a5 00              sat temp0 
  0202:39 37            pushi 37 // $37 yStep
  0204:76               push0 
  0205:81 00              lag  
  0207:4a 04             send 4 

  0209:36                push 
  020a:35 02              ldi 2 
  020c:06                 mul 
  020d:a5 01              sat temp1 
  020f:38 0176          pushi 176 // $176 addObstacle
  0212:78               push1 
  0213:39 6b            pushi 6b // $6b init
  0215:39 08            pushi 8 // $8 underBits
  0217:39 14            pushi 14 // $14 brLeft
  0219:76               push0 
  021a:87 01              lap param1 
  021c:4a 04             send 4 

  021e:36                push 
  021f:85 00              lat temp0 
  0221:04                 sub 
  0222:36                push 
  0223:7a               push2 
  0224:78               push1 
  0225:78               push1 
  0226:39 03            pushi 3 // $3 y
  0228:76               push0 
  0229:87 01              lap param1 
  022b:4a 04             send 4 

  022d:36                push 
  022e:43 61 02         callk CoordPri 2 

  0231:36                push 
  0232:43 61 04         callk CoordPri 4 

  0235:36                push 
  0236:85 01              lat temp1 
  0238:04                 sub 
  0239:36                push 
  023a:39 16            pushi 16 // $16 brRight
  023c:76               push0 
  023d:87 01              lap param1 
  023f:4a 04             send 4 

  0241:36                push 
  0242:85 00              lat temp0 
  0244:02                 add 
  0245:36                push 
  0246:7a               push2 
  0247:78               push1 
  0248:78               push1 
  0249:39 03            pushi 3 // $3 y
  024b:76               push0 
  024c:87 01              lap param1 
  024e:4a 04             send 4 

  0250:36                push 
  0251:43 61 02         callk CoordPri 2 

  0254:36                push 
  0255:43 61 04         callk CoordPri 4 

  0258:36                push 
  0259:85 01              lat temp1 
  025b:04                 sub 
  025c:36                push 
  025d:39 16            pushi 16 // $16 brRight
  025f:76               push0 
  0260:87 01              lap param1 
  0262:4a 04             send 4 

  0264:36                push 
  0265:85 00              lat temp0 
  0267:02                 add 
  0268:36                push 
  0269:39 03            pushi 3 // $3 y
  026b:76               push0 
  026c:87 01              lap param1 
  026e:4a 04             send 4 

  0270:36                push 
  0271:85 01              lat temp1 
  0273:02                 add 
  0274:36                push 
  0275:39 14            pushi 14 // $14 brLeft
  0277:76               push0 
  0278:87 01              lap param1 
  027a:4a 04             send 4 

  027c:36                push 
  027d:85 00              lat temp0 
  027f:04                 sub 
  0280:36                push 
  0281:39 03            pushi 3 // $3 y
  0283:76               push0 
  0284:87 01              lap param1 
  0286:4a 04             send 4 

  0288:36                push 
  0289:85 01              lat temp1 
  028b:02                 add 
  028c:36                push 
  028d:39 72            pushi 72 // $72 yourself
  028f:76               push0 
  0290:39 6a            pushi 6a // $6a new
  0292:76               push0 
  0293:51 23            class Polygon 
  0295:4a 04             send 4 

  0297:4a 18             send 18 

  0299:36                push 
  029a:81 02              lag  
  029c:4a 06             send 6 


        code_029e
  029e:48                 ret 
  029f:00                bnot 
    )

)

// 0916
(class Game of Obj
    (properties
        script $0
        parseLang $1
        printLang $1
        subtitleLang $0
        _detailLevel $3
        egoMoveSpeed $0
    )
    (method (init) // method_0401
  0401:51 1d            class Motion 
  0403:51 0a            class Sound 
  0405:78               push1 
  0406:38 03a4          pushi 3a4 // $3a4 sel_932
  0409:43 02 02         callk ScriptID 2 

  040c:39 73            pushi 73 // $73 add
  040e:76               push0 
  040f:72 000c          lofsa $000c // cast
  0412:a1 05              sag  
  0414:4a 04             send 4 

  0416:39 73            pushi 73 // $73 add
  0418:76               push0 
  0419:72 0028          lofsa $0028 // features
  041c:a1 20              sag  
  041e:4a 04             send 4 

  0420:39 73            pushi 73 // $73 add
  0422:76               push0 
  0423:72 009c          lofsa $009c // sFeatures
  0426:a1 21              sag  
  0428:4a 04             send 4 

  042a:39 73            pushi 73 // $73 add
  042c:76               push0 
  042d:72 00da          lofsa $00da // sounds
  0430:a1 08              sag  
  0432:4a 04             send 4 

  0434:39 73            pushi 73 // $73 add
  0436:76               push0 
  0437:72 0134          lofsa $0134 // regions
  043a:a1 06              sag  
  043c:4a 04             send 4 

  043e:39 73            pushi 73 // $73 add
  0440:76               push0 
  0441:72 0150          lofsa $0150 // locales
  0444:a1 1c              sag  
  0446:4a 04             send 4 

  0448:39 73            pushi 73 // $73 add
  044a:76               push0 
  044b:72 0182          lofsa $0182 // addToPics
  044e:a1 0a              sag  
  0450:4a 04             send 4 

  0452:39 73            pushi 73 // $73 add
  0454:76               push0 
  0455:72 01be          lofsa $01be // timers
  0458:a1 07              sag  
  045a:4a 04             send 4 

  045c:39 73            pushi 73 // $73 add
  045e:76               push0 
  045f:72 0044          lofsa $0044 // theDoits
  0462:a1 4e              sag  
  0464:4a 04             send 4 

  0466:35 00              ldi 0 
  0468:a1 54              sag  
  046a:76               push0 
  046b:43 64 00         callk GetSaveDir 0 

  046e:a1 1d              sag  
  0470:39 6b            pushi 6b // $6b init
  0472:76               push0 
  0473:51 40            class Inv 
  0475:4a 04             send 4 

  0477:81 50              lag  
  0479:18                 not 
  047a:30 0004            bnt code_0481 
  047d:51 31            class User 
  047f:a1 50              sag  

        code_0481
  0481:39 6b            pushi 6b // $6b init
  0483:76               push0 
  0484:81 50              lag  
  0486:4a 04             send 4 

  0488:35 00              ldi 0 
  048a:a1 56              sag  
  048c:48                 ret 
    )

    (method (doit) // method_048d
  048d:3f 02             link 2 // (var $2)
  048f:89 56              lsg  
  0491:76               push0 
  0492:43 42 00         callk GetTime 0 

  0495:02                 add 
  0496:a1 58              sag  
  0498:81 54              lag  
  049a:30 0074            bnt code_0511 
  049d:89 58              lsg  
  049f:81 4f              lag  
  04a1:02                 add 
  04a2:a5 01              sat temp1 

        code_04a4
  04a4:81 54              lag  
  04a6:30 00ed            bnt code_0596 
  04a9:39 74            pushi 74 // $74 eachElementDo
  04ab:78               push1 
  04ac:39 3c            pushi 3c // $3c doit
  04ae:4a 06             send 6 

  04b0:39 22            pushi 22 // $22 type
  04b2:78               push1 
  04b3:76               push0 
  04b4:39 28            pushi 28 // $28 message
  04b6:78               push1 
  04b7:76               push0 
  04b8:39 40            pushi 40 // $40 modifiers
  04ba:78               push1 
  04bb:76               push0 
  04bc:39 03            pushi 3 // $3 y
  04be:78               push1 
  04bf:76               push0 
  04c0:39 04            pushi 4 // $4 x
  04c2:78               push1 
  04c3:76               push0 
  04c4:39 4c            pushi 4c // $4c claimed
  04c6:78               push1 
  04c7:76               push0 
  04c8:38 008f          pushi 8f // $8f port
  04cb:78               push1 
  04cc:76               push0 
  04cd:72 112c          lofsa $112c // talkerEvent
  04d0:4a 2a             send 2a 

  04d2:7a               push2 
  04d3:38 7fff          pushi 7fff // $7fff sel_32767
  04d6:72 112c          lofsa $112c // talkerEvent
  04d9:36                push 
  04da:43 1c 04         callk GetEvent 4 

  04dd:39 22            pushi 22 // $22 type
  04df:76               push0 
  04e0:72 112c          lofsa $112c // talkerEvent
  04e3:4a 04             send 4 

  04e5:30 ffbc            bnt code_04a4 
  04e8:81 54              lag  
  04ea:30 ffb7            bnt code_04a4 
  04ed:89 56              lsg  
  04ef:76               push0 
  04f0:43 42 00         callk GetTime 0 

  04f3:02                 add 
  04f4:a1 58              sag  
  04f6:36                push 
  04f7:85 01              lat temp1 
  04f9:1e                 gt? 
  04fa:30 ffa7            bnt code_04a4 
  04fd:39 75            pushi 75 // $75 firstTrue
  04ff:7a               push2 
  0500:38 0081          pushi 81 // $81 handleEvent
  0503:72 112c          lofsa $112c // talkerEvent
  0506:36                push 
  0507:81 54              lag  
  0509:4a 08             send 8 

  050b:32 ff96            jmp code_04a4 
  050e:32 0085            jmp code_0596 

        code_0511
  0511:39 74            pushi 74 // $74 eachElementDo
  0513:78               push1 
  0514:38 00a4          pushi a4 // $a4 check
  0517:81 08              lag  
  0519:4a 06             send 6 

  051b:39 74            pushi 74 // $74 eachElementDo
  051d:78               push1 
  051e:39 3c            pushi 3c // $3c doit
  0520:81 07              lag  
  0522:4a 06             send 6 

  0524:81 19              lag  
  0526:30 0006            bnt code_052f 
  0529:38 00a4          pushi a4 // $a4 check
  052c:76               push0 
  052d:4a 04             send 4 


        code_052f
  052f:7a               push2 
  0530:39 1b            pushi 1b // $1b elements
  0532:76               push0 
  0533:81 05              lag  
  0535:4a 04             send 4 

  0537:36                push 
  0538:78               push1 
  0539:43 0b 04         callk Animate 4 

  053c:81 25              lag  
  053e:30 000e            bnt code_054f 
  0541:35 00              ldi 0 
  0543:a1 25              sag  
  0545:39 74            pushi 74 // $74 eachElementDo
  0547:78               push1 
  0548:38 00da          pushi da // $da motionCue
  054b:81 05              lag  
  054d:4a 06             send 6 


        code_054f
  054f:63 08             pToa script 
  0551:30 0005            bnt code_0559 
  0554:39 3c            pushi 3c // $3c doit
  0556:76               push0 
  0557:4a 04             send 4 


        code_0559
  0559:39 74            pushi 74 // $74 eachElementDo
  055b:78               push1 
  055c:39 3c            pushi 3c // $3c doit
  055e:81 06              lag  
  0560:4a 06             send 6 

  0562:89 0d              lsg  
  0564:81 0b              lag  
  0566:1a                 eq? 
  0567:30 0007            bnt code_0571 
  056a:39 3c            pushi 3c // $3c doit
  056c:76               push0 
  056d:81 50              lag  
  056f:4a 04             send 4 


        code_0571
  0571:39 3c            pushi 3c // $3c doit
  0573:76               push0 
  0574:81 4e              lag  
  0576:4a 04             send 4 

  0578:89 0d              lsg  
  057a:81 0b              lag  
  057c:1c                 ne? 
  057d:30 0008            bnt code_0588 
  0580:38 0179          pushi 179 // $179 newRoom
  0583:78               push1 
  0584:89 0d              lsg  
  0586:54 06             self 6 


        code_0588
  0588:39 74            pushi 74 // $74 eachElementDo
  058a:78               push1 
  058b:39 54            pushi 54 // $54 delete
  058d:81 07              lag  
  058f:4a 06             send 6 

  0591:78               push1 
  0592:76               push0 
  0593:43 2c 02         callk GameIsRestarting 2 


        code_0596
  0596:48                 ret 
    )

    (method (play) // method_02c0
  02c0:5c              selfID 
  02c1:a1 01              sag  
  02c3:76               push0 
  02c4:43 64 00         callk GetSaveDir 0 

  02c7:a1 1d              sag  
  02c9:76               push0 
  02ca:43 2c 00         callk GameIsRestarting 0 

  02cd:18                 not 
  02ce:30 0006            bnt code_02d7 
  02d1:78               push1 
  02d2:89 1d              lsg  
  02d4:43 5e 02         callk GetCWD 2 


        code_02d7
  02d7:38 00bb          pushi bb // $bb setCursor
  02da:7a               push2 
  02db:89 15              lsg  
  02dd:78               push1 
  02de:39 6b            pushi 6b // $6b init
  02e0:76               push0 
  02e1:54 0c             self c 


        code_02e3
  02e3:81 04              lag  
  02e5:18                 not 
  02e6:30 0008            bnt code_02f1 
  02e9:39 3c            pushi 3c // $3c doit
  02eb:76               push0 
  02ec:54 04             self 4 

  02ee:32 fff2            jmp code_02e3 

        code_02f1
  02f1:48                 ret 
    )

    (method (replay) // method_032d
  032d:81 18              lag  
  032f:30 0005            bnt code_0337 
  0332:39 6c            pushi 6c // $6c dispose
  0334:76               push0 
  0335:4a 04             send 4 


        code_0337
  0337:39 7a            pushi 7a // $7a release
  0339:76               push0 
  033a:81 21              lag  
  033c:4a 04             send 4 

  033e:81 19              lag  
  0340:30 0005            bnt code_0348 
  0343:39 6c            pushi 6c // $6c dispose
  0345:76               push0 
  0346:4a 04             send 4 


        code_0348
  0348:39 74            pushi 74 // $74 eachElementDo
  034a:7a               push2 
  034b:39 63            pushi 63 // $63 perform
  034d:72 108c          lofsa $108c // RU
  0350:36                push 
  0351:81 05              lag  
  0353:4a 08             send 8 

  0355:38 00bb          pushi bb // $bb setCursor
  0358:7a               push2 
  0359:89 15              lsg  
  035b:78               push1 
  035c:81 01              lag  
  035e:4a 08             send 8 

  0360:39 04            pushi 4 // $4 x
  0362:38 0180          pushi 180 // $180 curPic
  0365:76               push0 
  0366:81 02              lag  
  0368:4a 04             send 4 

  036a:36                push 
  036b:39 64            pushi 64 // $64 moveDone
  036d:78               push1 
  036e:89 28              lsg  
  0370:43 08 08         callk DrawPic 8 

  0373:89 24              lsg  
  0375:35 ff              ldi ff 
  0377:1c                 ne? 
  0378:30 000c            bnt code_0387 
  037b:39 04            pushi 4 // $4 x
  037d:89 24              lsg  
  037f:39 64            pushi 64 // $64 moveDone
  0381:76               push0 
  0382:89 28              lsg  
  0384:43 08 08         callk DrawPic 8 


        code_0387
  0387:38 013b          pushi 13b // $13b controls
  038a:76               push0 
  038b:81 02              lag  
  038d:4a 04             send 4 

  038f:30 000d            bnt code_039f 
  0392:39 53            pushi 53 // $53 draw
  0394:76               push0 
  0395:38 013b          pushi 13b // $13b controls
  0398:76               push0 
  0399:81 02              lag  
  039b:4a 04             send 4 

  039d:4a 04             send 4 


        code_039f
  039f:39 3c            pushi 3c // $3c doit
  03a1:76               push0 
  03a2:81 0a              lag  
  03a4:4a 04             send 4 

  03a6:38 00bb          pushi bb // $bb setCursor
  03a9:7a               push2 
  03aa:81 45              lag  
  03ac:30 0019            bnt code_03c8 
  03af:38 00ce          pushi ce // $ce curIcon
  03b2:76               push0 
  03b3:4a 04             send 4 

  03b5:30 0010            bnt code_03c8 
  03b8:39 24            pushi 24 // $24 cursor
  03ba:76               push0 
  03bb:38 00ce          pushi ce // $ce curIcon
  03be:76               push0 
  03bf:81 45              lag  
  03c1:4a 04             send 4 

  03c3:4a 04             send 4 

  03c5:32 0002            jmp code_03ca 

        code_03c8
  03c8:81 14              lag  

        code_03ca
  03ca:36                push 
  03cb:76               push0 
  03cc:43 27 00         callk HaveMouse 0 

  03cf:36                push 
  03d0:81 01              lag  
  03d2:4a 08             send 8 

  03d4:39 3c            pushi 3c // $3c doit
  03d6:76               push0 
  03d7:51 45            class SL 
  03d9:4a 04             send 4 

  03db:78               push1 
  03dc:7a               push2 
  03dd:43 2d 02         callk DoSound 2 

  03e0:38 009d          pushi 9d // $9d pause
  03e3:78               push1 
  03e4:76               push0 
  03e5:51 0a            class Sound 
  03e7:4a 06             send 6 

  03e9:89 58              lsg  
  03eb:76               push0 
  03ec:43 42 00         callk GetTime 0 

  03ef:04                 sub 
  03f0:a1 56              sag  

        code_03f2
  03f2:81 04              lag  
  03f4:18                 not 
  03f5:30 0008            bnt code_0400 
  03f8:39 3c            pushi 3c // $3c doit
  03fa:76               push0 
  03fb:54 04             self 4 

  03fd:32 fff2            jmp code_03f2 

        code_0400
  0400:48                 ret 
    )

    (method (newRoom) // method_0597
  0597:3f 06             link 6 // (var $6)
  0599:39 74            pushi 74 // $74 eachElementDo
  059b:78               push1 
  059c:39 6c            pushi 6c // $6c dispose
  059e:39 7a            pushi 7a // $7a release
  05a0:76               push0 
  05a1:81 0a              lag  
  05a3:4a 0a             send a 

  05a5:39 74            pushi 74 // $74 eachElementDo
  05a7:7a               push2 
  05a8:39 63            pushi 63 // $63 perform
  05aa:72 1110          lofsa $1110 // fDC
  05ad:36                push 
  05ae:39 7a            pushi 7a // $7a release
  05b0:76               push0 
  05b1:81 20              lag  
  05b3:4a 0c             send c 

  05b5:39 74            pushi 74 // $74 eachElementDo
  05b7:78               push1 
  05b8:39 6c            pushi 6c // $6c dispose
  05ba:39 74            pushi 74 // $74 eachElementDo
  05bc:78               push1 
  05bd:39 54            pushi 54 // $54 delete
  05bf:81 05              lag  
  05c1:4a 0c             send c 

  05c3:39 74            pushi 74 // $74 eachElementDo
  05c5:78               push1 
  05c6:39 54            pushi 54 // $54 delete
  05c8:81 07              lag  
  05ca:4a 06             send 6 

  05cc:39 74            pushi 74 // $74 eachElementDo
  05ce:7a               push2 
  05cf:39 63            pushi 63 // $63 perform
  05d1:72 10c0          lofsa $10c0 // DNKR
  05d4:36                push 
  05d5:39 7a            pushi 7a // $7a release
  05d7:76               push0 
  05d8:81 06              lag  
  05da:4a 0c             send c 

  05dc:39 74            pushi 74 // $74 eachElementDo
  05de:78               push1 
  05df:39 6c            pushi 6c // $6c dispose
  05e1:39 7a            pushi 7a // $7a release
  05e3:76               push0 
  05e4:81 1c              lag  
  05e6:4a 0a             send a 

  05e8:39 7a            pushi 7a // $7a release
  05ea:76               push0 
  05eb:81 4e              lag  
  05ed:4a 04             send 4 

  05ef:78               push1 
  05f0:76               push0 
  05f1:43 0b 02         callk Animate 2 

  05f4:81 0b              lag  
  05f6:a1 0c              sag  
  05f8:87 01              lap param1 
  05fa:a1 0b              sag  
  05fc:87 01              lap param1 
  05fe:a1 0d              sag  
  0600:78               push1 
  0601:8f 01              lsp param1 
  0603:43 67 02         callk FlushResources 2 

  0606:38 017a          pushi 17a // $17a startRoom
  0609:78               push1 
  060a:89 0b              lsg  
  060c:38 017d          pushi 17d // $17d checkAni
  060f:76               push0 
  0610:54 0a             self a 

  0612:78               push1 
  0613:89 06              lsg  
  0615:43 26 02         callk SetSynonyms 2 


        code_0618
  0618:39 22            pushi 22 // $22 type
  061a:76               push0 
  061b:39 6a            pushi 6a // $6a new
  061d:78               push1 
  061e:39 03            pushi 3 // $3 y
  0620:51 07            class Event 
  0622:4a 06             send 6 

  0624:a5 05              sat temp5 
  0626:4a 04             send 4 

  0628:30 000a            bnt code_0635 
  062b:39 6c            pushi 6c // $6c dispose
  062d:76               push0 
  062e:85 05              lat temp5 
  0630:4a 04             send 4 

  0632:32 ffe3            jmp code_0618 

        code_0635
  0635:39 6c            pushi 6c // $6c dispose
  0637:76               push0 
  0638:85 05              lat temp5 
  063a:4a 04             send 4 

  063c:48                 ret 
    )

    (method (startRoom) // method_069f
  069f:81 0e              lag  
  06a1:30 0004            bnt code_06a8 
  06a4:76               push0 
  06a5:43 53 00         callk SetDebug 0 


        code_06a8
  06a8:39 7d            pushi 7d // $7d addToFront
  06aa:78               push1 
  06ab:78               push1 
  06ac:8f 01              lsp param1 
  06ae:43 02 02         callk ScriptID 2 

  06b1:a1 02              sag  
  06b3:36                push 
  06b4:81 06              lag  
  06b6:4a 06             send 6 

  06b8:39 6b            pushi 6b // $6b init
  06ba:76               push0 
  06bb:81 02              lag  
  06bd:4a 04             send 4 

  06bf:48                 ret 
    )

    (method (restart) // method_070f
  070f:81 19              lag  
  0711:30 0005            bnt code_0719 
  0714:39 6c            pushi 6c // $6c dispose
  0716:76               push0 
  0717:4a 04             send 4 


        code_0719
  0719:76               push0 
  071a:43 2b 00         callk RestartGame 0 

  071d:48                 ret 
    )

    (method (restore) // method_07d8
  07d8:3f 17             link 17 // (var $17)
  07da:63 0a             pToa parseLang 
  07dc:a5 16              sat temp22 
  07de:35 01              ldi 1 
  07e0:65 0a             aTop parseLang 
  07e2:7a               push2 
  07e3:38 0087          pushi 87 // $87 ticks
  07e6:89 17              lsg  
  07e8:43 00 04         callk Load 4 

  07eb:7a               push2 
  07ec:38 0088          pushi 88 // $88 lastTicks
  07ef:89 15              lsg  
  07f1:43 00 04         callk Load 4 

  07f4:78               push1 
  07f5:38 03de          pushi 3de // $3de sel_990
  07f8:43 02 02         callk ScriptID 2 

  07fb:38 009d          pushi 9d // $9d pause
  07fe:78               push1 
  07ff:78               push1 
  0800:51 0a            class Sound 
  0802:4a 06             send 6 

  0804:78               push1 
  0805:78               push1 
  0806:40 0760 02        call proc_0f6a 2 

  080a:30 0089            bnt code_0896 
  080d:81 19              lag  
  080f:30 0005            bnt code_0817 
  0812:39 6c            pushi 6c // $6c dispose
  0814:76               push0 
  0815:4a 04             send 4 


        code_0817
  0817:38 00bb          pushi bb // $bb setCursor
  081a:78               push1 
  081b:89 14              lsg  
  081d:54 06             self 6 

  081f:a5 15              sat temp21 
  0821:39 3c            pushi 3c // $3c doit
  0823:76               push0 
  0824:59 01            &rest 1 
  0826:51 3b            class Restore 
  0828:4a 04             send 4 

  082a:a5 14              sat temp20 
  082c:38 00bb          pushi bb // $bb setCursor
  082f:7a               push2 
  0830:8d 15              lst temp21 
  0832:78               push1 
  0833:54 08             self 8 

  0835:8d 14              lst temp20 
  0837:35 ff              ldi ff 
  0839:1c                 ne? 
  083a:30 004f            bnt code_088c 
  083d:38 00bb          pushi bb // $bb setCursor
  0840:7a               push2 
  0841:89 15              lsg  
  0843:78               push1 
  0844:54 08             self 8 

  0846:a5 15              sat temp21 
  0848:39 03            pushi 3 // $3 y
  084a:67 06             pTos name 
  084c:8d 14              lst temp20 
  084e:89 1b              lsg  
  0850:43 65 06         callk CheckSaveGame 6 

  0853:30 000e            bnt code_0864 
  0856:39 03            pushi 3 // $3 y
  0858:67 06             pTos name 
  085a:8d 14              lst temp20 
  085c:89 1b              lsg  
  085e:43 2a 06         callk RestoreGame 6 

  0861:32 002c            jmp code_0890 

        code_0864
  0864:39 07            pushi 7 // $7 cel
  0866:38 03e2          pushi 3e2 // $3e2 sel_994
  0869:78               push1 
  086a:39 21            pushi 21 // $21 font
  086c:76               push0 
  086d:39 51            pushi 51 // $51 button
  086f:72 11aa          lofsa $11aa // OK
  0872:36                push 
  0873:78               push1 
  0874:47 ff 00 0e      calle ff procedure_0000 e //  

  0878:38 00bb          pushi bb // $bb setCursor
  087b:7a               push2 
  087c:8d 15              lst temp21 
  087e:76               push0 
  087f:43 27 00         callk HaveMouse 0 

  0882:36                push 
  0883:54 08             self 8 

  0885:85 16              lat temp22 
  0887:65 0a             aTop parseLang 
  0889:32 0004            jmp code_0890 

        code_088c
  088c:85 16              lat temp22 
  088e:65 0a             aTop parseLang 

        code_0890
  0890:78               push1 
  0891:76               push0 
  0892:40 06d4 02        call proc_0f6a 2 


        code_0896
  0896:38 009d          pushi 9d // $9d pause
  0899:78               push1 
  089a:76               push0 
  089b:51 0a            class Sound 
  089d:4a 06             send 6 

  089f:48                 ret 
    )

    (method (save) // method_071e
  071e:3f 17             link 17 // (var $17)
  0720:63 0a             pToa parseLang 
  0722:a5 16              sat temp22 
  0724:35 01              ldi 1 
  0726:65 0a             aTop parseLang 
  0728:7a               push2 
  0729:38 0087          pushi 87 // $87 ticks
  072c:89 17              lsg  
  072e:43 00 04         callk Load 4 

  0731:7a               push2 
  0732:38 0088          pushi 88 // $88 lastTicks
  0735:89 15              lsg  
  0737:43 00 04         callk Load 4 

  073a:78               push1 
  073b:38 03de          pushi 3de // $3de sel_990
  073e:43 02 02         callk ScriptID 2 

  0741:38 009d          pushi 9d // $9d pause
  0744:78               push1 
  0745:78               push1 
  0746:51 0a            class Sound 
  0748:4a 06             send 6 

  074a:78               push1 
  074b:78               push1 
  074c:40 081a 02        call proc_0f6a 2 

  0750:30 0077            bnt code_07ca 
  0753:81 19              lag  
  0755:30 0005            bnt code_075d 
  0758:39 6c            pushi 6c // $6c dispose
  075a:76               push0 
  075b:4a 04             send 4 


        code_075d
  075d:38 00bb          pushi bb // $bb setCursor
  0760:78               push1 
  0761:89 14              lsg  
  0763:54 06             self 6 

  0765:a5 15              sat temp21 
  0767:39 3c            pushi 3c // $3c doit
  0769:78               push1 
  076a:5b 04 00           lea 4 0 
  076d:36                push 
  076e:51 3c            class Save 
  0770:4a 06             send 6 

  0772:a5 14              sat temp20 
  0774:38 00bb          pushi bb // $bb setCursor
  0777:7a               push2 
  0778:8d 15              lst temp21 
  077a:78               push1 
  077b:54 08             self 8 

  077d:8d 14              lst temp20 
  077f:35 ff              ldi ff 
  0781:1c                 ne? 
  0782:30 003f            bnt code_07c4 
  0785:85 16              lat temp22 
  0787:65 0a             aTop parseLang 
  0789:38 00bb          pushi bb // $bb setCursor
  078c:7a               push2 
  078d:89 15              lsg  
  078f:78               push1 
  0790:54 08             self 8 

  0792:a5 15              sat temp21 
  0794:39 04            pushi 4 // $4 x
  0796:67 06             pTos name 
  0798:8d 14              lst temp20 
  079a:5b 04 00           lea 4 0 
  079d:36                push 
  079e:89 1b              lsg  
  07a0:43 29 08         callk SaveGame 8 

  07a3:18                 not 
  07a4:30 0014            bnt code_07bb 
  07a7:39 07            pushi 7 // $7 cel
  07a9:38 03e2          pushi 3e2 // $3e2 sel_994
  07ac:76               push0 
  07ad:39 21            pushi 21 // $21 font
  07af:76               push0 
  07b0:39 51            pushi 51 // $51 button
  07b2:72 11aa          lofsa $11aa // OK
  07b5:36                push 
  07b6:78               push1 
  07b7:47 ff 00 0e      calle ff procedure_0000 e //  


        code_07bb
  07bb:38 00bb          pushi bb // $bb setCursor
  07be:7a               push2 
  07bf:8d 15              lst temp21 
  07c1:78               push1 
  07c2:54 08             self 8 


        code_07c4
  07c4:78               push1 
  07c5:76               push0 
  07c6:40 07a0 02        call proc_0f6a 2 


        code_07ca
  07ca:38 009d          pushi 9d // $9d pause
  07cd:78               push1 
  07ce:76               push0 
  07cf:51 0a            class Sound 
  07d1:4a 06             send 6 

  07d3:85 16              lat temp22 
  07d5:65 0a             aTop parseLang 
  07d7:48                 ret 
    )

    (method (changeScore) // method_0700
  0700:89 0f              lsg  
  0702:87 01              lap param1 
  0704:02                 add 
  0705:a1 0f              sag  
  0707:39 3c            pushi 3c // $3c doit
  0709:76               push0 
  070a:51 45            class SL 
  070c:4a 04             send 4 

  070e:48                 ret 
    )

    (method (handleEvent) // method_06c0
  06c0:39 4c            pushi 4c // $4c claimed
  06c2:76               push0 
  06c3:87 01              lap param1 
  06c5:4a 04             send 4 

  06c7:30 0005            bnt code_06cf 
  06ca:35 01              ldi 1 
  06cc:32 0029            jmp code_06f8 

        code_06cf
  06cf:63 08             pToa script 
  06d1:30 0010            bnt code_06e4 
  06d4:38 0081          pushi 81 // $81 handleEvent
  06d7:78               push1 
  06d8:8f 01              lsp param1 
  06da:4a 06             send 6 

  06dc:30 0005            bnt code_06e4 
  06df:35 01              ldi 1 
  06e1:32 0014            jmp code_06f8 

        code_06e4
  06e4:39 22            pushi 22 // $22 type
  06e6:76               push0 
  06e7:87 01              lap param1 
  06e9:4a 04             send 4 

  06eb:36                push 
  06ec:34 4000            ldi 4000 
  06ef:1a                 eq? 
  06f0:30 0005            bnt code_06f8 
  06f3:39 4a            pushi 4a // $4a pragmaFail
  06f5:76               push0 
  06f6:54 04             self 4 


        code_06f8
  06f8:39 4c            pushi 4c // $4c claimed
  06fa:76               push0 
  06fb:87 01              lap param1 
  06fd:4a 04             send 4 

  06ff:48                 ret 
    )

    (method (showMem) // method_08c2
  08c2:39 05            pushi 5 // $5 view
  08c4:72 11ad          lofsa $11ad // Free Heap: %u Bytes
Largest ptr: %u Bytes
FreeHunk: %u KBytes
Largest hunk: %u Bytes
  08c7:36                push 
  08c8:78               push1 
  08c9:78               push1 
  08ca:43 58 02         callk MemoryInfo 2 

  08cd:36                push 
  08ce:78               push1 
  08cf:76               push0 
  08d0:43 58 02         callk MemoryInfo 2 

  08d3:36                push 
  08d4:78               push1 
  08d5:39 03            pushi 3 // $3 y
  08d7:43 58 02         callk MemoryInfo 2 

  08da:36                push 
  08db:35 06              ldi 6 
  08dd:0c                 shr 
  08de:36                push 
  08df:78               push1 
  08e0:7a               push2 
  08e1:43 58 02         callk MemoryInfo 2 

  08e4:36                push 
  08e5:47 ff 04 0a      calle ff procedure_0004 a //  

  08e9:48                 ret 
    )

    (method (setSpeed) // method_08a0
  08a0:3f 01             link 1 // (var $1)
  08a2:81 03              lag  
  08a4:a5 00              sat temp0 
  08a6:87 01              lap param1 
  08a8:a1 03              sag  
  08aa:85 00              lat temp0 
  08ac:48                 ret 
    )

    (method (setCursor) // method_08ad
  08ad:3f 01             link 1 // (var $1)
  08af:81 13              lag  
  08b1:a5 00              sat temp0 
  08b3:87 01              lap param1 
  08b5:a1 13              sag  
  08b7:78               push1 
  08b8:8f 01              lsp param1 
  08ba:59 02            &rest 2 
  08bc:43 28 02         callk SetCursor 2 

  08bf:85 00              lat temp0 
  08c1:48                 ret 
    )

    (method (checkAni) // method_063d
  063d:3f 01             link 1 // (var $1)
  063f:7a               push2 
  0640:39 1b            pushi 1b // $1b elements
  0642:76               push0 
  0643:81 05              lag  
  0645:4a 04             send 4 

  0647:36                push 
  0648:76               push0 
  0649:43 0b 04         callk Animate 4 

  064c:78               push1 
  064d:76               push0 
  064e:43 41 02         callk Wait 2 

  0651:7a               push2 
  0652:39 1b            pushi 1b // $1b elements
  0654:76               push0 
  0655:81 05              lag  
  0657:4a 04             send 4 

  0659:36                push 
  065a:76               push0 
  065b:43 0b 04         callk Animate 4 


        code_065e
  065e:78               push1 
  065f:76               push0 
  0660:43 41 02         callk Wait 2 

  0663:36                push 
  0664:81 1e              lag  
  0666:1e                 gt? 
  0667:30 0034            bnt code_069e 
  066a:39 75            pushi 75 // $75 firstTrue
  066c:78               push1 
  066d:38 0123          pushi 123 // $123 isExtra
  0670:81 05              lag  
  0672:4a 06             send 6 

  0674:a5 00              sat temp0 
  0676:36                push 
  0677:35 00              ldi 0 
  0679:1a                 eq? 
  067a:2e 0021             bt code_069e 
  067d:38 0122          pushi 122 // $122 addToPic
  0680:76               push0 
  0681:85 00              lat temp0 
  0683:4a 04             send 4 

  0685:7a               push2 
  0686:39 1b            pushi 1b // $1b elements
  0688:76               push0 
  0689:81 05              lag  
  068b:4a 04             send 4 

  068d:36                push 
  068e:76               push0 
  068f:43 0b 04         callk Animate 4 

  0692:39 74            pushi 74 // $74 eachElementDo
  0694:78               push1 
  0695:39 54            pushi 54 // $54 delete
  0697:81 05              lag  
  0699:4a 06             send 6 

  069b:32 ffc0            jmp code_065e 

        code_069e
  069e:48                 ret 
    )

    (method (notify) // method_08eb
  08eb:48                 ret 
    )

    (method (setScript) // method_08ec
  08ec:63 08             pToa script 
  08ee:30 0005            bnt code_08f6 
  08f1:39 6c            pushi 6c // $6c dispose
  08f3:76               push0 
  08f4:4a 04             send 4 


        code_08f6
  08f6:87 01              lap param1 
  08f8:30 0008            bnt code_0903 
  08fb:39 6b            pushi 6b // $6b init
  08fd:78               push1 
  08fe:7c            pushSelf 
  08ff:59 02            &rest 2 
  0901:4a 06             send 6 


        code_0903
  0903:48                 ret 
    )

    (method (cue) // method_0904
  0904:63 08             pToa script 
  0906:30 0006            bnt code_090f 
  0909:38 008d          pushi 8d // $8d cue
  090c:76               push0 
  090d:4a 04             send 4 


        code_090f
  090f:48                 ret 
    )

    (method (quitGame) // method_02f2
  02f2:87 00              lap paramTotal 
  02f4:18                 not 
  02f5:2e 0002             bt code_02fa 
  02f8:87 01              lap param1 

        code_02fa
  02fa:30 0004            bnt code_0301 
  02fd:35 01              ldi 1 
  02ff:a1 04              sag  

        code_0301
  0301:48                 ret 
    )

    (method (masterVolume) // method_0302
  0302:87 00              lap paramTotal 
  0304:30 000a            bnt code_0311 
  0307:7a               push2 
  0308:76               push0 
  0309:8f 01              lsp param1 
  030b:43 2d 04         callk DoSound 4 

  030e:32 0005            jmp code_0316 

        code_0311
  0311:78               push1 
  0312:76               push0 
  0313:43 2d 02         callk DoSound 2 


        code_0316
  0316:48                 ret 
    )

    (method (detailLevel) // method_0317
  0317:87 00              lap paramTotal 
  0319:30 000e            bnt code_032a 
  031c:87 01              lap param1 
  031e:65 10             aTop _detailLevel 
  0320:39 74            pushi 74 // $74 eachElementDo
  0322:78               push1 
  0323:38 0124          pushi 124 // $124 checkDetail
  0326:81 05              lag  
  0328:4a 06             send 6 


        code_032a
  032a:63 10             pToa _detailLevel 
  032c:48                 ret 
    )

    (method (pragmaFail) // method_08ea
  08ea:48                 ret 
    )

)

// 0ada
(class Rgn of Obj
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
    )
    (method (init) // method_09a4
  09a4:63 10             pToa initialized 
  09a6:18                 not 
  09a7:30 001e            bnt code_09c8 
  09aa:35 01              ldi 1 
  09ac:65 10             aTop initialized 
  09ae:39 77            pushi 77 // $77 contains
  09b0:78               push1 
  09b1:7c            pushSelf 
  09b2:81 06              lag  
  09b4:4a 06             send 6 

  09b6:18                 not 
  09b7:30 0008            bnt code_09c2 
  09ba:39 7e            pushi 7e // $7e addToEnd
  09bc:78               push1 
  09bd:7c            pushSelf 
  09be:81 06              lag  
  09c0:4a 06             send 6 


        code_09c2
  09c2:39 6b            pushi 6b // $6b init
  09c4:76               push0 
  09c5:57 00 04         super Obj 4 


        code_09c8
  09c8:48                 ret 
    )

    (method (doit) // method_09c9
  09c9:63 08             pToa script 
  09cb:30 0005            bnt code_09d3 
  09ce:39 3c            pushi 3c // $3c doit
  09d0:76               push0 
  09d1:4a 04             send 4 


        code_09d3
  09d3:48                 ret 
    )

    (method (dispose) // method_0a6e
  0a6e:39 54            pushi 54 // $54 delete
  0a70:78               push1 
  0a71:7c            pushSelf 
  0a72:81 06              lag  
  0a74:4a 06             send 6 

  0a76:78               push1 
  0a77:67 08             pTos script 
  0a79:43 06 02         callk IsObject 2 

  0a7c:30 0007            bnt code_0a86 
  0a7f:39 6c            pushi 6c // $6c dispose
  0a81:76               push0 
  0a82:63 08             pToa script 
  0a84:4a 04             send 4 


        code_0a86
  0a86:78               push1 
  0a87:67 0c             pTos timer 
  0a89:43 06 02         callk IsObject 2 

  0a8c:30 0007            bnt code_0a96 
  0a8f:39 6c            pushi 6c // $6c dispose
  0a91:76               push0 
  0a92:63 0c             pToa timer 
  0a94:4a 04             send 4 


        code_0a96
  0a96:39 74            pushi 74 // $74 eachElementDo
  0a98:7a               push2 
  0a99:38 00a5          pushi a5 // $a5 clean
  0a9c:7c            pushSelf 
  0a9d:81 08              lag  
  0a9f:4a 08             send 8 

  0aa1:78               push1 
  0aa2:67 0a             pTos number 
  0aa4:43 03 02         callk DisposeScript 2 

  0aa7:48                 ret 
    )

    (method (handleEvent) // method_09d4
  09d4:39 4c            pushi 4c // $4c claimed
  09d6:76               push0 
  09d7:87 01              lap param1 
  09d9:4a 04             send 4 

  09db:30 0005            bnt code_09e3 
  09de:35 01              ldi 1 
  09e0:32 0060            jmp code_0a43 

        code_09e3
  09e3:63 08             pToa script 
  09e5:30 0017            bnt code_09ff 
  09e8:38 0081          pushi 81 // $81 handleEvent
  09eb:78               push1 
  09ec:8f 01              lsp param1 
  09ee:4a 06             send 6 

  09f0:2e 0002             bt code_09f5 
  09f3:35 01              ldi 1 

        code_09f5
  09f5:30 0007            bnt code_09ff 
  09f8:39 4c            pushi 4c // $4c claimed
  09fa:76               push0 
  09fb:87 01              lap param1 
  09fd:4a 04             send 4 


        code_09ff
  09ff:18                 not 
  0a00:30 0040            bnt code_0a43 
  0a03:39 4c            pushi 4c // $4c claimed
  0a05:78               push1 
  0a06:38 010c          pushi 10c // $10c doVerb
  0a09:7a               push2 
  0a0a:39 28            pushi 28 // $28 message
  0a0c:76               push0 
  0a0d:87 01              lap param1 
  0a0f:4a 04             send 4 

  0a11:36                push 
  0a12:81 09              lag  
  0a14:30 0024            bnt code_0a3b 
  0a17:81 45              lag  
  0a19:30 001f            bnt code_0a3b 
  0a1c:39 28            pushi 28 // $28 message
  0a1e:76               push0 
  0a1f:87 01              lap param1 
  0a21:4a 04             send 4 

  0a23:36                push 
  0a24:35 04              ldi 4 
  0a26:1a                 eq? 
  0a27:30 0011            bnt code_0a3b 
  0a2a:38 0080          pushi 80 // $80 indexOf
  0a2d:78               push1 
  0a2e:38 00d1          pushi d1 // $d1 curInvIcon
  0a31:76               push0 
  0a32:81 45              lag  
  0a34:4a 04             send 4 

  0a36:36                push 
  0a37:81 09              lag  
  0a39:4a 06             send 6 


        code_0a3b
  0a3b:36                push 
  0a3c:54 08             self 8 

  0a3e:36                push 
  0a3f:87 01              lap param1 
  0a41:4a 06             send 6 


        code_0a43
  0a43:39 4c            pushi 4c // $4c claimed
  0a45:76               push0 
  0a46:87 01              lap param1 
  0a48:4a 04             send 4 

  0a4a:48                 ret 
    )

    (method (doVerb) // method_0a4b
  0a4b:8f 01              lsp param1 
  0a4d:35 02              ldi 2 
  0a4f:1a                 eq? 
  0a50:30 0017            bnt code_0a6a 
  0a53:63 12             pToa lookStr 
  0a55:30 0012            bnt code_0a6a 
  0a58:39 03            pushi 3 // $3 y
  0a5a:38 03e2          pushi 3e2 // $3e2 sel_994
  0a5d:7a               push2 
  0a5e:67 12             pTos lookStr 
  0a60:47 ff 04 06      calle ff procedure_0004 6 //  

  0a64:35 01              ldi 1 
  0a66:48                 ret 
  0a67:32 0003            jmp code_0a6d 

        code_0a6a
  0a6a:35 00              ldi 0 
  0a6c:48                 ret 

        code_0a6d
  0a6d:48                 ret 
    )

    (method (setScript) // method_0aa8
  0aa8:78               push1 
  0aa9:67 08             pTos script 
  0aab:43 06 02         callk IsObject 2 

  0aae:30 0007            bnt code_0ab8 
  0ab1:39 6c            pushi 6c // $6c dispose
  0ab3:76               push0 
  0ab4:63 08             pToa script 
  0ab6:4a 04             send 4 


        code_0ab8
  0ab8:87 01              lap param1 
  0aba:30 0008            bnt code_0ac5 
  0abd:39 6b            pushi 6b // $6b init
  0abf:78               push1 
  0ac0:7c            pushSelf 
  0ac1:59 02            &rest 2 
  0ac3:4a 06             send 6 


        code_0ac5
  0ac5:48                 ret 
    )

    (method (cue) // method_0ac6
  0ac6:63 08             pToa script 
  0ac8:30 0006            bnt code_0ad1 
  0acb:38 008d          pushi 8d // $8d cue
  0ace:76               push0 
  0acf:4a 04             send 4 


        code_0ad1
  0ad1:48                 ret 
    )

    (method (newRoom) // method_0ad2
  0ad2:48                 ret 
    )

    (method (notify) // method_0ad3
  0ad3:48                 ret 
    )

)

// 0df6
(class Rm of Rgn
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $0
        style $ffff
        horizon $0
        controls $0
        north $0
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_0b34
  0b34:3f 01             link 1 // (var $1)
  0b36:81 0b              lag  
  0b38:65 0a             aTop number 
  0b3a:72 01a2          lofsa $01a2 // controls
  0b3d:65 1a             aTop controls 
  0b3f:63 26             pToa picAngle 
  0b41:a1 1f              sag  
  0b43:63 14             pToa picture 
  0b45:30 0007            bnt code_0b4f 
  0b48:38 018c          pushi 18c // $18c drawPic
  0b4b:78               push1 
  0b4c:36                push 
  0b4d:54 06             self 6 


        code_0b4f
  0b4f:38 018e          pushi 18e // $18e reflectPosn
  0b52:7a               push2 
  0b53:38 0139          pushi 139 // $139 alterEgo
  0b56:76               push0 
  0b57:81 50              lag  
  0b59:4a 04             send 4 

  0b5b:36                push 
  0b5c:38 0146          pushi 146 // $146 edgeHit
  0b5f:76               push0 
  0b60:38 0139          pushi 139 // $139 alterEgo
  0b63:76               push0 
  0b64:81 50              lag  
  0b66:4a 04             send 4 

  0b68:4a 04             send 4 

  0b6a:36                push 
  0b6b:54 08             self 8 

  0b6d:38 0146          pushi 146 // $146 edgeHit
  0b70:78               push1 
  0b71:76               push0 
  0b72:38 0139          pushi 139 // $139 alterEgo
  0b75:76               push0 
  0b76:81 50              lag  
  0b78:4a 04             send 4 

  0b7a:4a 06             send 6 

  0b7c:48                 ret 
    )

    (method (doit) // method_0bdd
  0bdd:3f 01             link 1 // (var $1)
  0bdf:63 08             pToa script 
  0be1:30 0005            bnt code_0be9 
  0be4:39 3c            pushi 3c // $3c doit
  0be6:76               push0 
  0be7:4a 04             send 4 


        code_0be9
  0be9:38 018f          pushi 18f // $18f edgeToRoom
  0bec:78               push1 
  0bed:38 0146          pushi 146 // $146 edgeHit
  0bf0:76               push0 
  0bf1:38 0139          pushi 139 // $139 alterEgo
  0bf4:76               push0 
  0bf5:81 50              lag  
  0bf7:4a 04             send 4 

  0bf9:4a 04             send 4 

  0bfb:36                push 
  0bfc:54 06             self 6 

  0bfe:a5 00              sat temp0 
  0c00:30 0007            bnt code_0c0a 
  0c03:38 0179          pushi 179 // $179 newRoom
  0c06:78               push1 
  0c07:36                push 
  0c08:54 06             self 6 


        code_0c0a
  0c0a:48                 ret 
    )

    (method (dispose) // method_0c6d
  0c6d:63 1a             pToa controls 
  0c6f:30 0005            bnt code_0c77 
  0c72:39 6c            pushi 6c // $6c dispose
  0c74:76               push0 
  0c75:4a 04             send 4 


        code_0c77
  0c77:63 2c             pToa obstacles 
  0c79:30 0005            bnt code_0c81 
  0c7c:39 6c            pushi 6c // $6c dispose
  0c7e:76               push0 
  0c7f:4a 04             send 4 


        code_0c81
  0c81:39 6c            pushi 6c // $6c dispose
  0c83:76               push0 
  0c84:57 42 04         super Rgn 4 

  0c87:48                 ret 
    )

    (method (handleEvent) // method_0c88
  0c88:38 0081          pushi 81 // $81 handleEvent
  0c8b:78               push1 
  0c8c:8f 01              lsp param1 
  0c8e:57 42 06         super Rgn 6 

  0c91:2e 000d             bt code_0ca1 
  0c94:63 1a             pToa controls 
  0c96:30 0008            bnt code_0ca1 
  0c99:38 0081          pushi 81 // $81 handleEvent
  0c9c:78               push1 
  0c9d:8f 01              lsp param1 
  0c9f:4a 06             send 6 


        code_0ca1
  0ca1:39 4c            pushi 4c // $4c claimed
  0ca3:76               push0 
  0ca4:87 01              lap param1 
  0ca6:4a 04             send 4 

  0ca8:48                 ret 
    )

    (method (newRoom) // method_0d62
  0d62:39 54            pushi 54 // $54 delete
  0d64:78               push1 
  0d65:7c            pushSelf 
  0d66:39 74            pushi 74 // $74 eachElementDo
  0d68:7a               push2 
  0d69:38 0179          pushi 179 // $179 newRoom
  0d6c:8f 01              lsp param1 
  0d6e:39 7d            pushi 7d // $7d addToFront
  0d70:78               push1 
  0d71:7c            pushSelf 
  0d72:81 06              lag  
  0d74:4a 14             send 14 

  0d76:87 01              lap param1 
  0d78:a1 0d              sag  
  0d7a:38 0179          pushi 179 // $179 newRoom
  0d7d:78               push1 
  0d7e:8f 01              lsp param1 
  0d80:57 42 06         super Rgn 6 

  0d83:48                 ret 
    )

    (method (setRegions) // method_0ca9
  0ca9:3f 03             link 3 // (var $3)
  0cab:35 00              ldi 0 
  0cad:a5 00              sat temp0 

        code_0caf
  0caf:8d 00              lst temp0 
  0cb1:87 00              lap paramTotal 
  0cb3:22                 lt? 
  0cb4:30 0035            bnt code_0cec 
  0cb7:85 00              lat temp0 
  0cb9:97 01             lapi param1 
  0cbb:a5 01              sat temp1 
  0cbd:78               push1 
  0cbe:36                push 
  0cbf:43 02 02         callk ScriptID 2 

  0cc2:a5 02              sat temp2 
  0cc4:39 2b            pushi 2b // $2b number
  0cc6:78               push1 
  0cc7:8d 01              lst temp1 
  0cc9:4a 06             send 6 

  0ccb:39 73            pushi 73 // $73 add
  0ccd:78               push1 
  0cce:8d 02              lst temp2 
  0cd0:81 06              lag  
  0cd2:4a 06             send 6 

  0cd4:38 0182          pushi 182 // $182 initialized
  0cd7:76               push0 
  0cd8:85 02              lat temp2 
  0cda:4a 04             send 4 

  0cdc:18                 not 
  0cdd:30 0007            bnt code_0ce7 
  0ce0:39 6b            pushi 6b // $6b init
  0ce2:76               push0 
  0ce3:85 02              lat temp2 
  0ce5:4a 04             send 4 


        code_0ce7
  0ce7:c5 00              +at temp0 
  0ce9:32 ffc3            jmp code_0caf 

        code_0cec
  0cec:48                 ret 
    )

    (method (setFeatures) // method_0d24
  0d24:3f 03             link 3 // (var $3)
  0d26:35 00              ldi 0 
  0d28:a5 00              sat temp0 

        code_0d2a
  0d2a:8d 00              lst temp0 
  0d2c:87 00              lap paramTotal 
  0d2e:22                 lt? 
  0d2f:30 0010            bnt code_0d42 
  0d32:39 73            pushi 73 // $73 add
  0d34:78               push1 
  0d35:85 00              lat temp0 
  0d37:9f 01             lspi param1 
  0d39:81 20              lag  
  0d3b:4a 06             send 6 

  0d3d:c5 00              +at temp0 
  0d3f:32 ffe8            jmp code_0d2a 

        code_0d42
  0d42:48                 ret 
    )

    (method (setLocales) // method_0ced
  0ced:3f 03             link 3 // (var $3)
  0cef:35 00              ldi 0 
  0cf1:a5 00              sat temp0 

        code_0cf3
  0cf3:8d 00              lst temp0 
  0cf5:87 00              lap paramTotal 
  0cf7:22                 lt? 
  0cf8:30 0028            bnt code_0d23 
  0cfb:85 00              lat temp0 
  0cfd:97 01             lapi param1 
  0cff:a5 01              sat temp1 
  0d01:39 2b            pushi 2b // $2b number
  0d03:78               push1 
  0d04:36                push 
  0d05:78               push1 
  0d06:36                push 
  0d07:43 02 02         callk ScriptID 2 

  0d0a:a5 02              sat temp2 
  0d0c:4a 06             send 6 

  0d0e:39 73            pushi 73 // $73 add
  0d10:78               push1 
  0d11:8d 02              lst temp2 
  0d13:81 1c              lag  
  0d15:4a 06             send 6 

  0d17:39 6b            pushi 6b // $6b init
  0d19:76               push0 
  0d1a:85 02              lat temp2 
  0d1c:4a 04             send 4 

  0d1e:c5 00              +at temp0 
  0d20:32 ffd0            jmp code_0cf3 

        code_0d23
  0d23:48                 ret 
    )

    (method (drawPic) // method_0d84
  0d84:81 0a              lag  
  0d86:30 000a            bnt code_0d93 
  0d89:39 74            pushi 74 // $74 eachElementDo
  0d8b:78               push1 
  0d8c:39 6c            pushi 6c // $6c dispose
  0d8e:39 7a            pushi 7a // $7a release
  0d90:76               push0 
  0d91:4a 0a             send a 


        code_0d93
  0d93:87 01              lap param1 
  0d95:65 24             aTop curPic 
  0d97:35 ff              ldi ff 
  0d99:a1 24              sag  
  0d9b:39 04            pushi 4 // $4 x
  0d9d:8f 01              lsp param1 
  0d9f:8f 00              lsp paramTotal 
  0da1:35 02              ldi 2 
  0da3:1a                 eq? 
  0da4:30 0005            bnt code_0dac 
  0da7:87 02              lap param2 
  0da9:32 000f            jmp code_0dbb 

        code_0dac
  0dac:67 16             pTos style 
  0dae:35 ff              ldi ff 
  0db0:1c                 ne? 
  0db1:30 0005            bnt code_0db9 
  0db4:63 16             pToa style 
  0db6:32 0002            jmp code_0dbb 

        code_0db9
  0db9:81 11              lag  

        code_0dbb
  0dbb:36                push 
  0dbc:78               push1 
  0dbd:89 28              lsg  
  0dbf:43 08 08         callk DrawPic 8 

  0dc2:48                 ret 
    )

    (method (overlay) // method_0dc3
  0dc3:87 01              lap param1 
  0dc5:a1 24              sag  
  0dc7:39 04            pushi 4 // $4 x
  0dc9:8f 01              lsp param1 
  0dcb:8f 00              lsp paramTotal 
  0dcd:35 02              ldi 2 
  0dcf:1a                 eq? 
  0dd0:30 0005            bnt code_0dd8 
  0dd3:87 02              lap param2 
  0dd5:32 000f            jmp code_0de7 

        code_0dd8
  0dd8:67 16             pTos style 
  0dda:35 ff              ldi ff 
  0ddc:1c                 ne? 
  0ddd:30 0005            bnt code_0de5 
  0de0:63 16             pToa style 
  0de2:32 0002            jmp code_0de7 

        code_0de5
  0de5:81 11              lag  

        code_0de7
  0de7:36                push 
  0de8:76               push0 
  0de9:89 28              lsg  
  0deb:43 08 08         callk DrawPic 8 

  0dee:48                 ret 
  0def:00                bnot 
    )

    (method (addObstacle) // method_0d43
  0d43:78               push1 
  0d44:67 2c             pTos obstacles 
  0d46:43 06 02         callk IsObject 2 

  0d49:18                 not 
  0d4a:30 0009            bnt code_0d56 
  0d4d:39 6a            pushi 6a // $6a new
  0d4f:76               push0 
  0d50:51 03            class List 
  0d52:4a 04             send 4 

  0d54:65 2c             aTop obstacles 

        code_0d56
  0d56:39 73            pushi 73 // $73 add
  0d58:78               push1 
  0d59:8f 01              lsp param1 
  0d5b:59 02            &rest 2 
  0d5d:63 2c             pToa obstacles 
  0d5f:4a 06             send 6 

  0d61:48                 ret 
    )

    (method (reflectPosn) // method_0b7d
  0b7d:8f 02              lsp param2 
  0b7f:3c                 dup 
  0b80:35 01              ldi 1 
  0b82:1a                 eq? 
  0b83:30 000d            bnt code_0b93 
  0b86:39 03            pushi 3 // $3 y
  0b88:78               push1 
  0b89:38 00bc          pushi bc // $bc helpStr
  0b8c:87 01              lap param1 
  0b8e:4a 06             send 6 

  0b90:32 0048            jmp code_0bdb 

        code_0b93
  0b93:3c                 dup 
  0b94:35 04              ldi 4 
  0b96:1a                 eq? 
  0b97:30 0016            bnt code_0bb0 
  0b9a:39 04            pushi 4 // $4 x
  0b9c:78               push1 
  0b9d:38 013f          pushi 13f // $13f inputLineAddr
  0ba0:39 36            pushi 36 // $36 xStep
  0ba2:76               push0 
  0ba3:87 01              lap param1 
  0ba5:4a 04             send 4 

  0ba7:04                 sub 
  0ba8:36                push 
  0ba9:87 01              lap param1 
  0bab:4a 06             send 6 

  0bad:32 002b            jmp code_0bdb 

        code_0bb0
  0bb0:3c                 dup 
  0bb1:35 03              ldi 3 
  0bb3:1a                 eq? 
  0bb4:30 0015            bnt code_0bcc 
  0bb7:39 03            pushi 3 // $3 y
  0bb9:78               push1 
  0bba:67 18             pTos horizon 
  0bbc:39 37            pushi 37 // $37 yStep
  0bbe:76               push0 
  0bbf:87 01              lap param1 
  0bc1:4a 04             send 4 

  0bc3:02                 add 
  0bc4:36                push 
  0bc5:87 01              lap param1 
  0bc7:4a 06             send 6 

  0bc9:32 000f            jmp code_0bdb 

        code_0bcc
  0bcc:3c                 dup 
  0bcd:35 02              ldi 2 
  0bcf:1a                 eq? 
  0bd0:30 0008            bnt code_0bdb 
  0bd3:39 04            pushi 4 // $4 x
  0bd5:78               push1 
  0bd6:78               push1 
  0bd7:87 01              lap param1 
  0bd9:4a 06             send 6 


        code_0bdb
  0bdb:3a                toss 
  0bdc:48                 ret 
    )

    (method (edgeToRoom) // method_0c0b
  0c0b:8f 01              lsp param1 
  0c0d:3c                 dup 
  0c0e:35 01              ldi 1 
  0c10:1a                 eq? 
  0c11:30 0005            bnt code_0c19 
  0c14:63 1c             pToa north 
  0c16:32 0021            jmp code_0c3a 

        code_0c19
  0c19:3c                 dup 
  0c1a:35 02              ldi 2 
  0c1c:1a                 eq? 
  0c1d:30 0005            bnt code_0c25 
  0c20:63 1e             pToa east 
  0c22:32 0015            jmp code_0c3a 

        code_0c25
  0c25:3c                 dup 
  0c26:35 03              ldi 3 
  0c28:1a                 eq? 
  0c29:30 0005            bnt code_0c31 
  0c2c:63 20             pToa south 
  0c2e:32 0009            jmp code_0c3a 

        code_0c31
  0c31:3c                 dup 
  0c32:35 04              ldi 4 
  0c34:1a                 eq? 
  0c35:30 0002            bnt code_0c3a 
  0c38:63 22             pToa west 

        code_0c3a
  0c3a:3a                toss 
  0c3b:48                 ret 
    )

    (method (roomToEdge) // method_0c3c
  0c3c:8f 01              lsp param1 
  0c3e:3c                 dup 
  0c3f:63 1c             pToa north 
  0c41:1a                 eq? 
  0c42:30 0005            bnt code_0c4a 
  0c45:35 01              ldi 1 
  0c47:32 0021            jmp code_0c6b 

        code_0c4a
  0c4a:3c                 dup 
  0c4b:63 20             pToa south 
  0c4d:1a                 eq? 
  0c4e:30 0005            bnt code_0c56 
  0c51:35 03              ldi 3 
  0c53:32 0015            jmp code_0c6b 

        code_0c56
  0c56:3c                 dup 
  0c57:63 1e             pToa east 
  0c59:1a                 eq? 
  0c5a:30 0005            bnt code_0c62 
  0c5d:35 02              ldi 2 
  0c5f:32 0009            jmp code_0c6b 

        code_0c62
  0c62:3c                 dup 
  0c63:63 22             pToa west 
  0c65:1a                 eq? 
  0c66:30 0002            bnt code_0c6b 
  0c69:35 04              ldi 4 

        code_0c6b
  0c6b:3a                toss 
  0c6c:48                 ret 
    )

)

// 0eb6
(class Locale of Obj
    (properties
        number $0
    )
    (method (dispose) // method_0ea0
  0ea0:39 54            pushi 54 // $54 delete
  0ea2:78               push1 
  0ea3:7c            pushSelf 
  0ea4:81 1c              lag  
  0ea6:4a 06             send 6 

  0ea8:78               push1 
  0ea9:67 08             pTos number 
  0eab:43 03 02         callk DisposeScript 2 

  0eae:48                 ret 
  0eaf:00                bnot 
    )

    (method (handleEvent) // method_0e98
  0e98:39 4c            pushi 4c // $4c claimed
  0e9a:76               push0 
  0e9b:87 01              lap param1 
  0e9d:4a 04             send 4 

  0e9f:48                 ret 
    )

)

// 0f38
(class SL of Obj
    (properties
        state $0
        code $0
    )
    (method (doit) // method_0ee0
  0ee0:3f 01             link 1 // (var $1)
  0ee2:63 0a             pToa code 
  0ee4:30 0036            bnt code_0f1d 
  0ee7:7a               push2 
  0ee8:78               push1 
  0ee9:35 00              ldi 0 
  0eeb:30 0006            bnt code_0ef4 
  0eee:34 00f0            ldi f0 
  0ef1:32 0002            jmp code_0ef6 

        code_0ef4
  0ef4:35 52              ldi 52 

        code_0ef6
  0ef6:36                push 
  0ef7:43 72 04         callk Memory 4 

  0efa:a5 00              sat temp0 
  0efc:39 3c            pushi 3c // $3c doit
  0efe:78               push1 
  0eff:36                push 
  0f00:63 0a             pToa code 
  0f02:4a 06             send 6 

  0f04:78               push1 
  0f05:63 08             pToa state 
  0f07:30 0005            bnt code_0f0f 
  0f0a:85 00              lat temp0 
  0f0c:32 0002            jmp code_0f11 

        code_0f0f
  0f0f:35 00              ldi 0 

        code_0f11
  0f11:36                push 
  0f12:43 23 02         callk DrawStatus 2 

  0f15:7a               push2 
  0f16:39 03            pushi 3 // $3 y
  0f18:8d 00              lst temp0 
  0f1a:43 72 04         callk Memory 4 


        code_0f1d
  0f1d:48                 ret 
    )

    (method (enable) // method_0f1e
  0f1e:35 01              ldi 1 
  0f20:65 08             aTop state 
  0f22:39 3c            pushi 3c // $3c doit
  0f24:76               push0 
  0f25:54 04             self 4 

  0f27:48                 ret 
    )

    (method (disable) // method_0f28
  0f28:35 00              ldi 0 
  0f2a:65 08             aTop state 
  0f2c:39 3c            pushi 3c // $3c doit
  0f2e:76               push0 
  0f2f:54 04             self 4 

  0f31:48                 ret 
    )

)

// 1086
(instance RU of Code
    (properties
    )
    (method (doit) // method_1051
  1051:3f 01             link 1 // (var $1)
  1053:39 08            pushi 8 // $8 underBits
  1055:76               push0 
  1056:87 01              lap param1 
  1058:4a 04             send 4 

  105a:30 0021            bnt code_107e 
  105d:39 11            pushi 11 // $11 signal
  105f:76               push0 
  1060:87 01              lap param1 
  1062:4a 04             send 4 

  1064:a5 00              sat temp0 
  1066:36                push 
  1067:35 01              ldi 1 
  1069:14                  or 
  106a:a5 00              sat temp0 
  106c:36                push 
  106d:35 fb              ldi fb 
  106f:12                 and 
  1070:a5 00              sat temp0 
  1072:39 08            pushi 8 // $8 underBits
  1074:78               push1 
  1075:76               push0 
  1076:39 11            pushi 11 // $11 signal
  1078:78               push1 
  1079:36                push 
  107a:87 01              lap param1 
  107c:4a 0c             send c 


        code_107e
  107e:48                 ret 
  107f:00                bnot 
    )

)

// 10ba
(instance DNKR of Code
    (properties
    )
    (method (doit) // method_10a0
  10a0:38 0181          pushi 181 // $181 keep
  10a3:76               push0 
  10a4:87 01              lap param1 
  10a6:4a 04             send 4 

  10a8:18                 not 
  10a9:30 0007            bnt code_10b3 
  10ac:39 6c            pushi 6c // $6c dispose
  10ae:76               push0 
  10af:87 01              lap param1 
  10b1:4a 04             send 4 


        code_10b3
  10b3:48                 ret 
    )

)

// 110a
(instance fDC of Code
    (properties
    )
    (method (doit) // method_10d4
  10d4:39 71            pushi 71 // $71 respondsTo
  10d6:78               push1 
  10d7:39 54            pushi 54 // $54 delete
  10d9:87 01              lap param1 
  10db:4a 06             send 6 

  10dd:30 001c            bnt code_10fc 
  10e0:39 11            pushi 11 // $11 signal
  10e2:78               push1 
  10e3:39 11            pushi 11 // $11 signal
  10e5:76               push0 
  10e6:87 01              lap param1 
  10e8:4a 04             send 4 

  10ea:36                push 
  10eb:35 df              ldi df 
  10ed:12                 and 
  10ee:36                push 
  10ef:39 6c            pushi 6c // $6c dispose
  10f1:76               push0 
  10f2:39 54            pushi 54 // $54 delete
  10f4:76               push0 
  10f5:87 01              lap param1 
  10f7:4a 0e             send e 

  10f9:32 0007            jmp code_1103 

        code_10fc
  10fc:39 6c            pushi 6c // $6c dispose
  10fe:76               push0 
  10ff:87 01              lap param1 
  1101:4a 04             send 4 


        code_1103
  1103:48                 ret 
    )

)

// 1126
(instance talkerEvent of Event
    (properties
        type $0
        message $0
        modifiers $0
        y $0
        x $0
        claimed $0
        port $0
    )
)



(procedure proc_0f6a
  0f6a:3f 52             link 52 // (var $52)
  0f6c:7a               push2 
  0f6d:78               push1 
  0f6e:35 00              ldi 0 
  0f70:30 0006            bnt code_0f79 
  0f73:34 00c8            ldi c8 
  0f76:32 0002            jmp code_0f7b 

        code_0f79
  0f79:35 50              ldi 50 

        code_0f7b
  0f7b:36                push 
  0f7c:43 72 04         callk Memory 4 

  0f7f:a5 51              sat temp81 
  0f81:35 01              ldi 1 
  0f83:a5 00              sat temp0 
  0f85:39 03            pushi 3 // $3 y
  0f87:76               push0 
  0f88:89 1d              lsg  
  0f8a:5b 04 01           lea 4 1 
  0f8d:36                push 
  0f8e:43 63 06         callk DeviceInfo 6 

  0f91:7a               push2 
  0f92:78               push1 
  0f93:5b 04 29           lea 4 29 
  0f96:36                push 
  0f97:43 63 04         callk DeviceInfo 4 

  0f9a:7a               push2 
  0f9b:39 03            pushi 3 // $3 y
  0f9d:5b 04 29           lea 4 29 
  0fa0:36                push 
  0fa1:43 63 04         callk DeviceInfo 4 

  0fa4:30 009f            bnt code_1046 
  0fa7:39 03            pushi 3 // $3 y
  0fa9:7a               push2 
  0faa:5b 04 01           lea 4 1 
  0fad:36                push 
  0fae:5b 04 29           lea 4 29 
  0fb1:36                push 
  0fb2:43 63 06         callk DeviceInfo 6 

  0fb5:2e 000f             bt code_0fc7 
  0fb8:7a               push2 
  0fb9:39 06            pushi 6 // $6 loop
  0fbb:39 17            pushi 17 // $17 name
  0fbd:76               push0 
  0fbe:81 01              lag  
  0fc0:4a 04             send 4 

  0fc2:36                push 
  0fc3:43 63 04         callk DeviceInfo 4 

  0fc6:18                 not 

        code_0fc7
  0fc7:30 007c            bnt code_1046 
  0fca:39 05            pushi 5 // $5 view
  0fcc:8d 51              lst temp81 
  0fce:38 03e2          pushi 3e2 // $3e2 sel_994
  0fd1:39 03            pushi 3 // $3 y
  0fd3:87 01              lap param1 
  0fd5:30 0006            bnt code_0fde 
  0fd8:72 1218          lofsa $1218 // SAVE GAME
  0fdb:32 0003            jmp code_0fe1 

        code_0fde
  0fde:72 1222          lofsa $1222 // GAME

        code_0fe1
  0fe1:36                push 
  0fe2:5b 04 01           lea 4 1 
  0fe5:36                push 
  0fe6:43 48 0a         callk Format a 

  0fe9:7a               push2 
  0fea:38 0087          pushi 87 // $87 ticks
  0fed:89 16              lsg  
  0fef:43 00 04         callk Load 4 

  0ff2:78               push1 
  0ff3:39 04            pushi 4 // $4 x
  0ff5:43 63 02         callk DeviceInfo 2 

  0ff8:87 01              lap param1 
  0ffa:30 0023            bnt code_1020 
  0ffd:39 0c            pushi c // $c nsRight
  0fff:8d 51              lst temp81 
  1001:39 21            pushi 21 // $21 font
  1003:76               push0 
  1004:39 51            pushi 51 // $51 button
  1006:72 11aa          lofsa $11aa // OK
  1009:36                push 
  100a:78               push1 
  100b:39 51            pushi 51 // $51 button
  100d:72 1227          lofsa $1227 // Cancel
  1010:36                push 
  1011:76               push0 
  1012:39 51            pushi 51 // $51 button
  1014:72 122e          lofsa $122e // Change Directory
  1017:36                push 
  1018:7a               push2 
  1019:47 ff 00 18      calle ff procedure_0000 18 //  

  101d:32 0012            jmp code_1032 

        code_1020
  1020:39 06            pushi 6 // $6 loop
  1022:8d 51              lst temp81 
  1024:39 21            pushi 21 // $21 font
  1026:76               push0 
  1027:39 51            pushi 51 // $51 button
  1029:72 11aa          lofsa $11aa // OK
  102c:36                push 
  102d:78               push1 
  102e:47 ff 00 0c      calle ff procedure_0000 c //  


        code_1032
  1032:a5 00              sat temp0 
  1034:36                push 
  1035:35 02              ldi 2 
  1037:1a                 eq? 
  1038:30 000b            bnt code_1046 
  103b:78               push1 
  103c:89 1d              lsg  
  103e:46 03de 0000 02  calle 3de procedure_0000 2 //  

  1044:a5 00              sat temp0 

        code_1046
  1046:7a               push2 
  1047:39 03            pushi 3 // $3 y
  1049:8d 51              lst temp81 
  104b:43 72 04         callk Memory 4 

  104e:85 00              lat temp0 
  1050:48                 ret 
)

