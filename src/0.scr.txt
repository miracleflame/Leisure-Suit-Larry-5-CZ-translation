(script 0)

(string
    string_2616 "longSong"
    string_261f "longSong2"
    string_2629 "hotSound"
    string_2632 "WrapMusic"
    string_263c "ll5Timer"
    string_2645 "camcorderTimer"
    string_2654 "Actions"
    string_265c "stopGroop"
    string_2666 "quitIcon"
    string_266f "ll5KDHandler"
    string_267c "ll5MDHandler"
    string_2689 "ll5DirHandler"
    string_2697 "x.yyy.zzz"
    string_26a1 "mm/dd/yy"
    string_26aa "991-999-9999"
    string_26b7 "992-999-9999"
    string_26c4 "version"
    string_26cc "So You're Finally Leaving?"
    string_26e7 "Okay, you two. Have fun!"
    string_2700 "Hey! Back to work!"
    string_2713 "MEMORY.DRV"
    string_271e "\n"
    string_2720 "LSL5"
    string_2725 "An Erased Videotape"
    string_2739 "Michelle Milken"
    string_2749 "Lana Luscious"
    string_2757 "Chi Chi Lambada"
    string_2767 "pointsSound"
    string_2773 "You"
    string_2777 "Walk"
    string_277c "Look"
    string_2781 "Do"
    string_2784 "Talk"
    string_2789 "Zipper"
    string_2790 "UNKNOWN VERB"
    string_279d "\n"
    string_27a0 "Use this icon to move your character."
    string_27c6 "icon0"
    string_27cc "Use this icon to look at things."
    string_27ed "icon1"
    string_27f3 "Use this icon to do things."
    string_280f "icon2"
    string_2815 "Use this icon to talk to other characters."
    string_2840 "icon3"
    string_2846 "Say! Don't you know what your zipper is for?"
    string_2873 "icon4"
    string_2879 "This icon lets you \"Fast Forward\" to the next interactive portion of the game."
    string_28c8 "Fast Forward"
    string_28d5 "Yes"
    string_28d9 "Oops"
    string_28de "icon5"
    string_28e4 "Select this icon to use your current inventory object."
    string_291b "icon6"
    string_2921 "Use this icon to bring up your inventory window."
    string_2952 "icon7"
    string_2958 "This icon brings up the control panel."
    string_297f "icon8"
    string_2985 "To learn about the other icons, first click here, then pass the question mark over the other icons."
    string_29e9 "icon9"
    string_29ef "checkIcon"
    string_29f9 "ll5DoVerbCode"
    string_2a07 "ll5FtrInit"
    string_2a12 "ll5Win"
    string_2a19 "gcWin"
    string_2a1f "Raise this to increase the amount of background animation. Lower it if game play seems sluggish."
    string_2a80 "detailSlider"
    string_2a8d "This adjusts the volume on some sound boards and synthesizers."
    string_2acc "volumeSlider"
    string_2ad9 "This adjusts Larry and Patti's speed, within the limits of your computer's capabilities."
    string_2b32 "speedSlider"
    string_2b3e "Lower this slide to make text remain on the screen longer. Raise it if you are a fast reader."
    string_2b9c "textSlider"
    string_2ba7 "Use this to save the current state of your game. When you later select Restore, everything will be exactly as it is now."
    string_2c20 "iconSave"
    string_2c29 "This restores a game you saved earlier."
    string_2c51 "iconRestore"
    string_2c5d "Use this to restart the game from the very beginning."
    string_2c93 "iconRestart"
    string_2c9f "Use this to leave the game."
    string_2cbb "iconQuit"
    string_2cc4 "Here's where you learn more than you care to know about the creators of this game."
    string_2d17 "iconAbout"
    string_2d21 "To learn about the other items in this window, first click here, then pass the question mark over the other items."
    string_2d94 "iconHelp"
    string_2d9d "Use this to exit this menu and resume game play."
    string_2dce "iconOk"
    string_2dd5 ""
)

(said
)

(local
    local0 = $0000
    local1 = $0000
    local2 = $0000
    local3 = $0006
    local4 = $0000
    local5 = $0000
    local6 = $0000
    local7 = $0000
    local8 = $0000
    local9 = $0000
    local10 = $0000
    local11 = $0000
    local12 = $0000
    local13 = $0000
    local14 = $0000
    local15 = $0000
    local16 = $0000
    local17 = $0007
    local18 = $0000
    local19 = $0000
    local20 = $03e7
    local21 = $0014
    local22 = $0001
    local23 = $0001
    local24 = $0000
    local25 = $0000
    local26 = $0001
    local27 = $0000
    local28 = $0000
    local29 = $0000
    local30 = $000a
    local31 = $0000
    local32 = $0000
    local33 = $0000
    local34 = $0000
    local35 = $0000
    local36 = $ffff
    local37 = $0000
    local38 = $0000
    local39 = $0003
    local40 = $0000
    local41 = $0000
    local42 = $0000
    local43 = $0000
    local44 = $0000
    local45 = $0000
    local46 = $0000
    local47 = $0000
    local48 = $0000
    local49 = $0000
    local50 = $0000
    local51 = $0000
    local52 = $0000
    local53 = $0000
    local54 = $0000
    local55 = $0000
    local56 = $0000
    local57 = $0000
    local58 = $0000
    local59 = $0000
    local60 = $0000
    local61 = $0000
    local62 = $0000
    local63 = $0000
    local64 = $0000
    local65 = $0000
    local66 = $0000
    local67 = $0001
    local68 = $0000
    local69 = $0000
    local70 = $0000
    local71 = $0000
    local72 = $0000
    local73 = $0000
    local74 = $0000
    local75 = $0000
    local76 = $0000
    local77 = $0000
    local78 = $0000
    local79 = $003c
    local80 = $0000
    local81 = $0000
    local82 = $0000
    local83 = $0000
    local84 = $0000
    local85 = $0000
    local86 = $0000
    local87 = $0000
    local88 = $0000
    local89 = $0000
    local90 = $0000
    local91 = $0000
    local92 = $0000
    local93 = $0000
    local94 = $0000
    local95 = $0000
    local96 = $0000
    local97 = $0000
    local98 = $0000
    local99 = $0000
    local100 = $0000
    local101 = $04d2
    local102 = $0000
    local103 = $0000
    local104 = $0000
    local105 = $0000
    local106 = $0000
    local107 = $0064
    local108 = $0000
    local109 = $0000
    local110 = $0000
    local111 = $0000
    local112 = $0000
    local113 = $0000
    local114 = $0000
    local115 = $0000
    local116 = $0000
    local117 = $0000
    local118 = $0000
    local119 = $0000
    local120 = $0000
    local121 = $0000
    local122 = $0000
    local123 = $0000
    local124 = $0000
    local125 = $0000
    local126 = $0000
    local127 = $0000
    local128 = $0000
    local129 = $0000
    local130 = $0000
    local131 = $0000
    local132 = $0000
    local133 = $0000
    local134 = $0000
    local135 = $0000
    local136 = $0000
    local137 = $0000
    local138 = $0000
    local139 = $0000
    local140 = $0000
    local141 = $0000
    local142 = $0000
    local143 = $0000
    local144 = $0000
    local145 = $0000
    local146 = $0000
    local147 = $0000
    local148 = $0000
    local149 = $0000
    local150 = $0000
    local151 = $0000
    local152 = $0000
    local153 = $0000
    local154 = $0000
    local155 = $0000
    local156 = $0000
    local157 = $0000
    local158 = $0000
    local159 = $0000
    local160 = $0000
    local161 = $0000
    local162 = $0000
    local163 = $0000
    local164 = $0000
    local165 = $0000
    local166 = $0000
    local167 = $0000
    local168 = $0000
    local169 = $0000
    local170 = $0000
    local171 = $0000
    local172 = $0000
    local173 = $0000
    local174 = $0000
    local175 = $0000
    local176 = $0000
    local177 = $0000
    local178 = $0000
    local179 = $0000
    local180 = $0000
    local181 = $0000
    local182 = $0000
    local183 = $0000
    local184 = $0000
    local185 = $0000
    local186 = $0000
    local187 = $0000
    local188 = $0000
    local189 = $0000
    local190 = $0000
    local191 = $0000
    local192 = $0000
    local193 = $0000
    local194 = $0000
    local195 = $0000
    local196 = $0000
    local197 = $0000
    local198 = $0000
    local199 = $0000
)

// 0074
(instance longSong of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 00aa
(instance longSong2 of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 00e0
(instance hotSound of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 0174
(class WrapMusic of Obj
    (properties
        firstSound $0
        lastSound $0
    )
    (method (init) // method_0114
  0114:39 6b            pushi 6b // $6b init
  0116:76               push0 
  0117:57 00 04         super Obj 4 

  011a:39 2b            pushi 2b // $2b number
  011c:78               push1 
  011d:67 08             pTos firstSound 
  011f:38 00a2          pushi a2 // $a2 setLoop
  0122:78               push1 
  0123:78               push1 
  0124:39 2a            pushi 2a // $2a play
  0126:78               push1 
  0127:7c            pushSelf 
  0128:81 66              lag  
  012a:4a 12             send 12 

  012c:48                 ret 
    )

    (method (cue) // method_012d
  012d:3f 02             link 2 // (var $2)
  012f:38 009a          pushi 9a // $9a prevSignal
  0132:76               push0 
  0133:81 66              lag  
  0135:4a 04             send 4 

  0137:36                push 
  0138:35 ff              ldi ff 
  013a:1a                 eq? 
  013b:30 002e            bnt code_016c 
  013e:39 2b            pushi 2b // $2b number
  0140:76               push0 
  0141:81 66              lag  
  0143:4a 04             send 4 

  0145:a5 00              sat temp0 
  0147:39 61            pushi 61 // $61 vol
  0149:76               push0 
  014a:81 66              lag  
  014c:4a 04             send 4 

  014e:a5 01              sat temp1 
  0150:c5 00              +at temp0 
  0152:36                push 
  0153:63 0a             pToa lastSound 
  0155:1e                 gt? 
  0156:30 0004            bnt code_015d 
  0159:63 08             pToa firstSound 
  015b:a5 00              sat temp0 

        code_015d
  015d:39 2b            pushi 2b // $2b number
  015f:78               push1 
  0160:8d 00              lst temp0 
  0162:39 2a            pushi 2a // $2a play
  0164:7a               push2 
  0165:8d 01              lst temp1 
  0167:7c            pushSelf 
  0168:81 66              lag  
  016a:4a 0e             send e 


        code_016c
  016c:48                 ret 
  016d:00                bnot 
    )

)

// 01b8
(class ll5Timer of Timer
    (properties
        cycleCnt $ffff
        seconds $ffff
        ticksToDo $ffff
        lastTime $ffff
        client $0
        code $0
    )
    (method (cue) // method_01a2
  01a2:63 12             pToa code 
  01a4:30 0009            bnt code_01b0 
  01a7:39 3c            pushi 3c // $3c doit
  01a9:76               push0 
  01aa:4a 04             send 4 

  01ac:35 00              ldi 0 
  01ae:65 12             aTop code 

        code_01b0
  01b0:48                 ret 
  01b1:00                bnot 
    )

)

// 0238
(instance camcorderTimer of Timer
    (properties
        cycleCnt $ffff
        seconds $0
        ticksToDo $ffff
        lastTime $ffff
        client $0
    )
    (method (doit) // method_01f2
  01f2:39 20            pushi 20 // $20 state
  01f4:76               push0 
  01f5:39 43            pushi 43 // $43 at
  01f7:78               push1 
  01f8:76               push0 
  01f9:51 40            class Inv 
  01fb:4a 06             send 6 

  01fd:4a 04             send 4 

  01ff:36                push 
  0200:35 64              ldi 64 
  0202:20                 ge? 
  0203:30 0006            bnt code_020c 
  0206:39 3c            pushi 3c // $3c doit
  0208:76               push0 
  0209:57 08 04         super Timer 4 


        code_020c
  020c:48                 ret 
    )

    (method (cue) // method_020d
  020d:3f 01             link 1 // (var $1)
  020f:7a               push2 
  0210:76               push0 
  0211:76               push0 
  0212:40 103c 04        call proc_1252 4 

  0216:39 43            pushi 43 // $43 at
  0218:78               push1 
  0219:76               push0 
  021a:51 40            class Inv 
  021c:4a 06             send 6 

  021e:a5 00              sat temp0 
  0220:39 20            pushi 20 // $20 state
  0222:78               push1 
  0223:39 20            pushi 20 // $20 state
  0225:76               push0 
  0226:4a 04             send 4 

  0228:36                push 
  0229:35 64              ldi 64 
  022b:04                 sub 
  022c:36                push 
  022d:85 00              lat temp0 
  022f:4a 06             send 6 

  0231:48                 ret 
    )

)

// 026a
(class Actions of Code
    (properties
    )
    (method (doVerb) // method_0260
  0260:35 00              ldi 0 
  0262:48                 ret 
  0263:00                bnot 
    )

)

// 028e
(instance stopGroop of Grooper
    (properties
        client $0
        oldCycler $0
        oldMover $0
        caller $0
    )
)

// 02c2
(instance quitIcon of DCIcon
    (properties
        type $4
        state $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        key $0
        said $0
        value $0
        view $0
        loop $0
        cel $0
        cycler $0
        cycleSpeed $6
        signal $0
    )
    (method (init) // method_02ac
  02ac:39 6b            pushi 6b // $6b init
  02ae:78               push1 
  02af:7c            pushSelf 
  02b0:39 6a            pushi 6a // $6a new
  02b2:76               push0 
  02b3:51 17            class Fwd 
  02b5:4a 04             send 4 

  02b7:65 20             aTop cycler 
  02b9:4a 06             send 6 

  02bb:48                 ret 
    )

)

// 02fc
(instance ll5KDHandler of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 0318
(instance ll5MDHandler of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 0334
(instance ll5DirHandler of EventHandler
    (properties
        elements $0
        size $0
    )
)

// 0ebe
(instance publicLSL5 of Game
    (properties
        script $0
        parseLang $1
        printLang $1
        subtitleLang $0
        _detailLevel $3
        egoMoveSpeed $0
    )
    (method (init) // method_034e
  034e:3f 08             link 8 // (var $8)
  0350:72 0294          lofsa $0294 // stopGroop
  0353:a1 64              sag  
  0355:51 56            class StopWalk 
  0357:51 08            class Timer 
  0359:51 23            class Polygon 
  035b:51 24            class PolyPath 
  035d:51 72            class LLRoom 
  035f:51 15            class IconBar 
  0361:51 40            class Inv 
  0363:78               push1 
  0364:38 03d6          pushi 3d6 // $3d6 sel_982
  0367:43 02 02         callk ScriptID 2 

  036a:39 6b            pushi 6b // $6b init
  036c:76               push0 
  036d:57 41 04         super Game 4 

  0370:39 6b            pushi 6b // $6b init
  0372:76               push0 
  0373:7a               push2 
  0374:39 10            pushi 10 // $10 lsRight
  0376:76               push0 
  0377:43 02 04         callk ScriptID 4 

  037a:4a 04             send 4 

  037c:7a               push2 
  037d:38 0082          pushi 82 // $82 start
  0380:39 10            pushi 10 // $10 lsRight
  0382:43 01 04         callk UnLoad 4 

  0385:72 1e66          lofsa $1e66 // ll5DoVerbCode
  0388:a1 41              sag  
  038a:72 1eee          lofsa $1eee // ll5FtrInit
  038d:a1 40              sag  
  038f:39 73            pushi 73 // $73 add
  0391:76               push0 
  0392:72 0302          lofsa $0302 // ll5KDHandler
  0395:a1 48              sag  
  0397:4a 04             send 4 

  0399:39 73            pushi 73 // $73 add
  039b:76               push0 
  039c:72 031e          lofsa $031e // ll5MDHandler
  039f:a1 49              sag  
  03a1:4a 04             send 4 

  03a3:39 73            pushi 73 // $73 add
  03a5:76               push0 
  03a6:72 033a          lofsa $033a // ll5DirHandler
  03a9:a1 4a              sag  
  03ab:4a 04             send 4 

  03ad:51 6a            class PseudoMouse 
  03af:a1 4d              sag  
  03b1:38 009b          pushi 9b // $9b owner
  03b4:78               push1 
  03b5:7c            pushSelf 
  03b6:39 66            pushi 66 // $66 flags
  03b8:78               push1 
  03b9:78               push1 
  03ba:39 6b            pushi 6b // $6b init
  03bc:76               push0 
  03bd:72 007a          lofsa $007a // longSong
  03c0:a1 66              sag  
  03c2:4a 10             send 10 

  03c4:38 009b          pushi 9b // $9b owner
  03c7:78               push1 
  03c8:7c            pushSelf 
  03c9:39 66            pushi 66 // $66 flags
  03cb:78               push1 
  03cc:78               push1 
  03cd:39 6b            pushi 6b // $6b init
  03cf:76               push0 
  03d0:72 00b0          lofsa $00b0 // longSong2
  03d3:a1 67              sag  
  03d5:4a 10             send 10 

  03d7:51 75            class ll5Timer 
  03d9:a1 aa              sag  
  03db:72 023e          lofsa $023e // camcorderTimer
  03de:a1 b7              sag  
  03e0:72 2697          lofsa $2697 // x.yyy.zzz
  03e3:a1 1b              sag  
  03e5:72 26a1          lofsa $26a1 // mm/dd/yy
  03e8:a1 b5              sag  
  03ea:72 26aa          lofsa $26aa // 991-999-9999
  03ed:a1 b6              sag  
  03ef:72 26b7          lofsa $26b7 // 992-999-9999
  03f2:a1 70              sag  
  03f4:39 03            pushi 3 // $3 y
  03f6:76               push0 
  03f7:72 26c4          lofsa $26c4 // version
  03fa:36                push 
  03fb:78               push1 
  03fc:43 74 06         callk FileIO 6 

  03ff:a5 07              sat temp7 
  0401:39 04            pushi 4 // $4 x
  0403:39 05            pushi 5 // $5 view
  0405:89 1b              lsg  
  0407:39 0b            pushi b // $b nsBottom
  0409:36                push 
  040a:43 74 08         callk FileIO 8 

  040d:39 04            pushi 4 // $4 x
  040f:39 05            pushi 5 // $5 view
  0411:89 b5              lsg  
  0413:39 14            pushi 14 // $14 brLeft
  0415:8d 07              lst temp7 
  0417:43 74 08         callk FileIO 8 

  041a:39 04            pushi 4 // $4 x
  041c:39 05            pushi 5 // $5 view
  041e:89 b6              lsg  
  0420:39 14            pushi 14 // $14 brLeft
  0422:8d 07              lst temp7 
  0424:43 74 08         callk FileIO 8 

  0427:39 04            pushi 4 // $4 x
  0429:39 05            pushi 5 // $5 view
  042b:89 70              lsg  
  042d:39 14            pushi 14 // $14 brLeft
  042f:8d 07              lst temp7 
  0431:43 74 08         callk FileIO 8 

  0434:7a               push2 
  0435:78               push1 
  0436:8d 07              lst temp7 
  0438:43 74 04         callk FileIO 4 

  043b:39 73            pushi 73 // $73 add
  043d:39 0a            pushi a // $a nsLeft
  043f:72 16e2          lofsa $16e2 // icon0
  0442:36                push 
  0443:72 1738          lofsa $1738 // icon1
  0446:36                push 
  0447:72 178a          lofsa $178a // icon2
  044a:36                push 
  044b:72 17dc          lofsa $17dc // icon3
  044e:36                push 
  044f:72 182e          lofsa $182e // icon4
  0452:36                push 
  0453:72 18fe          lofsa $18fe // icon5
  0456:36                push 
  0457:72 1b92          lofsa $1b92 // icon6
  045a:36                push 
  045b:72 1c04          lofsa $1c04 // icon7
  045e:36                push 
  045f:72 1c76          lofsa $1c76 // icon8
  0462:36                push 
  0463:72 1ccc          lofsa $1ccc // icon9
  0466:36                push 
  0467:39 74            pushi 74 // $74 eachElementDo
  0469:78               push1 
  046a:39 6b            pushi 6b // $6b init
  046c:39 74            pushi 74 // $74 eachElementDo
  046e:7a               push2 
  046f:38 00c0          pushi c0 // $c0 highlightColor
  0472:76               push0 
  0473:38 00ce          pushi ce // $ce curIcon
  0476:78               push1 
  0477:72 16e2          lofsa $16e2 // icon0
  047a:36                push 
  047b:38 00d2          pushi d2 // $d2 useIconItem
  047e:78               push1 
  047f:72 1b92          lofsa $1b92 // icon6
  0482:36                push 
  0483:38 00d3          pushi d3 // $d3 helpIconItem
  0486:78               push1 
  0487:72 1ccc          lofsa $1ccc // icon9
  048a:36                push 
  048b:38 00c9          pushi c9 // $c9 disable
  048e:78               push1 
  048f:39 06            pushi 6 // $6 loop
  0491:38 00c9          pushi c9 // $c9 disable
  0494:76               push0 
  0495:39 20            pushi 20 // $20 state
  0497:78               push1 
  0498:38 0c00          pushi c00 // $c00 sel_3072
  049b:51 15            class IconBar 
  049d:a1 45              sag  
  049f:4a 48             send 48 

  04a1:39 28            pushi 28 // $28 message
  04a3:78               push1 
  04a4:76               push0 
  04a5:43 27 00         callk HaveMouse 0 

  04a8:30 0006            bnt code_04b1 
  04ab:34 0f00            ldi f00 
  04ae:32 0002            jmp code_04b3 

        code_04b1
  04b1:35 09              ldi 9 

        code_04b3
  04b3:36                push 
  04b4:72 1c04          lofsa $1c04 // icon7
  04b7:4a 06             send 6 

  04b9:39 23            pushi 23 // $23 window
  04bb:78               push1 
  04bc:72 2206          lofsa $2206 // gcWin
  04bf:36                push 
  04c0:39 73            pushi 73 // $73 add
  04c2:39 0b            pushi b // $b nsBottom
  04c4:72 25e0          lofsa $25e0 // iconOk
  04c7:36                push 
  04c8:72 225c          lofsa $225c // detailSlider
  04cb:36                push 
  04cc:38 0145          pushi 145 // $145 theObj
  04cf:78               push1 
  04d0:7c            pushSelf 
  04d1:38 01f4          pushi 1f4 // $1f4 selector
  04d4:78               push1 
  04d5:38 017f          pushi 17f // $17f masterVolume
  04d8:39 72            pushi 72 // $72 yourself
  04da:76               push0 
  04db:72 22ba          lofsa $22ba // volumeSlider
  04de:4a 10             send 10 

  04e0:36                push 
  04e1:38 0145          pushi 145 // $145 theObj
  04e4:78               push1 
  04e5:7c            pushSelf 
  04e6:38 01f4          pushi 1f4 // $1f4 selector
  04e9:78               push1 
  04ea:38 017c          pushi 17c // $17c setSpeed
  04ed:39 72            pushi 72 // $72 yourself
  04ef:76               push0 
  04f0:72 235a          lofsa $235a // speedSlider
  04f3:4a 10             send 10 

  04f5:36                push 
  04f6:72 23d0          lofsa $23d0 // textSlider
  04f9:36                push 
  04fa:38 0145          pushi 145 // $145 theObj
  04fd:78               push1 
  04fe:7c            pushSelf 
  04ff:38 01f4          pushi 1f4 // $1f4 selector
  0502:78               push1 
  0503:39 4e            pushi 4e // $4e save
  0505:39 72            pushi 72 // $72 yourself
  0507:76               push0 
  0508:72 242e          lofsa $242e // iconSave
  050b:4a 10             send 10 

  050d:36                push 
  050e:38 0145          pushi 145 // $145 theObj
  0511:78               push1 
  0512:7c            pushSelf 
  0513:38 01f4          pushi 1f4 // $1f4 selector
  0516:78               push1 
  0517:39 4f            pushi 4f // $4f restore
  0519:39 72            pushi 72 // $72 yourself
  051b:76               push0 
  051c:72 2496          lofsa $2496 // iconRestore
  051f:4a 10             send 10 

  0521:36                push 
  0522:38 0145          pushi 145 // $145 theObj
  0525:78               push1 
  0526:7c            pushSelf 
  0527:38 01f4          pushi 1f4 // $1f4 selector
  052a:78               push1 
  052b:39 68            pushi 68 // $68 restart
  052d:39 72            pushi 72 // $72 yourself
  052f:76               push0 
  0530:72 24dc          lofsa $24dc // iconRestart
  0533:4a 10             send 10 

  0535:36                push 
  0536:38 0145          pushi 145 // $145 theObj
  0539:78               push1 
  053a:7c            pushSelf 
  053b:38 01f4          pushi 1f4 // $1f4 selector
  053e:78               push1 
  053f:39 67            pushi 67 // $67 quitGame
  0541:39 72            pushi 72 // $72 yourself
  0543:76               push0 
  0544:72 251e          lofsa $251e // iconQuit
  0547:4a 10             send 10 

  0549:36                push 
  054a:38 0145          pushi 145 // $145 theObj
  054d:78               push1 
  054e:7a               push2 
  054f:39 0f            pushi f // $f lsBottom
  0551:76               push0 
  0552:43 02 04         callk ScriptID 4 

  0555:36                push 
  0556:38 01f4          pushi 1f4 // $1f4 selector
  0559:78               push1 
  055a:39 3c            pushi 3c // $3c doit
  055c:39 72            pushi 72 // $72 yourself
  055e:76               push0 
  055f:72 2560          lofsa $2560 // iconAbout
  0562:4a 10             send 10 

  0564:36                push 
  0565:72 25a2          lofsa $25a2 // iconHelp
  0568:36                push 
  0569:39 74            pushi 74 // $74 eachElementDo
  056b:7a               push2 
  056c:38 00c0          pushi c0 // $c0 highlightColor
  056f:76               push0 
  0570:39 74            pushi 74 // $74 eachElementDo
  0572:7a               push2 
  0573:38 00c1          pushi c1 // $c1 lowlightColor
  0576:89 86              lsg  
  0578:38 00d3          pushi d3 // $d3 helpIconItem
  057b:78               push1 
  057c:72 25a2          lofsa $25a2 // iconHelp
  057f:36                push 
  0580:38 00ce          pushi ce // $ce curIcon
  0583:78               push1 
  0584:72 242e          lofsa $242e // iconSave
  0587:36                push 
  0588:39 20            pushi 20 // $20 state
  058a:78               push1 
  058b:38 0800          pushi 800 // $800 sel_2048
  058e:51 68            class GameControls 
  0590:4a 42             send 42 

  0592:35 17              ldi 17 
  0594:a5 06              sat temp6 
  0596:78               push1 
  0597:76               push0 
  0598:40 0c77 02        call proc_1213 2 

  059c:76               push0 
  059d:43 2c 00         callk GameIsRestarting 0 

  05a0:30 0009            bnt code_05ac 
  05a3:7a               push2 
  05a4:78               push1 
  05a5:5b 00 6b           lea 0 6b 
  05a8:36                push 
  05a9:43 70 04         callk MemorySegment 4 


        code_05ac
  05ac:51 70            class Larry 
  05ae:a1 00              sag  
  05b0:35 01              ldi 1 
  05b2:a1 b3              sag  
  05b4:38 0139          pushi 139 // $139 alterEgo
  05b7:78               push1 
  05b8:89 00              lsg  
  05ba:38 0142          pushi 142 // $142 verbMessager
  05bd:78               push1 
  05be:76               push0 
  05bf:38 011a          pushi 11a // $11a canControl
  05c2:78               push1 
  05c3:76               push0 
  05c4:38 0144          pushi 144 // $144 canInput
  05c7:78               push1 
  05c8:76               push0 
  05c9:51 31            class User 
  05cb:4a 18             send 18 

  05cd:39 7a            pushi 7a // $7a release
  05cf:76               push0 
  05d0:51 40            class Inv 
  05d2:4a 04             send 4 

  05d4:38 020b          pushi 20b // $20b setUpInv
  05d7:76               push0 
  05d8:81 00              lag  
  05da:4a 04             send 4 

  05dc:38 0179          pushi 179 // $179 newRoom
  05df:78               push1 
  05e0:89 6b              lsg  
  05e2:54 06             self 6 

  05e4:48                 ret 
    )

    (method (doit) // method_05e5
  05e5:39 3c            pushi 3c // $3c doit
  05e7:76               push0 
  05e8:57 41 04         super Game 4 

  05eb:38 009b          pushi 9b // $9b owner
  05ee:76               push0 
  05ef:39 43            pushi 43 // $43 at
  05f1:78               push1 
  05f2:76               push0 
  05f3:51 40            class Inv 
  05f5:4a 06             send 6 

  05f7:4a 04             send 4 

  05f9:36                push 
  05fa:39 43            pushi 43 // $43 at
  05fc:78               push1 
  05fd:78               push1 
  05fe:51 40            class Inv 
  0600:4a 06             send 6 

  0602:1a                 eq? 
  0603:30 0017            bnt code_061d 
  0606:7a               push2 
  0607:38 07d0          pushi 7d0 // $7d0 sel_2000
  060a:89 96              lsg  
  060c:35 03              ldi 3 
  060e:02                 add 
  060f:a1 96              sag  
  0611:36                push 
  0612:46 03e7 0002 04  calle 3e7 procedure_0002 4 //  

  0618:a1 96              sag  
  061a:32 0021            jmp code_063e 

        code_061d
  061d:39 20            pushi 20 // $20 state
  061f:76               push0 
  0620:39 43            pushi 43 // $43 at
  0622:78               push1 
  0623:76               push0 
  0624:51 40            class Inv 
  0626:4a 06             send 6 

  0628:4a 04             send 4 

  062a:36                push 
  062b:35 64              ldi 64 
  062d:20                 ge? 
  062e:30 000d            bnt code_063e 
  0631:7a               push2 
  0632:76               push0 
  0633:e1 96              -ag  
  0635:36                push 
  0636:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  063c:a1 96              sag  

        code_063e
  063e:48                 ret 
    )

    (method (newRoom) // method_095f
  095f:81 19              lag  
  0961:30 0005            bnt code_0969 
  0964:39 6c            pushi 6c // $6c dispose
  0966:76               push0 
  0967:4a 04             send 4 


        code_0969
  0969:35 00              ldi 0 
  096b:a1 b8              sag  
  096d:39 2d            pushi 2d // $2d client
  096f:76               push0 
  0970:81 b7              lag  
  0972:4a 04             send 4 

  0974:30 0012            bnt code_0989 
  0977:38 0085          pushi 85 // $85 seconds
  097a:76               push0 
  097b:81 b7              lag  
  097d:4a 04             send 4 

  097f:a1 b8              sag  
  0981:39 2d            pushi 2d // $2d client
  0983:78               push1 
  0984:76               push0 
  0985:81 b7              lag  
  0987:4a 06             send 6 


        code_0989
  0989:78               push1 
  098a:89 54              lsg  
  098c:43 06 02         callk IsObject 2 

  098f:30 0014            bnt code_09a6 
  0992:39 1b            pushi 1b // $1b elements
  0994:76               push0 
  0995:81 54              lag  
  0997:4a 04             send 4 

  0999:30 000a            bnt code_09a6 
  099c:39 74            pushi 74 // $74 eachElementDo
  099e:7a               push2 
  099f:39 6c            pushi 6c // $6c dispose
  09a1:78               push1 
  09a2:81 54              lag  
  09a4:4a 08             send 8 


        code_09a6
  09a6:38 00c9          pushi c9 // $c9 disable
  09a9:76               push0 
  09aa:81 45              lag  
  09ac:4a 04             send 4 

  09ae:89 97              lsg  
  09b0:34 03e8            ldi 3e8 
  09b3:1e                 gt? 
  09b4:30 0038            bnt code_09ef 
  09b7:89 97              lsg  
  09b9:3c                 dup 
  09ba:34 0483            ldi 483 
  09bd:1a                 eq? 
  09be:30 000a            bnt code_09cb 
  09c1:78               push1 
  09c2:39 07            pushi 7 // $7 cel
  09c4:40 06a5 02        call proc_106d 2 

  09c8:32 000f            jmp code_09da 

        code_09cb
  09cb:3c                 dup 
  09cc:34 05c8            ldi 5c8 
  09cf:1a                 eq? 
  09d0:30 0007            bnt code_09da 
  09d3:78               push1 
  09d4:39 2f            pushi 2f // $2f dy
  09d6:40 0693 02        call proc_106d 2 


        code_09da
  09da:3a                toss 
  09db:89 97              lsg  
  09dd:34 03e8            ldi 3e8 
  09e0:04                 sub 
  09e1:a1 97              sag  
  09e3:38 0179          pushi 179 // $179 newRoom
  09e6:76               push0 
  09e7:59 01            &rest 1 
  09e9:57 41 04         super Game 4 

  09ec:32 0009            jmp code_09f8 

        code_09ef
  09ef:38 0179          pushi 179 // $179 newRoom
  09f2:76               push0 
  09f3:59 01            &rest 1 
  09f5:57 41 04         super Game 4 


        code_09f8
  09f8:48                 ret 
    )

    (method (startRoom) // method_0a1d
  0a1d:39 3c            pushi 3c // $3c doit
  0a1f:78               push1 
  0a20:8f 01              lsp param1 
  0a22:78               push1 
  0a23:39 0b            pushi b // $b nsBottom
  0a25:43 02 02         callk ScriptID 2 

  0a28:4a 06             send 6 

  0a2a:39 03            pushi 3 // $3 y
  0a2c:89 97              lsg  
  0a2e:8f 01              lsp param1 
  0a30:38 03e8          pushi 3e8 // $3e8 sel_1000
  0a33:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  0a39:30 0006            bnt code_0a42 
  0a3c:78               push1 
  0a3d:76               push0 
  0a3e:40 07d1 02        call proc_1213 2 


        code_0a42
  0a42:8f 01              lsp param1 
  0a44:34 00c8            ldi c8 
  0a47:1a                 eq? 
  0a48:30 0012            bnt code_0a5d 
  0a4b:39 7a            pushi 7a // $7a release
  0a4d:76               push0 
  0a4e:51 40            class Inv 
  0a50:4a 04             send 4 

  0a52:38 020b          pushi 20b // $20b setUpInv
  0a55:76               push0 
  0a56:81 00              lag  
  0a58:4a 04             send 4 

  0a5a:32 00f5            jmp code_0b52 

        code_0a5d
  0a5d:39 2c            pushi 2c // $2c nodePtr
  0a5f:8f 01              lsp param1 
  0a61:38 00a0          pushi a0 // $a0 mute
  0a64:38 00aa          pushi aa // $aa setSize
  0a67:38 00b4          pushi b4 // $b4 busy
  0a6a:38 00be          pushi be // $be maskLoop
  0a6d:39 64            pushi 64 // $64 moveDone
  0a6f:39 6e            pushi 6e // $6e showSelf
  0a71:39 78            pushi 78 // $78 isEmpty
  0a73:38 0082          pushi 82 // $82 start
  0a76:38 008c          pushi 8c // $8c changeState
  0a79:38 0096          pushi 96 // $96 setCycle
  0a7c:38 009b          pushi 9b // $9b owner
  0a7f:38 00fa          pushi fa // $fa outOfTouch
  0a82:38 0102          pushi 102 // $102 syncStop
  0a85:38 0104          pushi 104 // $104 gx
  0a88:38 010e          pushi 10e // $10e description
  0a8b:38 0118          pushi 118 // $118 isNotHidden
  0a8e:38 0122          pushi 122 // $122 addToPic
  0a91:38 0127          pushi 127 // $127 baseSetter
  0a94:38 0136          pushi 136 // $136 horizon
  0a97:38 0140          pushi 140 // $140 mapKeyToDir
  0a9a:38 0181          pushi 181 // $181 keep
  0a9d:38 0186          pushi 186 // $186 south
  0aa0:38 00cd          pushi cd // $cd oldMouseY
  0aa3:38 01f4          pushi 1f4 // $1f4 selector
  0aa6:38 01fe          pushi 1fe // $1fe bust
  0aa9:38 0208          pushi 208 // $208 skating
  0aac:38 020d          pushi 20d // $20d entranceTo
  0aaf:38 0212          pushi 212 // $212 forceOpen
  0ab2:38 0217          pushi 217 // $217 closeScript
  0ab5:38 02bc          pushi 2bc // $2bc sel_700
  0ab8:38 02c6          pushi 2c6 // $2c6 sel_710
  0abb:38 02d0          pushi 2d0 // $2d0 sel_720
  0abe:38 02da          pushi 2da // $2da sel_730
  0ac1:38 02e4          pushi 2e4 // $2e4 sel_740
  0ac4:38 02ee          pushi 2ee // $2ee sel_750
  0ac7:38 02f8          pushi 2f8 // $2f8 sel_760
  0aca:38 030c          pushi 30c // $30c sel_780
  0acd:38 0316          pushi 316 // $316 sel_790
  0ad0:38 0384          pushi 384 // $384 sel_900
  0ad3:38 0389          pushi 389 // $389 sel_905
  0ad6:38 038e          pushi 38e // $38e sel_910
  0ad9:38 0393          pushi 393 // $393 sel_915
  0adc:38 0398          pushi 398 // $398 sel_920
  0adf:46 03e7 0005 58  calle 3e7 procedure_0005 58 //  

  0ae5:30 0037            bnt code_0b1f 
  0ae8:81 b3              lag  
  0aea:18                 not 
  0aeb:30 0064            bnt code_0b52 
  0aee:78               push1 
  0aef:39 18            pushi 18 // $18 key
  0af1:43 03 02         callk DisposeScript 2 

  0af4:39 7a            pushi 7a // $7a release
  0af6:76               push0 
  0af7:51 40            class Inv 
  0af9:4a 04             send 4 

  0afb:38 00d1          pushi d1 // $d1 curInvIcon
  0afe:78               push1 
  0aff:76               push0 
  0b00:81 45              lag  
  0b02:4a 06             send 6 

  0b04:38 00ce          pushi ce // $ce curIcon
  0b07:78               push1 
  0b08:39 43            pushi 43 // $43 at
  0b0a:78               push1 
  0b0b:76               push0 
  0b0c:81 45              lag  
  0b0e:4a 06             send 6 

  0b10:36                push 
  0b11:81 45              lag  
  0b13:4a 06             send 6 

  0b15:78               push1 
  0b16:39 17            pushi 17 // $17 name
  0b18:40 03e8 02        call proc_0f04 2 

  0b1c:32 0033            jmp code_0b52 

        code_0b1f
  0b1f:81 b3              lag  
  0b21:30 002e            bnt code_0b52 
  0b24:78               push1 
  0b25:39 17            pushi 17 // $17 name
  0b27:43 03 02         callk DisposeScript 2 

  0b2a:39 7a            pushi 7a // $7a release
  0b2c:76               push0 
  0b2d:51 40            class Inv 
  0b2f:4a 04             send 4 

  0b31:38 00d1          pushi d1 // $d1 curInvIcon
  0b34:78               push1 
  0b35:76               push0 
  0b36:81 45              lag  
  0b38:4a 06             send 6 

  0b3a:38 00ce          pushi ce // $ce curIcon
  0b3d:78               push1 
  0b3e:39 43            pushi 43 // $43 at
  0b40:78               push1 
  0b41:76               push0 
  0b42:81 45              lag  
  0b44:4a 06             send 6 

  0b46:36                push 
  0b47:81 45              lag  
  0b49:4a 06             send 6 

  0b4b:78               push1 
  0b4c:39 18            pushi 18 // $18 key
  0b4e:40 03b2 02        call proc_0f04 2 


        code_0b52
  0b52:39 05            pushi 5 // $5 view
  0b54:8f 01              lsp param1 
  0b56:38 00a0          pushi a0 // $a0 mute
  0b59:38 00aa          pushi aa // $aa setSize
  0b5c:38 00b4          pushi b4 // $b4 busy
  0b5f:38 00be          pushi be // $be maskLoop
  0b62:46 03e7 0005 0a  calle 3e7 procedure_0005 a //  

  0b68:30 0006            bnt code_0b71 
  0b6b:78               push1 
  0b6c:39 28            pushi 28 // $28 message
  0b6e:43 02 02         callk ScriptID 2 


        code_0b71
  0b71:81 6f              lag  
  0b73:30 0024            bnt code_0b9a 
  0b76:39 03            pushi 3 // $3 y
  0b78:8f 01              lsp param1 
  0b7a:38 00c8          pushi c8 // $c8 dispatchEvent
  0b7d:38 01cc          pushi 1cc // $1cc undo
  0b80:46 03e7 0005 06  calle 3e7 procedure_0005 6 //  

  0b86:18                 not 
  0b87:30 0010            bnt code_0b9a 
  0b8a:39 6b            pushi 6b // $6b init
  0b8c:76               push0 
  0b8d:7a               push2 
  0b8e:39 0a            pushi a // $a nsLeft
  0b90:76               push0 
  0b91:43 02 04         callk ScriptID 4 

  0b94:4a 04             send 4 

  0b96:35 00              ldi 0 
  0b98:a1 6f              sag  

        code_0b9a
  0b9a:38 00a7          pushi a7 // $a7 enable
  0b9d:76               push0 
  0b9e:81 45              lag  
  0ba0:4a 04             send 4 

  0ba2:38 017a          pushi 17a // $17a startRoom
  0ba5:78               push1 
  0ba6:8f 01              lsp param1 
  0ba8:57 41 06         super Game 6 

  0bab:81 b8              lag  
  0bad:30 000b            bnt code_0bbb 
  0bb0:38 0097          pushi 97 // $97 setReal
  0bb3:7a               push2 
  0bb4:89 b7              lsg  
  0bb6:36                push 
  0bb7:81 b7              lag  
  0bb9:4a 08             send 8 


        code_0bbb
  0bbb:38 00dc          pushi dc // $dc cycler
  0bbe:76               push0 
  0bbf:81 00              lag  
  0bc1:4a 04             send 4 

  0bc3:30 002a            bnt code_0bf0 
  0bc6:39 3e            pushi 3e // $3e looper
  0bc8:76               push0 
  0bc9:81 00              lag  
  0bcb:4a 04             send 4 

  0bcd:18                 not 
  0bce:30 001f            bnt code_0bf0 
  0bd1:39 6f            pushi 6f // $6f isKindOf
  0bd3:78               push1 
  0bd4:51 56            class StopWalk 
  0bd6:36                push 
  0bd7:38 00dc          pushi dc // $dc cycler
  0bda:76               push0 
  0bdb:81 00              lag  
  0bdd:4a 04             send 4 

  0bdf:4a 06             send 6 

  0be1:30 000c            bnt code_0bf0 
  0be4:38 00a2          pushi a2 // $a2 setLoop
  0be7:78               push1 
  0be8:72 0294          lofsa $0294 // stopGroop
  0beb:36                push 
  0bec:81 00              lag  
  0bee:4a 06             send 6 


        code_0bf0
  0bf0:48                 ret 
    )

    (method (restart) // method_0882
  0882:39 1f            pushi 1f // $1f style
  0884:78               push1 
  0885:39 06            pushi 6 // $6 loop
  0887:38 018c          pushi 18c // $18c drawPic
  088a:78               push1 
  088b:78               push1 
  088c:81 02              lag  
  088e:4a 0c             send c 

  0890:39 74            pushi 74 // $74 eachElementDo
  0892:78               push1 
  0893:39 69            pushi 69 // $69 hide
  0895:81 05              lag  
  0897:4a 06             send 6 

  0899:39 03            pushi 3 // $3 y
  089b:76               push0 
  089c:5b 00 6b           lea 0 6b 
  089f:36                push 
  08a0:7a               push2 
  08a1:43 70 06         callk MemorySegment 6 

  08a4:39 68            pushi 68 // $68 restart
  08a6:76               push0 
  08a7:57 41 04         super Game 4 

  08aa:48                 ret 
    )

    (method (handleEvent) // method_0bf1
  0bf1:39 22            pushi 22 // $22 type
  0bf3:76               push0 
  0bf4:87 01              lap param1 
  0bf6:4a 04             send 4 

  0bf8:36                push 
  0bf9:35 02              ldi 2 
  0bfb:1a                 eq? 
  0bfc:30 000d            bnt code_0c0c 
  0bff:38 0081          pushi 81 // $81 handleEvent
  0c02:78               push1 
  0c03:8f 01              lsp param1 
  0c05:81 49              lag  
  0c07:4a 06             send 6 

  0c09:32 0009            jmp code_0c15 

        code_0c0c
  0c0c:38 0081          pushi 81 // $81 handleEvent
  0c0f:78               push1 
  0c10:8f 01              lsp param1 
  0c12:57 41 06         super Game 6 


        code_0c15
  0c15:39 4c            pushi 4c // $4c claimed
  0c17:76               push0 
  0c18:87 01              lap param1 
  0c1a:4a 04             send 4 

  0c1c:30 0003            bnt code_0c22 
  0c1f:35 01              ldi 1 
  0c21:48                 ret 

        code_0c22
  0c22:39 22            pushi 22 // $22 type
  0c24:76               push0 
  0c25:87 01              lap param1 
  0c27:4a 04             send 4 

  0c29:36                push 
  0c2a:3c                 dup 
  0c2b:35 04              ldi 4 
  0c2d:1a                 eq? 
  0c2e:30 0285            bnt code_0eb6 
  0c31:39 09            pushi 9 // $9 nsTop
  0c33:89 0b              lsg  
  0c35:38 00c8          pushi c8 // $c8 dispatchEvent
  0c38:38 01cc          pushi 1cc // $1cc undo
  0c3b:38 02bc          pushi 2bc // $2bc sel_700
  0c3e:38 02f8          pushi 2f8 // $2f8 sel_760
  0c41:38 0294          pushi 294 // $294 sel_660
  0c44:38 0186          pushi 186 // $186 south
  0c47:38 0217          pushi 217 // $217 closeScript
  0c4a:38 0140          pushi 140 // $140 mapKeyToDir
  0c4d:46 03e7 0005 12  calle 3e7 procedure_0005 12 //  

  0c53:18                 not 
  0c54:30 00be            bnt code_0d15 
  0c57:78               push1 
  0c58:39 04            pushi 4 // $4 x
  0c5a:43 2d 02         callk DoSound 2 

  0c5d:30 00b5            bnt code_0d15 
  0c60:39 28            pushi 28 // $28 message
  0c62:76               push0 
  0c63:87 01              lap param1 
  0c65:4a 04             send 4 

  0c67:36                push 
  0c68:3c                 dup 
  0c69:34 3b00            ldi 3b00 
  0c6c:1a                 eq? 
  0c6d:30 0011            bnt code_0c81 
  0c70:39 2b            pushi 2b // $2b number
  0c72:78               push1 
  0c73:38 01e2          pushi 1e2 // $1e2 advanceRetreat
  0c76:39 2a            pushi 2a // $2a play
  0c78:76               push0 
  0c79:72 00e6          lofsa $00e6 // hotSound
  0c7c:4a 0a             send a 

  0c7e:32 0093            jmp code_0d14 

        code_0c81
  0c81:3c                 dup 
  0c82:34 3d00            ldi 3d00 
  0c85:1a                 eq? 
  0c86:30 0011            bnt code_0c9a 
  0c89:39 2b            pushi 2b // $2b number
  0c8b:78               push1 
  0c8c:38 01e3          pushi 1e3 // $1e3 readObstacles
  0c8f:39 2a            pushi 2a // $2a play
  0c91:76               push0 
  0c92:72 00e6          lofsa $00e6 // hotSound
  0c95:4a 0a             send a 

  0c97:32 007a            jmp code_0d14 

        code_0c9a
  0c9a:3c                 dup 
  0c9b:34 3e00            ldi 3e00 
  0c9e:1a                 eq? 
  0c9f:30 0011            bnt code_0cb3 
  0ca2:39 2b            pushi 2b // $2b number
  0ca4:78               push1 
  0ca5:38 01e4          pushi 1e4 // $1e4 writeObstacles
  0ca8:39 2a            pushi 2a // $2a play
  0caa:76               push0 
  0cab:72 00e6          lofsa $00e6 // hotSound
  0cae:4a 0a             send a 

  0cb0:32 0061            jmp code_0d14 

        code_0cb3
  0cb3:3c                 dup 
  0cb4:34 4000            ldi 4000 
  0cb7:1a                 eq? 
  0cb8:30 0011            bnt code_0ccc 
  0cbb:39 2b            pushi 2b // $2b number
  0cbd:78               push1 
  0cbe:38 0353          pushi 353 // $353 sel_851
  0cc1:39 2a            pushi 2a // $2a play
  0cc3:76               push0 
  0cc4:72 00e6          lofsa $00e6 // hotSound
  0cc7:4a 0a             send a 

  0cc9:32 0048            jmp code_0d14 

        code_0ccc
  0ccc:3c                 dup 
  0ccd:34 4200            ldi 4200 
  0cd0:1a                 eq? 
  0cd1:30 0011            bnt code_0ce5 
  0cd4:39 2b            pushi 2b // $2b number
  0cd6:78               push1 
  0cd7:38 020e          pushi 20e // $20e locked
  0cda:39 2a            pushi 2a // $2a play
  0cdc:76               push0 
  0cdd:72 00e6          lofsa $00e6 // hotSound
  0ce0:4a 0a             send a 

  0ce2:32 002f            jmp code_0d14 

        code_0ce5
  0ce5:3c                 dup 
  0ce6:34 4300            ldi 4300 
  0ce9:1a                 eq? 
  0cea:30 0011            bnt code_0cfe 
  0ced:39 2b            pushi 2b // $2b number
  0cef:78               push1 
  0cf0:38 00a1          pushi a1 // $a1 setVol
  0cf3:39 2a            pushi 2a // $2a play
  0cf5:76               push0 
  0cf6:72 00e6          lofsa $00e6 // hotSound
  0cf9:4a 0a             send a 

  0cfb:32 0016            jmp code_0d14 

        code_0cfe
  0cfe:3c                 dup 
  0cff:34 4400            ldi 4400 
  0d02:1a                 eq? 
  0d03:30 000e            bnt code_0d14 
  0d06:39 2b            pushi 2b // $2b number
  0d08:78               push1 
  0d09:38 037c          pushi 37c // $37c sel_892
  0d0c:39 2a            pushi 2a // $2a play
  0d0e:76               push0 
  0d0f:72 00e6          lofsa $00e6 // hotSound
  0d12:4a 0a             send a 


        code_0d14
  0d14:3a                toss 

        code_0d15
  0d15:39 28            pushi 28 // $28 message
  0d17:76               push0 
  0d18:87 01              lap param1 
  0d1a:4a 04             send 4 

  0d1c:36                push 
  0d1d:3c                 dup 
  0d1e:35 09              ldi 9 
  0d20:1a                 eq? 
  0d21:30 001b            bnt code_0d3f 
  0d24:39 11            pushi 11 // $11 signal
  0d26:76               push0 
  0d27:72 1c04          lofsa $1c04 // icon7
  0d2a:4a 04             send 4 

  0d2c:36                push 
  0d2d:35 04              ldi 4 
  0d2f:12                 and 
  0d30:18                 not 
  0d31:30 0181            bnt code_0eb5 
  0d34:38 020c          pushi 20c // $20c showInv
  0d37:76               push0 
  0d38:81 00              lag  
  0d3a:4a 04             send 4 

  0d3c:32 0176            jmp code_0eb5 

        code_0d3f
  0d3f:3c                 dup 
  0d40:34 0f00            ldi f00 
  0d43:1a                 eq? 
  0d44:30 001b            bnt code_0d62 
  0d47:39 11            pushi 11 // $11 signal
  0d49:76               push0 
  0d4a:72 1c04          lofsa $1c04 // icon7
  0d4d:4a 04             send 4 

  0d4f:36                push 
  0d50:35 04              ldi 4 
  0d52:12                 and 
  0d53:18                 not 
  0d54:30 015e            bnt code_0eb5 
  0d57:38 020c          pushi 20c // $20c showInv
  0d5a:76               push0 
  0d5b:81 00              lag  
  0d5d:4a 04             send 4 

  0d5f:32 0153            jmp code_0eb5 

        code_0d62
  0d62:3c                 dup 
  0d63:35 11              ldi 11 
  0d65:1a                 eq? 
  0d66:30 0012            bnt code_0d7b 
  0d69:39 67            pushi 67 // $67 quitGame
  0d6b:76               push0 
  0d6c:81 01              lag  
  0d6e:4a 04             send 4 

  0d70:39 4c            pushi 4c // $4c claimed
  0d72:78               push1 
  0d73:78               push1 
  0d74:87 01              lap param1 
  0d76:4a 06             send 6 

  0d78:32 013a            jmp code_0eb5 

        code_0d7b
  0d7b:3c                 dup 
  0d7c:35 03              ldi 3 
  0d7e:1a                 eq? 
  0d7f:30 0012            bnt code_0d94 
  0d82:39 69            pushi 69 // $69 hide
  0d84:76               push0 
  0d85:81 45              lag  
  0d87:4a 04             send 4 

  0d89:38 00c2          pushi c2 // $c2 show
  0d8c:76               push0 
  0d8d:51 68            class GameControls 
  0d8f:4a 04             send 4 

  0d91:32 0121            jmp code_0eb5 

        code_0d94
  0d94:3c                 dup 
  0d95:34 3c00            ldi 3c00 
  0d98:1a                 eq? 
  0d99:30 0040            bnt code_0ddc 
  0d9c:38 017f          pushi 17f // $17f masterVolume
  0d9f:76               push0 
  0da0:81 01              lag  
  0da2:4a 04             send 4 

  0da4:30 000c            bnt code_0db3 
  0da7:38 017f          pushi 17f // $17f masterVolume
  0daa:78               push1 
  0dab:76               push0 
  0dac:81 01              lag  
  0dae:4a 06             send 6 

  0db0:32 001e            jmp code_0dd1 

        code_0db3
  0db3:89 6a              lsg  
  0db5:35 01              ldi 1 
  0db7:1e                 gt? 
  0db8:30 000d            bnt code_0dc8 
  0dbb:38 017f          pushi 17f // $17f masterVolume
  0dbe:78               push1 
  0dbf:39 0f            pushi f // $f lsBottom
  0dc1:81 01              lag  
  0dc3:4a 06             send 6 

  0dc5:32 0009            jmp code_0dd1 

        code_0dc8
  0dc8:38 017f          pushi 17f // $17f masterVolume
  0dcb:78               push1 
  0dcc:78               push1 
  0dcd:81 01              lag  
  0dcf:4a 06             send 6 


        code_0dd1
  0dd1:39 4c            pushi 4c // $4c claimed
  0dd3:78               push1 
  0dd4:78               push1 
  0dd5:87 01              lap param1 
  0dd7:4a 06             send 6 

  0dd9:32 00d9            jmp code_0eb5 

        code_0ddc
  0ddc:3c                 dup 
  0ddd:34 3f00            ldi 3f00 
  0de0:1a                 eq? 
  0de1:30 0028            bnt code_0e0c 
  0de4:39 11            pushi 11 // $11 signal
  0de6:76               push0 
  0de7:39 43            pushi 43 // $43 at
  0de9:78               push1 
  0dea:39 08            pushi 8 // $8 underBits
  0dec:81 45              lag  
  0dee:4a 06             send 6 

  0df0:4a 04             send 4 

  0df2:36                push 
  0df3:35 04              ldi 4 
  0df5:12                 and 
  0df6:18                 not 
  0df7:30 00bb            bnt code_0eb5 
  0dfa:39 4e            pushi 4e // $4e save
  0dfc:76               push0 
  0dfd:81 01              lag  
  0dff:4a 04             send 4 

  0e01:39 4c            pushi 4c // $4c claimed
  0e03:78               push1 
  0e04:78               push1 
  0e05:87 01              lap param1 
  0e07:4a 06             send 6 

  0e09:32 00a9            jmp code_0eb5 

        code_0e0c
  0e0c:3c                 dup 
  0e0d:34 4100            ldi 4100 
  0e10:1a                 eq? 
  0e11:30 0028            bnt code_0e3c 
  0e14:39 11            pushi 11 // $11 signal
  0e16:76               push0 
  0e17:39 43            pushi 43 // $43 at
  0e19:78               push1 
  0e1a:39 08            pushi 8 // $8 underBits
  0e1c:81 45              lag  
  0e1e:4a 06             send 6 

  0e20:4a 04             send 4 

  0e22:36                push 
  0e23:35 04              ldi 4 
  0e25:12                 and 
  0e26:18                 not 
  0e27:30 008b            bnt code_0eb5 
  0e2a:39 4f            pushi 4f // $4f restore
  0e2c:76               push0 
  0e2d:81 01              lag  
  0e2f:4a 04             send 4 

  0e31:39 4c            pushi 4c // $4c claimed
  0e33:78               push1 
  0e34:78               push1 
  0e35:87 01              lap param1 
  0e37:4a 06             send 6 

  0e39:32 0079            jmp code_0eb5 

        code_0e3c
  0e3c:3c                 dup 
  0e3d:35 2b              ldi 2b 
  0e3f:1a                 eq? 
  0e40:30 002c            bnt code_0e6f 
  0e43:38 013b          pushi 13b // $13b controls
  0e46:76               push0 
  0e47:51 31            class User 
  0e49:4a 04             send 4 

  0e4b:30 0067            bnt code_0eb5 
  0e4e:38 017c          pushi 17c // $17c setSpeed
  0e51:78               push1 
  0e52:7a               push2 
  0e53:76               push0 
  0e54:38 0178          pushi 178 // $178 egoMoveSpeed
  0e57:76               push0 
  0e58:81 01              lag  
  0e5a:4a 04             send 4 

  0e5c:36                push 
  0e5d:35 01              ldi 1 
  0e5f:04                 sub 
  0e60:36                push 
  0e61:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  0e67:36                push 
  0e68:81 01              lag  
  0e6a:4a 06             send 6 

  0e6c:32 0046            jmp code_0eb5 

        code_0e6f
  0e6f:3c                 dup 
  0e70:35 2d              ldi 2d 
  0e72:1a                 eq? 
  0e73:30 0023            bnt code_0e99 
  0e76:38 013b          pushi 13b // $13b controls
  0e79:76               push0 
  0e7a:51 31            class User 
  0e7c:4a 04             send 4 

  0e7e:30 0034            bnt code_0eb5 
  0e81:38 017c          pushi 17c // $17c setSpeed
  0e84:78               push1 
  0e85:38 0178          pushi 178 // $178 egoMoveSpeed
  0e88:76               push0 
  0e89:81 01              lag  
  0e8b:4a 04             send 4 

  0e8d:36                push 
  0e8e:35 01              ldi 1 
  0e90:02                 add 
  0e91:36                push 
  0e92:81 01              lag  
  0e94:4a 06             send 6 

  0e96:32 001c            jmp code_0eb5 

        code_0e99
  0e99:3c                 dup 
  0e9a:35 3d              ldi 3d 
  0e9c:1a                 eq? 
  0e9d:30 0015            bnt code_0eb5 
  0ea0:38 013b          pushi 13b // $13b controls
  0ea3:76               push0 
  0ea4:51 31            class User 
  0ea6:4a 04             send 4 

  0ea8:30 000a            bnt code_0eb5 
  0eab:38 017c          pushi 17c // $17c setSpeed
  0eae:78               push1 
  0eaf:39 06            pushi 6 // $6 loop
  0eb1:81 01              lag  
  0eb3:4a 06             send 6 


        code_0eb5
  0eb5:3a                toss 

        code_0eb6
  0eb6:3a                toss 
  0eb7:48                 ret 
    )

    (method (setSpeed) // method_09f9
  09f9:87 00              lap paramTotal 
  09fb:30 0017            bnt code_0a15 
  09fe:38 00db          pushi db // $db cycleSpeed
  0a01:78               push1 
  0a02:8f 01              lsp param1 
  0a04:39 38            pushi 38 // $38 moveSpeed
  0a06:78               push1 
  0a07:8f 01              lsp param1 
  0a09:81 00              lag  
  0a0b:4a 0c             send c 

  0a0d:38 0178          pushi 178 // $178 egoMoveSpeed
  0a10:78               push1 
  0a11:8f 01              lsp param1 
  0a13:54 06             self 6 


        code_0a15
  0a15:39 38            pushi 38 // $38 moveSpeed
  0a17:76               push0 
  0a18:81 00              lag  
  0a1a:4a 04             send 4 

  0a1c:48                 ret 
    )

    (method (quitGame) // method_08ab
  08ab:3f 13             link 13 // (var $13)
  08ad:39 05            pushi 5 // $5 view
  08af:78               push1 
  08b0:38 03e0          pushi 3e0 // $3e0 sel_992
  08b3:39 06            pushi 6 // $6 loop
  08b5:78               push1 
  08b6:78               push1 
  08b7:38 00db          pushi db // $db cycleSpeed
  08ba:78               push1 
  08bb:39 09            pushi 9 // $9 nsTop
  08bd:72 02c8          lofsa $02c8 // quitIcon
  08c0:4a 12             send 12 

  08c2:39 0e            pushi e // $e lsLeft
  08c4:76               push0 
  08c5:39 15            pushi 15 // $15 brBottom
  08c7:39 50            pushi 50 // $50 title
  08c9:72 26cc          lofsa $26cc // So You're Finally Leaving?
  08cc:36                push 
  08cd:39 51            pushi 51 // $51 button
  08cf:72 26e7          lofsa $26e7 // Okay, you two. Have fun!
  08d2:36                push 
  08d3:78               push1 
  08d4:39 51            pushi 51 // $51 button
  08d6:72 2700          lofsa $2700 // Hey! Back to work!
  08d9:36                push 
  08da:76               push0 
  08db:39 52            pushi 52 // $52 icon
  08dd:72 02c8          lofsa $02c8 // quitIcon
  08e0:36                push 
  08e1:76               push0 
  08e2:76               push0 
  08e3:47 ff 00 1c      calle ff procedure_0000 1c //  

  08e7:30 0074            bnt code_095e 
  08ea:39 17            pushi 17 // $17 name
  08ec:78               push1 
  08ed:72 2713          lofsa $2713 // MEMORY.DRV
  08f0:36                push 
  08f1:38 00b5          pushi b5 // $b5 open
  08f4:78               push1 
  08f5:78               push1 
  08f6:39 6a            pushi 6a // $6a new
  08f8:76               push0 
  08f9:51 36            class Class_993_0 
  08fb:4a 04             send 4 

  08fd:a5 12              sat temp18 
  08ff:4a 0c             send c 

  0901:30 0012            bnt code_0916 
  0904:38 014b          pushi 14b // $14b readString
  0907:7a               push2 
  0908:5b 04 00           lea 4 0 
  090b:36                push 
  090c:39 14            pushi 14 // $14 brLeft
  090e:38 0150          pushi 150 // $150 close
  0911:76               push0 
  0912:85 12              lat temp18 
  0914:4a 0c             send c 


        code_0916
  0916:38 00b5          pushi b5 // $b5 open
  0919:78               push1 
  091a:7a               push2 
  091b:85 12              lat temp18 
  091d:4a 06             send 6 

  091f:30 002e            bnt code_0950 
  0922:39 04            pushi 4 // $4 x
  0924:5b 04 0a           lea 4 a 
  0927:36                push 
  0928:76               push0 
  0929:39 16            pushi 16 // $16 brRight
  092b:89 a3              lsg  
  092d:43 48 08         callk Format 8 

  0930:38 014c          pushi 14c // $14c writeString
  0933:78               push1 
  0934:5b 04 00           lea 4 0 
  0937:36                push 
  0938:38 014c          pushi 14c // $14c writeString
  093b:78               push1 
  093c:72 271e          lofsa $271e // 

  093f:36                push 
  0940:38 014c          pushi 14c // $14c writeString
  0943:78               push1 
  0944:5b 04 0a           lea 4 a 
  0947:36                push 
  0948:38 0150          pushi 150 // $150 close
  094b:76               push0 
  094c:85 12              lat temp18 
  094e:4a 16             send 16 


        code_0950
  0950:39 6c            pushi 6c // $6c dispose
  0952:76               push0 
  0953:85 12              lat temp18 
  0955:4a 04             send 4 

  0957:39 67            pushi 67 // $67 quitGame
  0959:78               push1 
  095a:78               push1 
  095b:57 41 06         super Game 6 


        code_095e
  095e:48                 ret 
    )

    (method (pragmaFail) // method_063f
  063f:3f 20             link 20 // (var $20)
  0641:81 19              lag  
  0643:30 0010            bnt code_0656 
  0646:81 b4              lag  
  0648:18                 not 
  0649:30 000a            bnt code_0656 
  064c:39 6c            pushi 6c // $6c dispose
  064e:76               push0 
  064f:81 19              lag  
  0651:4a 04             send 4 

  0653:35 01              ldi 1 
  0655:48                 ret 

        code_0656
  0656:38 0144          pushi 144 // $144 canInput
  0659:76               push0 
  065a:51 31            class User 
  065c:4a 04             send 4 

  065e:30 0220            bnt code_0881 
  0661:39 28            pushi 28 // $28 message
  0663:76               push0 
  0664:38 0141          pushi 141 // $141 curEvent
  0667:76               push0 
  0668:51 31            class User 
  066a:4a 04             send 4 

  066c:4a 04             send 4 

  066e:a5 00              sat temp0 
  0670:36                push 
  0671:3c                 dup 
  0672:35 02              ldi 2 
  0674:1a                 eq? 
  0675:30 000a            bnt code_0682 
  0678:7a               push2 
  0679:76               push0 
  067a:78               push1 
  067b:40 0bd3 04        call proc_1252 4 

  067f:32 01fe            jmp code_0880 

        code_0682
  0682:3c                 dup 
  0683:35 05              ldi 5 
  0685:1a                 eq? 
  0686:30 000a            bnt code_0693 
  0689:7a               push2 
  068a:76               push0 
  068b:7a               push2 
  068c:40 0bc2 04        call proc_1252 4 

  0690:32 01ed            jmp code_0880 

        code_0693
  0693:3c                 dup 
  0694:35 03              ldi 3 
  0696:1a                 eq? 
  0697:30 000b            bnt code_06a5 
  069a:7a               push2 
  069b:76               push0 
  069c:39 03            pushi 3 // $3 y
  069e:40 0bb0 04        call proc_1252 4 

  06a2:32 01db            jmp code_0880 

        code_06a5
  06a5:3c                 dup 
  06a6:35 0a              ldi a 
  06a8:1a                 eq? 
  06a9:30 005a            bnt code_0706 
  06ac:38 008a          pushi 8a // $8a script
  06af:76               push0 
  06b0:81 02              lag  
  06b2:4a 04             send 4 

  06b4:30 000b            bnt code_06c2 
  06b7:7a               push2 
  06b8:76               push0 
  06b9:39 04            pushi 4 // $4 x
  06bb:40 0b93 04        call proc_1252 4 

  06bf:32 01be            jmp code_0880 

        code_06c2
  06c2:39 05            pushi 5 // $5 view
  06c4:76               push0 
  06c5:81 00              lag  
  06c7:4a 04             send 4 

  06c9:36                push 
  06ca:34 0226            ldi 226 
  06cd:1c                 ne? 
  06ce:30 001a            bnt code_06eb 
  06d1:39 05            pushi 5 // $5 view
  06d3:76               push0 
  06d4:81 00              lag  
  06d6:4a 04             send 4 

  06d8:36                push 
  06d9:34 023a            ldi 23a 
  06dc:1c                 ne? 
  06dd:30 000b            bnt code_06eb 
  06e0:7a               push2 
  06e1:76               push0 
  06e2:39 04            pushi 4 // $4 x
  06e4:40 0b6a 04        call proc_1252 4 

  06e8:32 0195            jmp code_0880 

        code_06eb
  06eb:81 b3              lag  
  06ed:30 000b            bnt code_06fb 
  06f0:7a               push2 
  06f1:76               push0 
  06f2:39 05            pushi 5 // $5 view
  06f4:40 0b5a 04        call proc_1252 4 

  06f8:32 0185            jmp code_0880 

        code_06fb
  06fb:7a               push2 
  06fc:76               push0 
  06fd:39 06            pushi 6 // $6 loop
  06ff:40 0b4f 04        call proc_1252 4 

  0703:32 017a            jmp code_0880 

        code_0706
  0706:3c                 dup 
  0707:35 04              ldi 4 
  0709:1a                 eq? 
  070a:30 0173            bnt code_0880 
  070d:38 0080          pushi 80 // $80 indexOf
  0710:78               push1 
  0711:38 00d1          pushi d1 // $d1 curInvIcon
  0714:76               push0 
  0715:81 45              lag  
  0717:4a 04             send 4 

  0719:36                push 
  071a:51 40            class Inv 
  071c:4a 06             send 6 

  071e:a5 01              sat temp1 
  0720:81 b3              lag  
  0722:30 00b9            bnt code_07de 
  0725:8d 01              lst temp1 
  0727:3c                 dup 
  0728:35 00              ldi 0 
  072a:1a                 eq? 
  072b:30 001b            bnt code_0749 
  072e:7a               push2 
  072f:76               push0 
  0730:39 07            pushi 7 // $7 cel
  0732:40 0b1c 04        call proc_1252 4 

  0736:39 05            pushi 5 // $5 view
  0738:76               push0 
  0739:39 08            pushi 8 // $8 underBits
  073b:39 43            pushi 43 // $43 at
  073d:39 ff            pushi ff // $ff syncNum
  073f:38 00b9          pushi b9 // $b9 bottom
  0742:40 0b0c 0a        call proc_1252 a 

  0746:32 0091            jmp code_07da 

        code_0749
  0749:3c                 dup 
  074a:35 06              ldi 6 
  074c:1a                 eq? 
  074d:30 000b            bnt code_075b 
  0750:7a               push2 
  0751:76               push0 
  0752:39 09            pushi 9 // $9 nsTop
  0754:40 0afa 04        call proc_1252 4 

  0758:32 007f            jmp code_07da 

        code_075b
  075b:3c                 dup 
  075c:35 07              ldi 7 
  075e:1a                 eq? 
  075f:30 000b            bnt code_076d 
  0762:7a               push2 
  0763:76               push0 
  0764:39 0a            pushi a // $a nsLeft
  0766:40 0ae8 04        call proc_1252 4 

  076a:32 006d            jmp code_07da 

        code_076d
  076d:3c                 dup 
  076e:35 0a              ldi a 
  0770:1a                 eq? 
  0771:30 000b            bnt code_077f 
  0774:7a               push2 
  0775:76               push0 
  0776:39 0b            pushi b // $b nsBottom
  0778:40 0ad6 04        call proc_1252 4 

  077c:32 005b            jmp code_07da 

        code_077f
  077f:3c                 dup 
  0780:35 0c              ldi c 
  0782:1a                 eq? 
  0783:30 000b            bnt code_0791 
  0786:7a               push2 
  0787:76               push0 
  0788:39 0c            pushi c // $c nsRight
  078a:40 0ac4 04        call proc_1252 4 

  078e:32 0049            jmp code_07da 

        code_0791
  0791:3c                 dup 
  0792:35 10              ldi 10 
  0794:1a                 eq? 
  0795:30 000b            bnt code_07a3 
  0798:7a               push2 
  0799:76               push0 
  079a:39 0d            pushi d // $d lsTop
  079c:40 0ab2 04        call proc_1252 4 

  07a0:32 0037            jmp code_07da 

        code_07a3
  07a3:3c                 dup 
  07a4:35 16              ldi 16 
  07a6:1a                 eq? 
  07a7:30 000b            bnt code_07b5 
  07aa:7a               push2 
  07ab:76               push0 
  07ac:39 0e            pushi e // $e lsLeft
  07ae:40 0aa0 04        call proc_1252 4 

  07b2:32 0025            jmp code_07da 

        code_07b5
  07b5:39 04            pushi 4 // $4 x
  07b7:5b 04 02           lea 4 2 
  07ba:36                push 
  07bb:76               push0 
  07bc:39 0f            pushi f // $f lsBottom
  07be:38 010e          pushi 10e // $10e description
  07c1:76               push0 
  07c2:39 43            pushi 43 // $43 at
  07c4:78               push1 
  07c5:8d 01              lst temp1 
  07c7:51 40            class Inv 
  07c9:4a 06             send 6 

  07cb:4a 04             send 4 

  07cd:36                push 
  07ce:43 48 08         callk Format 8 

  07d1:78               push1 
  07d2:5b 04 02           lea 4 2 
  07d5:36                push 
  07d6:40 0a78 02        call proc_1252 2 


        code_07da
  07da:3a                toss 
  07db:32 00a2            jmp code_0880 

        code_07de
  07de:8d 01              lst temp1 
  07e0:3c                 dup 
  07e1:35 03              ldi 3 
  07e3:1a                 eq? 
  07e4:30 001b            bnt code_0802 
  07e7:7a               push2 
  07e8:76               push0 
  07e9:39 10            pushi 10 // $10 lsRight
  07eb:40 0a63 04        call proc_1252 4 

  07ef:39 05            pushi 5 // $5 view
  07f1:76               push0 
  07f2:39 11            pushi 11 // $11 signal
  07f4:39 43            pushi 43 // $43 at
  07f6:39 ff            pushi ff // $ff syncNum
  07f8:38 00b9          pushi b9 // $b9 bottom
  07fb:40 0a53 0a        call proc_1252 a 

  07ff:32 007d            jmp code_087f 

        code_0802
  0802:3c                 dup 
  0803:35 04              ldi 4 
  0805:1a                 eq? 
  0806:30 000b            bnt code_0814 
  0809:7a               push2 
  080a:76               push0 
  080b:39 12            pushi 12 // $12 illegalBits
  080d:40 0a41 04        call proc_1252 4 

  0811:32 006b            jmp code_087f 

        code_0814
  0814:3c                 dup 
  0815:35 05              ldi 5 
  0817:1a                 eq? 
  0818:30 000b            bnt code_0826 
  081b:7a               push2 
  081c:76               push0 
  081d:39 13            pushi 13 // $13 brTop
  081f:40 0a2f 04        call proc_1252 4 

  0823:32 0059            jmp code_087f 

        code_0826
  0826:3c                 dup 
  0827:35 07              ldi 7 
  0829:1a                 eq? 
  082a:30 001b            bnt code_0848 
  082d:7a               push2 
  082e:76               push0 
  082f:39 10            pushi 10 // $10 lsRight
  0831:40 0a1d 04        call proc_1252 4 

  0835:39 05            pushi 5 // $5 view
  0837:76               push0 
  0838:39 11            pushi 11 // $11 signal
  083a:39 43            pushi 43 // $43 at
  083c:39 ff            pushi ff // $ff syncNum
  083e:38 00b9          pushi b9 // $b9 bottom
  0841:40 0a0d 0a        call proc_1252 a 

  0845:32 0037            jmp code_087f 

        code_0848
  0848:3c                 dup 
  0849:35 0d              ldi d 
  084b:1a                 eq? 
  084c:30 000b            bnt code_085a 
  084f:7a               push2 
  0850:76               push0 
  0851:39 14            pushi 14 // $14 brLeft
  0853:40 09fb 04        call proc_1252 4 

  0857:32 0025            jmp code_087f 

        code_085a
  085a:39 04            pushi 4 // $4 x
  085c:5b 04 02           lea 4 2 
  085f:36                push 
  0860:76               push0 
  0861:39 0f            pushi f // $f lsBottom
  0863:38 010e          pushi 10e // $10e description
  0866:76               push0 
  0867:39 43            pushi 43 // $43 at
  0869:78               push1 
  086a:8d 01              lst temp1 
  086c:51 40            class Inv 
  086e:4a 06             send 6 

  0870:4a 04             send 4 

  0872:36                push 
  0873:43 48 08         callk Format 8 

  0876:78               push1 
  0877:5b 04 02           lea 4 2 
  087a:36                push 
  087b:40 09d3 02        call proc_1252 2 


        code_087f
  087f:3a                toss 

        code_0880
  0880:3a                toss 

        code_0881
  0881:48                 ret 
    )

)

// 1136
(instance pointsSound of Sound
    (properties
        nodePtr $0
        handle $0
        flags $1
        number $a
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 16dc
(instance icon0 of IconI
    (properties
        view $3de
        loop $0
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $0
        type $4000
        message $1
        modifiers $0
        signal $41
        helpStr $27a0
        maskView $3de
        maskLoop $e
        maskCel $1
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1672
  1672:81 90              lag  
  1674:65 2c             aTop lowlightColor 
  1676:39 6b            pushi 6b // $6b init
  1678:76               push0 
  1679:57 14 04         super IconI 4 

  167c:48                 ret 
    )

    (method (select) // method_167d
  167d:3f 01             link 1 // (var $1)
  167f:38 00a8          pushi a8 // $a8 select
  1682:76               push0 
  1683:59 01            &rest 1 
  1685:57 14 04         super IconI 4 

  1688:30 0047            bnt code_16d2 
  168b:39 69            pushi 69 // $69 hide
  168d:76               push0 
  168e:81 45              lag  
  1690:4a 04             send 4 

  1692:67 18             pTos cursor 
  1694:35 06              ldi 6 
  1696:1a                 eq? 
  1697:30 0032            bnt code_16cc 
  169a:39 22            pushi 22 // $22 type
  169c:78               push1 
  169d:78               push1 
  169e:39 28            pushi 28 // $28 message
  16a0:78               push1 
  16a1:78               push1 
  16a2:39 6a            pushi 6a // $6a new
  16a4:76               push0 
  16a5:51 07            class Event 
  16a7:4a 04             send 4 

  16a9:a5 00              sat temp0 
  16ab:4a 0c             send c 

  16ad:38 0081          pushi 81 // $81 handleEvent
  16b0:78               push1 
  16b1:8d 00              lst temp0 
  16b3:81 49              lag  
  16b5:4a 06             send 6 

  16b7:18                 not 
  16b8:30 000a            bnt code_16c5 
  16bb:38 0081          pushi 81 // $81 handleEvent
  16be:78               push1 
  16bf:8d 00              lst temp0 
  16c1:81 06              lag  
  16c3:4a 06             send 6 


        code_16c5
  16c5:39 6c            pushi 6c // $6c dispose
  16c7:76               push0 
  16c8:85 00              lat temp0 
  16ca:4a 04             send 4 


        code_16cc
  16cc:35 01              ldi 1 
  16ce:48                 ret 
  16cf:32 0003            jmp code_16d5 

        code_16d2
  16d2:35 00              ldi 0 
  16d4:48                 ret 

        code_16d5
  16d5:48                 ret 
    )

)

// 1732
(instance icon1 of IconI
    (properties
        view $3de
        loop $1
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $1
        type $4000
        message $2
        modifiers $0
        signal $41
        helpStr $27cc
        maskView $3de
        maskLoop $e
        maskCel $1
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1720
  1720:81 91              lag  
  1722:65 2c             aTop lowlightColor 
  1724:39 6b            pushi 6b // $6b init
  1726:76               push0 
  1727:57 14 04         super IconI 4 

  172a:48                 ret 
  172b:00                bnot 
    )

)

// 1784
(instance icon2 of IconI
    (properties
        view $3de
        loop $2
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $2
        type $4000
        message $3
        modifiers $0
        signal $41
        helpStr $27f3
        maskView $3de
        maskLoop $e
        maskCel $0
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1772
  1772:81 89              lag  
  1774:65 2c             aTop lowlightColor 
  1776:39 6b            pushi 6b // $6b init
  1778:76               push0 
  1779:57 14 04         super IconI 4 

  177c:48                 ret 
  177d:00                bnot 
    )

)

// 17d6
(instance icon3 of IconI
    (properties
        view $3de
        loop $3
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $3
        type $4000
        message $5
        modifiers $0
        signal $41
        helpStr $2815
        maskView $3de
        maskLoop $e
        maskCel $3
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_17c4
  17c4:81 82              lag  
  17c6:65 2c             aTop lowlightColor 
  17c8:39 6b            pushi 6b // $6b init
  17ca:76               push0 
  17cb:57 14 04         super IconI 4 

  17ce:48                 ret 
  17cf:00                bnot 
    )

)

// 1828
(instance icon4 of IconI
    (properties
        view $3de
        loop $a
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $5
        type $4000
        message $a
        modifiers $0
        signal $41
        helpStr $2846
        maskView $3de
        maskLoop $e
        maskCel $1
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1816
  1816:81 86              lag  
  1818:65 2c             aTop lowlightColor 
  181a:39 6b            pushi 6b // $6b init
  181c:76               push0 
  181d:57 14 04         super IconI 4 

  1820:48                 ret 
  1821:00                bnot 
    )

)

// 18f8
(instance icon5 of IconI
    (properties
        view $3de
        loop $b
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $3e7
        type $4000
        message $0
        modifiers $0
        signal $43
        helpStr $2879
        maskView $3de
        maskLoop $e
        maskCel $0
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1868
  1868:81 91              lag  
  186a:65 2c             aTop lowlightColor 
  186c:39 6b            pushi 6b // $6b init
  186e:76               push0 
  186f:57 14 04         super IconI 4 

  1872:48                 ret 
    )

    (method (select) // method_1873
  1873:81 97              lag  
  1875:30 0076            bnt code_18ee 
  1878:38 00a8          pushi a8 // $a8 select
  187b:76               push0 
  187c:59 01            &rest 1 
  187e:57 14 04         super IconI 4 

  1881:30 006a            bnt code_18ee 
  1884:39 69            pushi 69 // $69 hide
  1886:76               push0 
  1887:81 45              lag  
  1889:4a 04             send 4 

  188b:39 0a            pushi a // $a nsLeft
  188d:76               push0 
  188e:39 19            pushi 19 // $19 time
  1890:39 50            pushi 50 // $50 title
  1892:72 28c8          lofsa $28c8 // Fast Forward
  1895:36                push 
  1896:39 51            pushi 51 // $51 button
  1898:72 28d5          lofsa $28d5 // Yes
  189b:36                push 
  189c:78               push1 
  189d:39 51            pushi 51 // $51 button
  189f:72 28d9          lofsa $28d9 // Oops
  18a2:36                push 
  18a3:76               push0 
  18a4:47 ff 00 14      calle ff procedure_0000 14 //  

  18a8:30 0046            bnt code_18f1 
  18ab:89 97              lsg  
  18ad:34 03e8            ldi 3e8 
  18b0:1a                 eq? 
  18b1:30 0025            bnt code_18d9 
  18b4:78               push1 
  18b5:89 9e              lsg  
  18b7:43 06 02         callk IsObject 2 

  18ba:30 0011            bnt code_18ce 
  18bd:38 008d          pushi 8d // $8d cue
  18c0:76               push0 
  18c1:81 9e              lag  
  18c3:4a 04             send 4 

  18c5:78               push1 
  18c6:76               push0 
  18c7:40 f948 02        call proc_1213 2 

  18cb:32 0023            jmp code_18f1 

        code_18ce
  18ce:7a               push2 
  18cf:76               push0 
  18d0:39 1a            pushi 1a // $1a text
  18d2:47 ff 00 04      calle ff procedure_0000 4 //  

  18d6:32 0018            jmp code_18f1 

        code_18d9
  18d9:38 0179          pushi 179 // $179 newRoom
  18dc:78               push1 
  18dd:89 97              lsg  
  18df:81 02              lag  
  18e1:4a 06             send 6 

  18e3:89 97              lsg  
  18e5:34 03e8            ldi 3e8 
  18e8:02                 add 
  18e9:a1 97              sag  
  18eb:32 0003            jmp code_18f1 

        code_18ee
  18ee:35 00              ldi 0 
  18f0:48                 ret 

        code_18f1
  18f1:48                 ret 
    )

)

// 1b8c
(instance icon6 of IconI
    (properties
        view $3de
        loop $4
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $3e7
        type $4000
        message $4
        modifiers $0
        signal $41
        helpStr $28e4
        maskView $3de
        maskLoop $e
        maskCel $4
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_193c
  193c:81 89              lag  
  193e:65 2c             aTop lowlightColor 
  1940:39 6b            pushi 6b // $6b init
  1942:76               push0 
  1943:57 14 04         super IconI 4 

  1946:48                 ret 
    )

    (method (select) // method_1947
  1947:3f 05             link 5 // (var $5)
  1949:67 20             pTos signal 
  194b:35 04              ldi 4 
  194d:12                 and 
  194e:30 0005            bnt code_1956 
  1951:35 00              ldi 0 
  1953:32 022e            jmp code_1b84 

        code_1956
  1956:87 00              lap paramTotal 
  1958:30 0227            bnt code_1b82 
  195b:87 01              lap param1 
  195d:30 0222            bnt code_1b82 
  1960:67 20             pTos signal 
  1962:35 01              ldi 1 
  1964:12                 and 
  1965:30 021a            bnt code_1b82 
  1968:38 00d1          pushi d1 // $d1 curInvIcon
  196b:76               push0 
  196c:81 45              lag  
  196e:4a 04             send 4 

  1970:a5 02              sat temp2 
  1972:30 006d            bnt code_19e2 
  1975:67 12             pTos nsRight 
  1977:63 0e             pToa nsLeft 
  1979:04                 sub 
  197a:36                push 
  197b:39 03            pushi 3 // $3 y
  197d:39 05            pushi 5 // $5 view
  197f:76               push0 
  1980:85 02              lat temp2 
  1982:4a 04             send 4 

  1984:36                push 
  1985:39 06            pushi 6 // $6 loop
  1987:76               push0 
  1988:85 02              lat temp2 
  198a:4a 04             send 4 

  198c:36                push 
  198d:35 01              ldi 1 
  198f:02                 add 
  1990:36                push 
  1991:39 07            pushi 7 // $7 cel
  1993:76               push0 
  1994:85 02              lat temp2 
  1996:4a 04             send 4 

  1998:36                push 
  1999:43 0f 06         callk CelWide 6 

  199c:04                 sub 
  199d:36                push 
  199e:35 02              ldi 2 
  19a0:08                 div 
  19a1:36                push 
  19a2:63 0e             pToa nsLeft 
  19a4:02                 add 
  19a5:a5 03              sat temp3 
  19a7:39 03            pushi 3 // $3 y
  19a9:76               push0 
  19aa:81 45              lag  
  19ac:4a 04             send 4 

  19ae:36                push 
  19af:67 14             pTos nsBottom 
  19b1:63 10             pToa nsTop 
  19b3:04                 sub 
  19b4:36                push 
  19b5:39 03            pushi 3 // $3 y
  19b7:39 05            pushi 5 // $5 view
  19b9:76               push0 
  19ba:85 02              lat temp2 
  19bc:4a 04             send 4 

  19be:36                push 
  19bf:39 06            pushi 6 // $6 loop
  19c1:76               push0 
  19c2:85 02              lat temp2 
  19c4:4a 04             send 4 

  19c6:36                push 
  19c7:35 01              ldi 1 
  19c9:02                 add 
  19ca:36                push 
  19cb:39 07            pushi 7 // $7 cel
  19cd:76               push0 
  19ce:85 02              lat temp2 
  19d0:4a 04             send 4 

  19d2:36                push 
  19d3:43 10 06         callk CelHigh 6 

  19d6:04                 sub 
  19d7:36                push 
  19d8:35 02              ldi 2 
  19da:08                 div 
  19db:02                 add 
  19dc:36                push 
  19dd:63 10             pToa nsTop 
  19df:02                 add 
  19e0:a5 04              sat temp4 

        code_19e2
  19e2:39 06            pushi 6 // $6 loop
  19e4:67 08             pTos view 
  19e6:67 0a             pTos loop 
  19e8:35 01              ldi 1 
  19ea:a5 01              sat temp1 
  19ec:36                push 
  19ed:67 0e             pTos nsLeft 
  19ef:67 10             pTos nsTop 
  19f1:39 ff            pushi ff // $ff syncNum
  19f3:43 11 0c         callk DrawCel c 

  19f6:38 00d1          pushi d1 // $d1 curInvIcon
  19f9:76               push0 
  19fa:81 45              lag  
  19fc:4a 04             send 4 

  19fe:a5 02              sat temp2 
  1a00:30 0023            bnt code_1a26 
  1a03:39 06            pushi 6 // $6 loop
  1a05:39 05            pushi 5 // $5 view
  1a07:76               push0 
  1a08:4a 04             send 4 

  1a0a:36                push 
  1a0b:78               push1 
  1a0c:39 06            pushi 6 // $6 loop
  1a0e:76               push0 
  1a0f:85 02              lat temp2 
  1a11:4a 04             send 4 

  1a13:02                 add 
  1a14:36                push 
  1a15:39 07            pushi 7 // $7 cel
  1a17:76               push0 
  1a18:85 02              lat temp2 
  1a1a:4a 04             send 4 

  1a1c:36                push 
  1a1d:8d 03              lst temp3 
  1a1f:8d 04              lst temp4 
  1a21:39 ff            pushi ff // $ff syncNum
  1a23:43 11 0c         callk DrawCel c 


        code_1a26
  1a26:39 06            pushi 6 // $6 loop
  1a28:39 0c            pushi c // $c nsRight
  1a2a:67 10             pTos nsTop 
  1a2c:67 0e             pTos nsLeft 
  1a2e:67 14             pTos nsBottom 
  1a30:67 12             pTos nsRight 
  1a32:78               push1 
  1a33:43 6c 0c         callk Graph c 


        code_1a36
  1a36:39 22            pushi 22 // $22 type
  1a38:76               push0 
  1a39:39 6a            pushi 6a // $6a new
  1a3b:76               push0 
  1a3c:51 07            class Event 
  1a3e:4a 04             send 4 

  1a40:a5 00              sat temp0 
  1a42:4a 04             send 4 

  1a44:36                push 
  1a45:35 02              ldi 2 
  1a47:1c                 ne? 
  1a48:30 00d3            bnt code_1b1e 
  1a4b:38 0090          pushi 90 // $90 localize
  1a4e:76               push0 
  1a4f:85 00              lat temp0 
  1a51:4a 04             send 4 

  1a53:38 00c4          pushi c4 // $c4 onMe
  1a56:78               push1 
  1a57:8d 00              lst temp0 
  1a59:54 06             self 6 

  1a5b:30 005d            bnt code_1abb 
  1a5e:85 01              lat temp1 
  1a60:18                 not 
  1a61:30 00b0            bnt code_1b14 
  1a64:39 06            pushi 6 // $6 loop
  1a66:67 08             pTos view 
  1a68:67 0a             pTos loop 
  1a6a:35 01              ldi 1 
  1a6c:a5 01              sat temp1 
  1a6e:36                push 
  1a6f:67 0e             pTos nsLeft 
  1a71:67 10             pTos nsTop 
  1a73:39 ff            pushi ff // $ff syncNum
  1a75:43 11 0c         callk DrawCel c 

  1a78:38 00d1          pushi d1 // $d1 curInvIcon
  1a7b:76               push0 
  1a7c:81 45              lag  
  1a7e:4a 04             send 4 

  1a80:a5 02              sat temp2 
  1a82:30 0023            bnt code_1aa8 
  1a85:39 06            pushi 6 // $6 loop
  1a87:39 05            pushi 5 // $5 view
  1a89:76               push0 
  1a8a:4a 04             send 4 

  1a8c:36                push 
  1a8d:78               push1 
  1a8e:39 06            pushi 6 // $6 loop
  1a90:76               push0 
  1a91:85 02              lat temp2 
  1a93:4a 04             send 4 

  1a95:02                 add 
  1a96:36                push 
  1a97:39 07            pushi 7 // $7 cel
  1a99:76               push0 
  1a9a:85 02              lat temp2 
  1a9c:4a 04             send 4 

  1a9e:36                push 
  1a9f:8d 03              lst temp3 
  1aa1:8d 04              lst temp4 
  1aa3:39 ff            pushi ff // $ff syncNum
  1aa5:43 11 0c         callk DrawCel c 


        code_1aa8
  1aa8:39 06            pushi 6 // $6 loop
  1aaa:39 0c            pushi c // $c nsRight
  1aac:67 10             pTos nsTop 
  1aae:67 0e             pTos nsLeft 
  1ab0:67 14             pTos nsBottom 
  1ab2:67 12             pTos nsRight 
  1ab4:78               push1 
  1ab5:43 6c 0c         callk Graph c 

  1ab8:32 0059            jmp code_1b14 

        code_1abb
  1abb:85 01              lat temp1 
  1abd:30 0054            bnt code_1b14 
  1ac0:39 06            pushi 6 // $6 loop
  1ac2:67 08             pTos view 
  1ac4:67 0a             pTos loop 
  1ac6:35 00              ldi 0 
  1ac8:a5 01              sat temp1 
  1aca:36                push 
  1acb:67 0e             pTos nsLeft 
  1acd:67 10             pTos nsTop 
  1acf:39 ff            pushi ff // $ff syncNum
  1ad1:43 11 0c         callk DrawCel c 

  1ad4:38 00d1          pushi d1 // $d1 curInvIcon
  1ad7:76               push0 
  1ad8:81 45              lag  
  1ada:4a 04             send 4 

  1adc:a5 02              sat temp2 
  1ade:30 0023            bnt code_1b04 
  1ae1:39 06            pushi 6 // $6 loop
  1ae3:39 05            pushi 5 // $5 view
  1ae5:76               push0 
  1ae6:4a 04             send 4 

  1ae8:36                push 
  1ae9:78               push1 
  1aea:39 06            pushi 6 // $6 loop
  1aec:76               push0 
  1aed:85 02              lat temp2 
  1aef:4a 04             send 4 

  1af1:02                 add 
  1af2:36                push 
  1af3:39 07            pushi 7 // $7 cel
  1af5:76               push0 
  1af6:85 02              lat temp2 
  1af8:4a 04             send 4 

  1afa:36                push 
  1afb:8d 03              lst temp3 
  1afd:8d 04              lst temp4 
  1aff:39 ff            pushi ff // $ff syncNum
  1b01:43 11 0c         callk DrawCel c 


        code_1b04
  1b04:39 06            pushi 6 // $6 loop
  1b06:39 0c            pushi c // $c nsRight
  1b08:67 10             pTos nsTop 
  1b0a:67 0e             pTos nsLeft 
  1b0c:67 14             pTos nsBottom 
  1b0e:67 12             pTos nsRight 
  1b10:78               push1 
  1b11:43 6c 0c         callk Graph c 


        code_1b14
  1b14:39 6c            pushi 6c // $6c dispose
  1b16:76               push0 
  1b17:85 00              lat temp0 
  1b19:4a 04             send 4 

  1b1b:32 ff18            jmp code_1a36 

        code_1b1e
  1b1e:39 6c            pushi 6c // $6c dispose
  1b20:76               push0 
  1b21:85 00              lat temp0 
  1b23:4a 04             send 4 

  1b25:8d 01              lst temp1 
  1b27:35 01              ldi 1 
  1b29:1a                 eq? 
  1b2a:30 0050            bnt code_1b7d 
  1b2d:39 06            pushi 6 // $6 loop
  1b2f:67 08             pTos view 
  1b31:67 0a             pTos loop 
  1b33:76               push0 
  1b34:67 0e             pTos nsLeft 
  1b36:67 10             pTos nsTop 
  1b38:39 ff            pushi ff // $ff syncNum
  1b3a:43 11 0c         callk DrawCel c 

  1b3d:38 00d1          pushi d1 // $d1 curInvIcon
  1b40:76               push0 
  1b41:81 45              lag  
  1b43:4a 04             send 4 

  1b45:a5 02              sat temp2 
  1b47:30 0023            bnt code_1b6d 
  1b4a:39 06            pushi 6 // $6 loop
  1b4c:39 05            pushi 5 // $5 view
  1b4e:76               push0 
  1b4f:4a 04             send 4 

  1b51:36                push 
  1b52:78               push1 
  1b53:39 06            pushi 6 // $6 loop
  1b55:76               push0 
  1b56:85 02              lat temp2 
  1b58:4a 04             send 4 

  1b5a:02                 add 
  1b5b:36                push 
  1b5c:39 07            pushi 7 // $7 cel
  1b5e:76               push0 
  1b5f:85 02              lat temp2 
  1b61:4a 04             send 4 

  1b63:36                push 
  1b64:8d 03              lst temp3 
  1b66:8d 04              lst temp4 
  1b68:39 ff            pushi ff // $ff syncNum
  1b6a:43 11 0c         callk DrawCel c 


        code_1b6d
  1b6d:39 06            pushi 6 // $6 loop
  1b6f:39 0c            pushi c // $c nsRight
  1b71:67 10             pTos nsTop 
  1b73:67 0e             pTos nsLeft 
  1b75:67 14             pTos nsBottom 
  1b77:67 12             pTos nsRight 
  1b79:78               push1 
  1b7a:43 6c 0c         callk Graph c 


        code_1b7d
  1b7d:85 01              lat temp1 
  1b7f:32 0002            jmp code_1b84 

        code_1b82
  1b82:35 01              ldi 1 

        code_1b84
  1b84:48                 ret 
  1b85:00                bnot 
    )

)

// 1bfe
(instance icon7 of IconI
    (properties
        view $3de
        loop $5
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $3e7
        type $0
        message $0
        modifiers $0
        signal $43
        helpStr $2921
        maskView $3de
        maskLoop $e
        maskCel $2
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1bd0
  1bd0:81 85              lag  
  1bd2:65 2c             aTop lowlightColor 
  1bd4:39 6b            pushi 6b // $6b init
  1bd6:76               push0 
  1bd7:57 14 04         super IconI 4 

  1bda:48                 ret 
    )

    (method (select) // method_1bdb
  1bdb:38 00a8          pushi a8 // $a8 select
  1bde:76               push0 
  1bdf:59 01            &rest 1 
  1be1:57 14 04         super IconI 4 

  1be4:30 000f            bnt code_1bf6 
  1be7:39 69            pushi 69 // $69 hide
  1be9:76               push0 
  1bea:81 45              lag  
  1bec:4a 04             send 4 

  1bee:38 020c          pushi 20c // $20c showInv
  1bf1:76               push0 
  1bf2:81 00              lag  
  1bf4:4a 04             send 4 


        code_1bf6
  1bf6:48                 ret 
  1bf7:00                bnot 
    )

)

// 1c70
(instance icon8 of IconI
    (properties
        view $3de
        loop $7
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $3e7
        type $4000
        message $8
        modifiers $0
        signal $43
        helpStr $2958
        maskView $3de
        maskLoop $e
        maskCel $1
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1c42
  1c42:81 90              lag  
  1c44:65 2c             aTop lowlightColor 
  1c46:39 6b            pushi 6b // $6b init
  1c48:76               push0 
  1c49:57 14 04         super IconI 4 

  1c4c:48                 ret 
    )

    (method (select) // method_1c4d
  1c4d:38 00a8          pushi a8 // $a8 select
  1c50:76               push0 
  1c51:59 01            &rest 1 
  1c53:57 14 04         super IconI 4 

  1c56:30 000f            bnt code_1c68 
  1c59:39 69            pushi 69 // $69 hide
  1c5b:76               push0 
  1c5c:81 45              lag  
  1c5e:4a 04             send 4 

  1c60:38 00c2          pushi c2 // $c2 show
  1c63:76               push0 
  1c64:51 68            class GameControls 
  1c66:4a 04             send 4 


        code_1c68
  1c68:48                 ret 
  1c69:00                bnot 
    )

)

// 1cc6
(instance icon9 of IconI
    (properties
        view $3de
        loop $9
        cel $0
        nsLeft $0
        nsTop $ffff
        nsRight $0
        nsBottom $0
        state $0
        cursor $9
        type $4000
        message $6
        modifiers $0
        signal $3
        helpStr $2985
        maskView $3de
        maskLoop $e
        maskCel $0
        highlightColor $0
        lowlightColor $0
    )
    (method (init) // method_1cb4
  1cb4:81 82              lag  
  1cb6:65 2c             aTop lowlightColor 
  1cb8:39 6b            pushi 6b // $6b init
  1cba:76               push0 
  1cbb:57 14 04         super IconI 4 

  1cbe:48                 ret 
  1cbf:00                bnot 
    )

)

// 1d3c
(instance checkIcon of Code
    (properties
    )
    (method (doit) // method_1d06
  1d06:39 6f            pushi 6f // $6f isKindOf
  1d08:78               push1 
  1d09:51 14            class IconI 
  1d0b:36                push 
  1d0c:87 01              lap param1 
  1d0e:4a 06             send 6 

  1d10:30 0021            bnt code_1d34 
  1d13:39 11            pushi 11 // $11 signal
  1d15:76               push0 
  1d16:87 01              lap param1 
  1d18:4a 04             send 4 

  1d1a:36                push 
  1d1b:35 04              ldi 4 
  1d1d:12                 and 
  1d1e:30 0013            bnt code_1d34 
  1d21:89 a9              lsg  
  1d23:38 8000          pushi 8000 // $8000 sel_32768
  1d26:38 0080          pushi 80 // $80 indexOf
  1d29:78               push1 
  1d2a:8f 01              lsp param1 
  1d2c:81 45              lag  
  1d2e:4a 06             send 6 

  1d30:0c                 shr 
  1d31:14                  or 
  1d32:a1 a9              sag  

        code_1d34
  1d34:48                 ret 
  1d35:00                bnot 
    )

)

// 1e60
(instance ll5DoVerbCode of Code
    (properties
    )
    (method (doit) // method_1d56
  1d56:3f 66             link 66 // (var $66)
  1d58:38 010e          pushi 10e // $10e description
  1d5b:76               push0 
  1d5c:87 02              lap param2 
  1d5e:4a 04             send 4 

  1d60:a5 00              sat temp0 
  1d62:8f 01              lsp param1 
  1d64:3c                 dup 
  1d65:35 01              ldi 1 
  1d67:1a                 eq? 
  1d68:30 0011            bnt code_1d7c 
  1d6b:39 4c            pushi 4c // $4c claimed
  1d6d:78               push1 
  1d6e:76               push0 
  1d6f:38 0141          pushi 141 // $141 curEvent
  1d72:76               push0 
  1d73:51 31            class User 
  1d75:4a 04             send 4 

  1d77:4a 06             send 6 

  1d79:32 00dc            jmp code_1e58 

        code_1d7c
  1d7c:3c                 dup 
  1d7d:35 02              ldi 2 
  1d7f:1a                 eq? 
  1d80:30 0036            bnt code_1db9 
  1d83:38 0115          pushi 115 // $115 lookStr
  1d86:76               push0 
  1d87:87 02              lap param2 
  1d89:4a 04             send 4 

  1d8b:30 0011            bnt code_1d9f 
  1d8e:78               push1 
  1d8f:38 0115          pushi 115 // $115 lookStr
  1d92:76               push0 
  1d93:87 02              lap param2 
  1d95:4a 04             send 4 

  1d97:36                push 
  1d98:40 f4b6 02        call proc_1252 2 

  1d9c:32 00b9            jmp code_1e58 

        code_1d9f
  1d9f:39 04            pushi 4 // $4 x
  1da1:5b 04 02           lea 4 2 
  1da4:36                push 
  1da5:76               push0 
  1da6:39 1b            pushi 1b // $1b elements
  1da8:8d 00              lst temp0 
  1daa:43 48 08         callk Format 8 

  1dad:78               push1 
  1dae:5b 04 02           lea 4 2 
  1db1:36                push 
  1db2:40 f49c 02        call proc_1252 2 

  1db6:32 009f            jmp code_1e58 

        code_1db9
  1db9:3c                 dup 
  1dba:35 05              ldi 5 
  1dbc:1a                 eq? 
  1dbd:30 001a            bnt code_1dda 
  1dc0:39 04            pushi 4 // $4 x
  1dc2:5b 04 02           lea 4 2 
  1dc5:36                push 
  1dc6:76               push0 
  1dc7:39 1c            pushi 1c // $1c color
  1dc9:8d 00              lst temp0 
  1dcb:43 48 08         callk Format 8 

  1dce:78               push1 
  1dcf:5b 04 02           lea 4 2 
  1dd2:36                push 
  1dd3:40 f47b 02        call proc_1252 2 

  1dd7:32 007e            jmp code_1e58 

        code_1dda
  1dda:3c                 dup 
  1ddb:35 03              ldi 3 
  1ddd:1a                 eq? 
  1dde:30 001a            bnt code_1dfb 
  1de1:39 04            pushi 4 // $4 x
  1de3:5b 04 02           lea 4 2 
  1de6:36                push 
  1de7:76               push0 
  1de8:39 1d            pushi 1d // $1d back
  1dea:8d 00              lst temp0 
  1dec:43 48 08         callk Format 8 

  1def:78               push1 
  1df0:5b 04 02           lea 4 2 
  1df3:36                push 
  1df4:40 f45a 02        call proc_1252 2 

  1df8:32 005d            jmp code_1e58 

        code_1dfb
  1dfb:3c                 dup 
  1dfc:35 04              ldi 4 
  1dfe:1a                 eq? 
  1dff:30 002c            bnt code_1e2e 
  1e02:38 010e          pushi 10e // $10e description
  1e05:76               push0 
  1e06:38 00d1          pushi d1 // $d1 curInvIcon
  1e09:76               push0 
  1e0a:81 45              lag  
  1e0c:4a 04             send 4 

  1e0e:4a 04             send 4 

  1e10:a5 01              sat temp1 
  1e12:39 05            pushi 5 // $5 view
  1e14:5b 04 02           lea 4 2 
  1e17:36                push 
  1e18:76               push0 
  1e19:39 1e            pushi 1e // $1e mode
  1e1b:8d 01              lst temp1 
  1e1d:8d 00              lst temp0 
  1e1f:43 48 0a         callk Format a 

  1e22:78               push1 
  1e23:5b 04 02           lea 4 2 
  1e26:36                push 
  1e27:40 f427 02        call proc_1252 2 

  1e2b:32 002a            jmp code_1e58 

        code_1e2e
  1e2e:3c                 dup 
  1e2f:35 0a              ldi a 
  1e31:1a                 eq? 
  1e32:30 001a            bnt code_1e4f 
  1e35:39 04            pushi 4 // $4 x
  1e37:5b 04 02           lea 4 2 
  1e3a:36                push 
  1e3b:76               push0 
  1e3c:39 1f            pushi 1f // $1f style
  1e3e:8d 00              lst temp0 
  1e40:43 48 08         callk Format 8 

  1e43:78               push1 
  1e44:5b 04 02           lea 4 2 
  1e47:36                push 
  1e48:40 f406 02        call proc_1252 2 

  1e4c:32 0009            jmp code_1e58 

        code_1e4f
  1e4f:7a               push2 
  1e50:8f 02              lsp param2 
  1e52:8f 01              lsp param1 
  1e54:40 f67b 04        call proc_14d3 4 


        code_1e58
  1e58:3a                toss 
  1e59:48                 ret 
    )

)

// 1ee8
(instance ll5FtrInit of Code
    (properties
    )
    (method (doit) // method_1e7a
  1e7a:38 010f          pushi 10f // $10f sightAngle
  1e7d:76               push0 
  1e7e:87 01              lap param1 
  1e80:4a 04             send 4 

  1e82:36                push 
  1e83:34 6789            ldi 6789 
  1e86:1a                 eq? 
  1e87:30 000a            bnt code_1e94 
  1e8a:38 010f          pushi 10f // $10f sightAngle
  1e8d:78               push1 
  1e8e:39 5a            pushi 5a // $5a points
  1e90:87 01              lap param1 
  1e92:4a 06             send 6 


        code_1e94
  1e94:38 010b          pushi 10b // $10b actions
  1e97:76               push0 
  1e98:87 01              lap param1 
  1e9a:4a 04             send 4 

  1e9c:36                push 
  1e9d:34 6789            ldi 6789 
  1ea0:1a                 eq? 
  1ea1:30 0009            bnt code_1ead 
  1ea4:38 010b          pushi 10b // $10b actions
  1ea7:78               push1 
  1ea8:76               push0 
  1ea9:87 01              lap param1 
  1eab:4a 06             send 6 


        code_1ead
  1ead:38 0111          pushi 111 // $111 approachX
  1eb0:76               push0 
  1eb1:87 01              lap param1 
  1eb3:4a 04             send 4 

  1eb5:18                 not 
  1eb6:30 0028            bnt code_1ee1 
  1eb9:38 0112          pushi 112 // $112 approachY
  1ebc:76               push0 
  1ebd:87 01              lap param1 
  1ebf:4a 04             send 4 

  1ec1:18                 not 
  1ec2:30 001c            bnt code_1ee1 
  1ec5:38 0111          pushi 111 // $111 approachX
  1ec8:78               push1 
  1ec9:39 04            pushi 4 // $4 x
  1ecb:76               push0 
  1ecc:87 01              lap param1 
  1ece:4a 04             send 4 

  1ed0:36                push 
  1ed1:38 0112          pushi 112 // $112 approachY
  1ed4:78               push1 
  1ed5:39 03            pushi 3 // $3 y
  1ed7:76               push0 
  1ed8:87 01              lap param1 
  1eda:4a 04             send 4 

  1edc:36                push 
  1edd:87 01              lap param1 
  1edf:4a 0c             send c 


        code_1ee1
  1ee1:48                 ret 
    )

)

// 1f04
(instance publicll5Win of SysWindow
    (properties
        top $0
        left $0
        bottom $0
        right $0
        color $0
        back $f
        priority $f
        window $0
        type $0
        title $0
        brTop $0
        brLeft $0
        brBottom $be
        brRight $140
        eraseOnly $0
    )
)

// 2200
(instance publicgcWin of SysWindow
    (properties
        top $0
        left $0
        bottom $0
        right $0
        color $0
        back $f
        priority $f
        window $0
        type $0
        title $0
        brTop $0
        brLeft $0
        brBottom $be
        brRight $140
        eraseOnly $0
    )
    (method (open) // method_1f38
  1f38:3f 21             link 21 // (var $21)
  1f3a:35 ff              ldi ff 
  1f3c:a5 0c              sat temp12 
  1f3e:38 00b7          pushi b7 // $b7 top
  1f41:78               push1 
  1f42:38 00c8          pushi c8 // $c8 dispatchEvent
  1f45:39 03            pushi 3 // $3 y
  1f47:38 03e3          pushi 3e3 // $3e3 sel_995
  1f4a:78               push1 
  1f4b:78               push1 
  1f4c:43 10 06         callk CelHigh 6 

  1f4f:36                push 
  1f50:35 06              ldi 6 
  1f52:02                 add 
  1f53:04                 sub 
  1f54:36                push 
  1f55:35 02              ldi 2 
  1f57:08                 div 
  1f58:36                push 
  1f59:38 00b8          pushi b8 // $b8 left
  1f5c:78               push1 
  1f5d:38 0140          pushi 140 // $140 mapKeyToDir
  1f60:38 00bf          pushi bf // $bf maskCel
  1f63:39 03            pushi 3 // $3 y
  1f65:38 03e3          pushi 3e3 // $3e3 sel_995
  1f68:76               push0 
  1f69:78               push1 
  1f6a:43 0f 06         callk CelWide 6 

  1f6d:02                 add 
  1f6e:04                 sub 
  1f6f:36                push 
  1f70:35 02              ldi 2 
  1f72:08                 div 
  1f73:36                push 
  1f74:38 00b9          pushi b9 // $b9 bottom
  1f77:78               push1 
  1f78:39 03            pushi 3 // $3 y
  1f7a:38 03e3          pushi 3e3 // $3e3 sel_995
  1f7d:78               push1 
  1f7e:78               push1 
  1f7f:43 10 06         callk CelHigh 6 

  1f82:36                push 
  1f83:35 06              ldi 6 
  1f85:02                 add 
  1f86:36                push 
  1f87:38 00c8          pushi c8 // $c8 dispatchEvent
  1f8a:39 03            pushi 3 // $3 y
  1f8c:38 03e3          pushi 3e3 // $3e3 sel_995
  1f8f:78               push1 
  1f90:78               push1 
  1f91:43 10 06         callk CelHigh 6 

  1f94:36                push 
  1f95:35 06              ldi 6 
  1f97:02                 add 
  1f98:04                 sub 
  1f99:36                push 
  1f9a:35 02              ldi 2 
  1f9c:08                 div 
  1f9d:02                 add 
  1f9e:36                push 
  1f9f:38 00ba          pushi ba // $ba right
  1fa2:78               push1 
  1fa3:38 00bf          pushi bf // $bf maskCel
  1fa6:39 03            pushi 3 // $3 y
  1fa8:38 03e3          pushi 3e3 // $3e3 sel_995
  1fab:76               push0 
  1fac:78               push1 
  1fad:43 0f 06         callk CelWide 6 

  1fb0:02                 add 
  1fb1:36                push 
  1fb2:38 0140          pushi 140 // $140 mapKeyToDir
  1fb5:38 00bf          pushi bf // $bf maskCel
  1fb8:39 03            pushi 3 // $3 y
  1fba:38 03e3          pushi 3e3 // $3e3 sel_995
  1fbd:76               push0 
  1fbe:78               push1 
  1fbf:43 0f 06         callk CelWide 6 

  1fc2:02                 add 
  1fc3:04                 sub 
  1fc4:36                push 
  1fc5:35 02              ldi 2 
  1fc7:08                 div 
  1fc8:02                 add 
  1fc9:36                push 
  1fca:39 3f            pushi 3f // $3f priority
  1fcc:78               push1 
  1fcd:8d 0c              lst temp12 
  1fcf:54 1e             self 1e 

  1fd1:38 00b5          pushi b5 // $b5 open
  1fd4:76               push0 
  1fd5:57 38 04         super SysWindow 4 

  1fd8:39 06            pushi 6 // $6 loop
  1fda:38 03e3          pushi 3e3 // $3e3 sel_995
  1fdd:76               push0 
  1fde:39 06            pushi 6 // $6 loop
  1fe0:38 00bf          pushi bf // $bf maskCel
  1fe3:39 03            pushi 3 // $3 y
  1fe5:38 03e3          pushi 3e3 // $3e3 sel_995
  1fe8:76               push0 
  1fe9:78               push1 
  1fea:43 0f 06         callk CelWide 6 

  1fed:02                 add 
  1fee:36                push 
  1fef:39 04            pushi 4 // $4 x
  1ff1:39 03            pushi 3 // $3 y
  1ff3:38 03e3          pushi 3e3 // $3e3 sel_995
  1ff6:78               push1 
  1ff7:78               push1 
  1ff8:43 0f 06         callk CelWide 6 

  1ffb:02                 add 
  1ffc:04                 sub 
  1ffd:36                push 
  1ffe:39 03            pushi 3 // $3 y
  2000:38 03e3          pushi 3e3 // $3e3 sel_995
  2003:76               push0 
  2004:39 06            pushi 6 // $6 loop
  2006:43 0f 06         callk CelWide 6 

  2009:04                 sub 
  200a:36                push 
  200b:35 02              ldi 2 
  200d:08                 div 
  200e:36                push 
  200f:39 04            pushi 4 // $4 x
  2011:39 03            pushi 3 // $3 y
  2013:38 03e3          pushi 3e3 // $3e3 sel_995
  2016:78               push1 
  2017:78               push1 
  2018:43 0f 06         callk CelWide 6 

  201b:02                 add 
  201c:02                 add 
  201d:36                push 
  201e:39 06            pushi 6 // $6 loop
  2020:8d 0c              lst temp12 
  2022:43 11 0c         callk DrawCel c 

  2025:39 06            pushi 6 // $6 loop
  2027:38 03e3          pushi 3e3 // $3e3 sel_995
  202a:78               push1 
  202b:78               push1 
  202c:39 04            pushi 4 // $4 x
  202e:39 03            pushi 3 // $3 y
  2030:8d 0c              lst temp12 
  2032:43 11 0c         callk DrawCel c 

  2035:39 06            pushi 6 // $6 loop
  2037:38 03e3          pushi 3e3 // $3e3 sel_995
  203a:78               push1 
  203b:76               push0 
  203c:39 5e            pushi 5e // $5e min
  203e:39 26            pushi 26 // $26 mark
  2040:8d 0c              lst temp12 
  2042:43 11 0c         callk DrawCel c 

  2045:39 06            pushi 6 // $6 loop
  2047:38 03e3          pushi 3e3 // $3e3 sel_995
  204a:78               push1 
  204b:76               push0 
  204c:38 0087          pushi 87 // $87 ticks
  204f:39 26            pushi 26 // $26 mark
  2051:8d 0c              lst temp12 
  2053:43 11 0c         callk DrawCel c 

  2056:39 06            pushi 6 // $6 loop
  2058:38 03e3          pushi 3e3 // $3e3 sel_995
  205b:78               push1 
  205c:76               push0 
  205d:38 00af          pushi af // $af checkState
  2060:39 26            pushi 26 // $26 mark
  2062:8d 0c              lst temp12 
  2064:43 11 0c         callk DrawCel c 

  2067:39 06            pushi 6 // $6 loop
  2069:38 03e3          pushi 3e3 // $3e3 sel_995
  206c:76               push0 
  206d:39 04            pushi 4 // $4 x
  206f:39 3f            pushi 3f // $3f priority
  2071:39 25            pushi 25 // $25 max
  2073:39 03            pushi 3 // $3 y
  2075:38 03e3          pushi 3e3 // $3e3 sel_995
  2078:76               push0 
  2079:39 04            pushi 4 // $4 x
  207b:43 10 06         callk CelHigh 6 

  207e:36                push 
  207f:35 03              ldi 3 
  2081:02                 add 
  2082:04                 sub 
  2083:36                push 
  2084:8d 0c              lst temp12 
  2086:43 11 0c         callk DrawCel c 

  2089:39 06            pushi 6 // $6 loop
  208b:38 03e3          pushi 3e3 // $3e3 sel_995
  208e:76               push0 
  208f:39 03            pushi 3 // $3 y
  2091:39 65            pushi 65 // $65 topString
  2093:39 25            pushi 25 // $25 max
  2095:39 03            pushi 3 // $3 y
  2097:38 03e3          pushi 3e3 // $3e3 sel_995
  209a:76               push0 
  209b:39 04            pushi 4 // $4 x
  209d:43 10 06         callk CelHigh 6 

  20a0:36                push 
  20a1:35 03              ldi 3 
  20a3:02                 add 
  20a4:04                 sub 
  20a5:36                push 
  20a6:8d 0c              lst temp12 
  20a8:43 11 0c         callk DrawCel c 

  20ab:39 06            pushi 6 // $6 loop
  20ad:38 03e3          pushi 3e3 // $3e3 sel_995
  20b0:76               push0 
  20b1:7a               push2 
  20b2:38 0092          pushi 92 // $92 cycleCnt
  20b5:39 25            pushi 25 // $25 max
  20b7:39 03            pushi 3 // $3 y
  20b9:38 03e3          pushi 3e3 // $3e3 sel_995
  20bc:76               push0 
  20bd:39 04            pushi 4 // $4 x
  20bf:43 10 06         callk CelHigh 6 

  20c2:36                push 
  20c3:35 03              ldi 3 
  20c5:02                 add 
  20c6:04                 sub 
  20c7:36                push 
  20c8:8d 0c              lst temp12 
  20ca:43 11 0c         callk DrawCel c 

  20cd:39 06            pushi 6 // $6 loop
  20cf:38 03e3          pushi 3e3 // $3e3 sel_995
  20d2:76               push0 
  20d3:39 05            pushi 5 // $5 view
  20d5:38 00ba          pushi ba // $ba right
  20d8:39 25            pushi 25 // $25 max
  20da:39 03            pushi 3 // $3 y
  20dc:38 03e3          pushi 3e3 // $3e3 sel_995
  20df:76               push0 
  20e0:39 04            pushi 4 // $4 x
  20e2:43 10 06         callk CelHigh 6 

  20e5:36                push 
  20e6:35 03              ldi 3 
  20e8:02                 add 
  20e9:04                 sub 
  20ea:36                push 
  20eb:8d 0c              lst temp12 
  20ed:43 11 0c         callk DrawCel c 

  20f0:39 2e            pushi 2e // $2e dx
  20f2:39 03            pushi 3 // $3 y
  20f4:38 03e3          pushi 3e3 // $3e3 sel_995
  20f7:76               push0 
  20f8:78               push1 
  20f9:43 10 06         callk CelHigh 6 

  20fc:02                 add 
  20fd:a5 02              sat temp2 
  20ff:36                push 
  2100:35 0d              ldi d 
  2102:02                 add 
  2103:a5 05              sat temp5 
  2105:39 0a            pushi a // $a nsLeft
  2107:39 03            pushi 3 // $3 y
  2109:38 03e3          pushi 3e3 // $3e3 sel_995
  210c:78               push1 
  210d:78               push1 
  210e:43 0f 06         callk CelWide 6 

  2111:02                 add 
  2112:a5 03              sat temp3 
  2114:36                push 
  2115:38 00bf          pushi bf // $bf maskCel
  2118:39 03            pushi 3 // $3 y
  211a:38 03e3          pushi 3e3 // $3e3 sel_995
  211d:76               push0 
  211e:78               push1 
  211f:43 0f 06         callk CelWide 6 

  2122:02                 add 
  2123:36                push 
  2124:39 0a            pushi a // $a nsLeft
  2126:39 03            pushi 3 // $3 y
  2128:38 03e3          pushi 3e3 // $3e3 sel_995
  212b:78               push1 
  212c:78               push1 
  212d:43 0f 06         callk CelWide 6 

  2130:02                 add 
  2131:36                push 
  2132:35 06              ldi 6 
  2134:02                 add 
  2135:04                 sub 
  2136:02                 add 
  2137:a5 04              sat temp4 
  2139:35 00              ldi 0 
  213b:a5 06              sat temp6 
  213d:35 01              ldi 1 
  213f:a5 07              sat temp7 
  2141:39 08            pushi 8 // $8 underBits
  2143:39 0b            pushi b // $b nsBottom
  2145:8d 02              lst temp2 
  2147:8d 03              lst temp3 
  2149:8d 05              lst temp5 
  214b:35 01              ldi 1 
  214d:02                 add 
  214e:36                push 
  214f:8d 04              lst temp4 
  2151:35 01              ldi 1 
  2153:02                 add 
  2154:36                push 
  2155:8d 07              lst temp7 
  2157:8d 06              lst temp6 
  2159:8d 0c              lst temp12 
  215b:43 6c 10         callk Graph 10 

  215e:39 06            pushi 6 // $6 loop
  2160:39 0c            pushi c // $c nsRight
  2162:8d 02              lst temp2 
  2164:8d 03              lst temp3 
  2166:8d 05              lst temp5 
  2168:35 01              ldi 1 
  216a:02                 add 
  216b:36                push 
  216c:8d 04              lst temp4 
  216e:35 01              ldi 1 
  2170:02                 add 
  2171:36                push 
  2172:78               push1 
  2173:43 6c 0c         callk Graph c 

  2176:39 05            pushi 5 // $5 view
  2178:5b 04 0e           lea 4 e 
  217b:36                push 
  217c:76               push0 
  217d:39 20            pushi 20 // $20 state
  217f:89 0f              lsg  
  2181:89 10              lsg  
  2183:43 48 0a         callk Format a 

  2186:39 04            pushi 4 // $4 x
  2188:5b 04 1d           lea 4 1d 
  218b:36                push 
  218c:5b 04 0e           lea 4 e 
  218f:36                push 
  2190:38 03e7          pushi 3e7 // $3e7 sel_999
  2193:76               push0 
  2194:43 1a 08         callk TextSize 8 

  2197:39 08            pushi 8 // $8 underBits
  2199:5b 04 0e           lea 4 e 
  219c:36                push 
  219d:39 69            pushi 69 // $69 hide
  219f:38 03e7          pushi 3e7 // $3e7 sel_999
  21a2:39 66            pushi 66 // $66 flags
  21a4:89 7f              lsg  
  21a6:39 64            pushi 64 // $64 moveDone
  21a8:39 0a            pushi a // $a nsLeft
  21aa:39 03            pushi 3 // $3 y
  21ac:38 03e3          pushi 3e3 // $3e3 sel_995
  21af:78               push1 
  21b0:78               push1 
  21b1:43 0f 06         callk CelWide 6 

  21b4:02                 add 
  21b5:36                push 
  21b6:38 00bf          pushi bf // $bf maskCel
  21b9:39 03            pushi 3 // $3 y
  21bb:38 03e3          pushi 3e3 // $3e3 sel_995
  21be:76               push0 
  21bf:78               push1 
  21c0:43 0f 06         callk CelWide 6 

  21c3:02                 add 
  21c4:36                push 
  21c5:39 0a            pushi a // $a nsLeft
  21c7:39 03            pushi 3 // $3 y
  21c9:38 03e3          pushi 3e3 // $3e3 sel_995
  21cc:78               push1 
  21cd:78               push1 
  21ce:43 0f 06         callk CelWide 6 

  21d1:02                 add 
  21d2:36                push 
  21d3:35 06              ldi 6 
  21d5:02                 add 
  21d6:04                 sub 
  21d7:36                push 
  21d8:35 03              ldi 3 
  21da:95 1d             lati temp29 
  21dc:04                 sub 
  21dd:36                push 
  21de:35 02              ldi 2 
  21e0:08                 div 
  21e1:02                 add 
  21e2:36                push 
  21e3:39 2e            pushi 2e // $2e dx
  21e5:39 03            pushi 3 // $3 y
  21e7:38 03e3          pushi 3e3 // $3e3 sel_995
  21ea:76               push0 
  21eb:78               push1 
  21ec:43 10 06         callk CelHigh 6 

  21ef:02                 add 
  21f0:36                push 
  21f1:35 03              ldi 3 
  21f3:02                 add 
  21f4:36                push 
  21f5:43 1b 10         callk Display 10 

  21f8:48                 ret 
  21f9:00                bnot 
    )

)

// 2256
(instance detailSlider of Slider
    (properties
        view $3e3
        loop $0
        cel $1
        nsLeft $43
        nsTop $25
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $ffff
        modifiers $0
        signal $80
        helpStr $2a1f
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        sliderView $3e3
        sliderLoop $0
        sliderCel $0
        sTop $0
        sLeft $0
        sRight $0
        maxY $0
        minY $0
        underBits $0
        yStep $1
        theObj $0
        selector $0
        bottomValue $1
        topValue $5
    )
    (method (doit) // method_2238
  2238:87 00              lap paramTotal 
  223a:30 000a            bnt code_2247 
  223d:38 0125          pushi 125 // $125 detailLevel
  2240:78               push1 
  2241:8f 01              lsp param1 
  2243:81 01              lag  
  2245:4a 06             send 6 


        code_2247
  2247:38 0125          pushi 125 // $125 detailLevel
  224a:76               push0 
  224b:81 01              lag  
  224d:4a 04             send 4 

  224f:48                 ret 
    )

)

// 22b4
(instance volumeSlider of Slider
    (properties
        view $3e3
        loop $0
        cel $1
        nsLeft $6b
        nsTop $25
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $ffff
        modifiers $0
        signal $80
        helpStr $2a8d
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        sliderView $3e3
        sliderLoop $0
        sliderCel $0
        sTop $0
        sLeft $0
        sRight $0
        maxY $0
        minY $0
        underBits $0
        yStep $1
        theObj $0
        selector $0
        bottomValue $0
        topValue $f
    )
)

// 2354
(instance speedSlider of Slider
    (properties
        view $3e3
        loop $0
        cel $1
        nsLeft $93
        nsTop $25
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $ffff
        modifiers $0
        signal $80
        helpStr $2ad9
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        sliderView $3e3
        sliderLoop $0
        sliderCel $0
        sTop $0
        sLeft $0
        sRight $0
        maxY $0
        minY $0
        underBits $0
        yStep $1
        theObj $0
        selector $0
        bottomValue $f
        topValue $0
    )
    (method (show) // method_230c
  230c:38 013b          pushi 13b // $13b controls
  230f:76               push0 
  2310:51 31            class User 
  2312:4a 04             send 4 

  2314:18                 not 
  2315:30 000c            bnt code_2324 
  2318:34 0084            ldi 84 
  231b:65 20             aTop signal 
  231d:35 09              ldi 9 
  231f:65 30             aTop sliderLoop 
  2321:32 0009            jmp code_232d 

        code_2324
  2324:35 00              ldi 0 
  2326:65 30             aTop sliderLoop 
  2328:34 0080            ldi 80 
  232b:65 20             aTop signal 

        code_232d
  232d:38 00c2          pushi c2 // $c2 show
  2330:76               push0 
  2331:59 01            &rest 1 
  2333:57 67 04         super Slider 4 

  2336:48                 ret 
    )

    (method (mask) // method_234c
  234c:48                 ret 
  234d:00                bnot 
    )

    (method (move) // method_2337
  2337:38 013b          pushi 13b // $13b controls
  233a:76               push0 
  233b:51 31            class User 
  233d:4a 04             send 4 

  233f:30 0009            bnt code_234b 
  2342:38 00ab          pushi ab // $ab move
  2345:76               push0 
  2346:59 01            &rest 1 
  2348:57 67 04         super Slider 4 


        code_234b
  234b:48                 ret 
    )

)

// 23ca
(instance textSlider of Slider
    (properties
        view $3e3
        loop $0
        cel $1
        nsLeft $bb
        nsTop $25
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $ffff
        modifiers $0
        signal $80
        helpStr $2b3e
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        sliderView $3e3
        sliderLoop $0
        sliderCel $0
        sTop $0
        sLeft $0
        sRight $0
        maxY $0
        minY $0
        underBits $0
        yStep $1
        theObj $0
        selector $0
        bottomValue $18
        topValue $1
    )
    (method (doit) // method_23b8
  23b8:87 00              lap paramTotal 
  23ba:30 0004            bnt code_23c1 
  23bd:87 01              lap param1 
  23bf:a1 9b              sag  

        code_23c1
  23c1:81 9b              lag  
  23c3:48                 ret 
    )

)

// 2428
(instance iconSave of ControlIcon
    (properties
        view $3e3
        loop $2
        cel $0
        nsLeft $8
        nsTop $6
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2ba7
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        theObj $0
        selector $0
    )
)

// 2490
(instance iconRestore of ControlIcon
    (properties
        view $3e3
        loop $3
        cel $0
        nsLeft $8
        nsTop $1a
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2c29
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        theObj $0
        selector $0
    )
    (method (select) // method_2468
  2468:89 0b              lsg  
  246a:34 00a0            ldi a0 
  246d:22                 lt? 
  246e:30 000e            bnt code_247f 
  2471:38 0179          pushi 179 // $179 newRoom
  2474:78               push1 
  2475:38 009b          pushi 9b // $9b owner
  2478:81 02              lag  
  247a:4a 06             send 6 

  247c:32 0009            jmp code_2488 

        code_247f
  247f:38 00a8          pushi a8 // $a8 select
  2482:76               push0 
  2483:59 01            &rest 1 
  2485:57 69 04         super ControlIcon 4 


        code_2488
  2488:48                 ret 
  2489:00                bnot 
    )

)

// 24d6
(instance iconRestart of ControlIcon
    (properties
        view $3e3
        loop $4
        cel $0
        nsLeft $8
        nsTop $2e
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2c5d
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        theObj $0
        selector $0
    )
)

// 2518
(instance iconQuit of ControlIcon
    (properties
        view $3e3
        loop $5
        cel $0
        nsLeft $8
        nsTop $42
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2c9f
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        theObj $0
        selector $0
    )
)

// 255a
(instance iconAbout of ControlIcon
    (properties
        view $3e3
        loop $6
        cel $0
        nsLeft $8
        nsTop $56
        nsRight $0
        nsBottom $0
        state $0
        cursor $ffff
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2cc4
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
        theObj $0
        selector $0
    )
)

// 259c
(instance iconHelp of IconI
    (properties
        view $3e3
        loop $7
        cel $0
        nsLeft $22
        nsTop $56
        nsRight $0
        nsBottom $0
        state $0
        cursor $9
        type $4000
        message $6
        modifiers $0
        signal $183
        helpStr $2d21
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
    )
)

// 25da
(instance iconOk of IconI
    (properties
        view $3e3
        loop $8
        cel $0
        nsLeft $8
        nsTop $6a
        nsRight $0
        nsBottom $0
        state $0
        cursor $9
        type $4000
        message $9
        modifiers $0
        signal $1c3
        helpStr $2d9d
        maskView $0
        maskLoop $0
        maskCel $0
        highlightColor $0
        lowlightColor $0
    )
)


// EXPORTED procedure #1 ()
(procedure proc_0f04
  0f04:8f 01              lsp param1 
  0f06:3c                 dup 
  0f07:35 17              ldi 17 
  0f09:1a                 eq? 
  0f0a:30 001d            bnt code_0f2a 
  0f0d:51 70            class Larry 
  0f0f:a1 00              sag  
  0f11:35 01              ldi 1 
  0f13:a1 b3              sag  
  0f15:38 0139          pushi 139 // $139 alterEgo
  0f18:78               push1 
  0f19:89 00              lsg  
  0f1b:51 31            class User 
  0f1d:4a 06             send 6 

  0f1f:38 020b          pushi 20b // $20b setUpInv
  0f22:76               push0 
  0f23:81 00              lag  
  0f25:4a 04             send 4 

  0f27:32 0021            jmp code_0f4b 

        code_0f2a
  0f2a:3c                 dup 
  0f2b:35 18              ldi 18 
  0f2d:1a                 eq? 
  0f2e:30 001a            bnt code_0f4b 
  0f31:51 71            class Patti 
  0f33:a1 00              sag  
  0f35:35 00              ldi 0 
  0f37:a1 b3              sag  
  0f39:38 0139          pushi 139 // $139 alterEgo
  0f3c:78               push1 
  0f3d:89 00              lsg  
  0f3f:51 31            class User 
  0f41:4a 06             send 6 

  0f43:38 020b          pushi 20b // $20b setUpInv
  0f46:76               push0 
  0f47:81 00              lag  
  0f49:4a 04             send 4 


        code_0f4b
  0f4b:3a                toss 
  0f4c:48                 ret 
)

// EXPORTED procedure #2 ()
(procedure proc_0f4d
  0f4d:76               push0 
  0f4e:40 0677 00        call proc_15c9 0 

  0f52:38 011a          pushi 11a // $11a canControl
  0f55:78               push1 
  0f56:76               push0 
  0f57:38 0144          pushi 144 // $144 canInput
  0f5a:78               push1 
  0f5b:76               push0 
  0f5c:51 31            class User 
  0f5e:4a 0c             send c 

  0f60:38 011b          pushi 11b // $11b setMotion
  0f63:78               push1 
  0f64:76               push0 
  0f65:81 00              lag  
  0f67:4a 06             send 6 

  0f69:35 00              ldi 0 
  0f6b:a1 a9              sag  
  0f6d:39 74            pushi 74 // $74 eachElementDo
  0f6f:7a               push2 
  0f70:39 63            pushi 63 // $63 perform
  0f72:72 1d42          lofsa $1d42 // checkIcon
  0f75:36                push 
  0f76:81 45              lag  
  0f78:4a 08             send 8 

  0f7a:38 00c9          pushi c9 // $c9 disable
  0f7d:39 07            pushi 7 // $7 cel
  0f7f:76               push0 
  0f80:78               push1 
  0f81:7a               push2 
  0f82:39 03            pushi 3 // $3 y
  0f84:39 04            pushi 4 // $4 x
  0f86:39 06            pushi 6 // $6 loop
  0f88:39 07            pushi 7 // $7 cel
  0f8a:81 45              lag  
  0f8c:4a 12             send 12 

  0f8e:76               push0 
  0f8f:43 27 00         callk HaveMouse 0 

  0f92:18                 not 
  0f93:30 001d            bnt code_0fb3 
  0f96:81 46              lag  
  0f98:a1 6d              sag  
  0f9a:81 47              lag  
  0f9c:a1 6e              sag  
  0f9e:38 00bb          pushi bb // $bb setCursor
  0fa1:39 04            pushi 4 // $4 x
  0fa3:89 15              lsg  
  0fa5:78               push1 
  0fa6:38 0136          pushi 136 // $136 horizon
  0fa9:38 00b9          pushi b9 // $b9 bottom
  0fac:81 01              lag  
  0fae:4a 0c             send c 

  0fb0:32 000b            jmp code_0fbe 

        code_0fb3
  0fb3:38 00bb          pushi bb // $bb setCursor
  0fb6:7a               push2 
  0fb7:89 15              lsg  
  0fb9:78               push1 
  0fba:81 01              lag  
  0fbc:4a 08             send 8 


        code_0fbe
  0fbe:48                 ret 
)

// EXPORTED procedure #3 ()
(procedure proc_0fbf
  0fbf:38 011a          pushi 11a // $11a canControl
  0fc2:78               push1 
  0fc3:78               push1 
  0fc4:38 0144          pushi 144 // $144 canInput
  0fc7:78               push1 
  0fc8:78               push1 
  0fc9:51 31            class User 
  0fcb:4a 0c             send c 

  0fcd:38 00a7          pushi a7 // $a7 enable
  0fd0:39 08            pushi 8 // $8 underBits
  0fd2:76               push0 
  0fd3:78               push1 
  0fd4:7a               push2 
  0fd5:39 03            pushi 3 // $3 y
  0fd7:39 04            pushi 4 // $4 x
  0fd9:39 06            pushi 6 // $6 loop
  0fdb:39 07            pushi 7 // $7 cel
  0fdd:39 08            pushi 8 // $8 underBits
  0fdf:81 45              lag  
  0fe1:4a 14             send 14 

  0fe3:38 00d1          pushi d1 // $d1 curInvIcon
  0fe6:76               push0 
  0fe7:81 45              lag  
  0fe9:4a 04             send 4 

  0feb:18                 not 
  0fec:30 000a            bnt code_0ff9 
  0fef:38 00c9          pushi c9 // $c9 disable
  0ff2:78               push1 
  0ff3:39 06            pushi 6 // $6 loop
  0ff5:81 45              lag  
  0ff7:4a 06             send 6 


        code_0ff9
  0ff9:76               push0 
  0ffa:40 05dc 00        call proc_15da 0 

  0ffe:76               push0 
  0fff:43 27 00         callk HaveMouse 0 

  1002:18                 not 
  1003:30 001f            bnt code_1025 
  1006:38 00bb          pushi bb // $bb setCursor
  1009:39 04            pushi 4 // $4 x
  100b:39 24            pushi 24 // $24 cursor
  100d:76               push0 
  100e:38 00ce          pushi ce // $ce curIcon
  1011:76               push0 
  1012:81 45              lag  
  1014:4a 04             send 4 

  1016:4a 04             send 4 

  1018:36                push 
  1019:78               push1 
  101a:89 6d              lsg  
  101c:89 6e              lsg  
  101e:81 01              lag  
  1020:4a 0c             send c 

  1022:32 0017            jmp code_103c 

        code_1025
  1025:38 00bb          pushi bb // $bb setCursor
  1028:7a               push2 
  1029:39 24            pushi 24 // $24 cursor
  102b:76               push0 
  102c:38 00ce          pushi ce // $ce curIcon
  102f:76               push0 
  1030:81 45              lag  
  1032:4a 04             send 4 

  1034:4a 04             send 4 

  1036:36                push 
  1037:78               push1 
  1038:81 01              lag  
  103a:4a 08             send 8 


        code_103c
  103c:48                 ret 
)

// EXPORTED procedure #4 ()
(procedure proc_103d
  103d:78               push1 
  103e:78               push1 
  103f:43 58 02         callk MemoryInfo 2 

  1042:36                push 
  1043:87 01              lap param1 
  1045:26                ugt? 
  1046:48                 ret 
)

// EXPORTED procedure #5 ()
(procedure proc_1047
  1047:38 0133          pushi 133 // $133 onControl
  104a:78               push1 
  104b:78               push1 
  104c:87 01              lap param1 
  104e:4a 06             send 6 

  1050:36                push 
  1051:87 02              lap param2 
  1053:12                 and 
  1054:30 0003            bnt code_105a 
  1057:35 01              ldi 1 
  1059:48                 ret 

        code_105a
  105a:48                 ret 
)

// EXPORTED procedure #6 ()
(procedure proc_105b
  105b:8f 01              lsp param1 
  105d:35 10              ldi 10 
  105f:08                 div 
  1060:99 ba             lsgi  
  1062:38 8000          pushi 8000 // $8000 sel_32768
  1065:8f 01              lsp param1 
  1067:35 10              ldi 10 
  1069:0a                 mod 
  106a:0c                 shr 
  106b:12                 and 
  106c:48                 ret 
)

// EXPORTED procedure #7 ()
(procedure proc_106d
  106d:3f 01             link 1 // (var $1)
  106f:78               push1 
  1070:8f 01              lsp param1 
  1072:40 ffe5 02        call proc_105b 2 

  1076:a5 00              sat temp0 
  1078:8f 01              lsp param1 
  107a:35 10              ldi 10 
  107c:08                 div 
  107d:99 ba             lsgi  
  107f:38 8000          pushi 8000 // $8000 sel_32768
  1082:8f 01              lsp param1 
  1084:35 10              ldi 10 
  1086:0a                 mod 
  1087:0c                 shr 
  1088:14                  or 
  1089:36                push 
  108a:8f 01              lsp param1 
  108c:35 10              ldi 10 
  108e:08                 div 
  108f:b1 ba             sagi  
  1091:85 00              lat temp0 
  1093:48                 ret 
)

// EXPORTED procedure #8 ()
(procedure proc_1094
  1094:3f 01             link 1 // (var $1)
  1096:78               push1 
  1097:8f 01              lsp param1 
  1099:40 ffbe 02        call proc_105b 2 

  109d:a5 00              sat temp0 
  109f:8f 01              lsp param1 
  10a1:35 10              ldi 10 
  10a3:08                 div 
  10a4:99 ba             lsgi  
  10a6:38 8000          pushi 8000 // $8000 sel_32768
  10a9:8f 01              lsp param1 
  10ab:35 10              ldi 10 
  10ad:0a                 mod 
  10ae:0c                 shr 
  10af:00                bnot 
  10b0:12                 and 
  10b1:36                push 
  10b2:8f 01              lsp param1 
  10b4:35 10              ldi 10 
  10b6:08                 div 
  10b7:b1 ba             sagi  
  10b9:85 00              lat temp0 
  10bb:48                 ret 
)

// EXPORTED procedure #9 ()
(procedure proc_10bc
  10bc:3f 01             link 1 // (var $1)
  10be:8f 01              lsp param1 
  10c0:35 01              ldi 1 
  10c2:1a                 eq? 
  10c3:30 001a            bnt code_10e0 
  10c6:39 20            pushi 20 // $20 state
  10c8:78               push1 
  10c9:8f 01              lsp param1 
  10cb:39 17            pushi 17 // $17 name
  10cd:78               push1 
  10ce:72 2725          lofsa $2725 // An Erased Videotape
  10d1:36                push 
  10d2:39 43            pushi 43 // $43 at
  10d4:78               push1 
  10d5:8f 02              lsp param2 
  10d7:51 40            class Inv 
  10d9:4a 06             send 6 

  10db:4a 0c             send c 

  10dd:32 004e            jmp code_112e 

        code_10e0
  10e0:39 20            pushi 20 // $20 state
  10e2:76               push0 
  10e3:39 43            pushi 43 // $43 at
  10e5:78               push1 
  10e6:76               push0 
  10e7:51 40            class Inv 
  10e9:4a 06             send 6 

  10eb:4a 04             send 4 

  10ed:36                push 
  10ee:35 64              ldi 64 
  10f0:0a                 mod 
  10f1:a5 00              sat temp0 
  10f3:39 20            pushi 20 // $20 state
  10f5:78               push1 
  10f6:8f 01              lsp param1 
  10f8:39 17            pushi 17 // $17 name
  10fa:78               push1 
  10fb:8f 01              lsp param1 
  10fd:3c                 dup 
  10fe:35 02              ldi 2 
  1100:1a                 eq? 
  1101:30 0006            bnt code_110a 
  1104:72 2739          lofsa $2739 // Michelle Milken
  1107:32 0017            jmp code_1121 

        code_110a
  110a:3c                 dup 
  110b:35 03              ldi 3 
  110d:1a                 eq? 
  110e:30 0006            bnt code_1117 
  1111:72 2749          lofsa $2749 // Lana Luscious
  1114:32 000a            jmp code_1121 

        code_1117
  1117:3c                 dup 
  1118:35 04              ldi 4 
  111a:1a                 eq? 
  111b:30 0003            bnt code_1121 
  111e:72 2757          lofsa $2757 // Chi Chi Lambada

        code_1121
  1121:3a                toss 
  1122:36                push 
  1123:39 43            pushi 43 // $43 at
  1125:78               push1 
  1126:8d 00              lst temp0 
  1128:51 40            class Inv 
  112a:4a 06             send 6 

  112c:4a 0c             send c 


        code_112e
  112e:48                 ret 
  112f:00                bnot 
)

// EXPORTED procedure #10 ()
(procedure proc_116a
  116a:8f 00              lsp paramTotal 
  116c:35 01              ldi 1 
  116e:1e                 gt? 
  116f:30 000e            bnt code_1180 
  1172:78               push1 
  1173:8f 02              lsp param2 
  1175:40 fef4 02        call proc_106d 2 

  1179:30 0004            bnt code_1180 
  117c:35 00              ldi 0 
  117e:a7 01              sap param1 

        code_1180
  1180:87 01              lap param1 
  1182:30 0019            bnt code_119e 
  1185:38 016e          pushi 16e // $16e changeScore
  1188:78               push1 
  1189:36                push 
  118a:81 01              lag  
  118c:4a 06             send 6 

  118e:8f 01              lsp param1 
  1190:35 00              ldi 0 
  1192:1e                 gt? 
  1193:30 0008            bnt code_119e 
  1196:39 2a            pushi 2a // $2a play
  1198:76               push0 
  1199:72 113c          lofsa $113c // pointsSound
  119c:4a 04             send 4 


        code_119e
  119e:48                 ret 
)

// EXPORTED procedure #11 ()
(procedure proc_119f
  119f:3f 04             link 4 // (var $4)
  11a1:35 00              ldi 0 
  11a3:a5 03              sat temp3 
  11a5:78               push1 
  11a6:8f 02              lsp param2 
  11a8:43 06 02         callk IsObject 2 

  11ab:30 0021            bnt code_11cf 
  11ae:39 04            pushi 4 // $4 x
  11b0:76               push0 
  11b1:87 02              lap param2 
  11b3:4a 04             send 4 

  11b5:a5 01              sat temp1 
  11b7:39 03            pushi 3 // $3 y
  11b9:76               push0 
  11ba:87 02              lap param2 
  11bc:4a 04             send 4 

  11be:a5 02              sat temp2 
  11c0:8f 00              lsp paramTotal 
  11c2:35 03              ldi 3 
  11c4:1a                 eq? 
  11c5:30 001b            bnt code_11e3 
  11c8:87 03              lap param3 
  11ca:a5 03              sat temp3 
  11cc:32 0014            jmp code_11e3 

        code_11cf
  11cf:87 02              lap param2 
  11d1:a5 01              sat temp1 
  11d3:87 03              lap param3 
  11d5:a5 02              sat temp2 
  11d7:8f 00              lsp paramTotal 
  11d9:35 04              ldi 4 
  11db:1a                 eq? 
  11dc:30 0004            bnt code_11e3 
  11df:87 04              lap param4 
  11e1:a5 03              sat temp3 

        code_11e3
  11e3:39 04            pushi 4 // $4 x
  11e5:3c                 dup 
  11e6:76               push0 
  11e7:87 01              lap param1 
  11e9:4a 04             send 4 

  11eb:36                push 
  11ec:39 03            pushi 3 // $3 y
  11ee:76               push0 
  11ef:87 01              lap param1 
  11f1:4a 04             send 4 

  11f3:36                push 
  11f4:8d 01              lst temp1 
  11f6:8d 02              lst temp2 
  11f8:43 3f 08         callk GetAngle 8 

  11fb:a5 00              sat temp0 
  11fd:38 00e4          pushi e4 // $e4 setHeading
  1200:7a               push2 
  1201:36                push 
  1202:78               push1 
  1203:8d 03              lst temp3 
  1205:43 06 02         callk IsObject 2 

  1208:30 0002            bnt code_120d 
  120b:85 03              lat temp3 

        code_120d
  120d:36                push 
  120e:87 01              lap param1 
  1210:4a 08             send 8 

  1212:48                 ret 
)

// EXPORTED procedure #12 ()
(procedure proc_14d3
  14d3:3f 3c             link 3c // (var $3c)
  14d5:7a               push2 
  14d6:5b 04 32           lea 4 32 
  14d9:36                push 
  14da:8f 02              lsp param2 
  14dc:3c                 dup 
  14dd:35 01              ldi 1 
  14df:1a                 eq? 
  14e0:30 0006            bnt code_14e9 
  14e3:72 2777          lofsa $2777 // Walk
  14e6:32 0037            jmp code_1520 

        code_14e9
  14e9:3c                 dup 
  14ea:35 02              ldi 2 
  14ec:1a                 eq? 
  14ed:30 0006            bnt code_14f6 
  14f0:72 277c          lofsa $277c // Look
  14f3:32 002a            jmp code_1520 

        code_14f6
  14f6:3c                 dup 
  14f7:35 03              ldi 3 
  14f9:1a                 eq? 
  14fa:30 0006            bnt code_1503 
  14fd:72 2781          lofsa $2781 // Do
  1500:32 001d            jmp code_1520 

        code_1503
  1503:3c                 dup 
  1504:35 05              ldi 5 
  1506:1a                 eq? 
  1507:30 0006            bnt code_1510 
  150a:72 2784          lofsa $2784 // Talk
  150d:32 0010            jmp code_1520 

        code_1510
  1510:3c                 dup 
  1511:35 0a              ldi a 
  1513:1a                 eq? 
  1514:30 0006            bnt code_151d 
  1517:72 2789          lofsa $2789 // Zipper
  151a:32 0003            jmp code_1520 

        code_151d
  151d:72 2790          lofsa $2790 // UNKNOWN VERB

        code_1520
  1520:3a                toss 
  1521:36                push 
  1522:43 47 04         callk StrCpy 4 

  1525:39 04            pushi 4 // $4 x
  1527:5b 04 28           lea 4 28 
  152a:36                push 
  152b:76               push0 
  152c:39 17            pushi 17 // $17 name
  152e:89 0b              lsg  
  1530:43 48 08         callk Format 8 

  1533:39 07            pushi 7 // $7 cel
  1535:5b 04 00           lea 4 0 
  1538:36                push 
  1539:76               push0 
  153a:39 18            pushi 18 // $18 key
  153c:39 17            pushi 17 // $17 name
  153e:76               push0 
  153f:87 01              lap param1 
  1541:4a 04             send 4 

  1543:36                push 
  1544:5b 04 32           lea 4 32 
  1547:36                push 
  1548:39 04            pushi 4 // $4 x
  154a:76               push0 
  154b:38 0141          pushi 141 // $141 curEvent
  154e:76               push0 
  154f:51 31            class User 
  1551:4a 04             send 4 

  1553:4a 04             send 4 

  1555:36                push 
  1556:39 03            pushi 3 // $3 y
  1558:76               push0 
  1559:38 0141          pushi 141 // $141 curEvent
  155c:76               push0 
  155d:51 31            class User 
  155f:4a 04             send 4 

  1561:4a 04             send 4 

  1563:36                push 
  1564:43 48 0e         callk Format e 

  1567:39 17            pushi 17 // $17 name
  1569:78               push1 
  156a:5b 04 28           lea 4 28 
  156d:36                push 
  156e:38 014c          pushi 14c // $14c writeString
  1571:7a               push2 
  1572:5b 04 00           lea 4 0 
  1575:36                push 
  1576:72 279d          lofsa $279d // 

  1579:36                push 
  157a:38 0150          pushi 150 // $150 close
  157d:76               push0 
  157e:51 36            class Class_993_0 
  1580:4a 12             send 12 

  1582:48                 ret 
)

// EXPORTED procedure #13 ()
(procedure proc_1213
  1213:87 01              lap param1 
  1215:18                 not 
  1216:30 0015            bnt code_122e 
  1219:35 00              ldi 0 
  121b:a1 97              sag  
  121d:35 00              ldi 0 
  121f:a1 9e              sag  
  1221:38 00c9          pushi c9 // $c9 disable
  1224:78               push1 
  1225:39 05            pushi 5 // $5 view
  1227:81 45              lag  
  1229:4a 06             send 6 

  122b:32 0023            jmp code_1251 

        code_122e
  122e:87 01              lap param1 
  1230:a1 97              sag  
  1232:8f 00              lsp paramTotal 
  1234:35 01              ldi 1 
  1236:1e                 gt? 
  1237:30 000d            bnt code_1247 
  123a:8f 01              lsp param1 
  123c:34 03e8            ldi 3e8 
  123f:1a                 eq? 
  1240:30 0004            bnt code_1247 
  1243:87 02              lap param2 
  1245:a1 9e              sag  

        code_1247
  1247:38 00a7          pushi a7 // $a7 enable
  124a:78               push1 
  124b:39 05            pushi 5 // $5 view
  124d:81 45              lag  
  124f:4a 06             send 6 


        code_1251
  1251:48                 ret 
)

// EXPORTED procedure #14 ()
(procedure proc_1252
  1252:3e 012f           link 12f // (var $12f)
  1255:81 19              lag  
  1257:30 0005            bnt code_125f 
  125a:39 6c            pushi 6c // $6c dispose
  125c:76               push0 
  125d:4a 04             send 4 


        code_125f
  125f:76               push0 
  1260:43 27 00         callk HaveMouse 0 

  1263:18                 not 
  1264:30 001d            bnt code_1284 
  1267:81 46              lag  
  1269:a4 012d            sat temp301 
  126c:89 47              lsg  
  126e:35 0a              ldi a 
  1270:04                 sub 
  1271:a4 012e            sat temp302 
  1274:38 00bb          pushi bb // $bb setCursor
  1277:39 04            pushi 4 // $4 x
  1279:89 13              lsg  
  127b:78               push1 
  127c:38 01f4          pushi 1f4 // $1f4 selector
  127f:3c                 dup 
  1280:81 01              lag  
  1282:4a 0c             send c 


        code_1284
  1284:8f 01              lsp param1 
  1286:34 03e8            ldi 3e8 
  1289:2a                ult? 
  128a:30 003d            bnt code_12ca 
  128d:39 03            pushi 3 // $3 y
  128f:8f 01              lsp param1 
  1291:8f 02              lsp param2 
  1293:5b 04 00           lea 4 0 
  1296:36                push 
  1297:43 49 06         callk GetFarText 6 

  129a:7a               push2 
  129b:39 03            pushi 3 // $3 y
  129d:89 9b              lsg  
  129f:78               push1 
  12a0:5b 04 00           lea 4 0 
  12a3:36                push 
  12a4:43 46 02         callk StrLen 2 

  12a7:06                 mul 
  12a8:36                push 
  12a9:35 78              ldi 78 
  12ab:08                 div 
  12ac:36                push 
  12ad:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  12b3:a4 012c            sat temp300 
  12b6:39 03            pushi 3 // $3 y
  12b8:5b 04 00           lea 4 0 
  12bb:36                push 
  12bc:39 19            pushi 19 // $19 time
  12be:8c 012c            lst temp300 
  12c1:59 03            &rest 3 
  12c3:47 ff 00 06      calle ff procedure_0000 6 //  

  12c7:32 0029            jmp code_12f3 

        code_12ca
  12ca:7a               push2 
  12cb:39 03            pushi 3 // $3 y
  12cd:89 9b              lsg  
  12cf:78               push1 
  12d0:8f 01              lsp param1 
  12d2:43 46 02         callk StrLen 2 

  12d5:06                 mul 
  12d6:36                push 
  12d7:35 78              ldi 78 
  12d9:08                 div 
  12da:36                push 
  12db:46 03e7 0003 04  calle 3e7 procedure_0003 4 //  

  12e1:a4 012c            sat temp300 
  12e4:39 04            pushi 4 // $4 x
  12e6:8f 01              lsp param1 
  12e8:39 19            pushi 19 // $19 time
  12ea:36                push 
  12eb:8f 02              lsp param2 
  12ed:59 03            &rest 3 
  12ef:47 ff 00 08      calle ff procedure_0000 8 //  


        code_12f3
  12f3:76               push0 
  12f4:43 27 00         callk HaveMouse 0 

  12f7:18                 not 
  12f8:30 0012            bnt code_130d 
  12fb:38 00bb          pushi bb // $bb setCursor
  12fe:39 04            pushi 4 // $4 x
  1300:89 13              lsg  
  1302:78               push1 
  1303:8c 012d            lst temp301 
  1306:8c 012e            lst temp302 
  1309:81 01              lag  
  130b:4a 0c             send c 


        code_130d
  130d:35 01              ldi 1 
  130f:48                 ret 
)

// EXPORTED procedure #15 ()
(procedure proc_1310
  1310:3f 01             link 1 // (var $1)
  1312:8f 00              lsp paramTotal 
  1314:35 02              ldi 2 
  1316:22                 lt? 
  1317:30 0004            bnt code_131e 
  131a:35 01              ldi 1 
  131c:a7 02              sap param2 

        code_131e
  131e:39 22            pushi 22 // $22 type
  1320:78               push1 
  1321:38 4000          pushi 4000 // $4000 sel_16384
  1324:39 28            pushi 28 // $28 message
  1326:78               push1 
  1327:8f 02              lsp param2 
  1329:39 04            pushi 4 // $4 x
  132b:78               push1 
  132c:39 04            pushi 4 // $4 x
  132e:76               push0 
  132f:87 01              lap param1 
  1331:4a 04             send 4 

  1333:36                push 
  1334:39 03            pushi 3 // $3 y
  1336:78               push1 
  1337:39 03            pushi 3 // $3 y
  1339:76               push0 
  133a:87 01              lap param1 
  133c:4a 04             send 4 

  133e:36                push 
  133f:39 6a            pushi 6a // $6a new
  1341:76               push0 
  1342:51 07            class Event 
  1344:4a 04             send 4 

  1346:4a 18             send 18 

  1348:a5 00              sat temp0 
  134a:38 0081          pushi 81 // $81 handleEvent
  134d:78               push1 
  134e:36                push 
  134f:87 01              lap param1 
  1351:4a 06             send 6 

  1353:39 6c            pushi 6c // $6c dispose
  1355:76               push0 
  1356:85 00              lat temp0 
  1358:4a 04             send 4 

  135a:48                 ret 
)

// EXPORTED procedure #16 ()
(procedure proc_135b
  135b:3f 01             link 1 // (var $1)
  135d:76               push0 
  135e:40 fc5d 00        call proc_0fbf 0 

  1362:35 00              ldi 0 
  1364:a5 00              sat temp0 

        code_1366
  1366:8d 00              lst temp0 
  1368:35 08              ldi 8 
  136a:22                 lt? 
  136b:30 001b            bnt code_1389 
  136e:89 a9              lsg  
  1370:38 8000          pushi 8000 // $8000 sel_32768
  1373:85 00              lat temp0 
  1375:0c                 shr 
  1376:12                 and 
  1377:30 000a            bnt code_1384 
  137a:38 00c9          pushi c9 // $c9 disable
  137d:78               push1 
  137e:8d 00              lst temp0 
  1380:81 45              lag  
  1382:4a 06             send 6 


        code_1384
  1384:c5 00              +at temp0 
  1386:32 ffdd            jmp code_1366 

        code_1389
  1389:48                 ret 
)

// EXPORTED procedure #17 ()
(procedure proc_138a
  138a:8f 00              lsp paramTotal 
  138c:35 03              ldi 3 
  138e:22                 lt? 
  138f:2e 0005             bt code_1397 
  1392:8f 03              lsp param3 
  1394:35 00              ldi 0 
  1396:1a                 eq? 

        code_1397
  1397:30 0004            bnt code_139e 
  139a:81 aa              lag  
  139c:a7 03              sap param3 

        code_139e
  139e:8f 00              lsp paramTotal 
  13a0:35 03              ldi 3 
  13a2:1e                 gt? 
  13a3:30 000a            bnt code_13b0 
  13a6:38 012a          pushi 12a // $12a code
  13a9:78               push1 
  13aa:8f 04              lsp param4 
  13ac:81 aa              lag  
  13ae:4a 06             send 6 


        code_13b0
  13b0:8f 02              lsp param2 
  13b2:35 01              ldi 1 
  13b4:1a                 eq? 
  13b5:30 000f            bnt code_13c7 
  13b8:38 0096          pushi 96 // $96 setCycle
  13bb:7a               push2 
  13bc:8f 03              lsp param3 
  13be:8f 01              lsp param1 
  13c0:81 aa              lag  
  13c2:4a 08             send 8 

  13c4:32 0023            jmp code_13ea 

        code_13c7
  13c7:8f 02              lsp param2 
  13c9:35 00              ldi 0 
  13cb:1a                 eq? 
  13cc:30 000f            bnt code_13de 
  13cf:38 0095          pushi 95 // $95 set
  13d2:7a               push2 
  13d3:8f 03              lsp param3 
  13d5:8f 01              lsp param1 
  13d7:81 aa              lag  
  13d9:4a 08             send 8 

  13db:32 000c            jmp code_13ea 

        code_13de
  13de:38 0097          pushi 97 // $97 setReal
  13e1:7a               push2 
  13e2:8f 03              lsp param3 
  13e4:8f 01              lsp param1 
  13e6:81 aa              lag  
  13e8:4a 08             send 8 


        code_13ea
  13ea:48                 ret 
)

// EXPORTED procedure #18 ()
(procedure proc_13eb
  13eb:3f cb             link cb // (var $cb)
  13ed:8f 02              lsp param2 
  13ef:34 03e8            ldi 3e8 
  13f2:2a                ult? 
  13f3:30 0014            bnt code_140a 
  13f6:39 03            pushi 3 // $3 y
  13f8:8f 02              lsp param2 
  13fa:8f 03              lsp param3 
  13fc:5b 04 03           lea 4 3 
  13ff:36                push 
  1400:43 49 06         callk GetFarText 6 

  1403:35 02              ldi 2 
  1405:a5 02              sat temp2 
  1407:32 001e            jmp code_1428 

        code_140a
  140a:87 02              lap param2 
  140c:30 0011            bnt code_1420 
  140f:7a               push2 
  1410:5b 04 03           lea 4 3 
  1413:36                push 
  1414:8f 02              lsp param2 
  1416:43 47 04         callk StrCpy 4 

  1419:35 01              ldi 1 
  141b:a5 02              sat temp2 
  141d:32 0008            jmp code_1428 

        code_1420
  1420:35 00              ldi 0 
  1422:a5 03              sat temp3 
  1424:35 00              ldi 0 
  1426:a5 02              sat temp2 

        code_1428
  1428:35 00              ldi 0 
  142a:a5 01              sat temp1 
  142c:a5 00              sat temp0 
  142e:8f 01              lsp param1 
  1430:81 00              lag  
  1432:1a                 eq? 
  1433:30 0034            bnt code_146a 
  1436:8d 02              lst temp2 
  1438:35 01              ldi 1 
  143a:1e                 gt? 
  143b:30 0015            bnt code_1453 
  143e:39 03            pushi 3 // $3 y
  1440:5b 04 03           lea 4 3 
  1443:36                push 
  1444:39 50            pushi 50 // $50 title
  1446:72 2773          lofsa $2773 // You
  1449:36                push 
  144a:59 04            &rest 4 
  144c:40 fe02 06        call proc_1252 6 

  1450:32 007f            jmp code_14d2 

        code_1453
  1453:39 04            pushi 4 // $4 x
  1455:5b 04 03           lea 4 3 
  1458:36                push 
  1459:39 50            pushi 50 // $50 title
  145b:72 2773          lofsa $2773 // You
  145e:36                push 
  145f:8f 03              lsp param3 
  1461:59 04            &rest 4 
  1463:40 fdeb 08        call proc_1252 8 

  1467:32 0068            jmp code_14d2 

        code_146a
  146a:85 02              lat temp2 
  146c:a5 02              sat temp2 

        code_146e
  146e:8d 02              lst temp2 
  1470:87 00              lap paramTotal 
  1472:22                 lt? 
  1473:30 0026            bnt code_149c 
  1476:85 02              lat temp2 
  1478:9f 02             lspi param2 
  147a:3c                 dup 
  147b:35 6c              ldi 6c 
  147d:1a                 eq? 
  147e:30 0007            bnt code_1488 
  1481:35 01              ldi 1 
  1483:a5 00              sat temp0 
  1485:32 000e            jmp code_1496 

        code_1488
  1488:3c                 dup 
  1489:34 008b            ldi 8b 
  148c:1a                 eq? 
  148d:30 0006            bnt code_1496 
  1490:c5 02              +at temp2 
  1492:97 02             lapi param2 
  1494:a5 01              sat temp1 

        code_1496
  1496:3a                toss 
  1497:c5 02              +at temp2 
  1499:32 ffd2            jmp code_146e 

        code_149c
  149c:39 08            pushi 8 // $8 underBits
  149e:76               push0 
  149f:87 01              lap param1 
  14a1:4a 04             send 4 

  14a3:30 0016            bnt code_14bc 
  14a6:38 0205          pushi 205 // $205 say
  14a9:39 05            pushi 5 // $5 view
  14ab:5b 04 03           lea 4 3 
  14ae:36                push 
  14af:76               push0 
  14b0:76               push0 
  14b1:8d 00              lst temp0 
  14b3:8d 01              lst temp1 
  14b5:87 01              lap param1 
  14b7:4a 0e             send e 

  14b9:32 0016            jmp code_14d2 

        code_14bc
  14bc:39 6b            pushi 6b // $6b init
  14be:76               push0 
  14bf:38 0205          pushi 205 // $205 say
  14c2:39 05            pushi 5 // $5 view
  14c4:5b 04 03           lea 4 3 
  14c7:36                push 
  14c8:76               push0 
  14c9:76               push0 
  14ca:8d 00              lst temp0 
  14cc:8d 01              lst temp1 
  14ce:87 01              lap param1 
  14d0:4a 12             send 12 


        code_14d2
  14d2:48                 ret 
)

// EXPORTED procedure #22 ()
(procedure proc_1583
  1583:87 01              lap param1 
  1585:30 0012            bnt code_159a 
  1588:39 06            pushi 6 // $6 loop
  158a:78               push1 
  158b:39 0f            pushi f // $f lsBottom
  158d:39 24            pushi 24 // $24 cursor
  158f:78               push1 
  1590:39 06            pushi 6 // $6 loop
  1592:72 16e2          lofsa $16e2 // icon0
  1595:4a 0c             send c 

  1597:32 000d            jmp code_15a7 

        code_159a
  159a:39 06            pushi 6 // $6 loop
  159c:78               push1 
  159d:76               push0 
  159e:39 24            pushi 24 // $24 cursor
  15a0:78               push1 
  15a1:76               push0 
  15a2:72 16e2          lofsa $16e2 // icon0
  15a5:4a 0c             send c 


        code_15a7
  15a7:38 00ce          pushi ce // $ce curIcon
  15aa:76               push0 
  15ab:81 45              lag  
  15ad:4a 04             send 4 

  15af:36                push 
  15b0:72 16e2          lofsa $16e2 // icon0
  15b3:1a                 eq? 
  15b4:30 0011            bnt code_15c8 
  15b7:38 00bb          pushi bb // $bb setCursor
  15ba:78               push1 
  15bb:39 24            pushi 24 // $24 cursor
  15bd:76               push0 
  15be:72 16e2          lofsa $16e2 // icon0
  15c1:4a 04             send 4 

  15c3:36                push 
  15c4:81 01              lag  
  15c6:4a 06             send 6 


        code_15c8
  15c8:48                 ret 
)

// EXPORTED procedure #23 ()
(procedure proc_15c9
  15c9:81 b9              lag  
  15cb:18                 not 
  15cc:30 000a            bnt code_15d9 
  15cf:38 00ce          pushi ce // $ce curIcon
  15d2:76               push0 
  15d3:81 45              lag  
  15d5:4a 04             send 4 

  15d7:a1 b9              sag  

        code_15d9
  15d9:48                 ret 
)

// EXPORTED procedure #24 ()
(procedure proc_15da
  15da:81 b9              lag  
  15dc:30 004d            bnt code_162c 
  15df:38 00ce          pushi ce // $ce curIcon
  15e2:78               push1 
  15e3:36                push 
  15e4:81 45              lag  
  15e6:4a 06             send 6 

  15e8:38 00bb          pushi bb // $bb setCursor
  15eb:78               push1 
  15ec:39 24            pushi 24 // $24 cursor
  15ee:76               push0 
  15ef:38 00ce          pushi ce // $ce curIcon
  15f2:76               push0 
  15f3:81 45              lag  
  15f5:4a 04             send 4 

  15f7:4a 04             send 4 

  15f9:36                push 
  15fa:81 01              lag  
  15fc:4a 06             send 6 

  15fe:35 00              ldi 0 
  1600:a1 b9              sag  
  1602:38 00ce          pushi ce // $ce curIcon
  1605:76               push0 
  1606:81 45              lag  
  1608:4a 04             send 4 

  160a:36                push 
  160b:39 43            pushi 43 // $43 at
  160d:78               push1 
  160e:39 06            pushi 6 // $6 loop
  1610:81 45              lag  
  1612:4a 06             send 6 

  1614:1a                 eq? 
  1615:30 0014            bnt code_162c 
  1618:38 00d1          pushi d1 // $d1 curInvIcon
  161b:76               push0 
  161c:81 45              lag  
  161e:4a 04             send 4 

  1620:18                 not 
  1621:30 0008            bnt code_162c 
  1624:38 00c7          pushi c7 // $c7 advanceCurIcon
  1627:76               push0 
  1628:81 45              lag  
  162a:4a 04             send 4 


        code_162c
  162c:48                 ret 
)

// EXPORTED procedure #25 ()
(procedure proc_162d
  162d:3f 01             link 1 // (var $1)
  162f:81 19              lag  
  1631:30 0005            bnt code_1639 
  1634:39 6c            pushi 6c // $6c dispose
  1636:76               push0 
  1637:4a 04             send 4 


        code_1639
  1639:76               push0 
  163a:43 14 00         callk GetPort 0 

  163d:a5 00              sat temp0 
  163f:78               push1 
  1640:76               push0 
  1641:43 15 02         callk SetPort 2 

  1644:39 0b            pushi b // $b nsBottom
  1646:59 03            &rest 3 
  1648:39 65            pushi 65 // $65 topString
  164a:78               push1 
  164b:39 66            pushi 66 // $66 flags
  164d:8f 02              lsp param2 
  164f:39 69            pushi 69 // $69 hide
  1651:89 af              lsg  
  1653:39 6a            pushi 6a // $6a new
  1655:38 013e          pushi 13e // $13e prompt
  1658:39 64            pushi 64 // $64 moveDone
  165a:78               push1 
  165b:39 59            pushi 59 // $59 size
  165d:39 0e            pushi e // $e lsLeft
  165f:87 01              lap param1 
  1661:06                 mul 
  1662:36                push 
  1663:35 02              ldi 2 
  1665:08                 div 
  1666:04                 sub 
  1667:36                push 
  1668:43 1b 16         callk Display 16 

  166b:78               push1 
  166c:8d 00              lst temp0 
  166e:43 15 02         callk SetPort 2 

  1671:48                 ret 
)


