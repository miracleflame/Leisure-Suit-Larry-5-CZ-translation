(script 900)

(string
    string_0d8e "rm900"
    string_0d94 "the palm trees"
    string_0da3 "Miami is filled with exotic palm trees just like these."
    string_0ddb "palmTrees"
    string_0de5 "the gymnastics studio"
    string_0dfb "gymWindow"
    string_0e05 "the sign"
    string_0e0e "The sign reads, \"Doc Pulliam's Dental Hygiene Heaven.\""
    string_0e45 "docSign"
    string_0e4d "the gymnastics studio door"
    string_0e68 "gymDoor"
    string_0e70 "the dentist's office door"
    string_0e8a "The door leading to Doc Pulliam's Dental Hygiene Heaven is unlocked."
    string_0ecf "docDoor"
    string_0ed7 "the building"
    string_0ee4 "You are outside the building where Chi Chi Lambada is employed: \"Doc Pulliam's Dental Hygiene Heaven.\" Immediately below it is a closed gymnastics studio, \"The Gym-Dandy Gymnastics Center.\""
    string_0fa2 "building"
    string_0fab "the sidewalk"
    string_0fb8 "Carefully inspecting the sidewalk, you conclude Doc Pulliam doesn't spend much on filling cavities out here!"
    string_1025 "sidewalk"
    string_102e "the fence"
    string_1038 "A stone wall decorates an otherwise perfunctory building."
    string_1072 "fence"
    string_1078 "the gymnastic studio sign"
    string_1092 "The sign says, \"Gym-Dandy Gymnastics Center.\""
    string_10c0 "gymSign"
    string_10c8 "the window"
    string_10d3 "You don't need to peek in those windows!"
    string_10fc "window1"
    string_1104 "window2"
    string_110c "the stairway"
    string_1119 "A flight of stairs leads up to Doc Pulliam's office."
    string_114e "stairs"
    string_1155 "the revolving tooth"
    string_1169 "Take the Ventura Freeway to the Fontainebleau Freeway to the Eisenhower Turnpike to the Slaussen Cutoff. Get out of your car and cut off your slaussen. Get back in your car and continue on until you reach the Beach Front Highway. Take the Beach Front Highway to 22nd Street Southwest and stop when you come to the giant revolving tooth! You're there! Doc Pulliam's Dental Hygiene Heaven!"
    string_12ed "tooth"
    string_12f3 "the limousine"
    string_1301 "It's your limousine, awaiting your entrance."
    string_132e "limo"
    string_1333 "There are many buildings in a city as large as Miami."
    string_1369 "buildings"
    string_1373 "Save"
    string_1378 "Nah, Why Bother?"
    string_1389 "AL says"
    string_1391 "sExitLimo"
    string_139b "sLimoLeaves"
    string_13a7 "theMusic3"
    string_13b1 "theDoor"
    string_13b9 "sEnterLimo"
)

(said
)

(local
)

// 038a
(instance publicrm900 of LLRoom
    (properties
        script $0
        number $0
        timer $0
        keep $0
        initialized $0
        lookStr $0
        picture $384
        style $ffff
        horizon $0
        controls $0
        north $389
        east $0
        south $0
        west $0
        curPic $0
        picAngle $0
        vanishingX $a0
        vanishingY $8ad0
        obstacles $0
    )
    (method (init) // method_000e
  000e:7a               push2 
  000f:38 0084          pushi 84 // $84 cycles
  0012:38 00c2          pushi c2 // $c2 show
  0015:43 00 04         callk Load 4 

  0018:7a               push2 
  0019:38 0084          pushi 84 // $84 cycles
  001c:38 00bf          pushi bf // $bf maskCel
  001f:43 00 04         callk Load 4 

  0022:7a               push2 
  0023:38 0084          pushi 84 // $84 cycles
  0026:38 00c0          pushi c0 // $c0 highlightColor
  0029:43 00 04         callk Load 4 

  002c:38 0176          pushi 176 // $176 addObstacle
  002f:78               push1 
  0030:39 22            pushi 22 // $22 type
  0032:78               push1 
  0033:7a               push2 
  0034:39 6b            pushi 6b // $6b init
  0036:39 34            pushi 34 // $34 b-xAxis
  0038:76               push0 
  0039:76               push0 
  003a:39 7f            pushi 7f // $7f addAfter
  003c:76               push0 
  003d:39 7e            pushi 7e // $7e addToEnd
  003f:39 74            pushi 74 // $74 eachElementDo
  0041:39 4d            pushi 4d // $4d value
  0043:39 74            pushi 74 // $74 eachElementDo
  0045:39 4d            pushi 4d // $4d value
  0047:39 76            pushi 76 // $76 allTrue
  0049:39 7e            pushi 7e // $7e addToEnd
  004b:39 76            pushi 76 // $76 allTrue
  004d:39 46            pushi 46 // $46 width
  004f:38 009c          pushi 9c // $9c stop
  0052:39 37            pushi 37 // $37 yStep
  0054:38 009d          pushi 9d // $9d pause
  0057:39 29            pushi 29 // $29 edit
  0059:38 00a3          pushi a3 // $a3 send
  005c:39 09            pushi 9 // $9 nsTop
  005e:38 00a5          pushi a5 // $a5 clean
  0061:39 09            pushi 9 // $9 nsTop
  0063:38 00a9          pushi a9 // $a9 track
  0066:38 00a6          pushi a6 // $a6 playBed
  0069:38 00a9          pushi a9 // $a9 track
  006c:38 0136          pushi 136 // $136 horizon
  006f:38 00a9          pushi a9 // $a9 track
  0072:38 0135          pushi 135 // $135 setDirection
  0075:38 00a6          pushi a6 // $a6 playBed
  0078:38 00e7          pushi e7 // $e7 dynamic
  007b:38 00a2          pushi a2 // $a2 setLoop
  007e:39 37            pushi 37 // $37 yStep
  0080:38 00a2          pushi a2 // $a2 setLoop
  0083:39 37            pushi 37 // $37 yStep
  0085:38 00a0          pushi a0 // $a0 mute
  0088:39 48            pushi 48 // $48 syntaxFail
  008a:38 009e          pushi 9e // $9e hold
  008d:38 0083          pushi 83 // $83 timer
  0090:39 76            pushi 76 // $76 allTrue
  0092:38 00e6          pushi e6 // $e6 distanceTo
  0095:39 76            pushi 76 // $76 allTrue
  0097:38 00e7          pushi e7 // $e7 dynamic
  009a:39 74            pushi 74 // $74 eachElementDo
  009c:38 0082          pushi 82 // $82 start
  009f:39 74            pushi 74 // $74 eachElementDo
  00a1:38 0082          pushi 82 // $82 start
  00a4:76               push0 
  00a5:38 013f          pushi 13f // $13f inputLineAddr
  00a8:76               push0 
  00a9:38 013f          pushi 13f // $13f inputLineAddr
  00ac:38 00bd          pushi bd // $bd maskView
  00af:76               push0 
  00b0:38 00bd          pushi bd // $bd maskView
  00b3:39 72            pushi 72 // $72 yourself
  00b5:76               push0 
  00b6:39 6a            pushi 6a // $6a new
  00b8:76               push0 
  00b9:51 23            class Polygon 
  00bb:4a 04             send 4 

  00bd:4a 76             send 76 

  00bf:36                push 
  00c0:54 06             self 6 

  00c2:39 6b            pushi 6b // $6b init
  00c4:76               push0 
  00c5:38 020a          pushi 20a // $20a normalize
  00c8:78               push1 
  00c9:38 0228          pushi 228 // $228 sel_552
  00cc:38 0134          pushi 134 // $134 setStep
  00cf:7a               push2 
  00d0:7a               push2 
  00d1:7a               push2 
  00d2:81 00              lag  
  00d4:4a 12             send 12 

  00d6:89 0c              lsg  
  00d8:34 0398            ldi 398 
  00db:1a                 eq? 
  00dc:30 0012            bnt code_00f1 
  00df:78               push1 
  00e0:76               push0 
  00e1:45 16 02         callb procedure_0016 2 //  

  00e4:78               push1 
  00e5:39 04            pushi 4 // $4 x
  00e7:45 07 02         callb procedure_0007 2 //  

  00ea:39 1f            pushi 1f // $1f style
  00ec:78               push1 
  00ed:39 07            pushi 7 // $7 cel
  00ef:54 06             self 6 


        code_00f1
  00f1:81 a0              lag  
  00f3:18                 not 
  00f4:30 0004            bnt code_00fb 
  00f7:35 03              ldi 3 
  00f9:a1 a0              sag  

        code_00fb
  00fb:39 6b            pushi 6b // $6b init
  00fd:76               push0 
  00fe:57 72 04         super LLRoom 4 

  0101:78               push1 
  0102:78               push1 
  0103:45 06 02         callb procedure_0006 2 //  

  0106:30 000e            bnt code_0117 
  0109:39 6b            pushi 6b // $6b init
  010b:76               push0 
  010c:38 0119          pushi 119 // $119 approachVerbs
  010f:78               push1 
  0110:39 03            pushi 3 // $3 y
  0112:72 088a          lofsa $088a // limo
  0115:4a 0a             send a 


        code_0117
  0117:89 0c              lsg  
  0119:3c                 dup 
  011a:34 0398            ldi 398 
  011d:1a                 eq? 
  011e:30 0023            bnt code_0144 
  0121:76               push0 
  0122:45 03 00         callb procedure_0003 0 //  

  0125:38 011c          pushi 11c // $11c posn
  0128:39 03            pushi 3 // $3 y
  012a:38 00d6          pushi d6 // $d6 cycleDir
  012d:38 00a3          pushi a3 // $a3 send
  0130:76               push0 
  0131:38 00e4          pushi e4 // $e4 setHeading
  0134:78               push1 
  0135:38 00b4          pushi b4 // $b4 busy
  0138:38 0146          pushi 146 // $146 edgeHit
  013b:78               push1 
  013c:76               push0 
  013d:81 00              lag  
  013f:4a 16             send 16 

  0141:32 0059            jmp code_019d 

        code_0144
  0144:3c                 dup 
  0145:63 1c             pToa north 
  0147:1a                 eq? 
  0148:30 0035            bnt code_0180 
  014b:76               push0 
  014c:45 03 00         callb procedure_0003 0 //  

  014f:38 011c          pushi 11c // $11c posn
  0152:39 03            pushi 3 // $3 y
  0154:39 7b            pushi 7b // $7b last
  0156:39 74            pushi 74 // $74 eachElementDo
  0158:76               push0 
  0159:38 00e4          pushi e4 // $e4 setHeading
  015c:78               push1 
  015d:38 00b4          pushi b4 // $b4 busy
  0160:39 42            pushi 42 // $42 setPri
  0162:78               push1 
  0163:39 04            pushi 4 // $4 x
  0165:81 00              lag  
  0167:4a 16             send 16 

  0169:39 2b            pushi 2b // $2b number
  016b:78               push1 
  016c:76               push0 
  016d:38 009c          pushi 9c // $9c stop
  0170:76               push0 
  0171:81 66              lag  
  0173:4a 0a             send a 

  0175:39 2b            pushi 2b // $2b number
  0177:78               push1 
  0178:76               push0 
  0179:81 67              lag  
  017b:4a 06             send 6 

  017d:32 001d            jmp code_019d 

        code_0180
  0180:35 03              ldi 3 
  0182:a1 a0              sag  
  0184:78               push1 
  0185:78               push1 
  0186:45 08 02         callb procedure_0008 2 //  

  0189:39 6b            pushi 6b // $6b init
  018b:76               push0 
  018c:72 088a          lofsa $088a // limo
  018f:4a 04             send 4 

  0191:38 008e          pushi 8e // $8e setScript
  0194:78               push1 
  0195:72 0a88          lofsa $0a88 // sExitLimo
  0198:36                push 
  0199:81 02              lag  
  019b:4a 06             send 6 


        code_019d
  019d:3a                toss 
  019e:39 6b            pushi 6b // $6b init
  01a0:76               push0 
  01a1:38 00db          pushi db // $db cycleSpeed
  01a4:78               push1 
  01a5:39 06            pushi 6 // $6 loop
  01a7:38 0096          pushi 96 // $96 setCycle
  01aa:78               push1 
  01ab:51 17            class Fwd 
  01ad:36                push 
  01ae:72 07f6          lofsa $07f6 // tooth
  01b1:4a 10             send 10 

  01b3:39 6b            pushi 6b // $6b init
  01b5:76               push0 
  01b6:72 03de          lofsa $03de // palmTrees
  01b9:4a 04             send 4 

  01bb:39 6b            pushi 6b // $6b init
  01bd:76               push0 
  01be:38 0119          pushi 119 // $119 approachVerbs
  01c1:7a               push2 
  01c2:39 03            pushi 3 // $3 y
  01c4:7a               push2 
  01c5:72 0456          lofsa $0456 // gymWindow
  01c8:4a 0c             send c 

  01ca:39 6b            pushi 6b // $6b init
  01cc:76               push0 
  01cd:72 06ac          lofsa $06ac // gymSign
  01d0:4a 04             send 4 

  01d2:39 6b            pushi 6b // $6b init
  01d4:76               push0 
  01d5:72 0496          lofsa $0496 // docSign
  01d8:4a 04             send 4 

  01da:39 6b            pushi 6b // $6b init
  01dc:76               push0 
  01dd:39 42            pushi 42 // $42 setPri
  01df:78               push1 
  01e0:78               push1 
  01e1:72 054e          lofsa $054e // docDoor
  01e4:4a 0a             send a 

  01e6:39 6b            pushi 6b // $6b init
  01e8:76               push0 
  01e9:38 0119          pushi 119 // $119 approachVerbs
  01ec:78               push1 
  01ed:39 03            pushi 3 // $3 y
  01ef:72 0c5e          lofsa $0c5e // theDoor
  01f2:4a 0a             send a 

  01f4:39 6b            pushi 6b // $6b init
  01f6:76               push0 
  01f7:38 0119          pushi 119 // $119 approachVerbs
  01fa:78               push1 
  01fb:39 03            pushi 3 // $3 y
  01fd:72 050e          lofsa $050e // gymDoor
  0200:4a 0a             send a 

  0202:39 6b            pushi 6b // $6b init
  0204:76               push0 
  0205:72 05d0          lofsa $05d0 // building
  0208:4a 04             send 4 

  020a:39 6b            pushi 6b // $6b init
  020c:76               push0 
  020d:72 090c          lofsa $090c // buildings
  0210:4a 04             send 4 

  0212:39 6b            pushi 6b // $6b init
  0214:76               push0 
  0215:72 060c          lofsa $060c // sidewalk
  0218:4a 04             send 4 

  021a:39 6b            pushi 6b // $6b init
  021c:76               push0 
  021d:72 0648          lofsa $0648 // fence
  0220:4a 04             send 4 

  0222:39 6b            pushi 6b // $6b init
  0224:76               push0 
  0225:72 07b6          lofsa $07b6 // stairs
  0228:4a 04             send 4 

  022a:39 6b            pushi 6b // $6b init
  022c:76               push0 
  022d:38 0119          pushi 119 // $119 approachVerbs
  0230:7a               push2 
  0231:39 03            pushi 3 // $3 y
  0233:7a               push2 
  0234:72 06ec          lofsa $06ec // window1
  0237:4a 0c             send c 

  0239:39 6b            pushi 6b // $6b init
  023b:76               push0 
  023c:38 0119          pushi 119 // $119 approachVerbs
  023f:7a               push2 
  0240:39 03            pushi 3 // $3 y
  0242:7a               push2 
  0243:72 0728          lofsa $0728 // window2
  0246:4a 0c             send c 

  0248:89 0c              lsg  
  024a:34 0398            ldi 398 
  024d:1a                 eq? 
  024e:30 000d            bnt code_025e 
  0251:76               push0 
  0252:45 02 00         callb procedure_0002 0 //  

  0255:39 03            pushi 3 // $3 y
  0257:3c                 dup 
  0258:76               push0 
  0259:89 02              lsg  
  025b:45 11 06         callb procedure_0011 6 //  


        code_025e
  025e:39 2b            pushi 2b // $2b number
  0260:78               push1 
  0261:38 00fb          pushi fb // $fb offScreenOK
  0264:39 06            pushi 6 // $6 loop
  0266:78               push1 
  0267:39 ff            pushi ff // $ff syncNum
  0269:39 2a            pushi 2a // $2a play
  026b:76               push0 
  026c:72 0c18          lofsa $0c18 // theMusic3
  026f:4a 10             send 10 

  0271:78               push1 
  0272:76               push0 
  0273:45 16 02         callb procedure_0016 2 //  

  0276:78               push1 
  0277:76               push0 
  0278:45 0d 02         callb procedure_000d 2 //  

  027b:48                 ret 
    )

    (method (doit) // method_02cf
  02cf:39 3c            pushi 3c // $3c doit
  02d1:76               push0 
  02d2:57 72 04         super LLRoom 4 

  02d5:63 08             pToa script 
  02d7:30 0003            bnt code_02dd 
  02da:32 00a6            jmp code_0383 

        code_02dd
  02dd:39 04            pushi 4 // $4 x
  02df:76               push0 
  02e0:81 00              lag  
  02e2:4a 04             send 4 

  02e4:36                push 
  02e5:35 58              ldi 58 
  02e7:22                 lt? 
  02e8:30 0014            bnt code_02ff 
  02eb:39 03            pushi 3 // $3 y
  02ed:76               push0 
  02ee:81 00              lag  
  02f0:4a 04             send 4 

  02f2:36                push 
  02f3:34 0082            ldi 82 
  02f6:22                 lt? 
  02f7:30 0005            bnt code_02ff 
  02fa:35 00              ldi 0 
  02fc:32 0084            jmp code_0383 

        code_02ff
  02ff:39 03            pushi 3 // $3 y
  0301:76               push0 
  0302:81 00              lag  
  0304:4a 04             send 4 

  0306:36                push 
  0307:34 00a2            ldi a2 
  030a:22                 lt? 
  030b:30 0028            bnt code_0336 
  030e:39 03            pushi 3 // $3 y
  0310:76               push0 
  0311:81 00              lag  
  0313:4a 04             send 4 

  0315:36                push 
  0316:35 78              ldi 78 
  0318:1e                 gt? 
  0319:30 001a            bnt code_0336 
  031c:39 3f            pushi 3f // $3f priority
  031e:76               push0 
  031f:81 00              lag  
  0321:4a 04             send 4 

  0323:36                push 
  0324:35 04              ldi 4 
  0326:1c                 ne? 
  0327:30 000c            bnt code_0336 
  032a:39 42            pushi 42 // $42 setPri
  032c:78               push1 
  032d:39 04            pushi 4 // $4 x
  032f:81 00              lag  
  0331:4a 06             send 6 

  0333:32 004d            jmp code_0383 

        code_0336
  0336:39 3f            pushi 3f // $3f priority
  0338:76               push0 
  0339:81 00              lag  
  033b:4a 04             send 4 

  033d:36                push 
  033e:35 02              ldi 2 
  0340:1c                 ne? 
  0341:30 0019            bnt code_035d 
  0344:39 03            pushi 3 // $3 y
  0346:76               push0 
  0347:81 00              lag  
  0349:4a 04             send 4 

  034b:36                push 
  034c:35 78              ldi 78 
  034e:22                 lt? 
  034f:30 000b            bnt code_035d 
  0352:39 42            pushi 42 // $42 setPri
  0354:78               push1 
  0355:7a               push2 
  0356:81 00              lag  
  0358:4a 06             send 6 

  035a:32 0026            jmp code_0383 

        code_035d
  035d:39 03            pushi 3 // $3 y
  035f:76               push0 
  0360:81 00              lag  
  0362:4a 04             send 4 

  0364:36                push 
  0365:34 00a1            ldi a1 
  0368:1e                 gt? 
  0369:30 0017            bnt code_0383 
  036c:39 3f            pushi 3f // $3f priority
  036e:76               push0 
  036f:81 00              lag  
  0371:4a 04             send 4 

  0373:36                push 
  0374:35 04              ldi 4 
  0376:1a                 eq? 
  0377:30 0009            bnt code_0383 
  037a:39 42            pushi 42 // $42 setPri
  037c:78               push1 
  037d:39 ff            pushi ff // $ff syncNum
  037f:81 00              lag  
  0381:4a 06             send 6 


        code_0383
  0383:48                 ret 
    )

    (method (doVerb) // method_0289
  0289:8f 01              lsp param1 
  028b:3c                 dup 
  028c:35 02              ldi 2 
  028e:1a                 eq? 
  028f:30 002e            bnt code_02c0 
  0292:39 03            pushi 3 // $3 y
  0294:76               push0 
  0295:81 00              lag  
  0297:4a 04             send 4 

  0299:36                push 
  029a:34 0082            ldi 82 
  029d:22                 lt? 
  029e:30 0013            bnt code_02b4 
  02a1:7a               push2 
  02a2:38 0384          pushi 384 // $384 sel_900
  02a5:78               push1 
  02a6:45 0e 04         callb procedure_000e 4 //  

  02a9:7a               push2 
  02aa:38 0384          pushi 384 // $384 sel_900
  02ad:7a               push2 
  02ae:45 0e 04         callb procedure_000e 4 //  

  02b1:32 0019            jmp code_02cd 

        code_02b4
  02b4:7a               push2 
  02b5:38 0384          pushi 384 // $384 sel_900
  02b8:39 03            pushi 3 // $3 y
  02ba:45 0e 04         callb procedure_000e 4 //  

  02bd:32 000d            jmp code_02cd 

        code_02c0
  02c0:38 010c          pushi 10c // $10c doVerb
  02c3:7a               push2 
  02c4:8f 01              lsp param1 
  02c6:8f 02              lsp param2 
  02c8:59 03            &rest 3 
  02ca:57 72 08         super LLRoom 8 


        code_02cd
  02cd:3a                toss 
  02ce:48                 ret 
    )

    (method (cue) // method_027c
  027c:7a               push2 
  027d:38 0384          pushi 384 // $384 sel_900
  0280:76               push0 
  0281:45 0e 04         callb procedure_000e 4 //  

  0284:76               push0 
  0285:45 03 00         callb procedure_0003 0 //  

  0288:48                 ret 
    )

)

// 03d8
(instance palmTrees of Feature
    (properties
        x $25
        y $65
        z $0
        heading $0
        noun $0
        nsTop $3e
        nsLeft $14
        nsBottom $8d
        nsRight $46
        description $d94
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $da3
    )
)

// 0450
(instance gymWindow of Feature
    (properties
        x $a2
        y $8c
        z $0
        heading $0
        noun $0
        nsTop $7f
        nsLeft $8c
        nsBottom $96
        nsRight $b9
        description $de5
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $a5
        approachY $a2
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_0412
  0412:8f 01              lsp param1 
  0414:3c                 dup 
  0415:35 02              ldi 2 
  0417:1a                 eq? 
  0418:30 000c            bnt code_0427 
  041b:7a               push2 
  041c:38 0384          pushi 384 // $384 sel_900
  041f:39 04            pushi 4 // $4 x
  0421:45 0e 04         callb procedure_000e 4 //  

  0424:32 0020            jmp code_0447 

        code_0427
  0427:3c                 dup 
  0428:35 03              ldi 3 
  042a:1a                 eq? 
  042b:30 000c            bnt code_043a 
  042e:7a               push2 
  042f:38 0384          pushi 384 // $384 sel_900
  0432:39 05            pushi 5 // $5 view
  0434:45 0e 04         callb procedure_000e 4 //  

  0437:32 000d            jmp code_0447 

        code_043a
  043a:38 010c          pushi 10c // $10c doVerb
  043d:7a               push2 
  043e:8f 01              lsp param1 
  0440:8f 02              lsp param2 
  0442:59 03            &rest 3 
  0444:57 2c 08         super Feature 8 


        code_0447
  0447:3a                toss 
  0448:48                 ret 
  0449:00                bnot 
    )

)

// 0490
(instance docSign of Feature
    (properties
        x $b6
        y $2a
        z $0
        heading $0
        noun $0
        nsTop $18
        nsLeft $87
        nsBottom $3d
        nsRight $e1
        description $e05
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $e0e
    )
)

// 0508
(instance gymDoor of Feature
    (properties
        x $d7
        y $92
        z $0
        heading $0
        noun $0
        nsTop $84
        nsLeft $c3
        nsBottom $a1
        nsRight $eb
        description $e4d
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $d6
        approachY $a3
        approachDist $0
        _approachVerbs $6789
        lookStr $0
    )
    (method (doVerb) // method_04ca
  04ca:8f 01              lsp param1 
  04cc:3c                 dup 
  04cd:35 02              ldi 2 
  04cf:1a                 eq? 
  04d0:30 000c            bnt code_04df 
  04d3:7a               push2 
  04d4:38 0384          pushi 384 // $384 sel_900
  04d7:39 06            pushi 6 // $6 loop
  04d9:45 0e 04         callb procedure_000e 4 //  

  04dc:32 0020            jmp code_04ff 

        code_04df
  04df:3c                 dup 
  04e0:35 03              ldi 3 
  04e2:1a                 eq? 
  04e3:30 000c            bnt code_04f2 
  04e6:7a               push2 
  04e7:38 0384          pushi 384 // $384 sel_900
  04ea:39 07            pushi 7 // $7 cel
  04ec:45 0e 04         callb procedure_000e 4 //  

  04ef:32 000d            jmp code_04ff 

        code_04f2
  04f2:38 010c          pushi 10c // $10c doVerb
  04f5:7a               push2 
  04f6:8f 01              lsp param1 
  04f8:8f 02              lsp param2 
  04fa:59 03            &rest 3 
  04fc:57 2c 08         super Feature 8 


        code_04ff
  04ff:3a                toss 
  0500:48                 ret 
  0501:00                bnot 
    )

)

// 0548
(instance docDoor of Door
    (properties
        x $72
        y $68
        z $fff6
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $e70
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $80
        approachY $74
        approachDist $0
        _approachVerbs $6789
        lookStr $e8a
        yStep $2
        view $384
        loop $1
        cel $0
        priority $1
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        entranceTo $389
        locked $0
        openSnd $28
        closeSnd $29
        state $0
        doubleDoor $0
        forceOpen $0
        caller $0
        moveToX $80
        moveToY $73
        enterType $0
        exitType $0
        closeScript $0
        openScript $0
    )
)

// 05ca
(instance building of Feature
    (properties
        x $9d
        y $5b
        z $ffec
        heading $0
        noun $0
        nsTop $3c
        nsLeft $41
        nsBottom $a2
        nsRight $ef
        description $ed7
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $ee4
    )
)

// 0606
(instance sidewalk of Feature
    (properties
        x $a9
        y $aa
        z $0
        heading $0
        noun $0
        nsTop $a2
        nsLeft $0
        nsBottom $b2
        nsRight $13f
        description $fab
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $fb8
    )
)

// 0642
(instance fence of Feature
    (properties
        x $a4
        y $98
        z $0
        heading $0
        noun $0
        nsTop $8b
        nsLeft $0
        nsBottom $a6
        nsRight $134
        description $102e
        sightAngle $28
        actions $0
        onMeCheck $4
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1038
    )
)

// 06a6
(instance gymSign of Feature
    (properties
        x $be
        y $77
        z $0
        heading $0
        noun $0
        nsTop $6d
        nsLeft $91
        nsBottom $81
        nsRight $e6
        description $1078
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1092
    )
    (method (doVerb) // method_067c
  067c:8f 01              lsp param1 
  067e:3c                 dup 
  067f:35 03              ldi 3 
  0681:1a                 eq? 
  0682:30 000c            bnt code_0691 
  0685:7a               push2 
  0686:38 0384          pushi 384 // $384 sel_900
  0689:39 08            pushi 8 // $8 underBits
  068b:45 0e 04         callb procedure_000e 4 //  

  068e:32 000d            jmp code_069e 

        code_0691
  0691:38 010c          pushi 10c // $10c doVerb
  0694:7a               push2 
  0695:8f 01              lsp param1 
  0697:8f 02              lsp param2 
  0699:59 03            &rest 3 
  069b:57 2c 08         super Feature 8 


        code_069e
  069e:3a                toss 
  069f:48                 ret 
    )

)

// 06e6
(instance window1 of Feature
    (properties
        x $b8
        y $be
        z $64
        heading $0
        noun $0
        nsTop $4e
        nsLeft $91
        nsBottom $66
        nsRight $e1
        description $10c8
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $a7
        approachY $73
        approachDist $0
        _approachVerbs $6789
        lookStr $10d3
    )
)

// 0722
(instance window2 of Feature
    (properties
        x $5c
        y $be
        z $64
        heading $0
        noun $0
        nsTop $4e
        nsLeft $59
        nsBottom $64
        nsRight $6a
        description $10c8
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $5f
        approachY $77
        approachDist $0
        _approachVerbs $6789
        lookStr $10d3
    )
)

// 07b0
(instance stairs of Feature
    (properties
        x $65
        y $9d
        z $19
        heading $0
        noun $0
        nsTop $6a
        nsLeft $46
        nsBottom $9e
        nsRight $87
        description $110c
        sightAngle $28
        actions $0
        onMeCheck $8
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1119
    )
    (method (doVerb) // method_075c
  075c:8f 01              lsp param1 
  075e:3c                 dup 
  075f:35 03              ldi 3 
  0761:1a                 eq? 
  0762:30 0036            bnt code_079b 
  0765:39 03            pushi 3 // $3 y
  0767:76               push0 
  0768:81 00              lag  
  076a:4a 04             send 4 

  076c:36                push 
  076d:34 0082            ldi 82 
  0770:22                 lt? 
  0771:30 0014            bnt code_0788 
  0774:38 011b          pushi 11b // $11b setMotion
  0777:39 03            pushi 3 // $3 y
  0779:51 24            class PolyPath 
  077b:36                push 
  077c:39 39            pushi 39 // $39 cantBeHere
  077e:38 00a4          pushi a4 // $a4 check
  0781:81 00              lag  
  0783:4a 0a             send a 

  0785:32 0020            jmp code_07a8 

        code_0788
  0788:38 011b          pushi 11b // $11b setMotion
  078b:39 03            pushi 3 // $3 y
  078d:51 24            class PolyPath 
  078f:36                push 
  0790:39 7e            pushi 7e // $7e addToEnd
  0792:39 71            pushi 71 // $71 respondsTo
  0794:81 00              lag  
  0796:4a 0a             send a 

  0798:32 000d            jmp code_07a8 

        code_079b
  079b:38 010c          pushi 10c // $10c doVerb
  079e:7a               push2 
  079f:8f 01              lsp param1 
  07a1:8f 02              lsp param2 
  07a3:59 03            &rest 3 
  07a5:57 2c 08         super Feature 8 


        code_07a8
  07a8:3a                toss 
  07a9:48                 ret 
    )

)

// 07f0
(instance tooth of Prop
    (properties
        x $73
        y $40
        z $0
        heading $0
        noun $0
        nsTop $1b
        nsLeft $65
        nsBottom $40
        nsRight $81
        description $1155
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1169
        yStep $2
        view $384
        loop $2
        cel $0
        priority $0
        underBits $0
        signal $6810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
    )
)

// 0884
(instance limo of Actor
    (properties
        x $41
        y $b3
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $12f3
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $51
        approachY $a7
        approachDist $0
        _approachVerbs $6789
        lookStr $1301
        yStep $2
        view $384
        loop $0
        cel $0
        priority $e
        underBits $0
        signal $4810
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        illegalBits $8000
        xLast $0
        yLast $0
        xStep $3
        moveSpeed $6
        blocks $0
        baseSetter $0
        mover $0
        looper $0
        viewer $0
        avoider $0
        code $0
    )
    (method (doVerb) // method_0854
  0854:8f 01              lsp param1 
  0856:3c                 dup 
  0857:35 03              ldi 3 
  0859:1a                 eq? 
  085a:30 0013            bnt code_0870 
  085d:76               push0 
  085e:45 02 00         callb procedure_0002 0 //  

  0861:38 008e          pushi 8e // $8e setScript
  0864:78               push1 
  0865:72 0d60          lofsa $0d60 // sEnterLimo
  0868:36                push 
  0869:81 02              lag  
  086b:4a 06             send 6 

  086d:32 000b            jmp code_087b 

        code_0870
  0870:38 010c          pushi 10c // $10c doVerb
  0873:78               push1 
  0874:8f 01              lsp param1 
  0876:59 02            &rest 2 
  0878:57 30 06         super Actor 6 


        code_087b
  087b:3a                toss 
  087c:48                 ret 
  087d:00                bnot 
    )

)

// 0906
(instance buildings of Feature
    (properties
        x $9f
        y $51
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $a2
        nsRight $13f
        description $ed7
        sightAngle $28
        actions $0
        onMeCheck $2
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $1333
    )
)

// 0a82
(instance sExitLimo of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0940
  0940:3f 02             link 2 // (var $2)
  0942:87 01              lap param1 
  0944:65 0a             aTop state 
  0946:36                push 
  0947:3c                 dup 
  0948:35 00              ldi 0 
  094a:1a                 eq? 
  094b:30 0022            bnt code_0970 
  094e:76               push0 
  094f:45 02 00         callb procedure_0002 0 //  

  0952:39 69            pushi 69 // $69 hide
  0954:76               push0 
  0955:38 00e4          pushi e4 // $e4 setHeading
  0958:78               push1 
  0959:76               push0 
  095a:38 011c          pushi 11c // $11c posn
  095d:39 03            pushi 3 // $3 y
  095f:39 51            pushi 51 // $51 button
  0961:38 00b1          pushi b1 // $b1 advance
  0964:76               push0 
  0965:81 00              lag  
  0967:4a 14             send 14 

  0969:35 02              ldi 2 
  096b:65 10             aTop cycles 
  096d:32 0109            jmp code_0a79 

        code_0970
  0970:3c                 dup 
  0971:35 01              ldi 1 
  0973:1a                 eq? 
  0974:30 003d            bnt code_09b4 
  0977:39 2b            pushi 2b // $2b number
  0979:78               push1 
  097a:38 00bf          pushi bf // $bf maskCel
  097d:38 00a2          pushi a2 // $a2 setLoop
  0980:78               push1 
  0981:78               push1 
  0982:39 2a            pushi 2a // $2a play
  0984:76               push0 
  0985:81 67              lag  
  0987:4a 10             send 10 

  0989:38 00c2          pushi c2 // $c2 show
  098c:76               push0 
  098d:38 011b          pushi 11b // $11b setMotion
  0990:39 03            pushi 3 // $3 y
  0992:51 1e            class MoveTo 
  0994:36                push 
  0995:38 0111          pushi 111 // $111 approachX
  0998:76               push0 
  0999:72 088a          lofsa $088a // limo
  099c:4a 04             send 4 

  099e:36                push 
  099f:38 0112          pushi 112 // $112 approachY
  09a2:76               push0 
  09a3:72 088a          lofsa $088a // limo
  09a6:4a 04             send 4 

  09a8:36                push 
  09a9:81 00              lag  
  09ab:4a 0e             send e 

  09ad:35 32              ldi 32 
  09af:65 16             aTop ticks 
  09b1:32 00c5            jmp code_0a79 

        code_09b4
  09b4:3c                 dup 
  09b5:35 02              ldi 2 
  09b7:1a                 eq? 
  09b8:30 0007            bnt code_09c2 
  09bb:35 0a              ldi a 
  09bd:65 16             aTop ticks 
  09bf:32 00b7            jmp code_0a79 

        code_09c2
  09c2:3c                 dup 
  09c3:35 03              ldi 3 
  09c5:1a                 eq? 
  09c6:30 0019            bnt code_09e2 
  09c9:39 2b            pushi 2b // $2b number
  09cb:78               push1 
  09cc:38 00c0          pushi c0 // $c0 highlightColor
  09cf:38 00a2          pushi a2 // $a2 setLoop
  09d2:78               push1 
  09d3:78               push1 
  09d4:39 2a            pushi 2a // $2a play
  09d6:76               push0 
  09d7:81 67              lag  
  09d9:4a 10             send 10 

  09db:35 64              ldi 64 
  09dd:65 16             aTop ticks 
  09df:32 0097            jmp code_0a79 

        code_09e2
  09e2:3c                 dup 
  09e3:35 04              ldi 4 
  09e5:1a                 eq? 
  09e6:30 0015            bnt code_09fe 
  09e9:38 00a2          pushi a2 // $a2 setLoop
  09ec:78               push1 
  09ed:39 ff            pushi ff // $ff syncNum
  09ef:38 00e4          pushi e4 // $e4 setHeading
  09f2:7a               push2 
  09f3:38 00b4          pushi b4 // $b4 busy
  09f6:7c            pushSelf 
  09f7:81 00              lag  
  09f9:4a 0e             send e 

  09fb:32 007b            jmp code_0a79 

        code_09fe
  09fe:3c                 dup 
  09ff:35 05              ldi 5 
  0a01:1a                 eq? 
  0a02:30 000e            bnt code_0a13 
  0a05:38 008e          pushi 8e // $8e setScript
  0a08:7a               push2 
  0a09:72 0bde          lofsa $0bde // sLimoLeaves
  0a0c:36                push 
  0a0d:7c            pushSelf 
  0a0e:54 08             self 8 

  0a10:32 0066            jmp code_0a79 

        code_0a13
  0a13:3c                 dup 
  0a14:35 06              ldi 6 
  0a16:1a                 eq? 
  0a17:30 0024            bnt code_0a3e 
  0a1a:76               push0 
  0a1b:45 03 00         callb procedure_0003 0 //  

  0a1e:38 020a          pushi 20a // $20a normalize
  0a21:78               push1 
  0a22:38 0228          pushi 228 // $228 sel_552
  0a25:38 0134          pushi 134 // $134 setStep
  0a28:7a               push2 
  0a29:7a               push2 
  0a2a:7a               push2 
  0a2b:81 00              lag  
  0a2d:4a 0e             send e 

  0a2f:39 6c            pushi 6c // $6c dispose
  0a31:76               push0 
  0a32:72 088a          lofsa $088a // limo
  0a35:4a 04             send 4 

  0a37:35 01              ldi 1 
  0a39:65 10             aTop cycles 
  0a3b:32 003b            jmp code_0a79 

        code_0a3e
  0a3e:3c                 dup 
  0a3f:35 07              ldi 7 
  0a41:1a                 eq? 
  0a42:30 0034            bnt code_0a79 
  0a45:39 0d            pushi d // $d lsTop
  0a47:38 0384          pushi 384 // $384 sel_900
  0a4a:39 09            pushi 9 // $9 nsTop
  0a4c:39 51            pushi 51 // $51 button
  0a4e:72 1373          lofsa $1373 // Save
  0a51:36                push 
  0a52:78               push1 
  0a53:39 51            pushi 51 // $51 button
  0a55:72 1378          lofsa $1378 // Nah, Why Bother?
  0a58:36                push 
  0a59:76               push0 
  0a5a:39 50            pushi 50 // $50 title
  0a5c:72 1389          lofsa $1389 // AL says
  0a5f:36                push 
  0a60:39 43            pushi 43 // $43 at
  0a62:39 ff            pushi ff // $ff syncNum
  0a64:39 14            pushi 14 // $14 brLeft
  0a66:47 ff 00 1a      calle ff procedure_0000 1a //  

  0a6a:30 0007            bnt code_0a74 
  0a6d:39 4e            pushi 4e // $4e save
  0a6f:76               push0 
  0a70:81 01              lag  
  0a72:4a 04             send 4 


        code_0a74
  0a74:39 6c            pushi 6c // $6c dispose
  0a76:76               push0 
  0a77:54 04             self 4 


        code_0a79
  0a79:3a                toss 
  0a7a:48                 ret 
  0a7b:00                bnot 
    )

)

// 0bd8
(instance sLimoLeaves of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (doit) // method_0ab6
  0ab6:39 3c            pushi 3c // $3c doit
  0ab8:76               push0 
  0ab9:57 06 04         super Script 4 

  0abc:38 009a          pushi 9a // $9a prevSignal
  0abf:76               push0 
  0ac0:81 67              lag  
  0ac2:4a 04             send 4 

  0ac4:36                push 
  0ac5:35 0a              ldi a 
  0ac7:1a                 eq? 
  0ac8:30 000f            bnt code_0ada 
  0acb:38 009a          pushi 9a // $9a prevSignal
  0ace:78               push1 
  0acf:76               push0 
  0ad0:81 67              lag  
  0ad2:4a 06             send 6 

  0ad4:38 008d          pushi 8d // $8d cue
  0ad7:76               push0 
  0ad8:54 04             self 4 


        code_0ada
  0ada:48                 ret 
    )

    (method (changeState) // method_0adb
  0adb:3f 02             link 2 // (var $2)
  0add:87 01              lap param1 
  0adf:65 0a             aTop state 
  0ae1:36                push 
  0ae2:3c                 dup 
  0ae3:35 00              ldi 0 
  0ae5:1a                 eq? 
  0ae6:30 0022            bnt code_0b0b 
  0ae9:39 66            pushi 66 // $66 flags
  0aeb:76               push0 
  0aec:81 67              lag  
  0aee:4a 04             send 4 

  0af0:65 1a             aTop register 
  0af2:39 2b            pushi 2b // $2b number
  0af4:78               push1 
  0af5:38 00c2          pushi c2 // $c2 show
  0af8:38 00a2          pushi a2 // $a2 setLoop
  0afb:78               push1 
  0afc:78               push1 
  0afd:39 66            pushi 66 // $66 flags
  0aff:78               push1 
  0b00:76               push0 
  0b01:39 2a            pushi 2a // $2a play
  0b03:76               push0 
  0b04:81 67              lag  
  0b06:4a 16             send 16 

  0b08:32 00c5            jmp code_0bd0 

        code_0b0b
  0b0b:3c                 dup 
  0b0c:35 01              ldi 1 
  0b0e:1a                 eq? 
  0b0f:30 0037            bnt code_0b49 
  0b12:39 12            pushi 12 // $12 illegalBits
  0b14:78               push1 
  0b15:76               push0 
  0b16:38 0121          pushi 121 // $121 ignoreActors
  0b19:78               push1 
  0b1a:78               push1 
  0b1b:38 0134          pushi 134 // $134 setStep
  0b1e:7a               push2 
  0b1f:39 03            pushi 3 // $3 y
  0b21:3c                 dup 
  0b22:38 011b          pushi 11b // $11b setMotion
  0b25:39 04            pushi 4 // $4 x
  0b27:51 1e            class MoveTo 
  0b29:36                push 
  0b2a:39 04            pushi 4 // $4 x
  0b2c:76               push0 
  0b2d:72 088a          lofsa $088a // limo
  0b30:4a 04             send 4 

  0b32:36                push 
  0b33:35 14              ldi 14 
  0b35:04                 sub 
  0b36:36                push 
  0b37:39 03            pushi 3 // $3 y
  0b39:76               push0 
  0b3a:72 088a          lofsa $088a // limo
  0b3d:4a 04             send 4 

  0b3f:36                push 
  0b40:7c            pushSelf 
  0b41:72 088a          lofsa $088a // limo
  0b44:4a 20             send 20 

  0b46:32 0087            jmp code_0bd0 

        code_0b49
  0b49:3c                 dup 
  0b4a:35 02              ldi 2 
  0b4c:1a                 eq? 
  0b4d:30 002e            bnt code_0b7e 
  0b50:38 0134          pushi 134 // $134 setStep
  0b53:7a               push2 
  0b54:39 05            pushi 5 // $5 view
  0b56:3c                 dup 
  0b57:38 011b          pushi 11b // $11b setMotion
  0b5a:39 04            pushi 4 // $4 x
  0b5c:51 1e            class MoveTo 
  0b5e:36                push 
  0b5f:39 04            pushi 4 // $4 x
  0b61:76               push0 
  0b62:72 088a          lofsa $088a // limo
  0b65:4a 04             send 4 

  0b67:36                push 
  0b68:35 14              ldi 14 
  0b6a:04                 sub 
  0b6b:36                push 
  0b6c:39 03            pushi 3 // $3 y
  0b6e:76               push0 
  0b6f:72 088a          lofsa $088a // limo
  0b72:4a 04             send 4 

  0b74:36                push 
  0b75:7c            pushSelf 
  0b76:72 088a          lofsa $088a // limo
  0b79:4a 14             send 14 

  0b7b:32 0052            jmp code_0bd0 

        code_0b7e
  0b7e:3c                 dup 
  0b7f:35 03              ldi 3 
  0b81:1a                 eq? 
  0b82:30 0037            bnt code_0bbc 
  0b85:38 0134          pushi 134 // $134 setStep
  0b88:7a               push2 
  0b89:39 08            pushi 8 // $8 underBits
  0b8b:3c                 dup 
  0b8c:38 011b          pushi 11b // $11b setMotion
  0b8f:39 04            pushi 4 // $4 x
  0b91:51 1e            class MoveTo 
  0b93:36                push 
  0b94:39 b0            pushi b0 // $b0 cycle
  0b96:39 03            pushi 3 // $3 y
  0b98:76               push0 
  0b99:72 088a          lofsa $088a // limo
  0b9c:4a 04             send 4 

  0b9e:36                push 
  0b9f:7c            pushSelf 
  0ba0:72 088a          lofsa $088a // limo
  0ba3:4a 14             send 14 

  0ba5:38 009f          pushi 9f // $9f fade
  0ba8:39 04            pushi 4 // $4 x
  0baa:76               push0 
  0bab:39 0f            pushi f // $f lsBottom
  0bad:39 0c            pushi c // $c nsRight
  0baf:78               push1 
  0bb0:39 66            pushi 66 // $66 flags
  0bb2:78               push1 
  0bb3:67 1a             pTos register 
  0bb5:81 67              lag  
  0bb7:4a 12             send 12 

  0bb9:32 0014            jmp code_0bd0 

        code_0bbc
  0bbc:3c                 dup 
  0bbd:35 04              ldi 4 
  0bbf:1a                 eq? 
  0bc0:30 000d            bnt code_0bd0 
  0bc3:39 6c            pushi 6c // $6c dispose
  0bc5:76               push0 
  0bc6:72 088a          lofsa $088a // limo
  0bc9:4a 04             send 4 

  0bcb:39 6c            pushi 6c // $6c dispose
  0bcd:76               push0 
  0bce:54 04             self 4 


        code_0bd0
  0bd0:3a                toss 
  0bd1:48                 ret 
    )

)

// 0c12
(instance theMusic3 of Sound
    (properties
        nodePtr $0
        handle $0
        flags $0
        number $0
        vol $7f
        priority $0
        loop $1
        signal $0
        prevSignal $0
        dataInc $0
        min $0
        sec $0
        frame $0
        client $0
        owner $0
    )
)

// 0c58
(instance theDoor of Feature
    (properties
        x $7d
        y $63
        z $0
        heading $0
        noun $0
        nsTop $52
        nsLeft $70
        nsBottom $75
        nsRight $8b
        description $e70
        sightAngle $28
        actions $0
        onMeCheck $6789
        approachX $80
        approachY $74
        approachDist $0
        _approachVerbs $6789
        lookStr $e8a
    )
    (method (doVerb) // method_0c46
  0c46:38 010c          pushi 10c // $10c doVerb
  0c49:76               push0 
  0c4a:59 01            &rest 1 
  0c4c:72 054e          lofsa $054e // docDoor
  0c4f:4a 04             send 4 

  0c51:48                 ret 
    )

)

// 0d5a
(instance sEnterLimo of Script
    (properties
        client $0
        state $ffff
        start $0
        timer $0
        cycles $0
        seconds $0
        lastSeconds $0
        ticks $0
        lastTicks $0
        register $0
        script $0
        caller $0
        next $0
    )
    (method (changeState) // method_0c96
  0c96:3f 02             link 2 // (var $2)
  0c98:87 01              lap param1 
  0c9a:65 0a             aTop state 
  0c9c:36                push 
  0c9d:3c                 dup 
  0c9e:35 00              ldi 0 
  0ca0:1a                 eq? 
  0ca1:30 0013            bnt code_0cb7 
  0ca4:76               push0 
  0ca5:45 02 00         callb procedure_0002 0 //  

  0ca8:38 00e4          pushi e4 // $e4 setHeading
  0cab:7a               push2 
  0cac:38 00b4          pushi b4 // $b4 busy
  0caf:7c            pushSelf 
  0cb0:81 00              lag  
  0cb2:4a 08             send 8 

  0cb4:32 009a            jmp code_0d51 

        code_0cb7
  0cb7:3c                 dup 
  0cb8:35 01              ldi 1 
  0cba:1a                 eq? 
  0cbb:30 0019            bnt code_0cd7 
  0cbe:38 011b          pushi 11b // $11b setMotion
  0cc1:39 04            pushi 4 // $4 x
  0cc3:51 1e            class MoveTo 
  0cc5:36                push 
  0cc6:39 51            pushi 51 // $51 button
  0cc8:38 00b1          pushi b1 // $b1 advance
  0ccb:7c            pushSelf 
  0ccc:81 00              lag  
  0cce:4a 0c             send c 

  0cd0:35 0a              ldi a 
  0cd2:65 16             aTop ticks 
  0cd4:32 007a            jmp code_0d51 

        code_0cd7
  0cd7:3c                 dup 
  0cd8:35 02              ldi 2 
  0cda:1a                 eq? 
  0cdb:30 0019            bnt code_0cf7 
  0cde:39 2b            pushi 2b // $2b number
  0ce0:78               push1 
  0ce1:38 00bf          pushi bf // $bf maskCel
  0ce4:38 00a2          pushi a2 // $a2 setLoop
  0ce7:78               push1 
  0ce8:78               push1 
  0ce9:39 2a            pushi 2a // $2a play
  0ceb:76               push0 
  0cec:81 67              lag  
  0cee:4a 10             send 10 

  0cf0:35 32              ldi 32 
  0cf2:65 16             aTop ticks 
  0cf4:32 005a            jmp code_0d51 

        code_0cf7
  0cf7:3c                 dup 
  0cf8:35 03              ldi 3 
  0cfa:1a                 eq? 
  0cfb:30 0005            bnt code_0d03 
  0cfe:35 00              ldi 0 
  0d00:32 004e            jmp code_0d51 

        code_0d03
  0d03:3c                 dup 
  0d04:35 04              ldi 4 
  0d06:1a                 eq? 
  0d07:30 0020            bnt code_0d2a 
  0d0a:39 69            pushi 69 // $69 hide
  0d0c:76               push0 
  0d0d:81 00              lag  
  0d0f:4a 04             send 4 

  0d11:39 2b            pushi 2b // $2b number
  0d13:78               push1 
  0d14:38 00c0          pushi c0 // $c0 highlightColor
  0d17:38 00a2          pushi a2 // $a2 setLoop
  0d1a:78               push1 
  0d1b:78               push1 
  0d1c:39 2a            pushi 2a // $2a play
  0d1e:76               push0 
  0d1f:81 67              lag  
  0d21:4a 10             send 10 

  0d23:35 78              ldi 78 
  0d25:65 16             aTop ticks 
  0d27:32 0027            jmp code_0d51 

        code_0d2a
  0d2a:3c                 dup 
  0d2b:35 05              ldi 5 
  0d2d:1a                 eq? 
  0d2e:30 000e            bnt code_0d3f 
  0d31:38 008e          pushi 8e // $8e setScript
  0d34:7a               push2 
  0d35:72 0bde          lofsa $0bde // sLimoLeaves
  0d38:36                push 
  0d39:7c            pushSelf 
  0d3a:54 08             self 8 

  0d3c:32 0012            jmp code_0d51 

        code_0d3f
  0d3f:3c                 dup 
  0d40:35 06              ldi 6 
  0d42:1a                 eq? 
  0d43:30 000b            bnt code_0d51 
  0d46:38 0179          pushi 179 // $179 newRoom
  0d49:78               push1 
  0d4a:38 00c8          pushi c8 // $c8 dispatchEvent
  0d4d:81 02              lag  
  0d4f:4a 06             send 6 


        code_0d51
  0d51:3a                toss 
  0d52:48                 ret 
  0d53:00                bnot 
    )

)



