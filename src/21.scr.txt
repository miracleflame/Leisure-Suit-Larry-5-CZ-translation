(script 21)

(string
    string_043a "Door"
    string_043f ""
)

(said
)

(local
)

// 0334
(class Door of Prop
    (properties
        x $0
        y $0
        z $0
        heading $0
        noun $0
        nsTop $0
        nsLeft $0
        nsBottom $0
        nsRight $0
        description $0
        sightAngle $6789
        actions $0
        onMeCheck $6789
        approachX $0
        approachY $0
        approachDist $0
        _approachVerbs $6789
        lookStr $0
        yStep $2
        view $0
        loop $0
        cel $0
        priority $0
        underBits $0
        signal $0
        lsTop $0
        lsLeft $0
        lsBottom $0
        lsRight $0
        brTop $0
        brLeft $0
        brBottom $0
        brRight $0
        palette $0
        cycleSpeed $6
        script $0
        cycler $0
        timer $0
        detailLevel $0
        entranceTo $0
        locked $0
        openSnd $28
        closeSnd $29
        state $0
        doubleDoor $0
        forceOpen $0
        caller $0
        moveToX $0
        moveToY $0
        enterType $2
        exitType $2
        closeScript $0
        openScript $0
    )
    (method (init) // method_0004
  0004:38 0119          pushi 119 // $119 approachVerbs
  0007:78               push1 
  0008:39 03            pushi 3 // $3 y
  000a:54 06             self 6 

  000c:63 62             pToa forceOpen 
  000e:2e 0009             bt code_001a 
  0011:81 0c              lag  
  0013:30 001f            bnt code_0035 
  0016:36                push 
  0017:63 56             pToa entranceTo 
  0019:1a                 eq? 

        code_001a
  001a:30 0018            bnt code_0035 
  001d:35 02              ldi 2 
  001f:65 5e             aTop state 
  0021:67 38             pTos signal 
  0023:34 4000            ldi 4000 
  0026:14                  or 
  0027:65 38             aTop signal 
  0029:63 60             pToa doubleDoor 
  002b:30 0007            bnt code_0035 
  002e:38 0121          pushi 121 // $121 ignoreActors
  0031:78               push1 
  0032:78               push1 
  0033:4a 06             send 6 


        code_0035
  0035:67 5e             pTos state 
  0037:35 00              ldi 0 
  0039:1a                 eq? 
  003a:30 0013            bnt code_0050 
  003d:35 00              ldi 0 
  003f:65 32             aTop cel 
  0041:63 60             pToa doubleDoor 
  0043:30 0023            bnt code_0069 
  0046:38 0120          pushi 120 // $120 setCel
  0049:78               push1 
  004a:76               push0 
  004b:4a 06             send 6 

  004d:32 0019            jmp code_0069 

        code_0050
  0050:78               push1 
  0051:7c            pushSelf 
  0052:43 0e 02         callk NumCels 2 

  0055:36                push 
  0056:35 01              ldi 1 
  0058:04                 sub 
  0059:65 32             aTop cel 
  005b:63 60             pToa doubleDoor 
  005d:30 0009            bnt code_0069 
  0060:38 0120          pushi 120 // $120 setCel
  0063:78               push1 
  0064:38 00ff          pushi ff // $ff syncNum
  0067:4a 06             send 6 


        code_0069
  0069:39 6b            pushi 6b // $6b init
  006b:76               push0 
  006c:57 2f 04         super Prop 4 

  006f:67 5e             pTos state 
  0071:35 02              ldi 2 
  0073:1a                 eq? 
  0074:30 0070            bnt code_00e7 
  0077:63 6e             pToa closeScript 
  0079:30 000a            bnt code_0086 
  007c:38 008e          pushi 8e // $8e setScript
  007f:78               push1 
  0080:36                push 
  0081:54 06             self 6 

  0083:32 0067            jmp code_00ed 

        code_0086
  0086:67 6a             pTos enterType 
  0088:3c                 dup 
  0089:35 00              ldi 0 
  008b:1a                 eq? 
  008c:30 0020            bnt code_00af 
  008f:76               push0 
  0090:45 02 00         callb procedure_0002 0 //  

  0093:38 011c          pushi 11c // $11c posn
  0096:7a               push2 
  0097:67 66             pTos moveToX 
  0099:67 68             pTos moveToY 
  009b:38 011b          pushi 11b // $11b setMotion
  009e:39 04            pushi 4 // $4 x
  00a0:51 24            class PolyPath 
  00a2:36                push 
  00a3:67 22             pTos approachX 
  00a5:67 24             pTos approachY 
  00a7:7c            pushSelf 
  00a8:81 00              lag  
  00aa:4a 14             send 14 

  00ac:32 0034            jmp code_00e3 

        code_00af
  00af:3c                 dup 
  00b0:35 01              ldi 1 
  00b2:1a                 eq? 
  00b3:30 0020            bnt code_00d6 
  00b6:38 0146          pushi 146 // $146 edgeHit
  00b9:78               push1 
  00ba:76               push0 
  00bb:38 011c          pushi 11c // $11c posn
  00be:7a               push2 
  00bf:67 22             pTos approachX 
  00c1:67 24             pTos approachY 
  00c3:38 00e4          pushi e4 // $e4 setHeading
  00c6:78               push1 
  00c7:67 0e             pTos heading 
  00c9:81 00              lag  
  00cb:4a 14             send 14 

  00cd:38 0150          pushi 150 // $150 close
  00d0:76               push0 
  00d1:54 04             self 4 

  00d3:32 000d            jmp code_00e3 

        code_00d6
  00d6:3c                 dup 
  00d7:35 02              ldi 2 
  00d9:1a                 eq? 
  00da:30 0006            bnt code_00e3 
  00dd:38 0150          pushi 150 // $150 close
  00e0:76               push0 
  00e1:54 04             self 4 


        code_00e3
  00e3:3a                toss 
  00e4:32 0006            jmp code_00ed 

        code_00e7
  00e7:38 011d          pushi 11d // $11d stopUpd
  00ea:76               push0 
  00eb:54 04             self 4 


        code_00ed
  00ed:48                 ret 
    )

    (method (doVerb) // method_00ee
  00ee:8f 01              lsp param1 
  00f0:3c                 dup 
  00f1:35 03              ldi 3 
  00f3:1a                 eq? 
  00f4:30 001a            bnt code_0111 
  00f7:67 5e             pTos state 
  00f9:35 02              ldi 2 
  00fb:1a                 eq? 
  00fc:30 0009            bnt code_0108 
  00ff:38 0150          pushi 150 // $150 close
  0102:76               push0 
  0103:54 04             self 4 

  0105:32 0016            jmp code_011e 

        code_0108
  0108:38 00b5          pushi b5 // $b5 open
  010b:76               push0 
  010c:54 04             self 4 

  010e:32 000d            jmp code_011e 

        code_0111
  0111:38 010c          pushi 10c // $10c doVerb
  0114:7a               push2 
  0115:8f 01              lsp param1 
  0117:8f 02              lsp param2 
  0119:59 03            &rest 3 
  011b:57 2f 08         super Prop 8 


        code_011e
  011e:3a                toss 
  011f:48                 ret 
    )

    (method (cue) // method_019b
  019b:67 5e             pTos state 
  019d:3c                 dup 
  019e:35 03              ldi 3 
  01a0:1a                 eq? 
  01a1:30 0029            bnt code_01cd 
  01a4:35 00              ldi 0 
  01a6:65 5e             aTop state 
  01a8:38 011d          pushi 11d // $11d stopUpd
  01ab:76               push0 
  01ac:38 0121          pushi 121 // $121 ignoreActors
  01af:78               push1 
  01b0:76               push0 
  01b1:54 0a             self a 

  01b3:63 60             pToa doubleDoor 
  01b5:30 0007            bnt code_01bf 
  01b8:38 0121          pushi 121 // $121 ignoreActors
  01bb:78               push1 
  01bc:76               push0 
  01bd:4a 06             send 6 


        code_01bf
  01bf:63 64             pToa caller 
  01c1:30 0168            bnt code_032c 
  01c4:38 008d          pushi 8d // $8d cue
  01c7:76               push0 
  01c8:4a 04             send 4 

  01ca:32 015f            jmp code_032c 

        code_01cd
  01cd:3c                 dup 
  01ce:35 01              ldi 1 
  01d0:1a                 eq? 
  01d1:30 0096            bnt code_026a 
  01d4:35 02              ldi 2 
  01d6:65 5e             aTop state 
  01d8:38 011d          pushi 11d // $11d stopUpd
  01db:76               push0 
  01dc:38 0121          pushi 121 // $121 ignoreActors
  01df:78               push1 
  01e0:78               push1 
  01e1:54 0a             self a 

  01e3:63 60             pToa doubleDoor 
  01e5:30 0007            bnt code_01ef 
  01e8:38 0121          pushi 121 // $121 ignoreActors
  01eb:78               push1 
  01ec:78               push1 
  01ed:4a 06             send 6 


        code_01ef
  01ef:63 64             pToa caller 
  01f1:30 0006            bnt code_01fa 
  01f4:38 008d          pushi 8d // $8d cue
  01f7:76               push0 
  01f8:4a 04             send 4 


        code_01fa
  01fa:63 70             pToa openScript 
  01fc:30 000a            bnt code_0209 
  01ff:38 008e          pushi 8e // $8e setScript
  0202:78               push1 
  0203:36                push 
  0204:54 06             self 6 

  0206:32 0123            jmp code_032c 

        code_0209
  0209:67 6c             pTos exitType 
  020b:3c                 dup 
  020c:35 00              ldi 0 
  020e:1a                 eq? 
  020f:30 0022            bnt code_0234 
  0212:63 66             pToa moveToX 
  0214:2e 0002             bt code_0219 
  0217:63 68             pToa moveToY 

        code_0219
  0219:30 004a            bnt code_0266 
  021c:39 12            pushi 12 // $12 illegalBits
  021e:78               push1 
  021f:76               push0 
  0220:38 011b          pushi 11b // $11b setMotion
  0223:39 04            pushi 4 // $4 x
  0225:51 24            class PolyPath 
  0227:36                push 
  0228:67 66             pTos moveToX 
  022a:67 68             pTos moveToY 
  022c:7c            pushSelf 
  022d:81 00              lag  
  022f:4a 12             send 12 

  0231:32 0032            jmp code_0266 

        code_0234
  0234:3c                 dup 
  0235:35 01              ldi 1 
  0237:1a                 eq? 
  0238:30 001e            bnt code_0259 
  023b:63 66             pToa moveToX 
  023d:2e 0002             bt code_0242 
  0240:63 68             pToa moveToY 

        code_0242
  0242:30 0021            bnt code_0266 
  0245:38 011b          pushi 11b // $11b setMotion
  0248:39 04            pushi 4 // $4 x
  024a:51 24            class PolyPath 
  024c:36                push 
  024d:67 66             pTos moveToX 
  024f:67 68             pTos moveToY 
  0251:7c            pushSelf 
  0252:81 00              lag  
  0254:4a 0c             send c 

  0256:32 000d            jmp code_0266 

        code_0259
  0259:3c                 dup 
  025a:35 02              ldi 2 
  025c:1a                 eq? 
  025d:30 0006            bnt code_0266 
  0260:38 008d          pushi 8d // $8d cue
  0263:76               push0 
  0264:54 04             self 4 


        code_0266
  0266:3a                toss 
  0267:32 00c2            jmp code_032c 

        code_026a
  026a:39 04            pushi 4 // $4 x
  026c:76               push0 
  026d:81 00              lag  
  026f:4a 04             send 4 

  0271:36                push 
  0272:63 66             pToa moveToX 
  0274:1a                 eq? 
  0275:30 008e            bnt code_0306 
  0278:39 03            pushi 3 // $3 y
  027a:76               push0 
  027b:81 00              lag  
  027d:4a 04             send 4 

  027f:36                push 
  0280:63 68             pToa moveToY 
  0282:1a                 eq? 
  0283:30 0080            bnt code_0306 
  0286:63 56             pToa entranceTo 
  0288:30 0072            bnt code_02fd 
  028b:36                push 
  028c:3c                 dup 
  028d:38 0184          pushi 184 // $184 north
  0290:76               push0 
  0291:81 02              lag  
  0293:4a 04             send 4 

  0295:1a                 eq? 
  0296:30 000c            bnt code_02a5 
  0299:38 0146          pushi 146 // $146 edgeHit
  029c:78               push1 
  029d:78               push1 
  029e:81 00              lag  
  02a0:4a 06             send 6 

  02a2:32 004a            jmp code_02ef 

        code_02a5
  02a5:3c                 dup 
  02a6:38 0186          pushi 186 // $186 south
  02a9:76               push0 
  02aa:81 02              lag  
  02ac:4a 04             send 4 

  02ae:1a                 eq? 
  02af:30 000d            bnt code_02bf 
  02b2:38 0146          pushi 146 // $146 edgeHit
  02b5:78               push1 
  02b6:39 03            pushi 3 // $3 y
  02b8:81 00              lag  
  02ba:4a 06             send 6 

  02bc:32 0030            jmp code_02ef 

        code_02bf
  02bf:3c                 dup 
  02c0:38 0187          pushi 187 // $187 west
  02c3:76               push0 
  02c4:81 02              lag  
  02c6:4a 04             send 4 

  02c8:1a                 eq? 
  02c9:30 000d            bnt code_02d9 
  02cc:38 0146          pushi 146 // $146 edgeHit
  02cf:78               push1 
  02d0:39 04            pushi 4 // $4 x
  02d2:81 00              lag  
  02d4:4a 06             send 6 

  02d6:32 0016            jmp code_02ef 

        code_02d9
  02d9:3c                 dup 
  02da:38 0185          pushi 185 // $185 east
  02dd:76               push0 
  02de:81 02              lag  
  02e0:4a 04             send 4 

  02e2:1a                 eq? 
  02e3:30 0009            bnt code_02ef 
  02e6:38 0146          pushi 146 // $146 edgeHit
  02e9:78               push1 
  02ea:7a               push2 
  02eb:81 00              lag  
  02ed:4a 06             send 6 


        code_02ef
  02ef:3a                toss 
  02f0:38 0179          pushi 179 // $179 newRoom
  02f3:78               push1 
  02f4:67 56             pTos entranceTo 
  02f6:81 02              lag  
  02f8:4a 06             send 6 

  02fa:32 002b            jmp code_0328 

        code_02fd
  02fd:38 0150          pushi 150 // $150 close
  0300:76               push0 
  0301:54 04             self 4 

  0303:32 0022            jmp code_0328 

        code_0306
  0306:39 04            pushi 4 // $4 x
  0308:76               push0 
  0309:81 00              lag  
  030b:4a 04             send 4 

  030d:36                push 
  030e:63 22             pToa approachX 
  0310:1a                 eq? 
  0311:30 0014            bnt code_0328 
  0314:39 03            pushi 3 // $3 y
  0316:76               push0 
  0317:81 00              lag  
  0319:4a 04             send 4 

  031b:36                push 
  031c:63 24             pToa approachY 
  031e:1a                 eq? 
  031f:30 0006            bnt code_0328 
  0322:38 0150          pushi 150 // $150 close
  0325:76               push0 
  0326:54 04             self 4 


        code_0328
  0328:76               push0 
  0329:45 03 00         callb procedure_0003 0 //  


        code_032c
  032c:3a                toss 
  032d:48                 ret 
    )

    (method (open) // method_0120
  0120:63 58             pToa locked 
  0122:30 000a            bnt code_012f 
  0125:7a               push2 
  0126:39 15            pushi 15 // $15 brBottom
  0128:76               push0 
  0129:45 0e 04         callb procedure_000e 4 //  

  012c:32 0037            jmp code_0166 

        code_012f
  012f:76               push0 
  0130:45 02 00         callb procedure_0002 0 //  

  0133:35 01              ldi 1 
  0135:65 5e             aTop state 
  0137:38 0096          pushi 96 // $96 setCycle
  013a:7a               push2 
  013b:51 1a            class End 
  013d:36                push 
  013e:7c            pushSelf 
  013f:54 08             self 8 

  0141:63 5a             pToa openSnd 
  0143:30 0010            bnt code_0156 
  0146:39 2b            pushi 2b // $2b number
  0148:78               push1 
  0149:36                push 
  014a:39 2a            pushi 2a // $2a play
  014c:76               push0 
  014d:39 6a            pushi 6a // $6a new
  014f:76               push0 
  0150:51 0a            class Sound 
  0152:4a 04             send 4 

  0154:4a 0a             send a 


        code_0156
  0156:63 60             pToa doubleDoor 
  0158:30 000b            bnt code_0166 
  015b:38 0096          pushi 96 // $96 setCycle
  015e:78               push1 
  015f:51 1a            class End 
  0161:36                push 
  0162:63 60             pToa doubleDoor 
  0164:4a 06             send 6 


        code_0166
  0166:48                 ret 
    )

    (method (close) // method_0167
  0167:35 03              ldi 3 
  0169:65 5e             aTop state 
  016b:38 0096          pushi 96 // $96 setCycle
  016e:7a               push2 
  016f:51 1b            class Beg 
  0171:36                push 
  0172:7c            pushSelf 
  0173:54 08             self 8 

  0175:63 5c             pToa closeSnd 
  0177:30 0010            bnt code_018a 
  017a:39 2b            pushi 2b // $2b number
  017c:78               push1 
  017d:36                push 
  017e:39 2a            pushi 2a // $2a play
  0180:76               push0 
  0181:39 6a            pushi 6a // $6a new
  0183:76               push0 
  0184:51 0a            class Sound 
  0186:4a 04             send 4 

  0188:4a 0a             send a 


        code_018a
  018a:63 60             pToa doubleDoor 
  018c:30 000b            bnt code_019a 
  018f:38 0096          pushi 96 // $96 setCycle
  0192:78               push1 
  0193:51 1b            class Beg 
  0195:36                push 
  0196:63 60             pToa doubleDoor 
  0198:4a 06             send 6 


        code_019a
  019a:48                 ret 
    )

)



